using ConfigServices.Services;
using CultureServices.Resources;
using GenerateCodeBaseServices.Models;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace AngularComponentsGeneratedServices.Services
{
    public partial class AngularComponentsGeneratedService : ConfigService, IAngularComponentsGeneratedService
    {
        private void CreateServiceFile(DLLTypeInfo dllTypeInfoModels, List<DLLTypeInfo> DLLTypeInfoCSSPModelsList)
        {
            StringBuilder sb = new StringBuilder();

            sb.AppendLine(@"/*");
            sb.AppendLine($@" * Auto generated from { AppDomain.CurrentDomain.BaseDirectory }{ AppDomain.CurrentDomain.FriendlyName}.exe");
            sb.AppendLine(@" *");
            sb.AppendLine(@" * Do not edit this file.");
            sb.AppendLine(@" *");
            sb.AppendLine(@" */");
            sb.AppendLine(@"");

            sb.AppendLine(@"import { Injectable } from '@angular/core';");
            sb.AppendLine($@"import {{ { dllTypeInfoModels.Name }TextModel, { dllTypeInfoModels.Name }Model }} from './{ dllTypeInfoModels.Name.ToLower() }.models';");
            sb.AppendLine(@"import { BehaviorSubject, of } from 'rxjs';");
            sb.AppendLine($@"import {{ LoadLocales{ dllTypeInfoModels.Name }Text }} from './{ dllTypeInfoModels.Name.ToLower() }.locales';");
            sb.AppendLine(@"import { Router } from '@angular/router';");
            sb.AppendLine(@"import { HttpClient, HttpErrorResponse } from '@angular/common/http';");
            sb.AppendLine(@"import { map, catchError } from 'rxjs/operators';");
            sb.AppendLine($@"import {{ { dllTypeInfoModels.Name } }} from 'src/app/models/generated/{ dllTypeInfoModels.Name }.model';");
            sb.AppendLine(@"");
            sb.AppendLine(@"@Injectable({");
            sb.AppendLine(@"  providedIn: 'root'");
            sb.AppendLine(@"})");
            sb.AppendLine($@"export class { dllTypeInfoModels.Name }Service {{");
            sb.AppendLine($@"  { dllTypeInfoModels.Name.ToLower() }TextModel$: BehaviorSubject<{ dllTypeInfoModels.Name }TextModel> = new BehaviorSubject<{ dllTypeInfoModels.Name }TextModel>(<{ dllTypeInfoModels.Name }TextModel>{{}});");
            sb.AppendLine($@"  { dllTypeInfoModels.Name.ToLower() }Model$: BehaviorSubject<{ dllTypeInfoModels.Name }Model> = new BehaviorSubject<{ dllTypeInfoModels.Name }Model>(<{ dllTypeInfoModels.Name }Model>{{}});");
            sb.AppendLine(@"");
            sb.AppendLine(@"  constructor(private httpClient: HttpClient) {");
            sb.AppendLine($@"    LoadLocales{ dllTypeInfoModels.Name }Text(this);");
            sb.AppendLine($@"    this.Update{ dllTypeInfoModels.Name }Text(<{ dllTypeInfoModels.Name }TextModel>{{ Title: ""Something2 for text"" }});") ;
            sb.AppendLine(@"  }");
            sb.AppendLine(@"");
            sb.AppendLine($@"  Update{ dllTypeInfoModels.Name }Text({ dllTypeInfoModels.Name.ToLower() }TextModel: { dllTypeInfoModels.Name }TextModel) {{");
            sb.AppendLine($@"    this.{ dllTypeInfoModels.Name.ToLower() }TextModel$.next(<{ dllTypeInfoModels.Name }TextModel>{{ ...this.{ dllTypeInfoModels.Name.ToLower() }TextModel$.getValue(), ...{ dllTypeInfoModels.Name.ToLower() }TextModel }});");
            sb.AppendLine(@"  }");
            sb.AppendLine(@"");
            sb.AppendLine($@"  Update{ dllTypeInfoModels.Name }Model({ dllTypeInfoModels.Name.ToLower() }Model: { dllTypeInfoModels.Name }Model) {{");
            sb.AppendLine($@"    this.{ dllTypeInfoModels.Name.ToLower() }Model$.next(<{ dllTypeInfoModels.Name }Model>{{ ...this.{ dllTypeInfoModels.Name.ToLower() }Model$.getValue(), ...{ dllTypeInfoModels.Name.ToLower() }Model }});");
            sb.AppendLine(@"  }");
            sb.AppendLine(@"");
            sb.AppendLine($@"  Get{ dllTypeInfoModels.Name }(router: Router) {{");
            sb.AppendLine(@"    let oldURL = router.url;");
            sb.AppendLine($@"    this.Update{ dllTypeInfoModels.Name }Model(<{ dllTypeInfoModels.Name }Model>{{ Working: true, Error: null }});");
            sb.AppendLine(@"");
            sb.AppendLine($@"    return this.httpClient.get<{ dllTypeInfoModels.Name }[]>('/api/{ dllTypeInfoModels.Name }').pipe(");
            sb.AppendLine(@"      map((x: any) => {");
            sb.AppendLine($@"        console.debug(`{ dllTypeInfoModels.Name } OK. Return: ${{x}}`);");
            sb.AppendLine($@"        this.{ dllTypeInfoModels.Name.ToLower() }Model$.getValue().{ dllTypeInfoModels.Name }List = <{ dllTypeInfoModels.Name }[]>x;");
            sb.AppendLine($@"        this.Update{ dllTypeInfoModels.Name }Model(this.{ dllTypeInfoModels.Name.ToLower() }Model$.getValue());");
            sb.AppendLine($@"        this.Update{ dllTypeInfoModels.Name }Model(<{ dllTypeInfoModels.Name }Model>{{ Working: false, Error: null }});");
            sb.AppendLine(@"        router.navigateByUrl('', { skipLocationChange: true }).then(() => {");
            sb.AppendLine(@"          router.navigate([`/${oldURL}`]);");
            sb.AppendLine(@"        });");
            sb.AppendLine(@"      }),");
            sb.AppendLine(@"      catchError(e => of(e).pipe(map(e => {");
            sb.AppendLine($@"        this.Update{ dllTypeInfoModels.Name }Model(<{ dllTypeInfoModels.Name }Model>{{ Working: false, Error: <HttpErrorResponse>e }});");
            sb.AppendLine($@"        console.debug(`{ dllTypeInfoModels.Name } ERROR. Return: ${{<HttpErrorResponse>e}}`);");
            sb.AppendLine(@"        router.navigateByUrl('', { skipLocationChange: true }).then(() => {");
            sb.AppendLine(@"          router.navigate([`/${oldURL}`]);");
            sb.AppendLine(@"        });");
            sb.AppendLine(@"      })))");
            sb.AppendLine(@"    );");
            sb.AppendLine(@"  }");
            sb.AppendLine(@"}");

            DirectoryInfo di = new DirectoryInfo(Config.GetValue<string>("OutputDir").Replace("{TypeNameLower}", dllTypeInfoModels.Name.ToLower()));
            if (!di.Exists)
            {
                try
                {
                    di.Create();
                }
                catch (Exception ex)
                {
                    string ErrorText = ex.Message + ex.InnerException != null ? ex.InnerException.Message : "";
                    ActionCommandDBService.ErrorText.AppendLine(ErrorText);
                    return;
                }
            }

            FileInfo fiOutputGen = new FileInfo(Config.GetValue<string>("ServiceFileName").Replace("{TypeNameLower}", dllTypeInfoModels.Name.ToLower()).Replace("{TypeNameLower}", dllTypeInfoModels.Name.ToLower()));
            using (StreamWriter sw2 = fiOutputGen.CreateText())
            {
                sw2.Write(sb.ToString());
                ActionCommandDBService.ExecutionStatusText.AppendLine($"{ string.Format(CultureServicesRes.Created_, fiOutputGen.FullName) }");
            }

            fiOutputGen = new FileInfo(Config.GetValue<string>("ServiceFileName").Replace("{TypeNameLower}", dllTypeInfoModels.Name.ToLower()).Replace("{TypeNameLower}", dllTypeInfoModels.Name.ToLower()));
            if (fiOutputGen.Exists)
            {
                string fileLine = "Last Write Time [" + fiOutputGen.LastWriteTime.ToString("yyyy MMMM dd HH:mm:ss") + "] " + fiOutputGen.FullName;
                ActionCommandDBService.FilesStatusText.AppendLine(fileLine);
            }
            else
            {
                string fileLine = "Not Created" + fiOutputGen.FullName;
                ActionCommandDBService.FilesStatusText.AppendLine(fileLine);
            }

        }
    }
}
