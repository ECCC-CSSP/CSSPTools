using AngularInterfacesGeneratedServices.Resources;
using CSSPEnums;
using CSSPModels;
using GenerateCodeBaseServices.Models;
using GenerateCodeBaseServices.Services;
using ActionCommandDBServices.Models;
using ActionCommandDBServices.Services;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using ValidateAppSettingsServices.Services;
using ValidateAppSettingsServices.Models;
using Microsoft.AspNetCore.Mvc;

namespace AngularInterfacesGeneratedServices.Services
{
    public partial class AngularInterfacesGeneratedService : IAngularInterfacesGeneratedService
    {
        private void CreateValidationResultTypeFile()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"/*");
            sb.AppendLine(@" * Auto generated from the CSSPWebToolsAngCodeWriter.proj by clicking on the [AngularEnumsGenerate.cs] button");
            sb.AppendLine(@" *");
            sb.AppendLine(@" * Do not edit this file.");
            sb.AppendLine(@" *");
            sb.AppendLine(@" */");
            sb.AppendLine(@"");
            sb.AppendLine($@"export interface ValidationResult {{");
            sb.AppendLine($@"    MemberNames: string[];");
            sb.AppendLine($@"    ErrorMessage: string;");
            sb.AppendLine(@"}");

            FileInfo fiOutputGen = new FileInfo(configuration.GetValue<string>("ValidateResultFileName"));
            using (StreamWriter sw2 = fiOutputGen.CreateText())
            {
                sw2.Write(sb.ToString());
                actionCommandDBService.ExecutionStatusText.AppendLine($"Created [{ fiOutputGen }]");
            }
        }
    }
}
