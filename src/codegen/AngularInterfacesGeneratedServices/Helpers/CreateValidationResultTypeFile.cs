using ConfigServices.Services;
using Microsoft.Extensions.Configuration;
using System.IO;
using System.Text;

namespace AngularInterfacesGeneratedServices.Services
{
    public partial class AngularInterfacesGeneratedService : ConfigService, IAngularInterfacesGeneratedService
    {
        private void CreateValidationResultTypeFile()
        {
            StringBuilder sb = new StringBuilder();
            sb.AppendLine(@"/*");
            sb.AppendLine(@" * Auto generated from the CSSPWebToolsAngCodeWriter.proj by clicking on the [AngularEnumsGenerate.cs] button");
            sb.AppendLine(@" *");
            sb.AppendLine(@" * Do not edit this file.");
            sb.AppendLine(@" *");
            sb.AppendLine(@" */");
            sb.AppendLine(@"");
            sb.AppendLine($@"export interface ValidationResult {{");
            sb.AppendLine($@"    MemberNames: string[];");
            sb.AppendLine($@"    ErrorMessage: string;");
            sb.AppendLine(@"}");

            FileInfo fiOutputGen = new FileInfo(Config.GetValue<string>("ValidateResultFileName"));
            using (StreamWriter sw2 = fiOutputGen.CreateText())
            {
                sw2.Write(sb.ToString());
                ActionCommandDBService.ExecutionStatusText.AppendLine($"Created [{ fiOutputGen }]");
            }

            fiOutputGen = new FileInfo(Config.GetValue<string>("ValidateResultFileName"));
            if (fiOutputGen.Exists)
            {
                string fileLine = "Last Write Time [" + fiOutputGen.LastWriteTime.ToString("yyyy MMMM dd HH:mm:ss") + "] " + fiOutputGen.FullName;
                ActionCommandDBService.FilesStatusText.AppendLine(fileLine);
            }
            else
            {
                string fileLine = "Not Created" + fiOutputGen.FullName;
                ActionCommandDBService.FilesStatusText.AppendLine(fileLine);
            }

        }
    }
}
