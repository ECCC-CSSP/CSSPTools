using GenerateCodeBaseServices.Models;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;

namespace GenerateAngularComponents
{
    public partial class Startup
    {
        private void CreateLocalesFile(DLLTypeInfo dllTypeInfoModels, List<DLLTypeInfo> DLLTypeInfoCSSPDBModelsList)
        {
            StringBuilder sb = new StringBuilder();

            sb.AppendLine(@"/*");
            sb.AppendLine($@" * Auto generated from { AppDomain.CurrentDomain.BaseDirectory }{ AppDomain.CurrentDomain.FriendlyName}.exe");
            sb.AppendLine(@" *");
            sb.AppendLine(@" * Do not edit this file.");
            sb.AppendLine(@" *");
            sb.AppendLine(@" */");
            sb.AppendLine(@"");

            sb.AppendLine($@"import {{ { dllTypeInfoModels.Name }TextModel }} from './{ dllTypeInfoModels.Name.ToLower() }.models';");
            sb.AppendLine($@"import {{ BehaviorSubject }} from 'rxjs';");
            sb.AppendLine(@"");
            sb.AppendLine($@"export function LoadLocales{ dllTypeInfoModels.Name }Text({ dllTypeInfoModels.Name.ToLower() }TextModel$: BehaviorSubject<{ dllTypeInfoModels.Name }TextModel>) {{");
            sb.AppendLine($@"    let { dllTypeInfoModels.Name.ToLower() }TextModel: { dllTypeInfoModels.Name }TextModel = {{");
            sb.AppendLine(@"        Title: 'The title',");
            sb.AppendLine(@"}");
            sb.AppendLine(@"");
            sb.AppendLine(@"    if ($localize.locale === 'fr-CA') {");
            sb.AppendLine($@"        { dllTypeInfoModels.Name.ToLower() }TextModel.Title = 'Le Titre';");
            sb.AppendLine(@"    }");
            sb.AppendLine(@"");
            sb.AppendLine($@"    { dllTypeInfoModels.Name.ToLower() }TextModel$.next({ dllTypeInfoModels.Name.ToLower() }TextModel);");
            sb.AppendLine(@"}");

            DirectoryInfo di = new DirectoryInfo(Configuration.GetValue<string>("OutputDir").Replace("{TypeNameLower}", dllTypeInfoModels.Name.ToLower()));
            if (!di.Exists)
            {
                try
                {
                    di.Create();
                }
                catch (Exception ex)
                {
                    string ErrorText = ex.Message + ex.InnerException != null ? ex.InnerException.Message : "";
                    Console.WriteLine(ErrorText);
                    return;
                }
            }

            FileInfo fiOutputGen = new FileInfo(Configuration.GetValue<string>("LocalesFileName").Replace("{TypeNameLower}", dllTypeInfoModels.Name.ToLower()).Replace("{TypeNameLower}", dllTypeInfoModels.Name.ToLower()));
            using (StreamWriter sw2 = fiOutputGen.CreateText())
            {
                sw2.Write(sb.ToString());
                Console.WriteLine($"Created { fiOutputGen.FullName }");
            }
        }
    }
}
