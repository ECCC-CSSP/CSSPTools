/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\GenerateCSSPDBLocalServices.exe
 *
 * Do not edit this file.
 *
 */

using CSSPEnums;
using CSSPDBLocalModels;
using CSSPCultureServices.Resources;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using LocalServices;
using Microsoft.Extensions.Configuration;

namespace CSSPDBLocalServices
{
    public partial interface ILocalMWQMAnalysisReportParameterDBService
    {
        Task<ActionResult<bool>> Delete(int LocalMWQMAnalysisReportParameterID);
        Task<ActionResult<List<LocalMWQMAnalysisReportParameter>>> GetLocalMWQMAnalysisReportParameterList(int skip = 0, int take = 100);
        Task<ActionResult<LocalMWQMAnalysisReportParameter>> GetLocalMWQMAnalysisReportParameterWithMWQMAnalysisReportParameterID(int MWQMAnalysisReportParameterID);
        Task<ActionResult<LocalMWQMAnalysisReportParameter>> Post(LocalMWQMAnalysisReportParameter localmwqmanalysisreportparameter);
        Task<ActionResult<LocalMWQMAnalysisReportParameter>> Put(LocalMWQMAnalysisReportParameter localmwqmanalysisreportparameter);
    }
    public partial class LocalMWQMAnalysisReportParameterDBService : ControllerBase, ILocalMWQMAnalysisReportParameterDBService
    {
        #region Variables
        #endregion Variables

        #region Properties
        private CSSPDBLocalContext db { get; }
        private IConfiguration Configuration { get; }
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private IEnums enums { get; }
        private IEnumerable<ValidationResult> ValidationResults { get; set; }
        #endregion Properties

        #region Constructors
        public LocalMWQMAnalysisReportParameterDBService(IConfiguration Configuration, ICSSPCultureService CSSPCultureService, IEnums enums,
           ILocalService LocalService,
           CSSPDBLocalContext db)
        {
            this.Configuration = Configuration;
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.enums = enums;
            this.db = db;
        }
        #endregion Constructors

        #region Functions public 
        public async Task<ActionResult<LocalMWQMAnalysisReportParameter>> GetLocalMWQMAnalysisReportParameterWithMWQMAnalysisReportParameterID(int MWQMAnalysisReportParameterID)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized(""));
            }

            LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameter = (from c in db.LocalMWQMAnalysisReportParameters.AsNoTracking()
                    where c.MWQMAnalysisReportParameterID == MWQMAnalysisReportParameterID
                    select c).FirstOrDefault();

            if (localMWQMAnalysisReportParameter == null)
            {
                return await Task.FromResult(NotFound(""));
            }

            return await Task.FromResult(Ok(localMWQMAnalysisReportParameter));
        }
        public async Task<ActionResult<List<LocalMWQMAnalysisReportParameter>>> GetLocalMWQMAnalysisReportParameterList(int skip = 0, int take = 100)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized(""));
            }

            List<LocalMWQMAnalysisReportParameter> localMWQMAnalysisReportParameterList = (from c in db.LocalMWQMAnalysisReportParameters.AsNoTracking() orderby c.MWQMAnalysisReportParameterID select c).Skip(skip).Take(take).ToList();

            return await Task.FromResult(Ok(localMWQMAnalysisReportParameterList));
        }
        public async Task<ActionResult<bool>> Delete(int LocalMWQMAnalysisReportParameterID)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized());
            }

            LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameter = (from c in db.LocalMWQMAnalysisReportParameters
                    where c.MWQMAnalysisReportParameterID == LocalMWQMAnalysisReportParameterID
                    select c).FirstOrDefault();

            if (localMWQMAnalysisReportParameter == null)
            {
                return await Task.FromResult(BadRequest(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "LocalMWQMAnalysisReportParameter", "LocalMWQMAnalysisReportParameterID", LocalMWQMAnalysisReportParameterID.ToString())));
            }

            try
            {
                db.LocalMWQMAnalysisReportParameters.Remove(localMWQMAnalysisReportParameter);
                db.SaveChanges();
            }
            catch (Exception ex)
            {
                return await Task.FromResult(BadRequest(ex.Message + (ex.InnerException != null ? " Inner: " + ex.InnerException.Message : "")));
            }

            return await Task.FromResult(Ok(true));
        }
        public async Task<ActionResult<LocalMWQMAnalysisReportParameter>> Post(LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameter)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized());
            }

            ValidationResults = Validate(new ValidationContext(localMWQMAnalysisReportParameter), ActionDBTypeEnum.Create);
            if (ValidationResults.Count() > 0)
            {
                return await Task.FromResult(BadRequest(ValidationResults));
            }

            try
            {
                db.LocalMWQMAnalysisReportParameters.Add(localMWQMAnalysisReportParameter);
                db.SaveChanges();
            }
            catch (Exception ex)
            {
                return await Task.FromResult(BadRequest(ex.Message + (ex.InnerException != null ? " Inner: " + ex.InnerException.Message : "")));
            }

            return await Task.FromResult(Ok(localMWQMAnalysisReportParameter));
        }
        public async Task<ActionResult<LocalMWQMAnalysisReportParameter>> Put(LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameter)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized());
            }

            ValidationResults = Validate(new ValidationContext(localMWQMAnalysisReportParameter), ActionDBTypeEnum.Update);
            if (ValidationResults.Count() > 0)
            {
                return await Task.FromResult(BadRequest(ValidationResults));
            }

            try
            {
                db.LocalMWQMAnalysisReportParameters.Update(localMWQMAnalysisReportParameter);
                db.SaveChanges();
            }
            catch (Exception ex)
            {
                return await Task.FromResult(BadRequest(ex.Message + (ex.InnerException != null ? " Inner: " + ex.InnerException.Message : "")));
            }

            return await Task.FromResult(Ok(localMWQMAnalysisReportParameter));
        }
        #endregion Functions public

        #region Functions private
        private IEnumerable<ValidationResult> Validate(ValidationContext validationContext, ActionDBTypeEnum actionDBType)
        {
            string retStr = "";
            LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameter = validationContext.ObjectInstance as LocalMWQMAnalysisReportParameter;

            retStr = enums.EnumTypeOK(typeof(LocalDBCommandEnum), (int?)localMWQMAnalysisReportParameter.LocalDBCommand);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "LocalDBCommand"), new[] { nameof(localMWQMAnalysisReportParameter.LocalDBCommand) });
            }

            if (actionDBType == ActionDBTypeEnum.Update || actionDBType == ActionDBTypeEnum.Delete)
            {
                if (localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID == 0)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "MWQMAnalysisReportParameterID"), new[] { nameof(localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID) });
                }

                if (!(from c in db.LocalMWQMAnalysisReportParameters.AsNoTracking() select c).Where(c => c.MWQMAnalysisReportParameterID == localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID).Any())
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "MWQMAnalysisReportParameter", "MWQMAnalysisReportParameterID", localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID.ToString()), new[] { nameof(localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID) });
                }
            }

            LocalTVItem localTVItemSubsectorTVItemID = null;
            localTVItemSubsectorTVItemID = (from c in db.LocalTVItems.AsNoTracking() where c.TVItemID == localMWQMAnalysisReportParameter.SubsectorTVItemID select c).FirstOrDefault();

            if (localTVItemSubsectorTVItemID == null)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "LocalTVItem", "SubsectorTVItemID", localMWQMAnalysisReportParameter.SubsectorTVItemID.ToString()), new[] { nameof(localMWQMAnalysisReportParameter.SubsectorTVItemID) });
            }
            else
            {
                List<TVTypeEnum> AllowableTVTypes = new List<TVTypeEnum>()
                {
                    TVTypeEnum.Subsector,
                };
                if (!AllowableTVTypes.Contains(localTVItemSubsectorTVItemID.TVType))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsNotOfType_, "SubsectorTVItemID", "Subsector"), new[] { nameof(localMWQMAnalysisReportParameter.SubsectorTVItemID) });
                }
            }

            if (string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameter.AnalysisName))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "AnalysisName"), new[] { nameof(localMWQMAnalysisReportParameter.AnalysisName) });
            }

            if (!string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameter.AnalysisName) && (localMWQMAnalysisReportParameter.AnalysisName.Length < 5 || localMWQMAnalysisReportParameter.AnalysisName.Length > 250))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._LengthShouldBeBetween_And_, "AnalysisName", "5", "250"), new[] { nameof(localMWQMAnalysisReportParameter.AnalysisName) });
            }

            if (localMWQMAnalysisReportParameter.AnalysisReportYear != null)
            {
                if (localMWQMAnalysisReportParameter.AnalysisReportYear < 1980 || localMWQMAnalysisReportParameter.AnalysisReportYear > 2050)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "AnalysisReportYear", "1980", "2050"), new[] { nameof(localMWQMAnalysisReportParameter.AnalysisReportYear) });
                }
            }

            if (localMWQMAnalysisReportParameter.StartDate.Year == 1)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "StartDate"), new[] { nameof(localMWQMAnalysisReportParameter.StartDate) });
            }
            else
            {
                if (localMWQMAnalysisReportParameter.StartDate.Year < 1980)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "StartDate", "1980"), new[] { nameof(localMWQMAnalysisReportParameter.StartDate) });
                }
            }

            if (localMWQMAnalysisReportParameter.EndDate.Year == 1)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "EndDate"), new[] { nameof(localMWQMAnalysisReportParameter.EndDate) });
            }
            else
            {
                if (localMWQMAnalysisReportParameter.EndDate.Year < 1980)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "EndDate", "1980"), new[] { nameof(localMWQMAnalysisReportParameter.EndDate) });
                }
            }

            if (localMWQMAnalysisReportParameter.StartDate > localMWQMAnalysisReportParameter.EndDate)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._DateIsBiggerThan_, "EndDate", "LocalMWQMAnalysisReportParameterStartDate"), new[] { nameof(localMWQMAnalysisReportParameter.EndDate) });
            }

            retStr = enums.EnumTypeOK(typeof(AnalysisCalculationTypeEnum), (int?)localMWQMAnalysisReportParameter.AnalysisCalculationType);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "AnalysisCalculationType"), new[] { nameof(localMWQMAnalysisReportParameter.AnalysisCalculationType) });
            }

            if (localMWQMAnalysisReportParameter.NumberOfRuns < 1 || localMWQMAnalysisReportParameter.NumberOfRuns > 1000)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "NumberOfRuns", "1", "1000"), new[] { nameof(localMWQMAnalysisReportParameter.NumberOfRuns) });
            }

            if (localMWQMAnalysisReportParameter.SalinityHighlightDeviationFromAverage < 1 || localMWQMAnalysisReportParameter.SalinityHighlightDeviationFromAverage > 20)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "SalinityHighlightDeviationFromAverage", "1", "20"), new[] { nameof(localMWQMAnalysisReportParameter.SalinityHighlightDeviationFromAverage) });
            }

            if (localMWQMAnalysisReportParameter.ShortRangeNumberOfDays < 0 || localMWQMAnalysisReportParameter.ShortRangeNumberOfDays > 5)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "ShortRangeNumberOfDays", "0", "5"), new[] { nameof(localMWQMAnalysisReportParameter.ShortRangeNumberOfDays) });
            }

            if (localMWQMAnalysisReportParameter.MidRangeNumberOfDays < 2 || localMWQMAnalysisReportParameter.MidRangeNumberOfDays > 7)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "MidRangeNumberOfDays", "2", "7"), new[] { nameof(localMWQMAnalysisReportParameter.MidRangeNumberOfDays) });
            }

            if (localMWQMAnalysisReportParameter.DryLimit24h < 1 || localMWQMAnalysisReportParameter.DryLimit24h > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "DryLimit24h", "1", "100"), new[] { nameof(localMWQMAnalysisReportParameter.DryLimit24h) });
            }

            if (localMWQMAnalysisReportParameter.DryLimit48h < 1 || localMWQMAnalysisReportParameter.DryLimit48h > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "DryLimit48h", "1", "100"), new[] { nameof(localMWQMAnalysisReportParameter.DryLimit48h) });
            }

            if (localMWQMAnalysisReportParameter.DryLimit72h < 1 || localMWQMAnalysisReportParameter.DryLimit72h > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "DryLimit72h", "1", "100"), new[] { nameof(localMWQMAnalysisReportParameter.DryLimit72h) });
            }

            if (localMWQMAnalysisReportParameter.DryLimit96h < 1 || localMWQMAnalysisReportParameter.DryLimit96h > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "DryLimit96h", "1", "100"), new[] { nameof(localMWQMAnalysisReportParameter.DryLimit96h) });
            }

            if (localMWQMAnalysisReportParameter.WetLimit24h < 1 || localMWQMAnalysisReportParameter.WetLimit24h > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "WetLimit24h", "1", "100"), new[] { nameof(localMWQMAnalysisReportParameter.WetLimit24h) });
            }

            if (localMWQMAnalysisReportParameter.WetLimit48h < 1 || localMWQMAnalysisReportParameter.WetLimit48h > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "WetLimit48h", "1", "100"), new[] { nameof(localMWQMAnalysisReportParameter.WetLimit48h) });
            }

            if (localMWQMAnalysisReportParameter.WetLimit72h < 1 || localMWQMAnalysisReportParameter.WetLimit72h > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "WetLimit72h", "1", "100"), new[] { nameof(localMWQMAnalysisReportParameter.WetLimit72h) });
            }

            if (localMWQMAnalysisReportParameter.WetLimit96h < 1 || localMWQMAnalysisReportParameter.WetLimit96h > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "WetLimit96h", "1", "100"), new[] { nameof(localMWQMAnalysisReportParameter.WetLimit96h) });
            }

            if (string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameter.RunsToOmit))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "RunsToOmit"), new[] { nameof(localMWQMAnalysisReportParameter.RunsToOmit) });
            }

            if (!string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameter.RunsToOmit) && localMWQMAnalysisReportParameter.RunsToOmit.Length > 250)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "RunsToOmit", "250"), new[] { nameof(localMWQMAnalysisReportParameter.RunsToOmit) });
            }

            if (!string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameter.ShowDataTypes) && localMWQMAnalysisReportParameter.ShowDataTypes.Length > 20)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ShowDataTypes", "20"), new[] { nameof(localMWQMAnalysisReportParameter.ShowDataTypes) });
            }

            if (localMWQMAnalysisReportParameter.ExcelTVFileTVItemID != null)
            {
                LocalTVItem localTVItemExcelTVFileTVItemID = null;
                localTVItemExcelTVFileTVItemID = (from c in db.LocalTVItems.AsNoTracking() where c.TVItemID == localMWQMAnalysisReportParameter.ExcelTVFileTVItemID select c).FirstOrDefault();

                if (localTVItemExcelTVFileTVItemID == null)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "TVItem", "ExcelTVFileTVItemID", (localMWQMAnalysisReportParameter.ExcelTVFileTVItemID == null ? "" : localMWQMAnalysisReportParameter.ExcelTVFileTVItemID.ToString())), new[] { nameof(localMWQMAnalysisReportParameter.ExcelTVFileTVItemID) });
                }
                else
                {
                    List<TVTypeEnum> AllowableTVTypes = new List<TVTypeEnum>()
                    {
                        TVTypeEnum.File,
                    };
                    if (!AllowableTVTypes.Contains(localTVItemExcelTVFileTVItemID.TVType))
                    {
                        yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsNotOfType_, "ExcelTVFileTVItemID", "File"), new[] { nameof(localMWQMAnalysisReportParameter.ExcelTVFileTVItemID) });
                    }
                }
            }

            retStr = enums.EnumTypeOK(typeof(AnalysisReportExportCommandEnum), (int?)localMWQMAnalysisReportParameter.Command);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Command"), new[] { nameof(localMWQMAnalysisReportParameter.Command) });
            }

            if (localMWQMAnalysisReportParameter.LastUpdateDate_UTC.Year == 1)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "LastUpdateDate_UTC"), new[] { nameof(localMWQMAnalysisReportParameter.LastUpdateDate_UTC) });
            }
            else
            {
                if (localMWQMAnalysisReportParameter.LastUpdateDate_UTC.Year < 1980)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "LastUpdateDate_UTC", "1980"), new[] { nameof(localMWQMAnalysisReportParameter.LastUpdateDate_UTC) });
                }
            }

            LocalTVItem localTVItemLastUpdateContactTVItemID = null;
            localTVItemLastUpdateContactTVItemID = (from c in db.LocalTVItems.AsNoTracking() where c.TVItemID == localMWQMAnalysisReportParameter.LastUpdateContactTVItemID select c).FirstOrDefault();

            if (localTVItemLastUpdateContactTVItemID == null)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "LocalTVItem", "LastUpdateContactTVItemID", localMWQMAnalysisReportParameter.LastUpdateContactTVItemID.ToString()), new[] { nameof(localMWQMAnalysisReportParameter.LastUpdateContactTVItemID) });
            }
            else
            {
                List<TVTypeEnum> AllowableTVTypes = new List<TVTypeEnum>()
                {
                    TVTypeEnum.Contact,
                };
                if (!AllowableTVTypes.Contains(localTVItemLastUpdateContactTVItemID.TVType))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsNotOfType_, "LastUpdateContactTVItemID", "Contact"), new[] { nameof(localMWQMAnalysisReportParameter.LastUpdateContactTVItemID) });
                }
            }

        }
        #endregion Functions private
    }

}
