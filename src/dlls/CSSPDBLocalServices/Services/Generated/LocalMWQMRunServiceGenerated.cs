/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\GenerateCSSPDBLocalServices.exe
 *
 * Do not edit this file.
 *
 */

using CSSPEnums;
using CSSPDBLocalModels;
using CSSPCultureServices.Resources;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using LocalServices;
using Microsoft.Extensions.Configuration;

namespace CSSPDBLocalServices
{
    public partial interface ILocalMWQMRunDBService
    {
        Task<ActionResult<bool>> Delete(int LocalMWQMRunID);
        Task<ActionResult<List<LocalMWQMRun>>> GetLocalMWQMRunList(int skip = 0, int take = 100);
        Task<ActionResult<LocalMWQMRun>> GetLocalMWQMRunWithMWQMRunID(int MWQMRunID);
        Task<ActionResult<LocalMWQMRun>> Post(LocalMWQMRun localmwqmrun);
        Task<ActionResult<LocalMWQMRun>> Put(LocalMWQMRun localmwqmrun);
    }
    public partial class LocalMWQMRunDBService : ControllerBase, ILocalMWQMRunDBService
    {
        #region Variables
        #endregion Variables

        #region Properties
        private CSSPDBLocalContext db { get; }
        private IConfiguration Configuration { get; }
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private IEnums enums { get; }
        private IEnumerable<ValidationResult> ValidationResults { get; set; }
        #endregion Properties

        #region Constructors
        public LocalMWQMRunDBService(IConfiguration Configuration, ICSSPCultureService CSSPCultureService, IEnums enums,
           ILocalService LocalService,
           CSSPDBLocalContext db)
        {
            this.Configuration = Configuration;
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.enums = enums;
            this.db = db;
        }
        #endregion Constructors

        #region Functions public 
        public async Task<ActionResult<LocalMWQMRun>> GetLocalMWQMRunWithMWQMRunID(int MWQMRunID)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized(""));
            }

            LocalMWQMRun localMWQMRun = (from c in db.LocalMWQMRuns.AsNoTracking()
                    where c.MWQMRunID == MWQMRunID
                    select c).FirstOrDefault();

            if (localMWQMRun == null)
            {
                return await Task.FromResult(NotFound(""));
            }

            return await Task.FromResult(Ok(localMWQMRun));
        }
        public async Task<ActionResult<List<LocalMWQMRun>>> GetLocalMWQMRunList(int skip = 0, int take = 100)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized(""));
            }

            List<LocalMWQMRun> localMWQMRunList = (from c in db.LocalMWQMRuns.AsNoTracking() orderby c.MWQMRunID select c).Skip(skip).Take(take).ToList();

            return await Task.FromResult(Ok(localMWQMRunList));
        }
        public async Task<ActionResult<bool>> Delete(int LocalMWQMRunID)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized());
            }

            LocalMWQMRun localMWQMRun = (from c in db.LocalMWQMRuns
                    where c.MWQMRunID == LocalMWQMRunID
                    select c).FirstOrDefault();

            if (localMWQMRun == null)
            {
                return await Task.FromResult(BadRequest(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "LocalMWQMRun", "LocalMWQMRunID", LocalMWQMRunID.ToString())));
            }

            try
            {
                db.LocalMWQMRuns.Remove(localMWQMRun);
                db.SaveChanges();
            }
            catch (Exception ex)
            {
                return await Task.FromResult(BadRequest(ex.Message + (ex.InnerException != null ? " Inner: " + ex.InnerException.Message : "")));
            }

            return await Task.FromResult(Ok(true));
        }
        public async Task<ActionResult<LocalMWQMRun>> Post(LocalMWQMRun localMWQMRun)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized());
            }

            ValidationResults = Validate(new ValidationContext(localMWQMRun), ActionDBTypeEnum.Create);
            if (ValidationResults.Count() > 0)
            {
                return await Task.FromResult(BadRequest(ValidationResults));
            }

            try
            {
                db.LocalMWQMRuns.Add(localMWQMRun);
                db.SaveChanges();
            }
            catch (Exception ex)
            {
                return await Task.FromResult(BadRequest(ex.Message + (ex.InnerException != null ? " Inner: " + ex.InnerException.Message : "")));
            }

            return await Task.FromResult(Ok(localMWQMRun));
        }
        public async Task<ActionResult<LocalMWQMRun>> Put(LocalMWQMRun localMWQMRun)
        {
            if (LocalService.LoggedInContactInfo.LoggedInContact == null)
            {
                return await Task.FromResult(Unauthorized());
            }

            ValidationResults = Validate(new ValidationContext(localMWQMRun), ActionDBTypeEnum.Update);
            if (ValidationResults.Count() > 0)
            {
                return await Task.FromResult(BadRequest(ValidationResults));
            }

            try
            {
                db.LocalMWQMRuns.Update(localMWQMRun);
                db.SaveChanges();
            }
            catch (Exception ex)
            {
                return await Task.FromResult(BadRequest(ex.Message + (ex.InnerException != null ? " Inner: " + ex.InnerException.Message : "")));
            }

            return await Task.FromResult(Ok(localMWQMRun));
        }
        #endregion Functions public

        #region Functions private
        private IEnumerable<ValidationResult> Validate(ValidationContext validationContext, ActionDBTypeEnum actionDBType)
        {
            string retStr = "";
            LocalMWQMRun localMWQMRun = validationContext.ObjectInstance as LocalMWQMRun;

            retStr = enums.EnumTypeOK(typeof(LocalDBCommandEnum), (int?)localMWQMRun.LocalDBCommand);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "LocalDBCommand"), new[] { nameof(localMWQMRun.LocalDBCommand) });
            }

            if (actionDBType == ActionDBTypeEnum.Update || actionDBType == ActionDBTypeEnum.Delete)
            {
                if (localMWQMRun.MWQMRunID == 0)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "MWQMRunID"), new[] { nameof(localMWQMRun.MWQMRunID) });
                }

                if (!(from c in db.LocalMWQMRuns.AsNoTracking() select c).Where(c => c.MWQMRunID == localMWQMRun.MWQMRunID).Any())
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "MWQMRun", "MWQMRunID", localMWQMRun.MWQMRunID.ToString()), new[] { nameof(localMWQMRun.MWQMRunID) });
                }
            }

            LocalTVItem localTVItemSubsectorTVItemID = null;
            localTVItemSubsectorTVItemID = (from c in db.LocalTVItems.AsNoTracking() where c.TVItemID == localMWQMRun.SubsectorTVItemID select c).FirstOrDefault();

            if (localTVItemSubsectorTVItemID == null)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "LocalTVItem", "SubsectorTVItemID", localMWQMRun.SubsectorTVItemID.ToString()), new[] { nameof(localMWQMRun.SubsectorTVItemID) });
            }
            else
            {
                List<TVTypeEnum> AllowableTVTypes = new List<TVTypeEnum>()
                {
                    TVTypeEnum.Subsector,
                };
                if (!AllowableTVTypes.Contains(localTVItemSubsectorTVItemID.TVType))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsNotOfType_, "SubsectorTVItemID", "Subsector"), new[] { nameof(localMWQMRun.SubsectorTVItemID) });
                }
            }

            LocalTVItem localTVItemMWQMRunTVItemID = null;
            localTVItemMWQMRunTVItemID = (from c in db.LocalTVItems.AsNoTracking() where c.TVItemID == localMWQMRun.MWQMRunTVItemID select c).FirstOrDefault();

            if (localTVItemMWQMRunTVItemID == null)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "LocalTVItem", "MWQMRunTVItemID", localMWQMRun.MWQMRunTVItemID.ToString()), new[] { nameof(localMWQMRun.MWQMRunTVItemID) });
            }
            else
            {
                List<TVTypeEnum> AllowableTVTypes = new List<TVTypeEnum>()
                {
                    TVTypeEnum.MWQMRun,
                };
                if (!AllowableTVTypes.Contains(localTVItemMWQMRunTVItemID.TVType))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsNotOfType_, "MWQMRunTVItemID", "MWQMRun"), new[] { nameof(localMWQMRun.MWQMRunTVItemID) });
                }
            }

            retStr = enums.EnumTypeOK(typeof(SampleTypeEnum), (int?)localMWQMRun.RunSampleType);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "RunSampleType"), new[] { nameof(localMWQMRun.RunSampleType) });
            }

            if (localMWQMRun.DateTime_Local.Year == 1)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "DateTime_Local"), new[] { nameof(localMWQMRun.DateTime_Local) });
            }
            else
            {
                if (localMWQMRun.DateTime_Local.Year < 1980)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "DateTime_Local", "1980"), new[] { nameof(localMWQMRun.DateTime_Local) });
                }
            }

            if (localMWQMRun.RunNumber < 1 || localMWQMRun.RunNumber > 1000)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RunNumber", "1", "1000"), new[] { nameof(localMWQMRun.RunNumber) });
            }

            if (localMWQMRun.StartDateTime_Local != null && ((DateTime)localMWQMRun.StartDateTime_Local).Year < 1980)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "StartDateTime_Local", "1980"), new[] { nameof(localMWQMRun.StartDateTime_Local) });
            }

            if (localMWQMRun.EndDateTime_Local != null && ((DateTime)localMWQMRun.EndDateTime_Local).Year < 1980)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "EndDateTime_Local", "1980"), new[] { nameof(localMWQMRun.EndDateTime_Local) });
            }

            if (localMWQMRun.StartDateTime_Local > localMWQMRun.EndDateTime_Local)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._DateIsBiggerThan_, "EndDateTime_Local", "LocalMWQMRunStartDateTime_Local"), new[] { nameof(localMWQMRun.EndDateTime_Local) });
            }

            if (localMWQMRun.LabReceivedDateTime_Local != null && ((DateTime)localMWQMRun.LabReceivedDateTime_Local).Year < 1980)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "LabReceivedDateTime_Local", "1980"), new[] { nameof(localMWQMRun.LabReceivedDateTime_Local) });
            }

            if (localMWQMRun.TemperatureControl1_C != null)
            {
                if (localMWQMRun.TemperatureControl1_C < -10 || localMWQMRun.TemperatureControl1_C > 40)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "TemperatureControl1_C", "-10", "40"), new[] { nameof(localMWQMRun.TemperatureControl1_C) });
                }
            }

            if (localMWQMRun.TemperatureControl2_C != null)
            {
                if (localMWQMRun.TemperatureControl2_C < -10 || localMWQMRun.TemperatureControl2_C > 40)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "TemperatureControl2_C", "-10", "40"), new[] { nameof(localMWQMRun.TemperatureControl2_C) });
                }
            }

            if (localMWQMRun.SeaStateAtStart_BeaufortScale != null)
            {
                retStr = enums.EnumTypeOK(typeof(BeaufortScaleEnum), (int?)localMWQMRun.SeaStateAtStart_BeaufortScale);
                if (localMWQMRun.SeaStateAtStart_BeaufortScale == null || !string.IsNullOrWhiteSpace(retStr))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SeaStateAtStart_BeaufortScale"), new[] { nameof(localMWQMRun.SeaStateAtStart_BeaufortScale) });
                }
            }

            if (localMWQMRun.SeaStateAtEnd_BeaufortScale != null)
            {
                retStr = enums.EnumTypeOK(typeof(BeaufortScaleEnum), (int?)localMWQMRun.SeaStateAtEnd_BeaufortScale);
                if (localMWQMRun.SeaStateAtEnd_BeaufortScale == null || !string.IsNullOrWhiteSpace(retStr))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SeaStateAtEnd_BeaufortScale"), new[] { nameof(localMWQMRun.SeaStateAtEnd_BeaufortScale) });
                }
            }

            if (localMWQMRun.WaterLevelAtBrook_m != null)
            {
                if (localMWQMRun.WaterLevelAtBrook_m < 0 || localMWQMRun.WaterLevelAtBrook_m > 100)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "WaterLevelAtBrook_m", "0", "100"), new[] { nameof(localMWQMRun.WaterLevelAtBrook_m) });
                }
            }

            if (localMWQMRun.WaveHightAtStart_m != null)
            {
                if (localMWQMRun.WaveHightAtStart_m < 0 || localMWQMRun.WaveHightAtStart_m > 100)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "WaveHightAtStart_m", "0", "100"), new[] { nameof(localMWQMRun.WaveHightAtStart_m) });
                }
            }

            if (localMWQMRun.WaveHightAtEnd_m != null)
            {
                if (localMWQMRun.WaveHightAtEnd_m < 0 || localMWQMRun.WaveHightAtEnd_m > 100)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "WaveHightAtEnd_m", "0", "100"), new[] { nameof(localMWQMRun.WaveHightAtEnd_m) });
                }
            }

            if (!string.IsNullOrWhiteSpace(localMWQMRun.SampleCrewInitials) && localMWQMRun.SampleCrewInitials.Length > 20)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SampleCrewInitials", "20"), new[] { nameof(localMWQMRun.SampleCrewInitials) });
            }

            if (localMWQMRun.AnalyzeMethod != null)
            {
                retStr = enums.EnumTypeOK(typeof(AnalyzeMethodEnum), (int?)localMWQMRun.AnalyzeMethod);
                if (localMWQMRun.AnalyzeMethod == null || !string.IsNullOrWhiteSpace(retStr))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "AnalyzeMethod"), new[] { nameof(localMWQMRun.AnalyzeMethod) });
                }
            }

            if (localMWQMRun.SampleMatrix != null)
            {
                retStr = enums.EnumTypeOK(typeof(SampleMatrixEnum), (int?)localMWQMRun.SampleMatrix);
                if (localMWQMRun.SampleMatrix == null || !string.IsNullOrWhiteSpace(retStr))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SampleMatrix"), new[] { nameof(localMWQMRun.SampleMatrix) });
                }
            }

            if (localMWQMRun.Laboratory != null)
            {
                retStr = enums.EnumTypeOK(typeof(LaboratoryEnum), (int?)localMWQMRun.Laboratory);
                if (localMWQMRun.Laboratory == null || !string.IsNullOrWhiteSpace(retStr))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Laboratory"), new[] { nameof(localMWQMRun.Laboratory) });
                }
            }

            if (localMWQMRun.SampleStatus != null)
            {
                retStr = enums.EnumTypeOK(typeof(SampleStatusEnum), (int?)localMWQMRun.SampleStatus);
                if (localMWQMRun.SampleStatus == null || !string.IsNullOrWhiteSpace(retStr))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SampleStatus"), new[] { nameof(localMWQMRun.SampleStatus) });
                }
            }

            if (localMWQMRun.LabSampleApprovalContactTVItemID != null)
            {
                LocalTVItem localTVItemLabSampleApprovalContactTVItemID = null;
                localTVItemLabSampleApprovalContactTVItemID = (from c in db.LocalTVItems.AsNoTracking() where c.TVItemID == localMWQMRun.LabSampleApprovalContactTVItemID select c).FirstOrDefault();

                if (localTVItemLabSampleApprovalContactTVItemID == null)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "TVItem", "LabSampleApprovalContactTVItemID", (localMWQMRun.LabSampleApprovalContactTVItemID == null ? "" : localMWQMRun.LabSampleApprovalContactTVItemID.ToString())), new[] { nameof(localMWQMRun.LabSampleApprovalContactTVItemID) });
                }
                else
                {
                    List<TVTypeEnum> AllowableTVTypes = new List<TVTypeEnum>()
                    {
                        TVTypeEnum.Contact,
                    };
                    if (!AllowableTVTypes.Contains(localTVItemLabSampleApprovalContactTVItemID.TVType))
                    {
                        yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsNotOfType_, "LabSampleApprovalContactTVItemID", "Contact"), new[] { nameof(localMWQMRun.LabSampleApprovalContactTVItemID) });
                    }
                }
            }

            if (localMWQMRun.LabAnalyzeBath1IncubationStartDateTime_Local != null && ((DateTime)localMWQMRun.LabAnalyzeBath1IncubationStartDateTime_Local).Year < 1980)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "LabAnalyzeBath1IncubationStartDateTime_Local", "1980"), new[] { nameof(localMWQMRun.LabAnalyzeBath1IncubationStartDateTime_Local) });
            }

            if (localMWQMRun.LabAnalyzeBath2IncubationStartDateTime_Local != null && ((DateTime)localMWQMRun.LabAnalyzeBath2IncubationStartDateTime_Local).Year < 1980)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "LabAnalyzeBath2IncubationStartDateTime_Local", "1980"), new[] { nameof(localMWQMRun.LabAnalyzeBath2IncubationStartDateTime_Local) });
            }

            if (localMWQMRun.LabAnalyzeBath3IncubationStartDateTime_Local != null && ((DateTime)localMWQMRun.LabAnalyzeBath3IncubationStartDateTime_Local).Year < 1980)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "LabAnalyzeBath3IncubationStartDateTime_Local", "1980"), new[] { nameof(localMWQMRun.LabAnalyzeBath3IncubationStartDateTime_Local) });
            }

            if (localMWQMRun.LabRunSampleApprovalDateTime_Local != null && ((DateTime)localMWQMRun.LabRunSampleApprovalDateTime_Local).Year < 1980)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "LabRunSampleApprovalDateTime_Local", "1980"), new[] { nameof(localMWQMRun.LabRunSampleApprovalDateTime_Local) });
            }

            if (localMWQMRun.Tide_Start != null)
            {
                retStr = enums.EnumTypeOK(typeof(TideTextEnum), (int?)localMWQMRun.Tide_Start);
                if (localMWQMRun.Tide_Start == null || !string.IsNullOrWhiteSpace(retStr))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Tide_Start"), new[] { nameof(localMWQMRun.Tide_Start) });
                }
            }

            if (localMWQMRun.Tide_End != null)
            {
                retStr = enums.EnumTypeOK(typeof(TideTextEnum), (int?)localMWQMRun.Tide_End);
                if (localMWQMRun.Tide_End == null || !string.IsNullOrWhiteSpace(retStr))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Tide_End"), new[] { nameof(localMWQMRun.Tide_End) });
                }
            }

            if (localMWQMRun.RainDay0_mm != null)
            {
                if (localMWQMRun.RainDay0_mm < 0 || localMWQMRun.RainDay0_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay0_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay0_mm) });
                }
            }

            if (localMWQMRun.RainDay1_mm != null)
            {
                if (localMWQMRun.RainDay1_mm < 0 || localMWQMRun.RainDay1_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay1_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay1_mm) });
                }
            }

            if (localMWQMRun.RainDay2_mm != null)
            {
                if (localMWQMRun.RainDay2_mm < 0 || localMWQMRun.RainDay2_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay2_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay2_mm) });
                }
            }

            if (localMWQMRun.RainDay3_mm != null)
            {
                if (localMWQMRun.RainDay3_mm < 0 || localMWQMRun.RainDay3_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay3_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay3_mm) });
                }
            }

            if (localMWQMRun.RainDay4_mm != null)
            {
                if (localMWQMRun.RainDay4_mm < 0 || localMWQMRun.RainDay4_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay4_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay4_mm) });
                }
            }

            if (localMWQMRun.RainDay5_mm != null)
            {
                if (localMWQMRun.RainDay5_mm < 0 || localMWQMRun.RainDay5_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay5_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay5_mm) });
                }
            }

            if (localMWQMRun.RainDay6_mm != null)
            {
                if (localMWQMRun.RainDay6_mm < 0 || localMWQMRun.RainDay6_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay6_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay6_mm) });
                }
            }

            if (localMWQMRun.RainDay7_mm != null)
            {
                if (localMWQMRun.RainDay7_mm < 0 || localMWQMRun.RainDay7_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay7_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay7_mm) });
                }
            }

            if (localMWQMRun.RainDay8_mm != null)
            {
                if (localMWQMRun.RainDay8_mm < 0 || localMWQMRun.RainDay8_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay8_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay8_mm) });
                }
            }

            if (localMWQMRun.RainDay9_mm != null)
            {
                if (localMWQMRun.RainDay9_mm < 0 || localMWQMRun.RainDay9_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay9_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay9_mm) });
                }
            }

            if (localMWQMRun.RainDay10_mm != null)
            {
                if (localMWQMRun.RainDay10_mm < 0 || localMWQMRun.RainDay10_mm > 300)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RainDay10_mm", "0", "300"), new[] { nameof(localMWQMRun.RainDay10_mm) });
                }
            }

            if (localMWQMRun.LastUpdateDate_UTC.Year == 1)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "LastUpdateDate_UTC"), new[] { nameof(localMWQMRun.LastUpdateDate_UTC) });
            }
            else
            {
                if (localMWQMRun.LastUpdateDate_UTC.Year < 1980)
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._YearShouldBeBiggerThan_, "LastUpdateDate_UTC", "1980"), new[] { nameof(localMWQMRun.LastUpdateDate_UTC) });
                }
            }

            LocalTVItem localTVItemLastUpdateContactTVItemID = null;
            localTVItemLastUpdateContactTVItemID = (from c in db.LocalTVItems.AsNoTracking() where c.TVItemID == localMWQMRun.LastUpdateContactTVItemID select c).FirstOrDefault();

            if (localTVItemLastUpdateContactTVItemID == null)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes.CouldNotFind_With_Equal_, "LocalTVItem", "LastUpdateContactTVItemID", localMWQMRun.LastUpdateContactTVItemID.ToString()), new[] { nameof(localMWQMRun.LastUpdateContactTVItemID) });
            }
            else
            {
                List<TVTypeEnum> AllowableTVTypes = new List<TVTypeEnum>()
                {
                    TVTypeEnum.Contact,
                };
                if (!AllowableTVTypes.Contains(localTVItemLastUpdateContactTVItemID.TVType))
                {
                    yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsNotOfType_, "LastUpdateContactTVItemID", "Contact"), new[] { nameof(localMWQMRun.LastUpdateContactTVItemID) });
                }
            }

        }
        #endregion Functions private
    }

}
