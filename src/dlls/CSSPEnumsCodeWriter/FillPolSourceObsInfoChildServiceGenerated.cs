using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
//using System.Windows.Forms;
using System.IO;
using CSSPPolSourceGroupingExcelFileRead;

namespace PolSourceGroupingGenerateCodeHelper
{
    public partial class EnumsPolSourceCodeWriter
    {
        /// <summary>
        /// Generates:
        ///     C:\CSSPTools\src\dlls\CSSPServices\FillPolSourceObsInfoChildServiceGenerated.cs file
        /// 
        /// Requires:
        ///     C:\CSSPTools\src\assets\PolSourceGrouping.xlsm
        /// </summary>
        private void FillPolSourceObsInfoChildServiceGenerated()
        {
            StringBuilder sb = new StringBuilder();

            string FileToGenerate = @"C:\CSSPTools\src\dlls\CSSPServices\FillPolSourceObsInfoChildServiceGenerated.cs";
            if (!CheckFileDirectoriesExist(FileToGenerate))
            {
                return;
            }

            FileInfo fi = new FileInfo(FileToGenerate);

            List<string> groupList = (from c in polSourceGroupingExcelFileRead.groupChoiceChildLevelList
                                      select c.Group).Distinct().ToList();

            sb.AppendLine(@"/*");
            sb.AppendLine(@" * Auto generated from the CSSPCodeWriter.proj by clicking on the [Generate PolSource Enum code files] button");
            sb.AppendLine(@" *");
            sb.AppendLine(@" * Do not edit this file.");
            sb.AppendLine(@" *");
            sb.AppendLine(@" */ ");
            sb.AppendLine(@"using System;");
            sb.AppendLine(@"using System.Collections.Generic;");
            sb.AppendLine(@"using System.Linq;");
            sb.AppendLine(@"using System.Text;");
            sb.AppendLine(@"using System.Threading.Tasks;");
            sb.AppendLine(@"using CSSPEnums;");
            sb.AppendLine(@"");
            sb.AppendLine(@"namespace CSSPModels");
            sb.AppendLine(@"{");
            sb.AppendLine(@"    public class BaseModelService");
            sb.AppendLine(@"    {");
            sb.AppendLine(@"        #region Variables");
            sb.AppendLine(@"        #endregion Variables");
            sb.AppendLine(@"");
            sb.AppendLine(@"        #region Properties");
            sb.AppendLine(@"        #endregion Properties");
            sb.AppendLine(@"");
            sb.AppendLine(@"        #region Constructors");
            sb.AppendLine(@"        public BaseModelService(LanguageEnum LanguageRequest)");
            sb.AppendLine(@"        {");
            sb.AppendLine(@"        }");
            sb.AppendLine(@"        #endregion Constructors");
            sb.AppendLine(@"");
            sb.AppendLine(@"        #region Functions public ");
            sb.AppendLine(@"        public void FillPolSourceObsInfoChild(List<PolSourceObsInfoChild> polSourceObsInfoChildList)");
            sb.AppendLine(@"        {");
            sb.AppendLine(@"            polSourceObsInfoChildList.Clear();");
            foreach (PolSourceGroupingExcelFileRead.GroupChoiceChildLevel groupChoiceChildLevel in polSourceGroupingExcelFileRead.groupChoiceChildLevelList.Where(c => c.Group.Substring(c.Group.Length - 5) == "Start" && c.Choice == "").Distinct().ToList())
            {
                sb.AppendLine(@"            polSourceObsInfoChildList.Add(new PolSourceObsInfoChild()");
                sb.AppendLine(@"            {");
                sb.AppendLine($@"                PolSourceObsInfo = PolSourceObsInfoEnum.{ groupChoiceChildLevel.Group.ToString() }, ");
                sb.AppendLine($@"                PolSourceObsInfoChildStart = PolSourceObsInfoEnum.{ groupChoiceChildLevel.Group.ToString() },");
                sb.AppendLine(@"            });");
            }
            foreach (PolSourceGroupingExcelFileRead.GroupChoiceChildLevel groupChoiceChildLevel in polSourceGroupingExcelFileRead.groupChoiceChildLevelList.Where(c => c.Child != ""))
            {
                sb.AppendLine(@"            polSourceObsInfoChildList.Add(new PolSourceObsInfoChild()");
                sb.AppendLine(@"            {");
                sb.AppendLine($@"                PolSourceObsInfo = PolSourceObsInfoEnum.{ groupChoiceChildLevel.Choice.ToString() }, ");
                sb.AppendLine($@"                PolSourceObsInfoChildStart = PolSourceObsInfoEnum.{ groupChoiceChildLevel.Child.ToString() },");
                sb.AppendLine(@"            });");
            }

            sb.AppendLine(@"        }");
            sb.AppendLine(@"        #endregion Functions public ");
            sb.AppendLine(@"    }");
            sb.AppendLine(@"}");

            try
            {
                StreamWriter sw = fi.CreateText();
                sw.Write(sb.ToString());
                sw.Close();
            }
            catch (Exception ex)
            {
                StatusPermanentEvent(new StatusEventArgs($"CSSPError creating [{ fi.FullName }]\r\n"));
                string InnerException = (ex.InnerException != null ? $"Inner: { ex.InnerException.Message }" : "");
                StatusPermanentEvent(new StatusEventArgs($"CSSPError: { ex.Message }{ InnerException  }\r\n"));
                return;
            }
            StatusPermanentEvent(new StatusEventArgs($"Created: { fi.FullName }"));
            StatusTempEvent(new StatusEventArgs($"Created: { FileToGenerate }"));

        }
    }
}
