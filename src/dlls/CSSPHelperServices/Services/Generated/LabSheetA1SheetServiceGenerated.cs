/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPHelperServices.exe
 *
 * Do not edit this file.
 *
 */

using CSSPEnums;
using CSSPHelperModels;
using CSSPCultureServices.Resources;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using LoggedInServices;
using Microsoft.Extensions.Configuration;

namespace CSSPHelperServices
{
    public interface ILabSheetA1SheetService
    {
        ErrRes errRes { get; set; }

        bool Validate(ValidationContext validationContext);
    }
    public partial class LabSheetA1SheetService : ILabSheetA1SheetService
    {
        #region Variables
        #endregion Variables

        #region Properties
        public ErrRes errRes { get; set; } = new ErrRes();
        private IEnums enums { get; }
        #endregion Properties

        #region Constructors
        public LabSheetA1SheetService(IEnums enums)
        {
            this.enums = enums;
        }
        #endregion Constructors

        #region Functions public
        public bool Validate(ValidationContext validationContext)
        {
            string retStr = "";
            LabSheetA1Sheet labSheetA1Sheet = validationContext.ObjectInstance as LabSheetA1Sheet;

            if (labSheetA1Sheet.Version < 1 || labSheetA1Sheet.Version > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "Version", "1", "100"));
            }

            retStr = enums.EnumTypeOK(typeof(SamplingPlanTypeEnum), (int?)labSheetA1Sheet.SamplingPlanType);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SamplingPlanType"));
            }

            retStr = enums.EnumTypeOK(typeof(SampleTypeEnum), (int?)labSheetA1Sheet.SampleType);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SampleType"));
            }

            retStr = enums.EnumTypeOK(typeof(LabSheetTypeEnum), (int?)labSheetA1Sheet.LabSheetType);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "LabSheetType"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SubsectorName))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SubsectorName"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SubsectorName) && labSheetA1Sheet.SubsectorName.Length > 1000)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SubsectorName", "1000"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SubsectorLocation))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SubsectorLocation"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SubsectorLocation) && labSheetA1Sheet.SubsectorLocation.Length > 1000)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SubsectorLocation", "1000"));
            }

            if (labSheetA1Sheet.SubsectorTVItemID < 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MinValueIs_, "SubsectorTVItemID", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunYear))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "RunYear"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.RunYear) && labSheetA1Sheet.RunYear.Length > 4)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "RunYear", "4"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunMonth))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "RunMonth"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.RunMonth) && labSheetA1Sheet.RunMonth.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "RunMonth", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunDay))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "RunDay"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.RunDay) && labSheetA1Sheet.RunDay.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "RunDay", "2"));
            }

            if (labSheetA1Sheet.RunNumber < 1 || labSheetA1Sheet.RunNumber > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "RunNumber", "1", "100"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Tides))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Tides"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Tides) && labSheetA1Sheet.Tides.Length > 10)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Tides", "10"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SampleCrewInitials))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SampleCrewInitials"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SampleCrewInitials) && labSheetA1Sheet.SampleCrewInitials.Length > 50)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SampleCrewInitials", "50"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationStartSameDay))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationStartSameDay"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationStartSameDay) && labSheetA1Sheet.IncubationStartSameDay.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationStartSameDay", "8"));
            }

            if (labSheetA1Sheet.WaterBathCount < 1 || labSheetA1Sheet.WaterBathCount > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "WaterBathCount", "1", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1StartTime))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath1StartTime"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1StartTime) && labSheetA1Sheet.IncubationBath1StartTime.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath1StartTime", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2StartTime))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath2StartTime"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2StartTime) && labSheetA1Sheet.IncubationBath2StartTime.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath2StartTime", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3StartTime))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath3StartTime"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3StartTime) && labSheetA1Sheet.IncubationBath3StartTime.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath3StartTime", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1EndTime))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath1EndTime"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1EndTime) && labSheetA1Sheet.IncubationBath1EndTime.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath1EndTime", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2EndTime))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath2EndTime"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2EndTime) && labSheetA1Sheet.IncubationBath2EndTime.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath2EndTime", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3EndTime))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath3EndTime"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3EndTime) && labSheetA1Sheet.IncubationBath3EndTime.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath3EndTime", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1TimeCalculated))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath1TimeCalculated"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1TimeCalculated) && labSheetA1Sheet.IncubationBath1TimeCalculated.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath1TimeCalculated", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2TimeCalculated))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath2TimeCalculated"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2TimeCalculated) && labSheetA1Sheet.IncubationBath2TimeCalculated.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath2TimeCalculated", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3TimeCalculated))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath3TimeCalculated"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3TimeCalculated) && labSheetA1Sheet.IncubationBath3TimeCalculated.Length > 8)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IncubationBath3TimeCalculated", "8"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath1))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "WaterBath1"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath1) && labSheetA1Sheet.WaterBath1.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "WaterBath1", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath2))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "WaterBath2"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath2) && labSheetA1Sheet.WaterBath2.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "WaterBath2", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath3))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "WaterBath3"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath3) && labSheetA1Sheet.WaterBath3.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "WaterBath3", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCField1))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "TCField1"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.TCField1) && labSheetA1Sheet.TCField1.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "TCField1", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCLab1))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "TCLab1"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.TCLab1) && labSheetA1Sheet.TCLab1.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "TCLab1", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCHas2Coolers))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "TCHas2Coolers"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.TCHas2Coolers) && labSheetA1Sheet.TCHas2Coolers.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "TCHas2Coolers", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCField2))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "TCField2"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.TCField2) && labSheetA1Sheet.TCField2.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "TCField2", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCLab2))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "TCLab2"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.TCLab2) && labSheetA1Sheet.TCLab2.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "TCLab2", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCFirst))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "TCFirst"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.TCFirst) && labSheetA1Sheet.TCFirst.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "TCFirst", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCAverage))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "TCAverage"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.TCAverage) && labSheetA1Sheet.TCAverage.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "TCAverage", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ControlLot))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ControlLot"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ControlLot) && labSheetA1Sheet.ControlLot.Length > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ControlLot", "100"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Positive35))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Positive35"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Positive35) && labSheetA1Sheet.Positive35.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Positive35", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.NonTarget35))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "NonTarget35"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.NonTarget35) && labSheetA1Sheet.NonTarget35.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "NonTarget35", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Negative35))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Negative35"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Negative35) && labSheetA1Sheet.Negative35.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Negative35", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Positive44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath1Positive44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Positive44_5) && labSheetA1Sheet.Bath1Positive44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath1Positive44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Positive44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath2Positive44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Positive44_5) && labSheetA1Sheet.Bath2Positive44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath2Positive44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Positive44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath3Positive44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Positive44_5) && labSheetA1Sheet.Bath3Positive44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath3Positive44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1NonTarget44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath1NonTarget44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1NonTarget44_5) && labSheetA1Sheet.Bath1NonTarget44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath1NonTarget44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2NonTarget44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath2NonTarget44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2NonTarget44_5) && labSheetA1Sheet.Bath2NonTarget44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath2NonTarget44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3NonTarget44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath3NonTarget44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3NonTarget44_5) && labSheetA1Sheet.Bath3NonTarget44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath3NonTarget44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Negative44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath1Negative44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Negative44_5) && labSheetA1Sheet.Bath1Negative44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath1Negative44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Negative44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath2Negative44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Negative44_5) && labSheetA1Sheet.Bath2Negative44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath2Negative44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Negative44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath3Negative44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Negative44_5) && labSheetA1Sheet.Bath3Negative44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath3Negative44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Blank35))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Blank35"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Blank35) && labSheetA1Sheet.Blank35.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Blank35", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Blank44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath1Blank44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Blank44_5) && labSheetA1Sheet.Bath1Blank44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath1Blank44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Blank44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath2Blank44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Blank44_5) && labSheetA1Sheet.Bath2Blank44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath2Blank44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Blank44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Bath3Blank44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Blank44_5) && labSheetA1Sheet.Bath3Blank44_5.Length > 1)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Bath3Blank44_5", "1"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Lot35))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Lot35"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Lot35) && labSheetA1Sheet.Lot35.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Lot35", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Lot44_5))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Lot44_5"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Lot44_5) && labSheetA1Sheet.Lot44_5.Length > 5)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Lot44_5", "5"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunComment))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "RunComment"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.RunComment) && labSheetA1Sheet.RunComment.Length > 10000)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "RunComment", "10000"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunWeatherComment))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "RunWeatherComment"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.RunWeatherComment) && labSheetA1Sheet.RunWeatherComment.Length > 10000)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "RunWeatherComment", "10000"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SampleBottleLotNumber))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SampleBottleLotNumber"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SampleBottleLotNumber) && labSheetA1Sheet.SampleBottleLotNumber.Length > 10)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SampleBottleLotNumber", "10"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadBy))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SalinitiesReadBy"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadBy) && labSheetA1Sheet.SalinitiesReadBy.Length > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SalinitiesReadBy", "100"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadYear))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SalinitiesReadYear"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadYear) && labSheetA1Sheet.SalinitiesReadYear.Length > 4)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SalinitiesReadYear", "4"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadMonth))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SalinitiesReadMonth"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadMonth) && labSheetA1Sheet.SalinitiesReadMonth.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SalinitiesReadMonth", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadDay))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "SalinitiesReadDay"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadDay) && labSheetA1Sheet.SalinitiesReadDay.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SalinitiesReadDay", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadBy))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsReadBy"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadBy) && labSheetA1Sheet.ResultsReadBy.Length > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ResultsReadBy", "100"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadYear))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsReadYear"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadYear) && labSheetA1Sheet.ResultsReadYear.Length > 4)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ResultsReadYear", "4"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadMonth))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsReadMonth"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadMonth) && labSheetA1Sheet.ResultsReadMonth.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ResultsReadMonth", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadDay))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsReadDay"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadDay) && labSheetA1Sheet.ResultsReadDay.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ResultsReadDay", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedBy))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsRecordedBy"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedBy) && labSheetA1Sheet.ResultsRecordedBy.Length > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ResultsRecordedBy", "100"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedYear))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsRecordedYear"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedYear) && labSheetA1Sheet.ResultsRecordedYear.Length > 4)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ResultsRecordedYear", "4"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedMonth))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsRecordedMonth"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedMonth) && labSheetA1Sheet.ResultsRecordedMonth.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ResultsRecordedMonth", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedDay))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsRecordedDay"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedDay) && labSheetA1Sheet.ResultsRecordedDay.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ResultsRecordedDay", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicateRLog))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "DailyDuplicateRLog"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicateRLog) && labSheetA1Sheet.DailyDuplicateRLog.Length > 10)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "DailyDuplicateRLog", "10"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicatePrecisionCriteria))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "DailyDuplicatePrecisionCriteria"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicatePrecisionCriteria) && labSheetA1Sheet.DailyDuplicatePrecisionCriteria.Length > 10)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "DailyDuplicatePrecisionCriteria", "10"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicateAcceptableOrUnacceptable))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "DailyDuplicateAcceptableOrUnacceptable"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicateAcceptableOrUnacceptable) && labSheetA1Sheet.DailyDuplicateAcceptableOrUnacceptable.Length > 20)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "DailyDuplicateAcceptableOrUnacceptable", "20"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicateRLog))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IntertechDuplicateRLog"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicateRLog) && labSheetA1Sheet.IntertechDuplicateRLog.Length > 10)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IntertechDuplicateRLog", "10"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicatePrecisionCriteria))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IntertechDuplicatePrecisionCriteria"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicatePrecisionCriteria) && labSheetA1Sheet.IntertechDuplicatePrecisionCriteria.Length > 10)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IntertechDuplicatePrecisionCriteria", "10"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicateAcceptableOrUnacceptable))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IntertechDuplicateAcceptableOrUnacceptable"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicateAcceptableOrUnacceptable) && labSheetA1Sheet.IntertechDuplicateAcceptableOrUnacceptable.Length > 20)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IntertechDuplicateAcceptableOrUnacceptable", "20"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechReadAcceptableOrUnacceptable))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "IntertechReadAcceptableOrUnacceptable"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechReadAcceptableOrUnacceptable) && labSheetA1Sheet.IntertechReadAcceptableOrUnacceptable.Length > 20)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "IntertechReadAcceptableOrUnacceptable", "20"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalYear))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ApprovalYear"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalYear) && labSheetA1Sheet.ApprovalYear.Length > 4)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ApprovalYear", "4"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalMonth))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ApprovalMonth"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalMonth) && labSheetA1Sheet.ApprovalMonth.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ApprovalMonth", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalDay))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ApprovalDay"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalDay) && labSheetA1Sheet.ApprovalDay.Length > 2)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ApprovalDay", "2"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovedBySupervisorInitials))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ApprovedBySupervisorInitials"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovedBySupervisorInitials) && labSheetA1Sheet.ApprovedBySupervisorInitials.Length > 10)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "ApprovedBySupervisorInitials", "10"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.BackupDirectory))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "BackupDirectory"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.BackupDirectory) && labSheetA1Sheet.BackupDirectory.Length > 250)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "BackupDirectory", "250"));
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Log))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Log"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.Log) && labSheetA1Sheet.Log.Length > 1000000)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Log", "1000000"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SamplingPlanTypeText) && labSheetA1Sheet.SamplingPlanTypeText.Length > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SamplingPlanTypeText", "100"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SampleTypeText) && labSheetA1Sheet.SampleTypeText.Length > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SampleTypeText", "100"));
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.LabSheetTypeText) && labSheetA1Sheet.LabSheetTypeText.Length > 100)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "LabSheetTypeText", "100"));
            }

                //CSSPError: Type not implemented [LabSheetA1MeasurementList] of type [List`1]

                //CSSPError: Type not implemented [LabSheetA1MeasurementList] of type [LabSheetA1Measurement]
            return errRes.ErrList.Count == 0 ? true : false;
        }
        #endregion Functions public
    }

}
