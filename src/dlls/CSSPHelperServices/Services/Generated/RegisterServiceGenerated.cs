/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPHelperServices.exe
 *
 * Do not edit this file.
 *
 */

using CSSPEnums;
using CSSPHelperModels;
using CSSPCultureServices.Resources;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using LoggedInServices;
using Microsoft.Extensions.Configuration;

namespace CSSPHelperServices
{
    public interface IRegisterService
    {
        ErrRes errRes { get; set; }

        bool Validate(ValidationContext validationContext);
    }
    public partial class RegisterService : IRegisterService
    {
        #region Variables
        #endregion Variables

        #region Properties
        public ErrRes errRes { get; set; } = new ErrRes();
        #endregion Properties

        #region Constructors
        public RegisterService()
        {
        }
        #endregion Constructors

        #region Functions public
        public bool Validate(ValidationContext validationContext)
        {
            Register register = validationContext.ObjectInstance as Register;

            if (string.IsNullOrWhiteSpace(register.LoginEmail))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "LoginEmail"));
            }

            if (!string.IsNullOrWhiteSpace(register.LoginEmail) && (register.LoginEmail.Length < 6 || register.LoginEmail.Length > 255))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._LengthShouldBeBetween_And_, "LoginEmail", "6", "255"));
            }

            if (string.IsNullOrWhiteSpace(register.FirstName))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "FirstName"));
            }

            if (!string.IsNullOrWhiteSpace(register.FirstName) && (register.FirstName.Length < 1 || register.FirstName.Length > 100))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._LengthShouldBeBetween_And_, "FirstName", "1", "100"));
            }

            if (!string.IsNullOrWhiteSpace(register.Initial) && register.Initial.Length > 50)
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "Initial", "50"));
            }

            if (string.IsNullOrWhiteSpace(register.LastName))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "LastName"));
            }

            if (!string.IsNullOrWhiteSpace(register.LastName) && (register.LastName.Length < 1 || register.LastName.Length > 100))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._LengthShouldBeBetween_And_, "LastName", "1", "100"));
            }

            if (string.IsNullOrWhiteSpace(register.WebName))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "WebName"));
            }

            if (!string.IsNullOrWhiteSpace(register.WebName) && (register.WebName.Length < 1 || register.WebName.Length > 100))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._LengthShouldBeBetween_And_, "WebName", "1", "100"));
            }

            if (string.IsNullOrWhiteSpace(register.Password))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "Password"));
            }

            if (!string.IsNullOrWhiteSpace(register.Password) && (register.Password.Length < 6 || register.Password.Length > 100))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._LengthShouldBeBetween_And_, "Password", "6", "100"));
            }

            if (string.IsNullOrWhiteSpace(register.ConfirmPassword))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._IsRequired, "ConfirmPassword"));
            }

            if (!string.IsNullOrWhiteSpace(register.ConfirmPassword) && (register.ConfirmPassword.Length < 6 || register.ConfirmPassword.Length > 100))
            {
                errRes.ErrList.Add(string.Format(CSSPCultureServicesRes._LengthShouldBeBetween_And_, "ConfirmPassword", "6", "100"));
            }

            return errRes.ErrList.Count == 0 ? true : false;
        }
        #endregion Functions public
    }

}
