/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPHelperServices.exe
 *
 * Do not edit this file.
 *
 */

using CSSPEnums;
using CSSPHelperModels;
using CSSPCultureServices.Resources;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text.RegularExpressions;
using System.Threading.Tasks;
using LoggedInServices;
using Microsoft.Extensions.Configuration;

namespace CSSPHelperServices
{
    public interface IVarNameAndValueService
    {
        IEnumerable<ValidationResult> Validate(ValidationContext validationContext);
    }
    public partial class VarNameAndValueService : IVarNameAndValueService
    {
        #region Variables
        #endregion Variables

        #region Properties
        #endregion Properties

        #region Constructors
        public VarNameAndValueService()
        {
        }
        #endregion Constructors

        #region Functions public
        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            VarNameAndValue varNameAndValue = validationContext.ObjectInstance as VarNameAndValue;

            if (string.IsNullOrWhiteSpace(varNameAndValue.VariableName))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "VariableName"), new[] { "VariableName" });
            }

            if (!string.IsNullOrWhiteSpace(varNameAndValue.VariableName) && varNameAndValue.VariableName.Length > 200)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "VariableName", "200"), new[] { "VariableName" });
            }

            if (string.IsNullOrWhiteSpace(varNameAndValue.VariableValue))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "VariableValue"), new[] { "VariableValue" });
            }

            if (!string.IsNullOrWhiteSpace(varNameAndValue.VariableValue) && varNameAndValue.VariableValue.Length > 300)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "VariableValue", "300"), new[] { "VariableValue" });
            }

        }
        #endregion Functions public
    }

}
