/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\GenerateCSSPSQLiteServices.exe
 *
 * Do not edit this file.
 *
 */

using Microsoft.Data.Sqlite;
using Microsoft.EntityFrameworkCore;
using System.Threading.Tasks;

namespace CSSPSQLiteServices
{
    public partial class CSSPSQLiteService : ICSSPSQLiteService
    {
        private async Task<bool> CreateTableBuilder(string tableName, bool DoSearch)
        {
            string CreateTable = "";
            switch (tableName)
            {
                case "LocalAddresses":
                    CreateTable = "CREATE TABLE LocalAddresses (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "AddressID INTEGER  NOT NULL  UNIQUE , " +
                    "AddressTVItemID INTEGER  NOT NULL  , " +
                    "AddressType INTEGER  NOT NULL  , " +
                    "CountryTVItemID INTEGER  NOT NULL  , " +
                    "ProvinceTVItemID INTEGER  NOT NULL  , " +
                    "MunicipalityTVItemID INTEGER  NOT NULL  , " +
                    "StreetName TEXT   , " +
                    "StreetNumber TEXT   , " +
                    "StreetType INTEGER   , " +
                    "PostalCode TEXT   , " +
                    "GoogleAddressText TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalAppErrLogs":
                    CreateTable = "CREATE TABLE LocalAppErrLogs (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "AppErrLogID INTEGER  NOT NULL  UNIQUE , " +
                    "Tag TEXT  NOT NULL  , " +
                    "LineNumber INTEGER  NOT NULL  , " +
                    "Source TEXT  NOT NULL  , " +
                    "Message TEXT  NOT NULL  , " +
                    "DateTime_UTC TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalAppTasks":
                    CreateTable = "CREATE TABLE LocalAppTasks (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "AppTaskID INTEGER  NOT NULL  UNIQUE , " +
                    "TVItemID INTEGER  NOT NULL  , " +
                    "TVItemID2 INTEGER  NOT NULL  , " +
                    "AppTaskCommand INTEGER  NOT NULL  , " +
                    "AppTaskStatus INTEGER  NOT NULL  , " +
                    "PercentCompleted INTEGER  NOT NULL  , " +
                    "Parameters TEXT  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "StartDateTime_UTC TEXT  NOT NULL  , " +
                    "EndDateTime_UTC TEXT   , " +
                    "EstimatedLength_second INTEGER   , " +
                    "RemainingTime_second INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalAppTaskLanguages":
                    CreateTable = "CREATE TABLE LocalAppTaskLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "AppTaskLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "AppTaskID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "StatusText TEXT   , " +
                    "ErrorText TEXT   , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalAspNetRoles":
                    CreateTable = "CREATE TABLE LocalAspNetRoles (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "Id TEXT  NOT NULL  UNIQUE , " +
                    "Name TEXT   , " +
                    "NormalizeName TEXT   , " +
                    "ConcurrencyStamp TEXT   )";
                    break;
                case "LocalAspNetRoleClaims":
                    CreateTable = "CREATE TABLE LocalAspNetRoleClaims (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "Id TEXT  NOT NULL  UNIQUE , " +
                    "RoleId TEXT  NOT NULL  , " +
                    "ClaimType TEXT   , " +
                    "ClaimValue TEXT   )";
                    break;
                case "LocalAspNetUsers":
                    CreateTable = "CREATE TABLE LocalAspNetUsers (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "Id TEXT  NOT NULL  UNIQUE , " +
                    "Email TEXT   , " +
                    "EmailConfirmed INTEGER  NOT NULL  , " +
                    "PasswordHash TEXT   , " +
                    "SecurityStamp TEXT   , " +
                    "PhoneNumber TEXT   , " +
                    "PhoneNumberConfirmed INTEGER  NOT NULL  , " +
                    "TwoFactorEnabled INTEGER  NOT NULL  , " +
                    "LockoutEndDateUtc TEXT   , " +
                    "LockoutEnabled INTEGER  NOT NULL  , " +
                    "AccessFailedCount INTEGER  NOT NULL  , " +
                    "UserName TEXT  NOT NULL  , " +
                    "NormalizedUserName TEXT   , " +
                    "NormalizedEmail TEXT   , " +
                    "ConcurrencyStamp TEXT   , " +
                    "LockoutEnd TEXT   )";
                    break;
                case "LocalAspNetUserClaims":
                    CreateTable = "CREATE TABLE LocalAspNetUserClaims (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "Id INTEGER  NOT NULL  UNIQUE , " +
                    "UserId TEXT  NOT NULL  , " +
                    "ClaimType TEXT   , " +
                    "ClaimValue TEXT   )";
                    break;
                case "LocalAspNetUserLogins":
                    CreateTable = "CREATE TABLE LocalAspNetUserLogins (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "LoginProvider TEXT  NOT NULL  , " +
                    "ProviderKey TEXT  NOT NULL  , " +
                    "ProviderDisplayName TEXT   , " +
                    "UserId TEXT  NOT NULL  )";
                    break;
                case "LocalAspNetUserRoles":
                    CreateTable = "CREATE TABLE LocalAspNetUserRoles (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "UserId TEXT  NOT NULL  , " +
                    "RoleId TEXT  NOT NULL  )";
                    break;
                case "LocalAspNetUserTokens":
                    CreateTable = "CREATE TABLE LocalAspNetUserTokens (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "UserId TEXT  NOT NULL  , " +
                    "LoginProvider TEXT  NOT NULL  , " +
                    "Name TEXT  NOT NULL  , " +
                    "Value TEXT   )";
                    break;
                case "LocalBoxModels":
                    CreateTable = "CREATE TABLE LocalBoxModels (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "BoxModelID INTEGER  NOT NULL  UNIQUE , " +
                    "InfrastructureTVItemID INTEGER  NOT NULL  , " +
                    "Discharge_m3_day REAL  NOT NULL  , " +
                    "Depth_m REAL  NOT NULL  , " +
                    "Temperature_C REAL  NOT NULL  , " +
                    "Dilution INTEGER  NOT NULL  , " +
                    "DecayRate_per_day REAL  NOT NULL  , " +
                    "FCUntreated_MPN_100ml INTEGER  NOT NULL  , " +
                    "FCPreDisinfection_MPN_100ml INTEGER  NOT NULL  , " +
                    "Concentration_MPN_100ml INTEGER  NOT NULL  , " +
                    "T90_hour REAL  NOT NULL  , " +
                    "DischargeDuration_hour REAL  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalBoxModelLanguages":
                    CreateTable = "CREATE TABLE LocalBoxModelLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "BoxModelLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "BoxModelID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "ScenarioName TEXT  NOT NULL  , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalBoxModelResults":
                    CreateTable = "CREATE TABLE LocalBoxModelResults (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "BoxModelResultID INTEGER  NOT NULL  UNIQUE , " +
                    "BoxModelID INTEGER  NOT NULL  , " +
                    "BoxModelResultType INTEGER  NOT NULL  , " +
                    "Volume_m3 REAL  NOT NULL  , " +
                    "Surface_m2 REAL  NOT NULL  , " +
                    "Radius_m REAL  NOT NULL  , " +
                    "LeftSideDiameterLineAngle_deg REAL   , " +
                    "CircleCenterLatitude REAL   , " +
                    "CircleCenterLongitude REAL   , " +
                    "FixLength INTEGER  NOT NULL  , " +
                    "FixWidth INTEGER  NOT NULL  , " +
                    "RectLength_m REAL  NOT NULL  , " +
                    "RectWidth_m REAL  NOT NULL  , " +
                    "LeftSideLineAngle_deg REAL   , " +
                    "LeftSideLineStartLatitude REAL   , " +
                    "LeftSideLineStartLongitude REAL   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalClassifications":
                    CreateTable = "CREATE TABLE LocalClassifications (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ClassificationID INTEGER  NOT NULL  UNIQUE , " +
                    "ClassificationTVItemID INTEGER  NOT NULL  , " +
                    "ClassificationType INTEGER  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalClimateDataValues":
                    CreateTable = "CREATE TABLE LocalClimateDataValues (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ClimateDataValueID INTEGER  NOT NULL  UNIQUE , " +
                    "ClimateSiteID INTEGER  NOT NULL  , " +
                    "DateTime_Local TEXT  NOT NULL  , " +
                    "Keep INTEGER  NOT NULL  , " +
                    "StorageDataType INTEGER  NOT NULL  , " +
                    "HasBeenRead INTEGER  NOT NULL  , " +
                    "Snow_cm REAL   , " +
                    "Rainfall_mm REAL   , " +
                    "RainfallEntered_mm REAL   , " +
                    "TotalPrecip_mm_cm REAL   , " +
                    "MaxTemp_C REAL   , " +
                    "MinTemp_C REAL   , " +
                    "HeatDegDays_C REAL   , " +
                    "CoolDegDays_C REAL   , " +
                    "SnowOnGround_cm REAL   , " +
                    "DirMaxGust_0North REAL   , " +
                    "SpdMaxGust_kmh REAL   , " +
                    "HourlyValues TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalClimateSites":
                    CreateTable = "CREATE TABLE LocalClimateSites (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ClimateSiteID INTEGER  NOT NULL  UNIQUE , " +
                    "ClimateSiteTVItemID INTEGER  NOT NULL  , " +
                    "ECDBID INTEGER   , " +
                    "ClimateSiteName TEXT  NOT NULL  , " +
                    "Province TEXT  NOT NULL  , " +
                    "Elevation_m REAL   , " +
                    "ClimateID TEXT   , " +
                    "WMOID INTEGER   , " +
                    "TCID TEXT   , " +
                    "IsQuebecSite INTEGER   , " +
                    "IsCoCoRaHS INTEGER   , " +
                    "TimeOffset_hour REAL   , " +
                    "File_desc TEXT   , " +
                    "HourlyStartDate_Local TEXT   , " +
                    "HourlyEndDate_Local TEXT   , " +
                    "HourlyNow INTEGER   , " +
                    "DailyStartDate_Local TEXT   , " +
                    "DailyEndDate_Local TEXT   , " +
                    "DailyNow INTEGER   , " +
                    "MonthlyStartDate_Local TEXT   , " +
                    "MonthlyEndDate_Local TEXT   , " +
                    "MonthlyNow INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalContacts":
                    CreateTable = "CREATE TABLE LocalContacts (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ContactID INTEGER  NOT NULL  UNIQUE , " +
                    "Id TEXT  NOT NULL  , " +
                    "ContactTVItemID INTEGER  NOT NULL  , " +
                    "LoginEmail TEXT  NOT NULL  , " +
                    "FirstName TEXT  NOT NULL  , " +
                    "LastName TEXT  NOT NULL  , " +
                    "Initial TEXT   , " +
                    "WebName TEXT  NOT NULL  , " +
                    "ContactTitle INTEGER   , " +
                    "IsAdmin INTEGER  NOT NULL  , " +
                    "EmailValidated INTEGER  NOT NULL  , " +
                    "Disabled INTEGER  NOT NULL  , " +
                    "IsNew INTEGER  NOT NULL  , " +
                    "SamplingPlanner_ProvincesTVItemID TEXT   , " +
                    "Token TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalContactPreferences":
                    CreateTable = "CREATE TABLE LocalContactPreferences (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ContactPreferenceID INTEGER  NOT NULL  UNIQUE , " +
                    "ContactID INTEGER  NOT NULL  , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "MarkerSize INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalContactShortcuts":
                    CreateTable = "CREATE TABLE LocalContactShortcuts (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ContactShortcutID INTEGER  NOT NULL  UNIQUE , " +
                    "ContactID INTEGER  NOT NULL  , " +
                    "ShortCutText TEXT  NOT NULL  , " +
                    "ShortCutAddress TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalDeviceCodes":
                    CreateTable = "CREATE TABLE LocalDeviceCodes (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "UserCode TEXT  NOT NULL  UNIQUE , " +
                    "DeviceCode_ TEXT  NOT NULL  , " +
                    "SubjectId TEXT   , " +
                    "ClientId TEXT  NOT NULL  , " +
                    "CreationTime TEXT  NOT NULL  , " +
                    "Expiration TEXT  NOT NULL  , " +
                    "Data TEXT  NOT NULL  )";
                    break;
                case "LocalDocTemplates":
                    CreateTable = "CREATE TABLE LocalDocTemplates (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "DocTemplateID INTEGER  NOT NULL  UNIQUE , " +
                    "Language INTEGER  NOT NULL  , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "TVFileTVItemID INTEGER  NOT NULL  , " +
                    "FileName TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalDrogueRuns":
                    CreateTable = "CREATE TABLE LocalDrogueRuns (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "DrogueRunID INTEGER  NOT NULL  UNIQUE , " +
                    "SubsectorTVItemID INTEGER  NOT NULL  , " +
                    "DrogueNumber INTEGER  NOT NULL  , " +
                    "DrogueType INTEGER  NOT NULL  , " +
                    "RunStartDateTime TEXT  NOT NULL  , " +
                    "IsRisingTide INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalDrogueRunPositions":
                    CreateTable = "CREATE TABLE LocalDrogueRunPositions (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "DrogueRunPositionID INTEGER  NOT NULL  UNIQUE , " +
                    "DrogueRunID INTEGER  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "StepLat REAL  NOT NULL  , " +
                    "StepLng REAL  NOT NULL  , " +
                    "StepDateTime_Local TEXT  NOT NULL  , " +
                    "CalculatedSpeed_m_s REAL  NOT NULL  , " +
                    "CalculatedDirection_deg REAL  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalEmails":
                    CreateTable = "CREATE TABLE LocalEmails (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "EmailID INTEGER  NOT NULL  UNIQUE , " +
                    "EmailTVItemID INTEGER  NOT NULL  , " +
                    "EmailAddress TEXT  NOT NULL  , " +
                    "EmailType INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalEmailDistributionLists":
                    CreateTable = "CREATE TABLE LocalEmailDistributionLists (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "EmailDistributionListID INTEGER  NOT NULL  UNIQUE , " +
                    "ParentTVItemID INTEGER  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalEmailDistributionListContacts":
                    CreateTable = "CREATE TABLE LocalEmailDistributionListContacts (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "EmailDistributionListContactID INTEGER  NOT NULL  UNIQUE , " +
                    "EmailDistributionListID INTEGER  NOT NULL  , " +
                    "IsCC INTEGER  NOT NULL  , " +
                    "Name TEXT  NOT NULL  , " +
                    "Email TEXT  NOT NULL  , " +
                    "CMPRainfallSeasonal INTEGER  NOT NULL  , " +
                    "CMPWastewater INTEGER  NOT NULL  , " +
                    "EmergencyWeather INTEGER  NOT NULL  , " +
                    "EmergencyWastewater INTEGER  NOT NULL  , " +
                    "ReopeningAllTypes INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalEmailDistributionListContactLanguages":
                    CreateTable = "CREATE TABLE LocalEmailDistributionListContactLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "EmailDistributionListContactLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "EmailDistributionListContactID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "Agency TEXT  NOT NULL  , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalEmailDistributionListLanguages":
                    CreateTable = "CREATE TABLE LocalEmailDistributionListLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "EmailDistributionListLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "EmailDistributionListID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "EmailListName TEXT  NOT NULL  , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalHelpDocs":
                    CreateTable = "CREATE TABLE LocalHelpDocs (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "HelpDocID INTEGER  NOT NULL  UNIQUE , " +
                    "DocKey TEXT  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "DocHTMLText TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalHydrometricDataValues":
                    CreateTable = "CREATE TABLE LocalHydrometricDataValues (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "HydrometricDataValueID INTEGER  NOT NULL  UNIQUE , " +
                    "HydrometricSiteID INTEGER  NOT NULL  , " +
                    "DateTime_Local TEXT  NOT NULL  , " +
                    "Keep INTEGER  NOT NULL  , " +
                    "StorageDataType INTEGER  NOT NULL  , " +
                    "HasBeenRead INTEGER  NOT NULL  , " +
                    "Discharge_m3_s REAL   , " +
                    "DischargeEntered_m3_s REAL   , " +
                    "Level_m REAL   , " +
                    "HourlyValues TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalHydrometricSites":
                    CreateTable = "CREATE TABLE LocalHydrometricSites (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "HydrometricSiteID INTEGER  NOT NULL  UNIQUE , " +
                    "HydrometricSiteTVItemID INTEGER  NOT NULL  , " +
                    "FedSiteNumber TEXT   , " +
                    "QuebecSiteNumber TEXT   , " +
                    "HydrometricSiteName TEXT  NOT NULL  , " +
                    "Description TEXT   , " +
                    "Province TEXT  NOT NULL  , " +
                    "Elevation_m REAL   , " +
                    "StartDate_Local TEXT   , " +
                    "EndDate_Local TEXT   , " +
                    "TimeOffset_hour REAL   , " +
                    "DrainageArea_km2 REAL   , " +
                    "IsNatural INTEGER   , " +
                    "IsActive INTEGER   , " +
                    "Sediment INTEGER   , " +
                    "RHBN INTEGER   , " +
                    "RealTime INTEGER   , " +
                    "HasDischarge INTEGER   , " +
                    "HasLevel INTEGER   , " +
                    "HasRatingCurve INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalInfrastructures":
                    CreateTable = "CREATE TABLE LocalInfrastructures (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "InfrastructureID INTEGER  NOT NULL  UNIQUE , " +
                    "InfrastructureTVItemID INTEGER  NOT NULL  , " +
                    "PrismID INTEGER   , " +
                    "TPID INTEGER   , " +
                    "LSID INTEGER   , " +
                    "SiteID INTEGER   , " +
                    "Site INTEGER   , " +
                    "InfrastructureCategory TEXT   , " +
                    "InfrastructureType INTEGER   , " +
                    "FacilityType INTEGER   , " +
                    "HasBackupPower INTEGER   , " +
                    "IsMechanicallyAerated INTEGER   , " +
                    "NumberOfCells INTEGER   , " +
                    "NumberOfAeratedCells INTEGER   , " +
                    "AerationType INTEGER   , " +
                    "PreliminaryTreatmentType INTEGER   , " +
                    "PrimaryTreatmentType INTEGER   , " +
                    "SecondaryTreatmentType INTEGER   , " +
                    "TertiaryTreatmentType INTEGER   , " +
                    "TreatmentType INTEGER   , " +
                    "DisinfectionType INTEGER   , " +
                    "CollectionSystemType INTEGER   , " +
                    "AlarmSystemType INTEGER   , " +
                    "DesignFlow_m3_day REAL   , " +
                    "AverageFlow_m3_day REAL   , " +
                    "PeakFlow_m3_day REAL   , " +
                    "PopServed INTEGER   , " +
                    "CanOverflow INTEGER   , " +
                    "ValveType INTEGER   , " +
                    "PercFlowOfTotal REAL   , " +
                    "TimeOffset_hour REAL   , " +
                    "TempCatchAllRemoveLater TEXT   , " +
                    "AverageDepth_m REAL   , " +
                    "NumberOfPorts INTEGER   , " +
                    "PortDiameter_m REAL   , " +
                    "PortSpacing_m REAL   , " +
                    "PortElevation_m REAL   , " +
                    "VerticalAngle_deg REAL   , " +
                    "HorizontalAngle_deg REAL   , " +
                    "DecayRate_per_day REAL   , " +
                    "NearFieldVelocity_m_s REAL   , " +
                    "FarFieldVelocity_m_s REAL   , " +
                    "ReceivingWaterSalinity_PSU REAL   , " +
                    "ReceivingWaterTemperature_C REAL   , " +
                    "ReceivingWater_MPN_per_100ml INTEGER   , " +
                    "DistanceFromShore_m REAL   , " +
                    "SeeOtherMunicipalityTVItemID INTEGER   , " +
                    "CivicAddressTVItemID INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalInfrastructureLanguages":
                    CreateTable = "CREATE TABLE LocalInfrastructureLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "InfrastructureLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "InfrastructureID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "Comment TEXT  NOT NULL  , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalLabSheets":
                    CreateTable = "CREATE TABLE LocalLabSheets (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "LabSheetID INTEGER  NOT NULL  UNIQUE , " +
                    "OtherServerLabSheetID INTEGER  NOT NULL  , " +
                    "SamplingPlanID INTEGER  NOT NULL  , " +
                    "SamplingPlanName TEXT  NOT NULL  , " +
                    "Year INTEGER  NOT NULL  , " +
                    "Month INTEGER  NOT NULL  , " +
                    "Day INTEGER  NOT NULL  , " +
                    "RunNumber INTEGER  NOT NULL  , " +
                    "SubsectorTVItemID INTEGER  NOT NULL  , " +
                    "MWQMRunTVItemID INTEGER   , " +
                    "SamplingPlanType INTEGER  NOT NULL  , " +
                    "SampleType INTEGER  NOT NULL  , " +
                    "LabSheetType INTEGER  NOT NULL  , " +
                    "LabSheetStatus INTEGER  NOT NULL  , " +
                    "FileName TEXT  NOT NULL  , " +
                    "FileLastModifiedDate_Local TEXT  NOT NULL  , " +
                    "FileContent TEXT  NOT NULL  , " +
                    "AcceptedOrRejectedByContactTVItemID INTEGER   , " +
                    "AcceptedOrRejectedDateTime TEXT   , " +
                    "RejectReason TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalLabSheetDetails":
                    CreateTable = "CREATE TABLE LocalLabSheetDetails (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "LabSheetDetailID INTEGER  NOT NULL  UNIQUE , " +
                    "LabSheetID INTEGER  NOT NULL  , " +
                    "SamplingPlanID INTEGER  NOT NULL  , " +
                    "SubsectorTVItemID INTEGER  NOT NULL  , " +
                    "Version INTEGER  NOT NULL  , " +
                    "RunDate TEXT  NOT NULL  , " +
                    "Tides TEXT  NOT NULL  , " +
                    "SampleCrewInitials TEXT   , " +
                    "WaterBathCount INTEGER   , " +
                    "IncubationBath1StartTime TEXT   , " +
                    "IncubationBath2StartTime TEXT   , " +
                    "IncubationBath3StartTime TEXT   , " +
                    "IncubationBath1EndTime TEXT   , " +
                    "IncubationBath2EndTime TEXT   , " +
                    "IncubationBath3EndTime TEXT   , " +
                    "IncubationBath1TimeCalculated_minutes INTEGER   , " +
                    "IncubationBath2TimeCalculated_minutes INTEGER   , " +
                    "IncubationBath3TimeCalculated_minutes INTEGER   , " +
                    "WaterBath1 TEXT   , " +
                    "WaterBath2 TEXT   , " +
                    "WaterBath3 TEXT   , " +
                    "TCField1 REAL   , " +
                    "TCLab1 REAL   , " +
                    "TCField2 REAL   , " +
                    "TCLab2 REAL   , " +
                    "TCFirst REAL   , " +
                    "TCAverage REAL   , " +
                    "ControlLot TEXT   , " +
                    "Positive35 TEXT   , " +
                    "NonTarget35 TEXT   , " +
                    "Negative35 TEXT   , " +
                    "Bath1Positive44_5 TEXT   , " +
                    "Bath2Positive44_5 TEXT   , " +
                    "Bath3Positive44_5 TEXT   , " +
                    "Bath1NonTarget44_5 TEXT   , " +
                    "Bath2NonTarget44_5 TEXT   , " +
                    "Bath3NonTarget44_5 TEXT   , " +
                    "Bath1Negative44_5 TEXT   , " +
                    "Bath2Negative44_5 TEXT   , " +
                    "Bath3Negative44_5 TEXT   , " +
                    "Blank35 TEXT   , " +
                    "Bath1Blank44_5 TEXT   , " +
                    "Bath2Blank44_5 TEXT   , " +
                    "Bath3Blank44_5 TEXT   , " +
                    "Lot35 TEXT   , " +
                    "Lot44_5 TEXT   , " +
                    "Weather TEXT   , " +
                    "RunComment TEXT   , " +
                    "RunWeatherComment TEXT   , " +
                    "SampleBottleLotNumber TEXT   , " +
                    "SalinitiesReadBy TEXT   , " +
                    "SalinitiesReadDate TEXT   , " +
                    "ResultsReadBy TEXT   , " +
                    "ResultsReadDate TEXT   , " +
                    "ResultsRecordedBy TEXT   , " +
                    "ResultsRecordedDate TEXT   , " +
                    "DailyDuplicateRLog REAL   , " +
                    "DailyDuplicatePrecisionCriteria REAL   , " +
                    "DailyDuplicateAcceptable INTEGER   , " +
                    "IntertechDuplicateRLog REAL   , " +
                    "IntertechDuplicatePrecisionCriteria REAL   , " +
                    "IntertechDuplicateAcceptable INTEGER   , " +
                    "IntertechReadAcceptable INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalLabSheetTubeMPNDetails":
                    CreateTable = "CREATE TABLE LocalLabSheetTubeMPNDetails (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "LabSheetTubeMPNDetailID INTEGER  NOT NULL  UNIQUE , " +
                    "LabSheetDetailID INTEGER  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "MWQMSiteTVItemID INTEGER  NOT NULL  , " +
                    "SampleDateTime TEXT   , " +
                    "MPN INTEGER   , " +
                    "Tube10 INTEGER   , " +
                    "Tube1_0 INTEGER   , " +
                    "Tube0_1 INTEGER   , " +
                    "Salinity REAL   , " +
                    "Temperature REAL   , " +
                    "ProcessedBy TEXT   , " +
                    "SampleType INTEGER  NOT NULL  , " +
                    "SiteComment TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalLogs":
                    CreateTable = "CREATE TABLE LocalLogs (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "LogID INTEGER  NOT NULL  UNIQUE , " +
                    "TableName TEXT  NOT NULL  , " +
                    "ID INTEGER  NOT NULL  , " +
                    "LogCommand INTEGER  NOT NULL  , " +
                    "Information TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMapInfos":
                    CreateTable = "CREATE TABLE LocalMapInfos (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MapInfoID INTEGER  NOT NULL  UNIQUE , " +
                    "TVItemID INTEGER  NOT NULL  , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "LatMin REAL  NOT NULL  , " +
                    "LatMax REAL  NOT NULL  , " +
                    "LngMin REAL  NOT NULL  , " +
                    "LngMax REAL  NOT NULL  , " +
                    "MapInfoDrawType INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMapInfoPoints":
                    CreateTable = "CREATE TABLE LocalMapInfoPoints (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MapInfoPointID INTEGER  NOT NULL  UNIQUE , " +
                    "MapInfoID INTEGER  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "Lat REAL  NOT NULL  , " +
                    "Lng REAL  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMikeBoundaryConditions":
                    CreateTable = "CREATE TABLE LocalMikeBoundaryConditions (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MikeBoundaryConditionID INTEGER  NOT NULL  UNIQUE , " +
                    "MikeBoundaryConditionTVItemID INTEGER  NOT NULL  , " +
                    "MikeBoundaryConditionCode TEXT  NOT NULL  , " +
                    "MikeBoundaryConditionName TEXT  NOT NULL  , " +
                    "MikeBoundaryConditionLength_m REAL  NOT NULL  , " +
                    "MikeBoundaryConditionFormat TEXT  NOT NULL  , " +
                    "MikeBoundaryConditionLevelOrVelocity INTEGER  NOT NULL  , " +
                    "WebTideDataSet INTEGER  NOT NULL  , " +
                    "NumberOfWebTideNodes INTEGER  NOT NULL  , " +
                    "WebTideDataFromStartToEndDate TEXT  NOT NULL  , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMikeScenarios":
                    CreateTable = "CREATE TABLE LocalMikeScenarios (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MikeScenarioID INTEGER  NOT NULL  UNIQUE , " +
                    "MikeScenarioTVItemID INTEGER  NOT NULL  , " +
                    "ParentMikeScenarioID INTEGER   , " +
                    "ScenarioStatus INTEGER  NOT NULL  , " +
                    "ErrorInfo TEXT   , " +
                    "MikeScenarioStartDateTime_Local TEXT  NOT NULL  , " +
                    "MikeScenarioEndDateTime_Local TEXT  NOT NULL  , " +
                    "MikeScenarioStartExecutionDateTime_Local TEXT   , " +
                    "MikeScenarioExecutionTime_min REAL   , " +
                    "WindSpeed_km_h REAL  NOT NULL  , " +
                    "WindDirection_deg REAL  NOT NULL  , " +
                    "DecayFactor_per_day REAL  NOT NULL  , " +
                    "DecayIsConstant INTEGER  NOT NULL  , " +
                    "DecayFactorAmplitude REAL  NOT NULL  , " +
                    "ResultFrequency_min INTEGER  NOT NULL  , " +
                    "AmbientTemperature_C REAL  NOT NULL  , " +
                    "AmbientSalinity_PSU REAL  NOT NULL  , " +
                    "GenerateDecouplingFiles INTEGER   , " +
                    "UseDecouplingFiles INTEGER   , " +
                    "UseSalinityAndTemperatureInitialConditionFromTVFileTVItemID INTEGER   , " +
                    "ForSimulatingMWQMRunTVItemID INTEGER   , " +
                    "ManningNumber REAL  NOT NULL  , " +
                    "NumberOfElements INTEGER   , " +
                    "NumberOfTimeSteps INTEGER   , " +
                    "NumberOfSigmaLayers INTEGER   , " +
                    "NumberOfZLayers INTEGER   , " +
                    "NumberOfHydroOutputParameters INTEGER   , " +
                    "NumberOfTransOutputParameters INTEGER   , " +
                    "EstimatedHydroFileSize INTEGER   , " +
                    "EstimatedTransFileSize INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMikeScenarioResults":
                    CreateTable = "CREATE TABLE LocalMikeScenarioResults (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MikeScenarioResultID INTEGER  NOT NULL  UNIQUE , " +
                    "MikeScenarioTVItemID INTEGER  NOT NULL  , " +
                    "MikeResultsJSON TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMikeSources":
                    CreateTable = "CREATE TABLE LocalMikeSources (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MikeSourceID INTEGER  NOT NULL  UNIQUE , " +
                    "MikeSourceTVItemID INTEGER  NOT NULL  , " +
                    "IsContinuous INTEGER  NOT NULL  , " +
                    "Include INTEGER  NOT NULL  , " +
                    "IsRiver INTEGER  NOT NULL  , " +
                    "UseHydrometric INTEGER  NOT NULL  , " +
                    "HydrometricTVItemID INTEGER   , " +
                    "DrainageArea_km2 REAL   , " +
                    "Factor REAL   , " +
                    "SourceNumberString TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMikeSourceStartEnds":
                    CreateTable = "CREATE TABLE LocalMikeSourceStartEnds (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MikeSourceStartEndID INTEGER  NOT NULL  UNIQUE , " +
                    "MikeSourceID INTEGER  NOT NULL  , " +
                    "StartDateAndTime_Local TEXT  NOT NULL  , " +
                    "EndDateAndTime_Local TEXT  NOT NULL  , " +
                    "SourceFlowStart_m3_day REAL  NOT NULL  , " +
                    "SourceFlowEnd_m3_day REAL  NOT NULL  , " +
                    "SourcePollutionStart_MPN_100ml INTEGER  NOT NULL  , " +
                    "SourcePollutionEnd_MPN_100ml INTEGER  NOT NULL  , " +
                    "SourceTemperatureStart_C REAL  NOT NULL  , " +
                    "SourceTemperatureEnd_C REAL  NOT NULL  , " +
                    "SourceSalinityStart_PSU REAL  NOT NULL  , " +
                    "SourceSalinityEnd_PSU REAL  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMAnalysisReportParameters":
                    CreateTable = "CREATE TABLE LocalMWQMAnalysisReportParameters (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMAnalysisReportParameterID INTEGER  NOT NULL  UNIQUE , " +
                    "SubsectorTVItemID INTEGER  NOT NULL  , " +
                    "AnalysisName TEXT  NOT NULL  , " +
                    "AnalysisReportYear INTEGER   , " +
                    "StartDate TEXT  NOT NULL  , " +
                    "EndDate TEXT  NOT NULL  , " +
                    "AnalysisCalculationType INTEGER  NOT NULL  , " +
                    "NumberOfRuns INTEGER  NOT NULL  , " +
                    "FullYear INTEGER  NOT NULL  , " +
                    "SalinityHighlightDeviationFromAverage REAL  NOT NULL  , " +
                    "ShortRangeNumberOfDays INTEGER  NOT NULL  , " +
                    "MidRangeNumberOfDays INTEGER  NOT NULL  , " +
                    "DryLimit24h INTEGER  NOT NULL  , " +
                    "DryLimit48h INTEGER  NOT NULL  , " +
                    "DryLimit72h INTEGER  NOT NULL  , " +
                    "DryLimit96h INTEGER  NOT NULL  , " +
                    "WetLimit24h INTEGER  NOT NULL  , " +
                    "WetLimit48h INTEGER  NOT NULL  , " +
                    "WetLimit72h INTEGER  NOT NULL  , " +
                    "WetLimit96h INTEGER  NOT NULL  , " +
                    "RunsToOmit TEXT  NOT NULL  , " +
                    "ShowDataTypes TEXT   , " +
                    "ExcelTVFileTVItemID INTEGER   , " +
                    "Command INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMLookupMPNs":
                    CreateTable = "CREATE TABLE LocalMWQMLookupMPNs (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMLookupMPNID INTEGER  NOT NULL  UNIQUE , " +
                    "Tubes10 INTEGER  NOT NULL  , " +
                    "Tubes1 INTEGER  NOT NULL  , " +
                    "Tubes01 INTEGER  NOT NULL  , " +
                    "MPN_100ml INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMRuns":
                    CreateTable = "CREATE TABLE LocalMWQMRuns (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMRunID INTEGER  NOT NULL  UNIQUE , " +
                    "SubsectorTVItemID INTEGER  NOT NULL  , " +
                    "MWQMRunTVItemID INTEGER  NOT NULL  , " +
                    "RunSampleType INTEGER  NOT NULL  , " +
                    "DateTime_Local TEXT  NOT NULL  , " +
                    "RunNumber INTEGER  NOT NULL  , " +
                    "StartDateTime_Local TEXT   , " +
                    "EndDateTime_Local TEXT   , " +
                    "LabReceivedDateTime_Local TEXT   , " +
                    "TemperatureControl1_C REAL   , " +
                    "TemperatureControl2_C REAL   , " +
                    "SeaStateAtStart_BeaufortScale INTEGER   , " +
                    "SeaStateAtEnd_BeaufortScale INTEGER   , " +
                    "WaterLevelAtBrook_m REAL   , " +
                    "WaveHightAtStart_m REAL   , " +
                    "WaveHightAtEnd_m REAL   , " +
                    "SampleCrewInitials TEXT   , " +
                    "AnalyzeMethod INTEGER   , " +
                    "SampleMatrix INTEGER   , " +
                    "Laboratory INTEGER   , " +
                    "SampleStatus INTEGER   , " +
                    "LabSampleApprovalContactTVItemID INTEGER   , " +
                    "LabAnalyzeBath1IncubationStartDateTime_Local TEXT   , " +
                    "LabAnalyzeBath2IncubationStartDateTime_Local TEXT   , " +
                    "LabAnalyzeBath3IncubationStartDateTime_Local TEXT   , " +
                    "LabRunSampleApprovalDateTime_Local TEXT   , " +
                    "Tide_Start INTEGER   , " +
                    "Tide_End INTEGER   , " +
                    "RainDay0_mm REAL   , " +
                    "RainDay1_mm REAL   , " +
                    "RainDay2_mm REAL   , " +
                    "RainDay3_mm REAL   , " +
                    "RainDay4_mm REAL   , " +
                    "RainDay5_mm REAL   , " +
                    "RainDay6_mm REAL   , " +
                    "RainDay7_mm REAL   , " +
                    "RainDay8_mm REAL   , " +
                    "RainDay9_mm REAL   , " +
                    "RainDay10_mm REAL   , " +
                    "RemoveFromStat INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMRunLanguages":
                    CreateTable = "CREATE TABLE LocalMWQMRunLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMRunLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "MWQMRunID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "RunComment TEXT  NOT NULL  , " +
                    "TranslationStatusRunComment INTEGER  NOT NULL  , " +
                    "RunWeatherComment TEXT  NOT NULL  , " +
                    "TranslationStatusRunWeatherComment INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMSamples":
                    CreateTable = "CREATE TABLE LocalMWQMSamples (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMSampleID INTEGER  NOT NULL  UNIQUE , " +
                    "MWQMSiteTVItemID INTEGER  NOT NULL  , " +
                    "MWQMRunTVItemID INTEGER  NOT NULL  , " +
                    "SampleDateTime_Local TEXT  NOT NULL  , " +
                    "TimeText TEXT   , " +
                    "Depth_m REAL   , " +
                    "FecCol_MPN_100ml INTEGER  NOT NULL  , " +
                    "Salinity_PPT REAL   , " +
                    "WaterTemp_C REAL   , " +
                    "PH REAL   , " +
                    "SampleTypesText TEXT  NOT NULL  , " +
                    "SampleType_old INTEGER   , " +
                    "Tube_10 INTEGER   , " +
                    "Tube_1_0 INTEGER   , " +
                    "Tube_0_1 INTEGER   , " +
                    "ProcessedBy TEXT   , " +
                    "UseForOpenData INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMSampleLanguages":
                    CreateTable = "CREATE TABLE LocalMWQMSampleLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMSampleLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "MWQMSampleID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "MWQMSampleNote TEXT  NOT NULL  , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMSites":
                    CreateTable = "CREATE TABLE LocalMWQMSites (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMSiteID INTEGER  NOT NULL  UNIQUE , " +
                    "MWQMSiteTVItemID INTEGER  NOT NULL  , " +
                    "MWQMSiteNumber TEXT  NOT NULL  , " +
                    "MWQMSiteDescription TEXT  NOT NULL  , " +
                    "MWQMSiteLatestClassification INTEGER  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMSiteStartEndDates":
                    CreateTable = "CREATE TABLE LocalMWQMSiteStartEndDates (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMSiteStartEndDateID INTEGER  NOT NULL  UNIQUE , " +
                    "MWQMSiteTVItemID INTEGER  NOT NULL  , " +
                    "StartDate TEXT  NOT NULL  , " +
                    "EndDate TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMSubsectors":
                    CreateTable = "CREATE TABLE LocalMWQMSubsectors (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMSubsectorID INTEGER  NOT NULL  UNIQUE , " +
                    "MWQMSubsectorTVItemID INTEGER  NOT NULL  , " +
                    "SubsectorHistoricKey TEXT  NOT NULL  , " +
                    "TideLocationSIDText TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalMWQMSubsectorLanguages":
                    CreateTable = "CREATE TABLE LocalMWQMSubsectorLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "MWQMSubsectorLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "MWQMSubsectorID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "SubsectorDesc TEXT  NOT NULL  , " +
                    "TranslationStatusSubsectorDesc INTEGER  NOT NULL  , " +
                    "LogBook TEXT   , " +
                    "TranslationStatusLogBook INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalPersistedGrants":
                    CreateTable = "CREATE TABLE LocalPersistedGrants (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "Key TEXT  NOT NULL  UNIQUE , " +
                    "Type TEXT  NOT NULL  , " +
                    "SubjectId TEXT   , " +
                    "ClientId TEXT  NOT NULL  , " +
                    "CreationTime TEXT  NOT NULL  , " +
                    "Expiration TEXT   , " +
                    "Data TEXT  NOT NULL  )";
                    break;
                case "LocalPolSourceGroupings":
                    CreateTable = "CREATE TABLE LocalPolSourceGroupings (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "PolSourceGroupingID INTEGER  NOT NULL  UNIQUE , " +
                    "CSSPID INTEGER  NOT NULL  , " +
                    "GroupName TEXT  NOT NULL  , " +
                    "Child TEXT  NOT NULL  , " +
                    "Hide TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalPolSourceGroupingLanguages":
                    CreateTable = "CREATE TABLE LocalPolSourceGroupingLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "PolSourceGroupingLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "PolSourceGroupingID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "SourceName TEXT  NOT NULL  , " +
                    "SourceNameOrder INTEGER  NOT NULL  , " +
                    "TranslationStatusSourceName INTEGER  NOT NULL  , " +
                    "Init TEXT  NOT NULL  , " +
                    "TranslationStatusInit INTEGER  NOT NULL  , " +
                    "Description TEXT  NOT NULL  , " +
                    "TranslationStatusDescription INTEGER  NOT NULL  , " +
                    "Report TEXT  NOT NULL  , " +
                    "TranslationStatusReport INTEGER  NOT NULL  , " +
                    "Text TEXT  NOT NULL  , " +
                    "TranslationStatusText INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalPolSourceObservations":
                    CreateTable = "CREATE TABLE LocalPolSourceObservations (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "PolSourceObservationID INTEGER  NOT NULL  UNIQUE , " +
                    "PolSourceSiteID INTEGER  NOT NULL  , " +
                    "ObservationDate_Local TEXT  NOT NULL  , " +
                    "ContactTVItemID INTEGER  NOT NULL  , " +
                    "DesktopReviewed INTEGER  NOT NULL  , " +
                    "Observation_ToBeDeleted TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalPolSourceObservationIssues":
                    CreateTable = "CREATE TABLE LocalPolSourceObservationIssues (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "PolSourceObservationIssueID INTEGER  NOT NULL  UNIQUE , " +
                    "PolSourceObservationID INTEGER  NOT NULL  , " +
                    "ObservationInfo TEXT  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "ExtraComment TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalPolSourceSites":
                    CreateTable = "CREATE TABLE LocalPolSourceSites (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "PolSourceSiteID INTEGER  NOT NULL  UNIQUE , " +
                    "PolSourceSiteTVItemID INTEGER  NOT NULL  , " +
                    "Temp_Locator_CanDelete TEXT   , " +
                    "Oldsiteid INTEGER   , " +
                    "Site INTEGER   , " +
                    "SiteID INTEGER   , " +
                    "IsPointSource INTEGER  NOT NULL  , " +
                    "InactiveReason INTEGER   , " +
                    "CivicAddressTVItemID INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalPolSourceSiteEffects":
                    CreateTable = "CREATE TABLE LocalPolSourceSiteEffects (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "PolSourceSiteEffectID INTEGER  NOT NULL  UNIQUE , " +
                    "PolSourceSiteOrInfrastructureTVItemID INTEGER  NOT NULL  , " +
                    "MWQMSiteTVItemID INTEGER  NOT NULL  , " +
                    "PolSourceSiteEffectTermIDs TEXT   , " +
                    "Comments TEXT   , " +
                    "AnalysisDocumentTVItemID INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalPolSourceSiteEffectTerms":
                    CreateTable = "CREATE TABLE LocalPolSourceSiteEffectTerms (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "PolSourceSiteEffectTermID INTEGER  NOT NULL  UNIQUE , " +
                    "IsGroup INTEGER  NOT NULL  , " +
                    "UnderGroupID INTEGER   , " +
                    "EffectTermEN TEXT  NOT NULL  , " +
                    "EffectTermFR TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalRainExceedances":
                    CreateTable = "CREATE TABLE LocalRainExceedances (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "RainExceedanceID INTEGER  NOT NULL  UNIQUE , " +
                    "RainExceedanceTVItemID INTEGER  NOT NULL  , " +
                    "StartMonth INTEGER  NOT NULL  , " +
                    "StartDay INTEGER  NOT NULL  , " +
                    "EndMonth INTEGER  NOT NULL  , " +
                    "EndDay INTEGER  NOT NULL  , " +
                    "RainMaximum_mm REAL  NOT NULL  , " +
                    "StakeholdersEmailDistributionListID INTEGER   , " +
                    "OnlyStaffEmailDistributionListID INTEGER   , " +
                    "IsActive INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalRainExceedanceClimateSites":
                    CreateTable = "CREATE TABLE LocalRainExceedanceClimateSites (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "RainExceedanceClimateSiteID INTEGER  NOT NULL  UNIQUE , " +
                    "RainExceedanceTVItemID INTEGER  NOT NULL  , " +
                    "ClimateSiteTVItemID INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalRatingCurves":
                    CreateTable = "CREATE TABLE LocalRatingCurves (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "RatingCurveID INTEGER  NOT NULL  UNIQUE , " +
                    "HydrometricSiteID INTEGER  NOT NULL  , " +
                    "RatingCurveNumber TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalRatingCurveValues":
                    CreateTable = "CREATE TABLE LocalRatingCurveValues (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "RatingCurveValueID INTEGER  NOT NULL  UNIQUE , " +
                    "RatingCurveID INTEGER  NOT NULL  , " +
                    "StageValue_m REAL  NOT NULL  , " +
                    "DischargeValue_m3_s REAL  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalReportSections":
                    CreateTable = "CREATE TABLE LocalReportSections (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ReportSectionID INTEGER  NOT NULL  UNIQUE , " +
                    "ReportTypeID INTEGER  NOT NULL  , " +
                    "TVItemID INTEGER   , " +
                    "Language INTEGER   , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "IsStatic INTEGER  NOT NULL  , " +
                    "ParentReportSectionID INTEGER   , " +
                    "Year INTEGER   , " +
                    "Locked INTEGER  NOT NULL  , " +
                    "TemplateReportSectionID INTEGER   , " +
                    "ReportSectionName TEXT   , " +
                    "ReportSectionText TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalReportTypes":
                    CreateTable = "CREATE TABLE LocalReportTypes (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ReportTypeID INTEGER  NOT NULL  UNIQUE , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "FileType INTEGER  NOT NULL  , " +
                    "UniqueCode TEXT  NOT NULL  , " +
                    "Language INTEGER   , " +
                    "Name TEXT   , " +
                    "Description TEXT   , " +
                    "StartOfFileName TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalResetPasswords":
                    CreateTable = "CREATE TABLE LocalResetPasswords (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "ResetPasswordID INTEGER  NOT NULL  UNIQUE , " +
                    "Email TEXT  NOT NULL  , " +
                    "ExpireDate_Local TEXT  NOT NULL  , " +
                    "Code TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalSamplingPlans":
                    CreateTable = "CREATE TABLE LocalSamplingPlans (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "SamplingPlanID INTEGER  NOT NULL  UNIQUE , " +
                    "IsActive INTEGER  NOT NULL  , " +
                    "SamplingPlanName TEXT  NOT NULL  , " +
                    "ForGroupName TEXT  NOT NULL  , " +
                    "SampleType INTEGER  NOT NULL  , " +
                    "SamplingPlanType INTEGER  NOT NULL  , " +
                    "LabSheetType INTEGER  NOT NULL  , " +
                    "ProvinceTVItemID INTEGER  NOT NULL  , " +
                    "CreatorTVItemID INTEGER  NOT NULL  , " +
                    "Year INTEGER  NOT NULL  , " +
                    "AccessCode TEXT  NOT NULL  , " +
                    "DailyDuplicatePrecisionCriteria REAL  NOT NULL  , " +
                    "IntertechDuplicatePrecisionCriteria REAL  NOT NULL  , " +
                    "IncludeLaboratoryQAQC INTEGER  NOT NULL  , " +
                    "ApprovalCode TEXT  NOT NULL  , " +
                    "SamplingPlanFileTVItemID INTEGER   , " +
                    "AnalyzeMethodDefault INTEGER   , " +
                    "SampleMatrixDefault INTEGER   , " +
                    "LaboratoryDefault INTEGER   , " +
                    "BackupDirectory TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalSamplingPlanEmails":
                    CreateTable = "CREATE TABLE LocalSamplingPlanEmails (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "SamplingPlanEmailID INTEGER  NOT NULL  UNIQUE , " +
                    "SamplingPlanID INTEGER  NOT NULL  , " +
                    "Email TEXT  NOT NULL  , " +
                    "IsContractor INTEGER  NOT NULL  , " +
                    "LabSheetHasValueOver500 INTEGER  NOT NULL  , " +
                    "LabSheetReceived INTEGER  NOT NULL  , " +
                    "LabSheetAccepted INTEGER  NOT NULL  , " +
                    "LabSheetRejected INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalSamplingPlanSubsectors":
                    CreateTable = "CREATE TABLE LocalSamplingPlanSubsectors (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "SamplingPlanSubsectorID INTEGER  NOT NULL  UNIQUE , " +
                    "SamplingPlanID INTEGER  NOT NULL  , " +
                    "SubsectorTVItemID INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalSamplingPlanSubsectorSites":
                    CreateTable = "CREATE TABLE LocalSamplingPlanSubsectorSites (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "SamplingPlanSubsectorSiteID INTEGER  NOT NULL  UNIQUE , " +
                    "SamplingPlanSubsectorID INTEGER  NOT NULL  , " +
                    "MWQMSiteTVItemID INTEGER  NOT NULL  , " +
                    "IsDuplicate INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalSpills":
                    CreateTable = "CREATE TABLE LocalSpills (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "SpillID INTEGER  NOT NULL  UNIQUE , " +
                    "MunicipalityTVItemID INTEGER  NOT NULL  , " +
                    "InfrastructureTVItemID INTEGER   , " +
                    "StartDateTime_Local TEXT  NOT NULL  , " +
                    "EndDateTime_Local TEXT   , " +
                    "AverageFlow_m3_day REAL  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalSpillLanguages":
                    CreateTable = "CREATE TABLE LocalSpillLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "SpillLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "SpillID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "SpillComment TEXT  NOT NULL  , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTels":
                    CreateTable = "CREATE TABLE LocalTels (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TelID INTEGER  NOT NULL  UNIQUE , " +
                    "TelTVItemID INTEGER  NOT NULL  , " +
                    "TelNumber TEXT  NOT NULL  , " +
                    "TelType INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTideDataValues":
                    CreateTable = "CREATE TABLE LocalTideDataValues (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TideDataValueID INTEGER  NOT NULL  UNIQUE , " +
                    "TideSiteTVItemID INTEGER  NOT NULL  , " +
                    "DateTime_Local TEXT  NOT NULL  , " +
                    "Keep INTEGER  NOT NULL  , " +
                    "TideDataType INTEGER  NOT NULL  , " +
                    "StorageDataType INTEGER  NOT NULL  , " +
                    "Depth_m REAL  NOT NULL  , " +
                    "UVelocity_m_s REAL  NOT NULL  , " +
                    "VVelocity_m_s REAL  NOT NULL  , " +
                    "TideStart INTEGER   , " +
                    "TideEnd INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTideLocations":
                    CreateTable = "CREATE TABLE LocalTideLocations (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TideLocationID INTEGER  NOT NULL  UNIQUE , " +
                    "Zone INTEGER  NOT NULL  , " +
                    "Name TEXT  NOT NULL  , " +
                    "Prov TEXT  NOT NULL  , " +
                    "sid INTEGER  NOT NULL  , " +
                    "Lat REAL  NOT NULL  , " +
                    "Lng REAL  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTideSites":
                    CreateTable = "CREATE TABLE LocalTideSites (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TideSiteID INTEGER  NOT NULL  UNIQUE , " +
                    "TideSiteTVItemID INTEGER  NOT NULL  , " +
                    "TideSiteName TEXT  NOT NULL  , " +
                    "Province TEXT  NOT NULL  , " +
                    "sid INTEGER  NOT NULL  , " +
                    "Zone INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTVFiles":
                    CreateTable = "CREATE TABLE LocalTVFiles (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TVFileID INTEGER  NOT NULL  UNIQUE , " +
                    "TVFileTVItemID INTEGER  NOT NULL  , " +
                    "TemplateTVType INTEGER   , " +
                    "ReportTypeID INTEGER   , " +
                    "Parameters TEXT   , " +
                    "Year INTEGER   , " +
                    "Language INTEGER  NOT NULL  , " +
                    "FilePurpose INTEGER  NOT NULL  , " +
                    "FileType INTEGER  NOT NULL  , " +
                    "FileSize_kb INTEGER  NOT NULL  , " +
                    "FileInfo TEXT   , " +
                    "FileCreatedDate_UTC TEXT  NOT NULL  , " +
                    "FromWater INTEGER   , " +
                    "ClientFilePath TEXT   , " +
                    "ServerFileName TEXT  NOT NULL  , " +
                    "ServerFilePath TEXT  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTVFileLanguages":
                    CreateTable = "CREATE TABLE LocalTVFileLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TVFileLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "TVFileID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "FileDescription TEXT   , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTVItems":
                    CreateTable = "CREATE TABLE LocalTVItems (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TVItemID INTEGER  NOT NULL  UNIQUE , " +
                    "TVLevel INTEGER  NOT NULL  , " +
                    "TVPath TEXT  NOT NULL  , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "ParentID INTEGER   , " +
                    "IsActive INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTVItemLanguages":
                    CreateTable = "CREATE TABLE LocalTVItemLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TVItemLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "TVItemID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "TVText TEXT  NOT NULL  , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTVItemLinks":
                    CreateTable = "CREATE TABLE LocalTVItemLinks (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TVItemLinkID INTEGER  NOT NULL  UNIQUE , " +
                    "FromTVItemID INTEGER  NOT NULL  , " +
                    "ToTVItemID INTEGER  NOT NULL  , " +
                    "FromTVType INTEGER  NOT NULL  , " +
                    "ToTVType INTEGER  NOT NULL  , " +
                    "StartDateTime_Local TEXT   , " +
                    "EndDateTime_Local TEXT   , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "TVLevel INTEGER  NOT NULL  , " +
                    "TVPath TEXT  NOT NULL  , " +
                    "ParentTVItemLinkID INTEGER   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTVItemStats":
                    CreateTable = "CREATE TABLE LocalTVItemStats (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TVItemStatID INTEGER  NOT NULL  UNIQUE , " +
                    "TVItemID INTEGER  NOT NULL  , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "ChildCount INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTVItemUserAuthorizations":
                    CreateTable = "CREATE TABLE LocalTVItemUserAuthorizations (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TVItemUserAuthorizationID INTEGER  NOT NULL  UNIQUE , " +
                    "ContactTVItemID INTEGER  NOT NULL  , " +
                    "TVItemID1 INTEGER  NOT NULL  , " +
                    "TVItemID2 INTEGER   , " +
                    "TVItemID3 INTEGER   , " +
                    "TVItemID4 INTEGER   , " +
                    "TVAuth INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalTVTypeUserAuthorizations":
                    CreateTable = "CREATE TABLE LocalTVTypeUserAuthorizations (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "TVTypeUserAuthorizationID INTEGER  NOT NULL  UNIQUE , " +
                    "ContactTVItemID INTEGER  NOT NULL  , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "TVAuth INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalUseOfSites":
                    CreateTable = "CREATE TABLE LocalUseOfSites (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "UseOfSiteID INTEGER  NOT NULL  UNIQUE , " +
                    "SiteTVItemID INTEGER  NOT NULL  , " +
                    "SubsectorTVItemID INTEGER  NOT NULL  , " +
                    "TVType INTEGER  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "StartYear INTEGER  NOT NULL  , " +
                    "EndYear INTEGER   , " +
                    "UseWeight INTEGER   , " +
                    "Weight_perc REAL   , " +
                    "UseEquation INTEGER   , " +
                    "Param1 REAL   , " +
                    "Param2 REAL   , " +
                    "Param3 REAL   , " +
                    "Param4 REAL   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalVPAmbients":
                    CreateTable = "CREATE TABLE LocalVPAmbients (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "VPAmbientID INTEGER  NOT NULL  UNIQUE , " +
                    "VPScenarioID INTEGER  NOT NULL  , " +
                    "Row INTEGER  NOT NULL  , " +
                    "MeasurementDepth_m REAL   , " +
                    "CurrentSpeed_m_s REAL   , " +
                    "CurrentDirection_deg REAL   , " +
                    "AmbientSalinity_PSU REAL   , " +
                    "AmbientTemperature_C REAL   , " +
                    "BackgroundConcentration_MPN_100ml INTEGER   , " +
                    "PollutantDecayRate_per_day REAL   , " +
                    "FarFieldCurrentSpeed_m_s REAL   , " +
                    "FarFieldCurrentDirection_deg REAL   , " +
                    "FarFieldDiffusionCoefficient REAL   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalVPResults":
                    CreateTable = "CREATE TABLE LocalVPResults (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "VPResultID INTEGER  NOT NULL  UNIQUE , " +
                    "VPScenarioID INTEGER  NOT NULL  , " +
                    "Ordinal INTEGER  NOT NULL  , " +
                    "Concentration_MPN_100ml INTEGER  NOT NULL  , " +
                    "Dilution REAL  NOT NULL  , " +
                    "FarFieldWidth_m REAL  NOT NULL  , " +
                    "DispersionDistance_m REAL  NOT NULL  , " +
                    "TravelTime_hour REAL  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalVPScenarios":
                    CreateTable = "CREATE TABLE LocalVPScenarios (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "VPScenarioID INTEGER  NOT NULL  UNIQUE , " +
                    "InfrastructureTVItemID INTEGER  NOT NULL  , " +
                    "VPScenarioStatus INTEGER  NOT NULL  , " +
                    "UseAsBestEstimate INTEGER  NOT NULL  , " +
                    "EffluentFlow_m3_s REAL   , " +
                    "EffluentConcentration_MPN_100ml INTEGER   , " +
                    "FroudeNumber REAL   , " +
                    "PortDiameter_m REAL   , " +
                    "PortDepth_m REAL   , " +
                    "PortElevation_m REAL   , " +
                    "VerticalAngle_deg REAL   , " +
                    "HorizontalAngle_deg REAL   , " +
                    "NumberOfPorts INTEGER   , " +
                    "PortSpacing_m REAL   , " +
                    "AcuteMixZone_m REAL   , " +
                    "ChronicMixZone_m REAL   , " +
                    "EffluentSalinity_PSU REAL   , " +
                    "EffluentTemperature_C REAL   , " +
                    "EffluentVelocity_m_s REAL   , " +
                    "RawResults TEXT   , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                case "LocalVPScenarioLanguages":
                    CreateTable = "CREATE TABLE LocalVPScenarioLanguages (" +
                    "LocalDBCommand INTEGER NOT NULL, " +
                    "VPScenarioLanguageID INTEGER  NOT NULL  UNIQUE , " +
                    "VPScenarioID INTEGER  NOT NULL  , " +
                    "Language INTEGER  NOT NULL  , " +
                    "VPScenarioName TEXT  NOT NULL  , " +
                    "TranslationStatus INTEGER  NOT NULL  , " +
                    "LastUpdateDate_UTC TEXT  NOT NULL  , " +
                    "LastUpdateContactTVItemID INTEGER  NOT NULL  )";
                    break;
                default:
                    break;
            }

            if (DoSearch)
            {
                using (var command = dbSearch.Database.GetDbConnection().CreateCommand())
                {
                    command.CommandText = CreateTable;
                    dbSearch.Database.OpenConnection();
                    command.ExecuteNonQuery();
                }
            }
            else
            {
                using (var command = dbLocal.Database.GetDbConnection().CreateCommand())
                {
                    command.CommandText = CreateTable;
                    dbLocal.Database.OpenConnection();
                    command.ExecuteNonQuery();
                }
            }

            return await Task.FromResult(true);
        }
    }
}
