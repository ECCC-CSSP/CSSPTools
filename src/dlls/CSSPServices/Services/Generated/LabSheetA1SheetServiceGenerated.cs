/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\ServicesClassNameServiceGenerated.exe
 *
 * Do not edit this file.
 *
 */ 

using CSSPEnums;
using CSSPModels;
using CSSPCultureServices.Resources;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.Linq;
using System.Text.RegularExpressions;
using System.Threading.Tasks;

namespace CSSPServices
{
    public interface ILabSheetA1SheetService
    {
        IEnumerable<ValidationResult> Validate(ValidationContext validationContext);
    }
    public partial class LabSheetA1SheetService : ILabSheetA1SheetService
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private IEnums enums { get; }
        #endregion Properties

        #region Constructors
        public LabSheetA1SheetService(ICSSPCultureService CSSPCultureService, IEnums enums)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.enums = enums;
        }
        #endregion Constructors

        #region Functions public
        public IEnumerable<ValidationResult> Validate(ValidationContext validationContext)
        {
            string retStr = "";
            LabSheetA1Sheet labSheetA1Sheet = validationContext.ObjectInstance as LabSheetA1Sheet;

            if (labSheetA1Sheet.Version < 1 || labSheetA1Sheet.Version > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._ValueShouldBeBetween_And_, "Version", "1", "100"), new[] { "Version" });
            }

            retStr = enums.EnumTypeOK(typeof(SamplingPlanTypeEnum), (int?)labSheetA1Sheet.SamplingPlanType);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SamplingPlanType"), new[] { "SamplingPlanType" });
            }

            retStr = enums.EnumTypeOK(typeof(SampleTypeEnum), (int?)labSheetA1Sheet.SampleType);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SampleType"), new[] { "SampleType" });
            }

            retStr = enums.EnumTypeOK(typeof(LabSheetTypeEnum), (int?)labSheetA1Sheet.LabSheetType);
            if (!string.IsNullOrWhiteSpace(retStr))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "LabSheetType"), new[] { "LabSheetType" });
            }

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SubsectorName))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SubsectorName"), new[] { "SubsectorName" });
            }

            //SubsectorName has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SubsectorLocation))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SubsectorLocation"), new[] { "SubsectorLocation" });
            }

            //SubsectorLocation has no StringLength Attribute

            //SubsectorTVItemID has no Range Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunYear))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "RunYear"), new[] { "RunYear" });
            }

            //RunYear has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunMonth))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "RunMonth"), new[] { "RunMonth" });
            }

            //RunMonth has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunDay))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "RunDay"), new[] { "RunDay" });
            }

            //RunDay has no StringLength Attribute

            //RunNumber has no Range Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Tides))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Tides"), new[] { "Tides" });
            }

            //Tides has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SampleCrewInitials))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SampleCrewInitials"), new[] { "SampleCrewInitials" });
            }

            //SampleCrewInitials has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationStartSameDay))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationStartSameDay"), new[] { "IncubationStartSameDay" });
            }

            //IncubationStartSameDay has no StringLength Attribute

            //WaterBathCount has no Range Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1StartTime))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath1StartTime"), new[] { "IncubationBath1StartTime" });
            }

            //IncubationBath1StartTime has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2StartTime))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath2StartTime"), new[] { "IncubationBath2StartTime" });
            }

            //IncubationBath2StartTime has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3StartTime))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath3StartTime"), new[] { "IncubationBath3StartTime" });
            }

            //IncubationBath3StartTime has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1EndTime))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath1EndTime"), new[] { "IncubationBath1EndTime" });
            }

            //IncubationBath1EndTime has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2EndTime))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath2EndTime"), new[] { "IncubationBath2EndTime" });
            }

            //IncubationBath2EndTime has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3EndTime))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath3EndTime"), new[] { "IncubationBath3EndTime" });
            }

            //IncubationBath3EndTime has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath1TimeCalculated))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath1TimeCalculated"), new[] { "IncubationBath1TimeCalculated" });
            }

            //IncubationBath1TimeCalculated has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath2TimeCalculated))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath2TimeCalculated"), new[] { "IncubationBath2TimeCalculated" });
            }

            //IncubationBath2TimeCalculated has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IncubationBath3TimeCalculated))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IncubationBath3TimeCalculated"), new[] { "IncubationBath3TimeCalculated" });
            }

            //IncubationBath3TimeCalculated has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath1))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "WaterBath1"), new[] { "WaterBath1" });
            }

            //WaterBath1 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath2))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "WaterBath2"), new[] { "WaterBath2" });
            }

            //WaterBath2 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.WaterBath3))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "WaterBath3"), new[] { "WaterBath3" });
            }

            //WaterBath3 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCField1))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "TCField1"), new[] { "TCField1" });
            }

            //TCField1 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCLab1))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "TCLab1"), new[] { "TCLab1" });
            }

            //TCLab1 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCHas2Coolers))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "TCHas2Coolers"), new[] { "TCHas2Coolers" });
            }

            //TCHas2Coolers has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCField2))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "TCField2"), new[] { "TCField2" });
            }

            //TCField2 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCLab2))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "TCLab2"), new[] { "TCLab2" });
            }

            //TCLab2 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCFirst))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "TCFirst"), new[] { "TCFirst" });
            }

            //TCFirst has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.TCAverage))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "TCAverage"), new[] { "TCAverage" });
            }

            //TCAverage has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ControlLot))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ControlLot"), new[] { "ControlLot" });
            }

            //ControlLot has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Positive35))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Positive35"), new[] { "Positive35" });
            }

            //Positive35 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.NonTarget35))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "NonTarget35"), new[] { "NonTarget35" });
            }

            //NonTarget35 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Negative35))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Negative35"), new[] { "Negative35" });
            }

            //Negative35 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Positive44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath1Positive44_5"), new[] { "Bath1Positive44_5" });
            }

            //Bath1Positive44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Positive44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath2Positive44_5"), new[] { "Bath2Positive44_5" });
            }

            //Bath2Positive44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Positive44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath3Positive44_5"), new[] { "Bath3Positive44_5" });
            }

            //Bath3Positive44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1NonTarget44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath1NonTarget44_5"), new[] { "Bath1NonTarget44_5" });
            }

            //Bath1NonTarget44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2NonTarget44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath2NonTarget44_5"), new[] { "Bath2NonTarget44_5" });
            }

            //Bath2NonTarget44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3NonTarget44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath3NonTarget44_5"), new[] { "Bath3NonTarget44_5" });
            }

            //Bath3NonTarget44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Negative44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath1Negative44_5"), new[] { "Bath1Negative44_5" });
            }

            //Bath1Negative44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Negative44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath2Negative44_5"), new[] { "Bath2Negative44_5" });
            }

            //Bath2Negative44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Negative44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath3Negative44_5"), new[] { "Bath3Negative44_5" });
            }

            //Bath3Negative44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Blank35))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Blank35"), new[] { "Blank35" });
            }

            //Blank35 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath1Blank44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath1Blank44_5"), new[] { "Bath1Blank44_5" });
            }

            //Bath1Blank44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath2Blank44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath2Blank44_5"), new[] { "Bath2Blank44_5" });
            }

            //Bath2Blank44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Bath3Blank44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Bath3Blank44_5"), new[] { "Bath3Blank44_5" });
            }

            //Bath3Blank44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Lot35))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Lot35"), new[] { "Lot35" });
            }

            //Lot35 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Lot44_5))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Lot44_5"), new[] { "Lot44_5" });
            }

            //Lot44_5 has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunComment))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "RunComment"), new[] { "RunComment" });
            }

            //RunComment has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.RunWeatherComment))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "RunWeatherComment"), new[] { "RunWeatherComment" });
            }

            //RunWeatherComment has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SampleBottleLotNumber))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SampleBottleLotNumber"), new[] { "SampleBottleLotNumber" });
            }

            //SampleBottleLotNumber has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadBy))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SalinitiesReadBy"), new[] { "SalinitiesReadBy" });
            }

            //SalinitiesReadBy has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadYear))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SalinitiesReadYear"), new[] { "SalinitiesReadYear" });
            }

            //SalinitiesReadYear has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadMonth))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SalinitiesReadMonth"), new[] { "SalinitiesReadMonth" });
            }

            //SalinitiesReadMonth has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.SalinitiesReadDay))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "SalinitiesReadDay"), new[] { "SalinitiesReadDay" });
            }

            //SalinitiesReadDay has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadBy))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsReadBy"), new[] { "ResultsReadBy" });
            }

            //ResultsReadBy has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadYear))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsReadYear"), new[] { "ResultsReadYear" });
            }

            //ResultsReadYear has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadMonth))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsReadMonth"), new[] { "ResultsReadMonth" });
            }

            //ResultsReadMonth has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsReadDay))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsReadDay"), new[] { "ResultsReadDay" });
            }

            //ResultsReadDay has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedBy))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsRecordedBy"), new[] { "ResultsRecordedBy" });
            }

            //ResultsRecordedBy has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedYear))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsRecordedYear"), new[] { "ResultsRecordedYear" });
            }

            //ResultsRecordedYear has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedMonth))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsRecordedMonth"), new[] { "ResultsRecordedMonth" });
            }

            //ResultsRecordedMonth has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ResultsRecordedDay))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ResultsRecordedDay"), new[] { "ResultsRecordedDay" });
            }

            //ResultsRecordedDay has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicateRLog))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "DailyDuplicateRLog"), new[] { "DailyDuplicateRLog" });
            }

            //DailyDuplicateRLog has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicatePrecisionCriteria))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "DailyDuplicatePrecisionCriteria"), new[] { "DailyDuplicatePrecisionCriteria" });
            }

            //DailyDuplicatePrecisionCriteria has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.DailyDuplicateAcceptableOrUnacceptable))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "DailyDuplicateAcceptableOrUnacceptable"), new[] { "DailyDuplicateAcceptableOrUnacceptable" });
            }

            //DailyDuplicateAcceptableOrUnacceptable has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicateRLog))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IntertechDuplicateRLog"), new[] { "IntertechDuplicateRLog" });
            }

            //IntertechDuplicateRLog has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicatePrecisionCriteria))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IntertechDuplicatePrecisionCriteria"), new[] { "IntertechDuplicatePrecisionCriteria" });
            }

            //IntertechDuplicatePrecisionCriteria has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechDuplicateAcceptableOrUnacceptable))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IntertechDuplicateAcceptableOrUnacceptable"), new[] { "IntertechDuplicateAcceptableOrUnacceptable" });
            }

            //IntertechDuplicateAcceptableOrUnacceptable has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.IntertechReadAcceptableOrUnacceptable))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "IntertechReadAcceptableOrUnacceptable"), new[] { "IntertechReadAcceptableOrUnacceptable" });
            }

            //IntertechReadAcceptableOrUnacceptable has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalYear))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ApprovalYear"), new[] { "ApprovalYear" });
            }

            //ApprovalYear has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalMonth))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ApprovalMonth"), new[] { "ApprovalMonth" });
            }

            //ApprovalMonth has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovalDay))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ApprovalDay"), new[] { "ApprovalDay" });
            }

            //ApprovalDay has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.ApprovedBySupervisorInitials))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "ApprovedBySupervisorInitials"), new[] { "ApprovedBySupervisorInitials" });
            }

            //ApprovedBySupervisorInitials has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.BackupDirectory))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "BackupDirectory"), new[] { "BackupDirectory" });
            }

            //BackupDirectory has no StringLength Attribute

            if (string.IsNullOrWhiteSpace(labSheetA1Sheet.Log))
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._IsRequired, "Log"), new[] { "Log" });
            }

            //Log has no StringLength Attribute

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SamplingPlanTypeText) && labSheetA1Sheet.SamplingPlanTypeText.Length > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SamplingPlanTypeText", "100"), new[] { "SamplingPlanTypeText" });
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.SampleTypeText) && labSheetA1Sheet.SampleTypeText.Length > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "SampleTypeText", "100"), new[] { "SampleTypeText" });
            }

            if (!string.IsNullOrWhiteSpace(labSheetA1Sheet.LabSheetTypeText) && labSheetA1Sheet.LabSheetTypeText.Length > 100)
            {
                yield return new ValidationResult(string.Format(CSSPCultureServicesRes._MaxLengthIs_, "LabSheetTypeText", "100"), new[] { "LabSheetTypeText" });
            }

                //CSSPError: Type not implemented [LabSheetA1MeasurementList] of type [List`1]

                //CSSPError: Type not implemented [LabSheetA1MeasurementList] of type [LabSheetA1Measurement]
            retStr = ""; // added to stop compiling CSSPError
            if (retStr != "") // will never be true
            {
                yield return new ValidationResult("AAA", new[] { "AAA" });
            }

        }
        #endregion Functions public

    }
}
