/* Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPDBLocalServices_Tests.exe
 *
 * Do not edit this file.
 *
 */

using CSSPEnums;
using CSSPDBLocalModels;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Mvc;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Collections.Generic;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System.Transactions;
using Xunit;
using System.ComponentModel.DataAnnotations;
using CSSPCultureServices.Resources;
using LocalServices;
using CSSPDBModels;

namespace CSSPDBLocalServices.Tests
{
    [Collection("Sequential")]
    public partial class LocalMWQMAnalysisReportParameterDBServiceTest : TestHelper
    {
        #region Variables
        #endregion Variables

        #region Properties
        private IConfiguration Config { get; set; }
        private IServiceProvider Provider { get; set; }
        private IServiceCollection Services { get; set; }
        private ICSSPCultureService CSSPCultureService { get; set; }
        private ILocalService LocalService { get; set; }
        private ILocalMWQMAnalysisReportParameterDBService LocalMWQMAnalysisReportParameterDBService { get; set; }
        private CSSPDBLocalContext dbLocal { get; set; }
        private LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameter { get; set; }
        #endregion Properties

        #region Constructors
        public LocalMWQMAnalysisReportParameterDBServiceTest() : base()
        {

        }
        #endregion Constructors

        #region Tests Generated Constructor [DB]
        [Theory]
        [InlineData("en-CA")]
        //[InlineData("fr-CA")]
        public async Task LocalMWQMAnalysisReportParameterDB_Constructor_Good_Test(string culture)
        {
            Assert.True(await Setup(culture));
        }
        #endregion Tests Generated Constructor [DB]

        #region Tests Generated [DB] CRUD
        [Theory]
        [InlineData("en-CA")]
        //[InlineData("fr-CA")]
        public async Task LocalMWQMAnalysisReportParameterDB_CRUD_Good_Test(string culture)
        {
            Assert.True(await Setup(culture));

            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");

            await DoCRUDDBTest();
        }
        #endregion Tests Generated [DB] CRUD

        #region Tests Generated Properties
        [Theory]
        [InlineData("en-CA")]
        //[InlineData("fr-CA")]
        public async Task LocalMWQMAnalysisReportParameter_Properties_Test(string culture)
        {
            Assert.True(await Setup(culture));

            int count = 0;
            if (count == 1)
            {
                // just so we don't get a warning during compile [The variable 'count' is assigned but its value is never used]
            }

            var actionLocalMWQMAnalysisReportParameterList = await LocalMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList();
            Assert.Equal(200, ((ObjectResult)actionLocalMWQMAnalysisReportParameterList.Result).StatusCode);
            Assert.NotNull(((OkObjectResult)actionLocalMWQMAnalysisReportParameterList.Result).Value);
            List<LocalMWQMAnalysisReportParameter> localMWQMAnalysisReportParameterList = (List<LocalMWQMAnalysisReportParameter>)((OkObjectResult)actionLocalMWQMAnalysisReportParameterList.Result).Value;

            count = localMWQMAnalysisReportParameterList.Count();

            LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");


            // -----------------------------------
            // Is NOT Nullable
            // [CSSPEnumType]
            // localMWQMAnalysisReportParameter.LocalDBCommand   (LocalDBCommandEnum)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.LocalDBCommand = (LocalDBCommandEnum)1000000;
            var actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);


            // -----------------------------------
            // [Key]
            // Is NOT Nullable
            // localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID = 0;

            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Put(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID = 10000000;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Put(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);


            // -----------------------------------
            // Is NOT Nullable
            // [CSSPExist(ExistTypeName = "TVItem", ExistPlurial = "s", ExistFieldID = "TVItemID", AllowableTVtypeList = Subsector)]
            // localMWQMAnalysisReportParameter.SubsectorTVItemID   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.SubsectorTVItemID = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.SubsectorTVItemID = 1;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);


            // -----------------------------------
            // Is NOT Nullable
            // [CSSPMaxLength(250)]
            // [CSSPMinLength(5)]
            // localMWQMAnalysisReportParameter.AnalysisName   (String)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("AnalysisName");
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.AnalysisName = GetRandomString("", 4);
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.AnalysisName = GetRandomString("", 251);
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is Nullable
            // [CSSPRange(1980, 2050)]
            // localMWQMAnalysisReportParameter.AnalysisReportYear   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.AnalysisReportYear = 1979;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.AnalysisReportYear = 2051;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPAfter(Year = 1980)]
            // localMWQMAnalysisReportParameter.StartDate   (DateTime)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.StartDate = new DateTime();
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.StartDate = new DateTime(1979, 1, 1);
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPAfter(Year = 1980)]
            // [CSSPBigger(OtherField = StartDate)]
            // localMWQMAnalysisReportParameter.EndDate   (DateTime)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.EndDate = new DateTime();
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.EndDate = new DateTime(1979, 1, 1);
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPEnumType]
            // localMWQMAnalysisReportParameter.AnalysisCalculationType   (AnalysisCalculationTypeEnum)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.AnalysisCalculationType = (AnalysisCalculationTypeEnum)1000000;
             actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);


            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 1000)]
            // localMWQMAnalysisReportParameter.NumberOfRuns   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.NumberOfRuns = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.NumberOfRuns = 1001;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // localMWQMAnalysisReportParameter.FullYear   (Boolean)
            // -----------------------------------


            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 20)]
            // localMWQMAnalysisReportParameter.SalinityHighlightDeviationFromAverage   (Double)
            // -----------------------------------

            //CSSPError: Type not implemented [SalinityHighlightDeviationFromAverage]

            //CSSPError: Type not implemented [SalinityHighlightDeviationFromAverage]

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.SalinityHighlightDeviationFromAverage = 0.0D;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.SalinityHighlightDeviationFromAverage = 21.0D;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(0, 5)]
            // localMWQMAnalysisReportParameter.ShortRangeNumberOfDays   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.ShortRangeNumberOfDays = -1;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.ShortRangeNumberOfDays = 6;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(2, 7)]
            // localMWQMAnalysisReportParameter.MidRangeNumberOfDays   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.MidRangeNumberOfDays = 1;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.MidRangeNumberOfDays = 8;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 100)]
            // localMWQMAnalysisReportParameter.DryLimit24h   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.DryLimit24h = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.DryLimit24h = 101;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 100)]
            // localMWQMAnalysisReportParameter.DryLimit48h   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.DryLimit48h = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.DryLimit48h = 101;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 100)]
            // localMWQMAnalysisReportParameter.DryLimit72h   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.DryLimit72h = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.DryLimit72h = 101;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 100)]
            // localMWQMAnalysisReportParameter.DryLimit96h   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.DryLimit96h = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.DryLimit96h = 101;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 100)]
            // localMWQMAnalysisReportParameter.WetLimit24h   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.WetLimit24h = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.WetLimit24h = 101;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 100)]
            // localMWQMAnalysisReportParameter.WetLimit48h   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.WetLimit48h = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.WetLimit48h = 101;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 100)]
            // localMWQMAnalysisReportParameter.WetLimit72h   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.WetLimit72h = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.WetLimit72h = 101;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPRange(1, 100)]
            // localMWQMAnalysisReportParameter.WetLimit96h   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.WetLimit96h = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterService.GetLocalMWQMAnalysisReportParameterList().Count());
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.WetLimit96h = 101;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPMaxLength(250)]
            // localMWQMAnalysisReportParameter.RunsToOmit   (String)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("RunsToOmit");
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.RunsToOmit = GetRandomString("", 251);
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is Nullable
            // [CSSPMaxLength(20)]
            // localMWQMAnalysisReportParameter.ShowDataTypes   (String)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.ShowDataTypes = GetRandomString("", 21);
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            //Assert.AreEqual(count, localMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList().Count());

            // -----------------------------------
            // Is Nullable
            // [CSSPExist(ExistTypeName = "TVItem", ExistPlurial = "s", ExistFieldID = "TVItemID", AllowableTVtypeList = File)]
            // localMWQMAnalysisReportParameter.ExcelTVFileTVItemID   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.ExcelTVFileTVItemID = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.ExcelTVFileTVItemID = 1;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);


            // -----------------------------------
            // Is NOT Nullable
            // [CSSPEnumType]
            // localMWQMAnalysisReportParameter.Command   (AnalysisReportExportCommandEnum)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.Command = (AnalysisReportExportCommandEnum)1000000;
             actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);


            // -----------------------------------
            // Is NOT Nullable
            // [CSSPAfter(Year = 1980)]
            // localMWQMAnalysisReportParameter.LastUpdateDate_UTC   (DateTime)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.LastUpdateDate_UTC = new DateTime();
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);
            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.LastUpdateDate_UTC = new DateTime(1979, 1, 1);
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            // -----------------------------------
            // Is NOT Nullable
            // [CSSPExist(ExistTypeName = "TVItem", ExistPlurial = "s", ExistFieldID = "TVItemID", AllowableTVtypeList = Contact)]
            // localMWQMAnalysisReportParameter.LastUpdateContactTVItemID   (Int32)
            // -----------------------------------

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.LastUpdateContactTVItemID = 0;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

            localMWQMAnalysisReportParameter = null;
            localMWQMAnalysisReportParameter = GetFilledRandomLocalMWQMAnalysisReportParameter("");
            localMWQMAnalysisReportParameter.LastUpdateContactTVItemID = 1;
            actionLocalMWQMAnalysisReportParameter = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.IsType<BadRequestObjectResult>(actionLocalMWQMAnalysisReportParameter.Result);

        }
        #endregion Tests Generated Properties

        #region Functions private
        private async Task DoCRUDDBTest()
        {
            dbLocal.Database.BeginTransaction();
            // Post LocalMWQMAnalysisReportParameter
            var actionLocalMWQMAnalysisReportParameterAdded = await LocalMWQMAnalysisReportParameterDBService.Post(localMWQMAnalysisReportParameter);
            Assert.Equal(200, ((ObjectResult)actionLocalMWQMAnalysisReportParameterAdded.Result).StatusCode);
            Assert.NotNull(((OkObjectResult)actionLocalMWQMAnalysisReportParameterAdded.Result).Value);
            LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameterAdded = (LocalMWQMAnalysisReportParameter)((OkObjectResult)actionLocalMWQMAnalysisReportParameterAdded.Result).Value;
            Assert.NotNull(localMWQMAnalysisReportParameterAdded);

            // List<LocalMWQMAnalysisReportParameter>
            var actionLocalMWQMAnalysisReportParameterList = await LocalMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList();
            Assert.Equal(200, ((ObjectResult)actionLocalMWQMAnalysisReportParameterList.Result).StatusCode);
            Assert.NotNull(((OkObjectResult)actionLocalMWQMAnalysisReportParameterList.Result).Value);
            List<LocalMWQMAnalysisReportParameter> localMWQMAnalysisReportParameterList = (List<LocalMWQMAnalysisReportParameter>)((OkObjectResult)actionLocalMWQMAnalysisReportParameterList.Result).Value;

            int count = ((List<LocalMWQMAnalysisReportParameter>)((OkObjectResult)actionLocalMWQMAnalysisReportParameterList.Result).Value).Count();
            Assert.True(count > 0);

            // List<LocalMWQMAnalysisReportParameter> with skip and take
            var actionLocalMWQMAnalysisReportParameterListSkipAndTake = await LocalMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterList(1, 1);
            Assert.Equal(200, ((ObjectResult)actionLocalMWQMAnalysisReportParameterListSkipAndTake.Result).StatusCode);
            Assert.NotNull(((OkObjectResult)actionLocalMWQMAnalysisReportParameterListSkipAndTake.Result).Value);
            List<LocalMWQMAnalysisReportParameter> localMWQMAnalysisReportParameterListSkipAndTake = (List<LocalMWQMAnalysisReportParameter>)((OkObjectResult)actionLocalMWQMAnalysisReportParameterListSkipAndTake.Result).Value;

            int countSkipAndTake = ((List<LocalMWQMAnalysisReportParameter>)((OkObjectResult)actionLocalMWQMAnalysisReportParameterListSkipAndTake.Result).Value).Count();
            Assert.True(countSkipAndTake == 1);

            Assert.False(localMWQMAnalysisReportParameterList[0].MWQMAnalysisReportParameterID == localMWQMAnalysisReportParameterListSkipAndTake[0].MWQMAnalysisReportParameterID);

            // Get LocalMWQMAnalysisReportParameter With MWQMAnalysisReportParameterID
            var actionLocalMWQMAnalysisReportParameterGet = await LocalMWQMAnalysisReportParameterDBService.GetLocalMWQMAnalysisReportParameterWithMWQMAnalysisReportParameterID(localMWQMAnalysisReportParameterList[0].MWQMAnalysisReportParameterID);
            Assert.Equal(200, ((ObjectResult)actionLocalMWQMAnalysisReportParameterGet.Result).StatusCode);
            Assert.NotNull(((OkObjectResult)actionLocalMWQMAnalysisReportParameterGet.Result).Value);
            LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameterGet = (LocalMWQMAnalysisReportParameter)((OkObjectResult)actionLocalMWQMAnalysisReportParameterGet.Result).Value;
            Assert.NotNull(localMWQMAnalysisReportParameterGet);
            Assert.Equal(localMWQMAnalysisReportParameterGet.MWQMAnalysisReportParameterID, localMWQMAnalysisReportParameterList[0].MWQMAnalysisReportParameterID);

            // Put LocalMWQMAnalysisReportParameter
            var actionLocalMWQMAnalysisReportParameterUpdated = await LocalMWQMAnalysisReportParameterDBService.Put(localMWQMAnalysisReportParameter);
            Assert.Equal(200, ((ObjectResult)actionLocalMWQMAnalysisReportParameterUpdated.Result).StatusCode);
            Assert.NotNull(((OkObjectResult)actionLocalMWQMAnalysisReportParameterUpdated.Result).Value);
            LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameterUpdated = (LocalMWQMAnalysisReportParameter)((OkObjectResult)actionLocalMWQMAnalysisReportParameterUpdated.Result).Value;
            Assert.NotNull(localMWQMAnalysisReportParameterUpdated);

            // Delete LocalMWQMAnalysisReportParameter
            var actionLocalMWQMAnalysisReportParameterDeleted = await LocalMWQMAnalysisReportParameterDBService.Delete(localMWQMAnalysisReportParameter.MWQMAnalysisReportParameterID);
            Assert.Equal(200, ((ObjectResult)actionLocalMWQMAnalysisReportParameterDeleted.Result).StatusCode);
            Assert.NotNull(((OkObjectResult)actionLocalMWQMAnalysisReportParameterDeleted.Result).Value);
            bool retBool = (bool)((OkObjectResult)actionLocalMWQMAnalysisReportParameterDeleted.Result).Value;
            Assert.True(retBool);

            dbLocal.Database.RollbackTransaction();
        }
        private async Task<bool> Setup(string culture)
        {
            Config = new ConfigurationBuilder()
               .SetBasePath(Directory.GetParent(AppContext.BaseDirectory).FullName)
               .AddJsonFile("appsettings_csspdbservicestests.json")
               .AddUserSecrets("91a273aa-0169-4298-82eb-86ff2429a2f8")
               .Build();

            Services = new ServiceCollection();

            Services.AddSingleton<IConfiguration>(Config);

            string CSSPDBConnString = Config.GetValue<string>("TestDB");
            Assert.NotNull(CSSPDBConnString);

            Services.AddDbContext<CSSPDBContext>(options =>
            {
                options.UseSqlServer(CSSPDBConnString);
            });

            Services.AddDbContext<ApplicationDbContext>(options =>
            {
                options.UseSqlServer(CSSPDBConnString);
            });

            Services.AddIdentityCore<ApplicationUser>()
                .AddEntityFrameworkStores<ApplicationDbContext>();
            /* ---------------------------------------------------------------------------------
             * using CSSPDBLocalContext
             * ---------------------------------------------------------------------------------      
             */
            string CSSPDBLocal = Config.GetValue<string>("CSSPDBLocal");
            Assert.NotNull(CSSPDBLocal);

            FileInfo fiCSSPDBLocal = new FileInfo(CSSPDBLocal);

            Services.AddDbContext<CSSPDBLocalContext>(options =>
            {
                options.UseSqlite($"Data Source={ fiCSSPDBLocal.FullName }");
            });

            Services.AddSingleton<ICSSPCultureService, CSSPCultureService>();
            Services.AddSingleton<ILocalService, LocalService>();
            Services.AddSingleton<IEnums, Enums>();
            Services.AddSingleton<ILocalMWQMAnalysisReportParameterDBService, LocalMWQMAnalysisReportParameterDBService>();

            Provider = Services.BuildServiceProvider();
            Assert.NotNull(Provider);

            CSSPCultureService = Provider.GetService<ICSSPCultureService>();
            Assert.NotNull(CSSPCultureService);

            CSSPCultureService.SetCulture(culture);

            LocalService = Provider.GetService<ILocalService>();
            Assert.NotNull(LocalService);

            string Id = Config.GetValue<string>("Id");
            Assert.True(await LocalService.SetLoggedInContactInfo());

            dbLocal = Provider.GetService<CSSPDBLocalContext>();
            Assert.NotNull(dbLocal);

            LocalMWQMAnalysisReportParameterDBService = Provider.GetService<ILocalMWQMAnalysisReportParameterDBService>();
            Assert.NotNull(LocalMWQMAnalysisReportParameterDBService);

            return await Task.FromResult(true);
        }
        private LocalMWQMAnalysisReportParameter GetFilledRandomLocalMWQMAnalysisReportParameter(string OmitPropName)
        {
            LocalMWQMAnalysisReportParameter localMWQMAnalysisReportParameter = new LocalMWQMAnalysisReportParameter();

            if (OmitPropName != "LocalDBCommand") localMWQMAnalysisReportParameter.LocalDBCommand = (LocalDBCommandEnum)GetRandomEnumType(typeof(LocalDBCommandEnum));
            if (OmitPropName != "SubsectorTVItemID") localMWQMAnalysisReportParameter.SubsectorTVItemID = 11;
            if (OmitPropName != "AnalysisName") localMWQMAnalysisReportParameter.AnalysisName = GetRandomString("", 10);
            if (OmitPropName != "AnalysisReportYear") localMWQMAnalysisReportParameter.AnalysisReportYear = GetRandomInt(1980, 2050);
            if (OmitPropName != "StartDate") localMWQMAnalysisReportParameter.StartDate = new DateTime(2005, 3, 6);
            if (OmitPropName != "EndDate") localMWQMAnalysisReportParameter.EndDate = new DateTime(2005, 3, 6);
            if (OmitPropName != "AnalysisCalculationType") localMWQMAnalysisReportParameter.AnalysisCalculationType = (AnalysisCalculationTypeEnum)GetRandomEnumType(typeof(AnalysisCalculationTypeEnum));
            if (OmitPropName != "NumberOfRuns") localMWQMAnalysisReportParameter.NumberOfRuns = GetRandomInt(1, 1000);
            if (OmitPropName != "FullYear") localMWQMAnalysisReportParameter.FullYear = true;
            if (OmitPropName != "SalinityHighlightDeviationFromAverage") localMWQMAnalysisReportParameter.SalinityHighlightDeviationFromAverage = GetRandomDouble(1.0D, 20.0D);
            if (OmitPropName != "ShortRangeNumberOfDays") localMWQMAnalysisReportParameter.ShortRangeNumberOfDays = GetRandomInt(0, 5);
            if (OmitPropName != "MidRangeNumberOfDays") localMWQMAnalysisReportParameter.MidRangeNumberOfDays = GetRandomInt(2, 7);
            if (OmitPropName != "DryLimit24h") localMWQMAnalysisReportParameter.DryLimit24h = GetRandomInt(1, 100);
            if (OmitPropName != "DryLimit48h") localMWQMAnalysisReportParameter.DryLimit48h = GetRandomInt(1, 100);
            if (OmitPropName != "DryLimit72h") localMWQMAnalysisReportParameter.DryLimit72h = GetRandomInt(1, 100);
            if (OmitPropName != "DryLimit96h") localMWQMAnalysisReportParameter.DryLimit96h = GetRandomInt(1, 100);
            if (OmitPropName != "WetLimit24h") localMWQMAnalysisReportParameter.WetLimit24h = GetRandomInt(1, 100);
            if (OmitPropName != "WetLimit48h") localMWQMAnalysisReportParameter.WetLimit48h = GetRandomInt(1, 100);
            if (OmitPropName != "WetLimit72h") localMWQMAnalysisReportParameter.WetLimit72h = GetRandomInt(1, 100);
            if (OmitPropName != "WetLimit96h") localMWQMAnalysisReportParameter.WetLimit96h = GetRandomInt(1, 100);
            if (OmitPropName != "RunsToOmit") localMWQMAnalysisReportParameter.RunsToOmit = GetRandomString("", 5);
            if (OmitPropName != "ShowDataTypes") localMWQMAnalysisReportParameter.ShowDataTypes = GetRandomString("", 5);
            if (OmitPropName != "ExcelTVFileTVItemID") localMWQMAnalysisReportParameter.ExcelTVFileTVItemID = 42;
            if (OmitPropName != "Command") localMWQMAnalysisReportParameter.Command = (AnalysisReportExportCommandEnum)GetRandomEnumType(typeof(AnalysisReportExportCommandEnum));
            if (OmitPropName != "LastUpdateDate_UTC") localMWQMAnalysisReportParameter.LastUpdateDate_UTC = new DateTime(2005, 3, 6);
            if (OmitPropName != "LastUpdateContactTVItemID") localMWQMAnalysisReportParameter.LastUpdateContactTVItemID = 2;



            return localMWQMAnalysisReportParameter;
        }
        private void CheckLocalMWQMAnalysisReportParameterFields(List<LocalMWQMAnalysisReportParameter> localMWQMAnalysisReportParameterList)
        {
            Assert.False(string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameterList[0].AnalysisName));
            if (localMWQMAnalysisReportParameterList[0].AnalysisReportYear != null)
            {
                Assert.NotNull(localMWQMAnalysisReportParameterList[0].AnalysisReportYear);
            }
            Assert.False(string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameterList[0].RunsToOmit));
            if (!string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameterList[0].ShowDataTypes))
            {
                Assert.False(string.IsNullOrWhiteSpace(localMWQMAnalysisReportParameterList[0].ShowDataTypes));
            }
            if (localMWQMAnalysisReportParameterList[0].ExcelTVFileTVItemID != null)
            {
                Assert.NotNull(localMWQMAnalysisReportParameterList[0].ExcelTVFileTVItemID);
            }
        }

        #endregion Functions private
    }
}
