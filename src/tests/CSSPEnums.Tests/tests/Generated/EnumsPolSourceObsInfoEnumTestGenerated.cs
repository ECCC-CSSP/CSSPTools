/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\EnumsPolSourceInfoRelatedFiles.exe
 *
 * Do not edit this file.
 *
 */
using CultureServices.Resources;
using System;
using Xunit;

namespace CSSPEnums.Tests
{
    public partial class EnumsTest
    {
        [Theory]
        [InlineData("en-CA")]
        [InlineData("fr-CA")]
        public void GetResValueForTypeAndID_for_PolSourceObsInfoEnum_Test(string culture)
        {
            SetupTest(culture);

            string retStr = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), null, null);
            Assert.Equal(CultureEnumsRes.Empty, retStr);
            string retStrDesc = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), null, PolSourceObsInfoTypeEnum.Description);
            Assert.Equal(CultureEnumsRes.Empty, retStrDesc);
            string retStrReport = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), null, PolSourceObsInfoTypeEnum.Report);
            Assert.Equal(CultureEnumsRes.Empty, retStrReport);
            string retStrText = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), null, PolSourceObsInfoTypeEnum.Text);
            Assert.Equal(CultureEnumsRes.Empty, retStrText);
            string retStrInit = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), null, PolSourceObsInfoTypeEnum.Initial);
            Assert.Equal(CultureEnumsRes.Empty, retStrInit);

            foreach (int i in Enum.GetValues(typeof(PolSourceObsInfoEnum)))
            {
                retStr = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), i, null);
                retStrDesc = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), i, PolSourceObsInfoTypeEnum.Description);
                retStrReport = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), i, PolSourceObsInfoTypeEnum.Report);
                retStrText = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), i, PolSourceObsInfoTypeEnum.Text);
                retStrInit = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), i, PolSourceObsInfoTypeEnum.Initial);

                switch ((PolSourceObsInfoEnum)i)
                {
                    case PolSourceObsInfoEnum.SourceStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.OuthouseStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.AgriculturalSourceStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSourceStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSourceStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.ManureManagementStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FieldLocationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.PastureStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPastureStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPastureStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FeedlotStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFeedlotStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFeedlotStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishOperationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeSingleStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeMultipleStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineSourceStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SlipwayStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSlipwayStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSlipwayStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationSingleStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationSingleStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationSingleStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.RECCountNumberStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumberStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumberStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.CampgroundFacilitiesStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundFacilitiesStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundFacilitiesStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.UrbanStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumUrbanStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumUrbanStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.TankSizeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSizeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSizeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.LandfillTypeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfAnimalStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgSingleTypeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleTypeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleTypeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgMultipleTypeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleTypeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleTypeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalNumberPresentStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalNumberPresentStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalNumberPresentStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.OilDumpingFacilityStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WastewaterDumpingStationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeSingleStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineSourcesOfContaminantStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazardousLevelStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathWayStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwayRouteFirstStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayRouteFirstStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayRouteFirstStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwayRouteSecondPipeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayRouteSecondPipeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayRouteSecondPipeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwayRouteSecondCulvertStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayRouteSecondCulvertStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayRouteSecondCulvertStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparionZoneStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparionZoneStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparionZoneStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughWaterCourseStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughWaterCourseStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughWaterCourseStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseDistStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseDistStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseDistStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.DitchStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainageStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetersStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SecondaryHazardousLevelStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactRatingStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SuggestedRiskStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskConfirmationStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.FollowUpStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFollowUpStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFollowUpStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypeOfSourceStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypeOfSourceStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypeOfSourceStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterwayWidthInMetersStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterwayWidthInMetersStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterwayWidthInMetersStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.AverageDepthStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.StreamVolSqMeterStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat10mStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat10mStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat10mStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.StructureDiameterStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureDiameterStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureDiameterStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.HeigthOfFlowStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.DischargeM3DayStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3DayStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3DayStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCountStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCountStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCountStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadinPerDayStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadinPerDayStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadinPerDayStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeToTarget14Start:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeToTarget14Start, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeToTarget14StartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEIStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEIStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEIStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWaterStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWaterStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWaterStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadiusStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadiusStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadiusStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactZoneStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreStart:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreStart, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreStartDesc, retStrDesc);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourceHumanLand:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceHumanLand, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceHumanLandReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourceHumanMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceHumanMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceHumanMarineReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourceAnimal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceAnimal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceAnimalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourceEffluentLand:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceEffluentLand, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceEffluentLandReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourceEffluentMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceEffluentMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourceEffluentMarineReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleResidential:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleResidential, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleResidentialReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleResidentialText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleCottage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCottage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCottageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCottageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleTrailer:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleTrailer, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleTrailerReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleTrailerText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleWarehouse:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleWarehouse, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleWarehouseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleWarehouseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleCommerical:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCommerical, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCommericalReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCommericalText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleBarn:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBarn, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBarnReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBarnText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSinglePublicBuildings:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglePublicBuildings, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglePublicBuildingsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglePublicBuildingsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleSchool:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleSchool, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleSchoolReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleSchoolText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleChurch:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleChurch, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleChurchReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleChurchText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleMedicalFacility:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleMedicalFacility, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleMedicalFacilityReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleMedicalFacilityText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleOuthouse:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleOuthouse, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleOuthouseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleOuthouseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSinglehotelMotel:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglehotelMotel, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglehotelMotelReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglehotelMotelText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleBoatM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBoatM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBoatMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBoatMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleBargeM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBargeM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBargeMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBargeMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSinglehotelMotelM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglehotelMotelM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglehotelMotelMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSinglehotelMotelMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleResidentialM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleResidentialM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleResidentialMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleResidentialMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleCottageM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCottageM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCottageMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCottageMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleWarehouseM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleWarehouseM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleWarehouseMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleWarehouseMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleCommericalM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCommericalM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCommericalMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleCommericalMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleFishPlant:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleFishPlant, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleFishPlantReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleFishPlantText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionSingleBeachPatio:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBeachPatio, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBeachPatioReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionSingleBeachPatioText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleResidences:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleResidences, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleResidencesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleResidencesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleCottages:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCottages, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCottagesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCottagesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleTrailers:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleTrailers, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleTrailersReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleTrailersText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleWarehouses:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleWarehouses, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleWarehousesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleWarehousesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleCommericals:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCommericals, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCommericalsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCommericalsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleBarns:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBarns, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBarnsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBarnsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultiplePublicBuildings:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultiplePublicBuildings, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultiplePublicBuildingsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultiplePublicBuildingsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleSchools:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleSchools, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleSchoolsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleSchoolsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleChurches:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleChurches, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleChurchesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleChurchesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleMedicalFacilities:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleMedicalFacilities, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleMedicalFacilitiesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleMedicalFacilitiesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleOuthouses:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleOuthouses, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleOuthousesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleOuthousesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleHotelsMotels:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleHotelsMotels, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleHotelsMotelsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleHotelsMotelsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleBoatsM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBoatsM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBoatsMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBoatsMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleBargesM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBargesM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBargesMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBargesMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleHotelsMotelsM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleHotelsMotelsM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleHotelsMotelsMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleHotelsMotelsMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleResidencesM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleResidencesM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleResidencesMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleResidencesMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleCottagesM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCottagesM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCottagesMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCottagesMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleWarehousesM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleWarehousesM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleWarehousesMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleWarehousesMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleCommericalsM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCommericalsM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCommericalsMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleCommericalsMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleFishPlants:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleFishPlants, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleFishPlantsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleFishPlantsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionMultipleBeachPatios:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBeachPatios, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBeachPatiosReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionMultipleBeachPatiosText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo7:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo7, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo7Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo7Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo8:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo8, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo8Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo8Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo9:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo9, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo9Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo9Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween11and20:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween11and20, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween11and20Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween11and20Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween21and40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween21and40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween21and40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween21and40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween41and60:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween41and60, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween41and60Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween41and60Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween61and100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween61and100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween61and100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween61and100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween101and200:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween101and200, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween101and200Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween101and200Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween201and400:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween201and400, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween201and400Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween201and400Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberGreaterThan400:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberGreaterThan400, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberGreaterThan400Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberGreaterThan400Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo1M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo1M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo1MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo1MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo2M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo2M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo2MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo2MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo3M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo3M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo3MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo3MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo4M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo4M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo4MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo4MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo5M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo5M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo5MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo5MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo6M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo6M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo6MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo6MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo7M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo7M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo7MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo7MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo8M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo8M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo8MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo8MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo9M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo9M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo9MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo9MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberEqualTo10M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo10M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo10MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberEqualTo10MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween11and20M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween11and20M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween11and20MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween11and20MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween21and40M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween21and40M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween21and40MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween21and40MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween41and60M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween41and60M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween41and60MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween41and60MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween61and100M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween61and100M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween61and100MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween61and100MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween101and200M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween101and200M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween101and200MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween101and200MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberBetween201and400M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween201and400M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween201and400MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberBetween201and400MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanPollutionCountNumberGreaterThan400M:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberGreaterThan400M, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberGreaterThan400MReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanPollutionCountNumberGreaterThan400MText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationRural:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationRural, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationRuralReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationRuralText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationUrban:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationUrban, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationUrbanReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationUrbanText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationForested:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationForested, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationForestedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationForestedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationAgricultural:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAgricultural, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAgriculturalReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAgriculturalText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationFarm:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFarm, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFarmReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFarmText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationShorelineMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationShorelineMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationShorelineMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationShorelineMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationWharfMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWharfMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWharfMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWharfMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationBarge:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationBarge, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationBargeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationBargeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationIsland:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationIsland, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationIslandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationIslandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationRecreationalArea:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationRecreationalArea, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationRecreationalAreaReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationRecreationalAreaText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationSeasonalCottageLot:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationSeasonalCottageLot, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationSeasonalCottageLotReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationSeasonalCottageLotText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationWetland:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWetland, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWetlandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWetlandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationWaterCourse:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWaterCourse, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWaterCourseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWaterCourseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationFishPlant:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFishPlant, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFishPlantReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFishPlantText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationAquacultureSiteMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAquacultureSiteMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAquacultureSiteMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAquacultureSiteMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationAnchorageMooringSiteMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAnchorageMooringSiteMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAnchorageMooringSiteMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationAnchorageMooringSiteMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationDisposalAtSeaMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationDisposalAtSeaMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationDisposalAtSeaMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationDisposalAtSeaMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationMarineParkMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarineParkMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarineParkMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarineParkMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationMarinaMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarinaMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarinaMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarinaMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationFloatHomeCommunityMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFloatHomeCommunityMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFloatHomeCommunityMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationFloatHomeCommunityMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationMarinaLand:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarinaLand, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarinaLandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationMarinaLandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationShorelineLand:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationShorelineLand, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationShorelineLandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationShorelineLandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HumanLocationWharfLand:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWharfLand, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWharfLandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHumanLocationWharfLandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersEquals10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersEquals20:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals20, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals20Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals20Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersEquals40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersEquals60:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals60, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals60Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals60Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersEquals80:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals80, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals80Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals80Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersEquals100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersEquals100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersBetween101And250:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween101And250, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween101And250Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween101And250Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersBetween251And500:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween251And500, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween251And500Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween251And500Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersBetween501And1000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween501And1000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween501And1000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersBetween501And1000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersGreaterThan1000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersGreaterThan1000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersGreaterThan1000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersGreaterThan1000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialAreaSizeMetersInFoRequired:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersInFoRequired, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersInFoRequiredReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialAreaSizeMetersInFoRequiredText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.OuthouseConcreteTank:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseConcreteTank, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseConcreteTankReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseConcreteTankText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.OuthouseOnGround:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseOnGround, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseOnGroundReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseOnGroundText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.OuthouseOnPortable:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseOnPortable, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseOnPortableReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOuthouseOnPortableText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentForestry:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentForestry, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentForestryReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentForestryText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentAgricultureFarm:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAgricultureFarm, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAgricultureFarmReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAgricultureFarmText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentFisheryLand:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentFisheryLand, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentFisheryLandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentFisheryLandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentShorelineStructures:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentShorelineStructures, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentShorelineStructuresReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentShorelineStructuresText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentIndustrialTreatment:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentIndustrialTreatment, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentIndustrialTreatmentReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentIndustrialTreatmentText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentStorageTank:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentStorageTank, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentStorageTankReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentStorageTankText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentAirport:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAirport, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAirportReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAirportText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentLandfill:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentLandfill, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentLandfillReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentLandfillText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentUrbanRunoff:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentUrbanRunoff, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentUrbanRunoffReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentUrbanRunoffText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentRecreation:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentRecreation, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentRecreationReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentRecreationText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentAquacultureSite:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAquacultureSite, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAquacultureSiteReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAquacultureSiteText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentAnchorageMooringSite:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAnchorageMooringSite, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAnchorageMooringSiteReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentAnchorageMooringSiteText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentDisposalAtSea:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentDisposalAtSea, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentDisposalAtSeaReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentDisposalAtSeaText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentMarina:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentMarina, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentMarinaReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentMarinaText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentRural:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentRural, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentRuralReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentRuralText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.IndustrialEffluentShoreline:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentShoreline, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentShorelineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumIndustrialEffluentShorelineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AgriculturalSourceCrop:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSourceCrop, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSourceCropReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSourceCropText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AgricultureSourcePasture:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgricultureSourcePasture, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgricultureSourcePastureReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgricultureSourcePastureText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AgriculturesourceFeedlot:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturesourceFeedlot, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturesourceFeedlotReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturesourceFeedlotText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AriculturalSourcePeatMoss:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAriculturalSourcePeatMoss, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAriculturalSourcePeatMossReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAriculturalSourcePeatMossText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AgricultureSourceManure:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgricultureSourceManure, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgricultureSourceManureReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgricultureSourceManureText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AgriculturalSourceBarn:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSourceBarn, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSourceBarnReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSourceBarnText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AgriculturalSoureRunoff:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSoureRunoff, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSoureRunoffReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAgriculturalSoureRunoffText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ManureManagementPileSpread:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementPileSpread, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementPileSpreadReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementPileSpreadText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ManureManagementLiqSpread:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementLiqSpread, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementLiqSpreadReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementLiqSpreadText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ManureManagementBoth:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementBoth, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementBothReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumManureManagementBothText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FieldLocationOnFarm:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationOnFarm, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationOnFarmReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationOnFarmText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FieldLocationOffFarm:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationOffFarm, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationOffFarmReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationOffFarmText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FieldLocationBoth:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationBoth, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationBothReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFieldLocationBothText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PastureActive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPastureActive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPastureActiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPastureActiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PastureFallow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPastureFallow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPastureFallowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPastureFallowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FeedlotActive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFeedlotActive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFeedlotActiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFeedlotActiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FeedlotNotActive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFeedlotNotActive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFeedlotNotActiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFeedlotNotActiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceShellfishProcessing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceShellfishProcessing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceShellfishProcessingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceShellfishProcessingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceFinfishProcessing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceFinfishProcessing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceFinfishProcessingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceFinfishProcessingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceBaitFishProcessing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceBaitFishProcessing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceBaitFishProcessingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceBaitFishProcessingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceLobsterProcessing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterProcessing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterProcessingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterProcessingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceLobsterAndBaitfishProcessing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterAndBaitfishProcessing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterAndBaitfishProcessingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterAndBaitfishProcessingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceShellfishLive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceShellfishLive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceShellfishLiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceShellfishLiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceFinfishLive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceFinfishLive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceFinfishLiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceFinfishLiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FisheriesSourceLobsterLive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterLive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterLiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFisheriesSourceLobsterLiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishOperationProcessing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationProcessing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationProcessingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationProcessingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishOperationHoldingTanks:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationHoldingTanks, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationHoldingTanksReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationHoldingTanksText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishOperationPackaging:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationPackaging, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationPackagingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationPackagingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishOperationRearing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationRearing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationRearingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationRearingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishOperationFishMeal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationFishMeal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationFishMealReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishOperationFishMealText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeSingleProcessingPlant:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleProcessingPlant, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleProcessingPlantReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleProcessingPlantText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeSingleHatchery:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleHatchery, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleHatcheryReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleHatcheryText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeSinglePond:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSinglePond, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSinglePondReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSinglePondText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeSingleTank:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleTank, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleTankReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleTankText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeSinglePound:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSinglePound, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSinglePoundReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSinglePoundText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeSingleAbandoned:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleAbandoned, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleAbandonedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleAbandonedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeSingleWarehouse:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleWarehouse, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleWarehouseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeSingleWarehouseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeMultipleProcessingPlants:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleProcessingPlants, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleProcessingPlantsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleProcessingPlantsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeMultipleHatcheries:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleHatcheries, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleHatcheriesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleHatcheriesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeMultiplePonds:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultiplePonds, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultiplePondsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultiplePondsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeMultipleTanks:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleTanks, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleTanksReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleTanksText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeMultiplePounds:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultiplePounds, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultiplePoundsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultiplePoundsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeMultipleAbandoned:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleAbandoned, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleAbandonedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleAbandonedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FishBuildingTypeMultipleWarehouse:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleWarehouse, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleWarehouseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFishBuildingTypeMultipleWarehouseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo7:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo7, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo7Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo7Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo8:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo8, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo8Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo8Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo9:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo9, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo9Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo9Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberEqualTo10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberEqualTo10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberBetween10and25:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberBetween10and25, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberBetween10and25Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberBetween10and25Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberBetween25and40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberBetween25and40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberBetween25and40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberBetween25and40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FISCountNumberGreaterThan40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberGreaterThan40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberGreaterThan40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFISCountNumberGreaterThan40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineSourceWharf:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceWharf, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceWharfReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceWharfText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineSourceSeaWall:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceSeaWall, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceSeaWallReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceSeaWallText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineSourceBoatRamp:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceBoatRamp, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceBoatRampReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceBoatRampText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineSourceBoatHouse:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceBoatHouse, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceBoatHouseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineSourceBoatHouseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SlipwayPaved:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSlipwayPaved, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSlipwayPavedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSlipwayPavedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SlipwayRocks:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSlipwayRocks, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSlipwayRocksReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSlipwayRocksText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfCommercialTransportation:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfCommercialTransportation, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfCommercialTransportationReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfCommercialTransportationText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfFishing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfFishing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfFishingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfFishingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfRecreational:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfRecreational, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfRecreationalReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfRecreationalText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfAbandoned:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfAbandoned, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfAbandonedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfAbandonedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals7:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals7, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals7Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals7Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals8:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals8, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals8Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals8Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals9:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals9, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals9Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals9Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountEquals10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountEquals10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountBetwee11and25:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetwee11and25, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetwee11and25Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetwee11and25Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountBetween26and50:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetween26and50, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetween26and50Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetween26and50Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountBetween51and100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetween51and100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetween51and100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountBetween51and100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountGreaterThan100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountGreaterThan100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountGreaterThan100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountGreaterThan100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.VesselCountNotApplicable:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountNotApplicable, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountNotApplicableReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumVesselCountNotApplicableText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationCommericalSingle:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationCommericalSingle, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationCommericalSingleReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationCommericalSingleText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationFerrySingle:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFerrySingle, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFerrySingleReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFerrySingleText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationFishingBoatSingle:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFishingBoatSingle, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFishingBoatSingleReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFishingBoatSingleText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationBargeSingle:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationBargeSingle, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationBargeSingleReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationBargeSingleText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationRecreationActivitySingle:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationRecreationActivitySingle, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationRecreationActivitySingleReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationRecreationActivitySingleText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationPleasureBoatSingle:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationPleasureBoatSingle, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationPleasureBoatSingleReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationPleasureBoatSingleText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationCommerical:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationCommerical, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationCommericalReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationCommericalText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationFerry:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFerry, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFerryReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFerryText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationFishingBoats:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFishingBoats, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFishingBoatsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationFishingBoatsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationBarges:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationBarges, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationBargesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationBargesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationRecreationActivities:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationRecreationActivities, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationRecreationActivitiesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationRecreationActivitiesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WharfTransportationPleasureBoats:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationPleasureBoats, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationPleasureBoatsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWharfTransportationPleasureBoatsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo7:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo7, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo7Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo7Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo8:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo8, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo8Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo8Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo9:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo9, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo9Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo9Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberEqualTo10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberEqualTo10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberBetween11and25:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberBetween11and25, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberBetween11and25Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberBetween11and25Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberBetween26and40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberBetween26and40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberBetween26and40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberBetween26and40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarWhfCountNumberGreaterThan40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberGreaterThan40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberGreaterThan40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarWhfCountNumberGreaterThan40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationCampground:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationCampground, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationCampgroundReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationCampgroundText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationDayUseArea:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationDayUseArea, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationDayUseAreaReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationDayUseAreaText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationSwimmingArea:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationSwimmingArea, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationSwimmingAreaReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationSwimmingAreaText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationGolfCourse:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationGolfCourse, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationGolfCourseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationGolfCourseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationFishing:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationFishing, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationFishingReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationFishingText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationCampgroundSewage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationCampgroundSewage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationCampgroundSewageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationCampgroundSewageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationDayUseAreaSewage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationDayUseAreaSewage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationDayUseAreaSewageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationDayUseAreaSewageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationSwimmingAreaSewage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationSwimmingAreaSewage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationSwimmingAreaSewageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationSwimmingAreaSewageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RecreationGolfCourseSewage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationGolfCourseSewage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationGolfCourseSewageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRecreationGolfCourseSewageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RECCountNumber10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RECCountNumber30:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber30, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber30Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber30Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RECCountNumber50:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber50, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber50Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber50Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RECCountNumber100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RECCountNumber200:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber200, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber200Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber200Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RECCountNumber300:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber300, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber300Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber300Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RECCountNumber500:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber500, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber500Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRECCountNumber500Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.CampgroundNoDumpStn:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundNoDumpStn, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundNoDumpStnReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundNoDumpStnText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.CampgroundWithDumpStn:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundWithDumpStn, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundWithDumpStnReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundWithDumpStnText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.CampgroundNoDumpStnSewage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundNoDumpStnSewage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundNoDumpStnSewageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundNoDumpStnSewageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.CampgroundWithDumpStnSewage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundWithDumpStnSewage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundWithDumpStnSewageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumCampgroundWithDumpStnSewageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.UrbanAccumulatedFlow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumUrbanAccumulatedFlow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumUrbanAccumulatedFlowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumUrbanAccumulatedFlowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.UrbanWastewaterDumpStation:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumUrbanWastewaterDumpStation, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumUrbanWastewaterDumpStationReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumUrbanWastewaterDumpStationText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TankSize400:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize400, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize400Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize400Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TankSize2000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize2000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize2000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize2000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TankSize4000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize4000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize4000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize4000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TankSize8000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize8000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize8000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTankSize8000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LandfillTypeResidental:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeResidental, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeResidentalReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeResidentalText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LandfillTypeIndustrial:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeIndustrial, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeIndustrialReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeIndustrialText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LandfillTypeWoodwaste:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeWoodwaste, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeWoodwasteReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLandfillTypeWoodwasteText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfAnimalLivestock:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalLivestock, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalLivestockReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalLivestockText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfAnimalWildlife:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalWildlife, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalWildlifeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalWildlifeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfAnimalMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfAnimalMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockHorses:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockHorses, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockHorsesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockHorsesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockCows:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockCows, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockCowsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockCowsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockSheep:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockSheep, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockSheepReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockSheepText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockPigs:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockPigs, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockPigsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockPigsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockMixtureLarge:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockMixtureLarge, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockMixtureLargeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockMixtureLargeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockChickens:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockChickens, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockChickensReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockChickensText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockTurkeys:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockTurkeys, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockTurkeysReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockTurkeysText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockDucks:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockDucks, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockDucksReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockDucksText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockMixtureSmall:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockMixtureSmall, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockMixtureSmallReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockMixtureSmallText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockFurFarms:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockFurFarms, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockFurFarmsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockFurFarmsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfLivestockDogs:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockDogs, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockDogsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfLivestockDogsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeCrows:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeCrows, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeCrowsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeCrowsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeGulls:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeGulls, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeGullsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeGullsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeEagle:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeEagle, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeEagleReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeEagleText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeUngulate:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeUngulate, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeUngulateReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeUngulateText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeCoyote:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeCoyote, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeCoyoteReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeCoyoteText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeGeneral:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeGeneral, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeGeneralReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeGeneralText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeBeaver:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeBeaver, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeBeaverReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeBeaverText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildlifeMuskrat:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeMuskrat, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeMuskratReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildlifeMuskratText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypesOfWildLifeDucksGeese:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildLifeDucksGeese, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildLifeDucksGeeseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypesOfWildLifeDucksGeeseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationRuralDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRuralDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRuralDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRuralDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationUrbanDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationUrbanDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationUrbanDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationUrbanDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationForestedDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationForestedDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationForestedDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationForestedDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationAgriculturalDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationAgriculturalDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationAgriculturalDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationAgriculturalDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationFarmDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFarmDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFarmDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFarmDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationShorelineDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationShorelineDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationShorelineDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationShorelineDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationWharfDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWharfDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWharfDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWharfDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationBargeDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationBargeDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationBargeDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationBargeDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationIslandDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationIslandDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationIslandDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationIslandDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationRecreationalAreaDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRecreationalAreaDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRecreationalAreaDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRecreationalAreaDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationCottageLotDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationCottageLotDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationCottageLotDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationCottageLotDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationWetlandDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWetlandDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWetlandDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWetlandDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationWaterCourseDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWaterCourseDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWaterCourseDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWaterCourseDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationFishPlant:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFishPlant, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFishPlantReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFishPlantText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationRural:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRural, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRuralReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRuralText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationUrban:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationUrban, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationUrbanReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationUrbanText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationForested:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationForested, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationForestedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationForestedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationAgricultural:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationAgricultural, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationAgriculturalReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationAgriculturalText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationFarm:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFarm, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFarmReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationFarmText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationShoreline:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationShoreline, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationShorelineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationShorelineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationWharf:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWharf, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWharfReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWharfText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationBarge:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationBarge, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationBargeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationBargeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationIsland:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationIsland, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationIslandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationIslandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationRecreationalArea:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRecreationalArea, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRecreationalAreaReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationRecreationalAreaText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationCottageLot:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationCottageLot, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationCottageLotReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationCottageLotText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationWetland:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWetland, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWetlandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWetlandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationWaterCourse:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWaterCourse, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWaterCourseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationWaterCourseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationPondLakeDom:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationPondLakeDom, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationPondLakeDomReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationPondLakeDomText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalLocationPondLake:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationPondLake, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationPondLakeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalLocationPondLakeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals7:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals7, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals7Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals7Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals8:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals8, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals8Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals8Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals9:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals9, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals9Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals9Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEquals10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEquals10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgEqualsNotApplicable:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEqualsNotApplicable, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEqualsNotApplicableReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgEqualsNotApplicableText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgSingleCages:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleCages, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleCagesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleCagesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgSingleBarn:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleBarn, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleBarnReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleBarnText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgSingleBuildings:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleBuildings, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleBuildingsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgSingleBuildingsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgMultipleCages:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleCages, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleCagesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleCagesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgMultipleBarns:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleBarns, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleBarnsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleBarnsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AnimalBldgMultipleOtherBuildings:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleOtherBuildings, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleOtherBuildingsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAnimalBldgMultipleOtherBuildingsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox15:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox15, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox15Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox15Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox25:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox25, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox25Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox25Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox50:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox50, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox50Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox50Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox500:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox500, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox500Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox500Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox1000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox1000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox1000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox1000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentapprox5000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox5000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox5000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentapprox5000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentGreaterThan10000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentGreaterThan10000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentGreaterThan10000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentGreaterThan10000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentGreaterThan20000:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentGreaterThan20000, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentGreaterThan20000Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentGreaterThan20000Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.NumberAnimalPresentUnknown:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentUnknown, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentUnknownReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumNumberAnimalPresentUnknownText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals7:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals7, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals7Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals7Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals8:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals8, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals8Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals8Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals9:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals9, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals9Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals9Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountEquals10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountEquals10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountBetween11to25:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween11to25, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween11to25Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween11to25Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountBetween26to50:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween26to50, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween26to50Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween26to50Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountBetween51to75:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween51to75, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween51to75Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween51to75Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountBetween76to100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween76to100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween76to100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountBetween76to100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountGreaterThan100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountGreaterThan150:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan150, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan150Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan150Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.BoatCountGreaterThan250:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan250, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan250Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumBoatCountGreaterThan250Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.OilDumpingFacilityPresent:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityPresent, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityPresentReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityPresentText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.OilDumpingFacilityAbsent:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityAbsent, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityAbsentReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityAbsentText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.OilDumpingFacilityNotObserved:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityNotObserved, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityNotObservedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityNotObservedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.OilDumpingFacilityNotApplicable:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityNotApplicable, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityNotApplicableReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumOilDumpingFacilityNotApplicableText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WastewaterDumpingStationPresent:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationPresent, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationPresentReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationPresentText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WastewaterDumpingStationAbsent:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationAbsent, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationAbsentReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationAbsentText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WastewaterDumpingStationNotObserved:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationNotObserved, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationNotObservedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWastewaterDumpingStationNotObservedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureSiteActive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureSiteActive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureSiteActiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureSiteActiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureSiteFallow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureSiteFallow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureSiteFallowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureSiteFallowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo7:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo7, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo7Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo7Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo8:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo8, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo8Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo8Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo9:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo9, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo9Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo9Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo15:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo15, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo15Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo15Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo20:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo20, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo20Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo20Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo25:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo25, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo25Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo25Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo30:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo30, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo30Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo30Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo50:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo50, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo50Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo50Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo60:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo60, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo60Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo60Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo70:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo70, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo70Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo70Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo80:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo80, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo80Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo80Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo90:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo90, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo90Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo90Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberEqualTo100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberEqualTo100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WatAquaCountNumberGreaterThan100:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberGreaterThan100, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberGreaterThan100Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWatAquaCountNumberGreaterThan100Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeSingleCage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleCage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleCageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleCageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeSingleFloatingBag:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleFloatingBag, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleFloatingBagReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleFloatingBagText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeSingleSubmergedLine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleSubmergedLine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleSubmergedLineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleSubmergedLineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeSingleLosterPound:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleLosterPound, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleLosterPoundReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleLosterPoundText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeSingleBarge:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleBarge, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleBargeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleBargeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeSingleBoat:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleBoat, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleBoatReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSingleBoatText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeCages:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeCages, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeCagesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeCagesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeFloatingBags:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeFloatingBags, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeFloatingBagsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeFloatingBagsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeSubmergedLines:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSubmergedLines, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSubmergedLinesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeSubmergedLinesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeLosterPounds:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeLosterPounds, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeLosterPoundsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeLosterPoundsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeBarges:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeBarges, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeBargesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeBargesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterAquacultureTypeBoats:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeBoats, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeBoatsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterAquacultureTypeBoatsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationShoreline:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationShoreline, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationShorelineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationShorelineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationWharf:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationWharf, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationWharfReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationWharfText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationBarge:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationBarge, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationBargeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationBargeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationIsland:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationIsland, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationIslandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationIslandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationWetland:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationWetland, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationWetlandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationWetlandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationSandBar:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationSandBar, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationSandBarReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationSandBarText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationRockOutcrop:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationRockOutcrop, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationRockOutcropReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationRockOutcropText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationAquacultureSite:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationAquacultureSite, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationAquacultureSiteReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationAquacultureSiteText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationOffShoreline:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationOffShoreline, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationOffShorelineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationOffShorelineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineLocationMudflat:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationMudflat, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationMudflatReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineLocationMudflatText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeShorelineBirds:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeShorelineBirds, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeShorelineBirdsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeShorelineBirdsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeGulls:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeGulls, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeGullsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeGullsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeCormorants:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeCormorants, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeCormorantsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeCormorantsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeDucksGeese:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeDucksGeese, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeDucksGeeseReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeDucksGeeseText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeLoons:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeLoons, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeLoonsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeLoonsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeSeaducks:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSeaducks, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSeaducksReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSeaducksText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeOther:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeOther, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeOtherReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeOtherText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeSeal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSeal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSealReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSealText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterTypesOfMarineLifeSeaOtter:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSeaOtter, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSeaOtterReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterTypesOfMarineLifeSeaOtterText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineSourcesOfContaminantRunoff:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantRunoff, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantRunoffReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantRunoffText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineSourcesOfContaminantExcrement:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantExcrement, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantExcrementReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantExcrementText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineSourcesOfContaminantEffluent:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantEffluent, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantEffluentReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantEffluentText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineSourcesOfContaminantEffluentMultiple:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantEffluentMultiple, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantEffluentMultipleReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminantEffluentMultipleText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.MarineSourcesOfContaminanMixedMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminanMixedMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminanMixedMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumMarineSourcesOfContaminanMixedMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantRunoff:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantRunoff, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantRunoffReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantRunoffText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantRunoffFromField:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantRunoffFromField, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantRunoffFromFieldReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantRunoffFromFieldText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantProcessingWater:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantProcessingWater, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantProcessingWaterReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantProcessingWaterText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantTankWater:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantTankWater, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantTankWaterReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantTankWaterText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantSewage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantSewage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantSewageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantSewageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantEffluent:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluent, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluentReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluentText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantDomesticExcrement:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantDomesticExcrement, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantDomesticExcrementReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantDomesticExcrementText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantMarineWashrooms:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantMarineWashrooms, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantMarineWashroomsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantMarineWashroomsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantLandMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantLandMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantLandMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantLandMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantSpills:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantSpills, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantSpillsReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantSpillsText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantWilldExcrement:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantWilldExcrement, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantWilldExcrementReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantWilldExcrementText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantEffluentMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluentMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluentMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluentMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SourcesOfContaminantEffluentLocation:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluentLocation, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluentLocationReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSourcesOfContaminantEffluentLocationText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageRunoffLand:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRunoffLand, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRunoffLandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRunoffLandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageThruConduit:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageThruConduit, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageThruConduitReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageThruConduitText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageSepticSystemLeachateField:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageSepticSystemLeachateField, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageSepticSystemLeachateFieldReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageSepticSystemLeachateFieldText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageRetentionTank:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRetentionTank, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRetentionTankReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRetentionTankText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageOpenTank:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOpenTank, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOpenTankReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOpenTankText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageSystemConstructedWetland:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageSystemConstructedWetland, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageSystemConstructedWetlandReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageSystemConstructedWetlandText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageOnSiteSystem:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOnSiteSystem, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOnSiteSystemReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOnSiteSystemText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageOffSiteSystem:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOffSiteSystem, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOffSiteSystemReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageOffSiteSystemText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SepticNoInformation:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSepticNoInformation, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSepticNoInformationReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSepticNoInformationText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageAnimalWasteStorage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageAnimalWasteStorage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageAnimalWasteStorageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageAnimalWasteStorageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageAnimalExcrement:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageAnimalExcrement, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageAnimalExcrementReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageAnimalExcrementText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageRunoffMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRunoffMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRunoffMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRunoffMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageThruConduitMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageThruConduitMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageThruConduitMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageThruConduitMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageRetentionTankMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRetentionTankMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRetentionTankMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageRetentionTankMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SewageMixedMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageMixedMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageMixedMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSewageMixedMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazardousLevelHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazardousLevelMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazardousLevelLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazardousLevelHighMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelHighMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelHighMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelHighMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazardousLevelMedMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelMedMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelMedMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelMedMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazardousLevelLowMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelLowMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelLowMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazardousLevelLowMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonVisualH:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualH, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualHReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualHText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonNumbersH:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersH, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersHReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersHText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonDiscussH:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussH, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussHReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussHText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonRainfallH:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallH, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallHReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallHText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonVisualM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonNumbersM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonDiscussM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonRainfallM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonVisualHMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualHMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualHMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualHMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonNumbersHMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersHMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersHMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersHMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonDiscussHMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussHMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussHMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussHMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonRainfallHMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallHMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallHMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallHMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonVisualMMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualMMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualMMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonVisualMMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonNumbersMMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersMMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersMMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonNumbersMMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonDiscussMMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussMMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussMMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonDiscussMMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonRainfallMMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallMMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallMMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonRainfallMMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonHistoricDataH:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataH, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataHReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataHText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonHIstoricDataM:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHIstoricDataM, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHIstoricDataMReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHIstoricDataMText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonHistoricDataHMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataHMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataHMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataHMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ObservationHazReasonHistoricDataMMarine:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataMMarine, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataMMarineReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumObservationHazReasonHistoricDataMMarineText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwayLandHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwayLandMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwayLandLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwayLandLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathWayMarineHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathWayMarineMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathWayMarineLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayMarineLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathWayInActive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayInActive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayInActiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayInActiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathWayNotDetermined:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayNotDetermined, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayNotDeterminedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathWayNotDeterminedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstCulvert:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvert, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvertReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvertText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstPipe:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipe, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstStream:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStream, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStreamReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStreamText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstDitch:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitch, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitchReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitchText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstSurfaceDrainage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstSubSurfaceDrainage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstDirectFlow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstCulvertMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvertMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvertMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvertMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstPipeMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstStreamMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStreamMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStreamMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStreamMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstDitchMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitchMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitchMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitchMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstSurfaceDrainageMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainageMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainageMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainageMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstSubSurfaceDrainageMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainageMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainageMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainageMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstDirectFlowMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlowMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlowMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlowMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstCulvertLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvertLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvertLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstCulvertLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstPipeLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstStreamLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStreamLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStreamLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstStreamLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstDitchLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitchLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitchLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDitchLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstSurfaceDrainageLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainageLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainageLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSurfaceDrainageLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstSubSurfaceDrainageLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainageLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainageLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstSubSurfaceDrainageLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstDirectFlowLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlowLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlowLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectFlowLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstInActive:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstInActive, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstInActiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstInActiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstNotDetermined:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstNotDetermined, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstNotDeterminedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstNotDeterminedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstMunicipalityONSITE:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMunicipalityONSITE, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMunicipalityONSITEReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMunicipalityONSITEText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstDirectMARINE:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectMARINE, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectMARINEReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstDirectMARINEText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstPipeMARINE:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeMARINE, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeMARINEReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPipeMARINEText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstLandDisposalMARINE:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstLandDisposalMARINE, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstLandDisposalMARINEReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstLandDisposalMARINEText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstMunicipalityOFFSITE:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMunicipalityOFFSITE, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMunicipalityOFFSITEReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMunicipalityOFFSITEText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstMixesMARINE:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMixesMARINE, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMixesMARINEReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstMixesMARINEText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstPondLake:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLake, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLakeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLakeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstPondLakeMED:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLakeMED, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLakeMEDReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLakeMEDText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceFirstPondLakeLOW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLakeLOW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLakeLOWReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceFirstPondLakeLOWText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeStream:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStream, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStreamReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStreamText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeDitch:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitch, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitchReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitchText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeSurfaceDrainage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeSubSurfaceDrainage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeDirectflow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeStreamMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStreamMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStreamMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStreamMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeDitchMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitchMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitchMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitchMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeSurfaceDrainageMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainageMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainageMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainageMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeSubSurfaceDrainageMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainageMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainageMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainageMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeDirectflowMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflowMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflowMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflowMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeStreamLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStreamLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStreamLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeStreamLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeDitchLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitchLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitchLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDitchLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeSurfaceDrainageLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainageLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainageLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSurfaceDrainageLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeSubSurfaceDrainageLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainageLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainageLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeSubSurfaceDrainageLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondPipeDirectflowLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflowLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflowLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondPipeDirectflowLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertStream:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStream, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStreamReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStreamText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertDitch:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitch, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitchReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitchText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertSurfaceDrainage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertSubSurfaceDrainage:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainage, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainageReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainageText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertDirectFlow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertStreamMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStreamMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStreamMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStreamMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertDitchMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitchMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitchMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitchMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertSurfaceDrainageMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainageMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainageMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainageMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertSubSurfaceDrainageMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainageMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainageMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainageMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertDirectFlowMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlowMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlowMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlowMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertStreamLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStreamLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStreamLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertStreamLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertDitchLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitchLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitchLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDitchLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertSurfaceDrainageLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainageLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainageLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSurfaceDrainageLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertSubSurfaceDrainageLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainageLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainageLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertSubSurfaceDrainageLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PathwaySourceSecondCulvertDirectFlowLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlowLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlowLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPathwaySourceSecondCulvertDirectFlowLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox7:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox8:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox9:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox10:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersBetween11And25:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersBetween26And40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersGreaterThan40:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox1Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox2Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox3Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox4Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox5Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox6Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox7Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox8Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox9Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox10Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersBetween11And25Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersBetween26And40Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersGreaterThan40Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox1Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox1LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox2Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox2LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox3Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox3LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox4Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox4LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox5Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox5LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox6Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox6LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox7Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox7LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox8Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox8LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox9Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox9LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersApprox10Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersApprox10LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersBetween11And25Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween11And25LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersBetween26And40Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersBetween26And40LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WidthInMetersGreaterThan40Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWidthInMetersGreaterThan40LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeMedium:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMedium, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMediumReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMediumText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeNA:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNA, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNAReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNAText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeLowMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLowMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLowMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLowMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeMediumMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMediumMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMediumMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMediumMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeHighMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHighMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHighMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHighMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeNAMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNAMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNAMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNAMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeLowLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLowLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLowLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeLowLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeMediumLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMediumLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMediumLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeMediumLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeHighLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHighLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHighLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeHighLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AreaSlopeNALow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNALow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNALowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAreaSlopeNALowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeLowHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeMediumHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeHighHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeNAHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNAHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNAHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNAHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeLowMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeMediumMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeHighMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeNAMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNAMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNAMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNAMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeLowLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeLowLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeMediumLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeMediumLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeHighLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeHighLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterCourseAreaSlopeNALow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNALow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNALowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterCourseAreaSlopeNALowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZonePresentHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZoneAbsentHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZoneNoInfoHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZonePresentMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZoneAbsentMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZoneNoInfoMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZonePresentLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZonePresentLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZoneAbsentLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneAbsentLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianZoneNoInfoLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianZoneNoInfoLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianGrassedZonePresentHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianGrassedZonePresentMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ShorelineRiparianGrassedZonePresentLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumShorelineRiparianGrassedZonePresentLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureCulvertHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructurePipeHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBridgeHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBermHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureWetlandHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughNoStructureHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureCulvertMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructurePipeMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBridgeMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBermMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureWetlandMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughNoStructureMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureCulvertLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructurePipeLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructurePipeLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBridgeLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBermLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureWetlandLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughNoStructureLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughNoStructureLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughSaltwaterMarshHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughSaltwaterMarshMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughSaltwaterMarshLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughSaltwaterMarshLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughBeaverDamHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughBeaverDamMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughBeaverDamLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughBeaverDamLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureCulvertWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBridgeWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBermWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureWetlandWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StructureInRoadNoStructureWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureCulvertWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBridgeWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBermWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureWetlandWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StructureInRoadNoStructureWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureCulvertWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureCulvertWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBridgeWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBridgeWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBermWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBermWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureWetlandWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureWetlandWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StructureInRoadNoStructureWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureInRoadNoStructureWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureSaltMarshWatercourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWatercourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWatercourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWatercourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureSaltMarshWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureSaltMarshWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureSaltMarshWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBeaverDamWatercourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWatercourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWatercourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWatercourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBeaverDamWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowThroughStructureBeaverDamWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowThroughStructureBeaverDamWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters0HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters5HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters10HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters20HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters30HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters40HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters50HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters75HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters100HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters150HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters200HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters300HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters400HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters600HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters800HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters1000HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetersGreaterThan1000HighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersGreaterThan1000HighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersGreaterThan1000HighWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetersInfoRequiredHighW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersInfoRequiredHighW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersInfoRequiredHighWReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersInfoRequiredHighWText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters0MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters5MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters10MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters20MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters30MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters40MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters50MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters75MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters100MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters150MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters200MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters300MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters400MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters600MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters800MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters1000MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetGrThan1000MedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetGrThan1000MedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetGrThan1000MedWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetInfoReqMedW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqMedW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqMedWReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqMedWText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters0LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters5LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters10LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters20LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters30LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters40LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters50LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters75LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters100LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters150LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters200LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters300LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters400LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters600LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters800LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters1000LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetGrThan1000LowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetGrThan1000LowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetGrThan1000LowWReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetInfoReqLowW:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqLowW, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqLowWReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqLowWText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo1High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo2High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo3High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo4High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo5High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo6High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo7High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo8High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo9High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo10High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo1Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo2Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo3Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo4Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo5Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo6Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo7Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo8Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo9Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo10Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo1Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo1LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo2Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo2LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo3Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo3LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo4Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo4LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo5Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo5LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo6Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo6LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo7Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo7LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo8Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo8LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo9Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo9LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumberEqualTo10Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumberEqualTo10LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeCountNumbeNoInformation:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumbeNoInformation, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumbeNoInformationReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeCountNumbeNoInformationText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersEqual15High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersEqual30High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30HighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30HighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween31and50cmHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween51and100cmHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween101and200cmHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween201and300cmHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween301and400cmHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween401and500cmHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersGreaterThan500cmHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterNoInformationHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersEqual15Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersEqual30Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30MedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30MedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween31and50cmMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween51and100cmMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween101and200cmMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween201and300cmMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween301and400cmMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween401and500cmMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersGreaterThan500cmMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterNoInformationMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersEqual15Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual15LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersEqual30Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30LowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersEqual30LowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween31and50cmLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween31and50cmLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween51and100cmLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween51and100cmLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween101and200cmLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween101and200cmLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween201and300cmLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween201and300cmLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween301and400cmLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween301and400cmLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersBetween401and500cmLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersBetween401and500cmLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterInCentimetersGreaterThan500cmLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterInCentimetersGreaterThan500cmLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DiameterNoInformationLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDiameterNoInformationLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DitchAlongRoadHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DitchAcrossPropertiesHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DitchAlongRoadMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DitchAcrossPropertiesMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DitchAlongRoadLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAlongRoadLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DitchAcrossPropertiesLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDitchAcrossPropertiesLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainagePavedSurfacesHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainageVegetatedSurfacesHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainageBareSoilSurfacesHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainagePavedSurfacesMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainageVegetatedSurfacesMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainageBareSoilSurfacesMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainagePavedSurfacesLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainagePavedSurfacesLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainageVegetatedSurfacesLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageVegetatedSurfacesLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DrainageBareSoilSurfacesLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDrainageBareSoilSurfacesLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelHiHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHiHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHiHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHiHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelMedHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMedHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMedHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMedHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelLoHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLoHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLoHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLoHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelRainHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelHighMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelMediumMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelLowMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelRainfallMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelHighLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelMediumLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelLowLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelRainfallLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelHighWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelMediumWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelLowWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelRainfallWaterCourseHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelHighWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelMediumWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelLowWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelRainfallWaterCourseMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelHighWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelHighWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelMediumWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelMediumWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelLowWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelLowWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FlowLevelRainfallWaterCourseLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFlowLevelRainfallWaterCourseLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowlHighHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowMediumHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowLowHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowRainfallHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowNAHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNAHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNAHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNAHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowlHighMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowMediumMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowLowMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowRainfallMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowNAMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNAMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNAMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNAMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowlHighLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowlHighLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowMediumLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowMediumLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowLowLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowLowLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowRainfallLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowRainfallLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.PipeFlowNALow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNALow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNALowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumPipeFlowNALowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters0High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters5High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters10High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters20High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters30High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters40High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters50High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters75High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters100High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters150High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters200High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters300High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters400High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters600High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters800High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters1000High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetersGreaterThan1000High:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersGreaterThan1000High, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersGreaterThan1000HighReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetersInfoRequiredHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersInfoRequiredHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersInfoRequiredHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetersInfoRequiredHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters0Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters5Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters10Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters20Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters30Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters40Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters50Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters75Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters100Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters150Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters200Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters300Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters400Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters600Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters800Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters1000Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetGrThan1000Med:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetGrThan1000Med, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetGrThan1000MedReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetInfoReqMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters0Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters0LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters5Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters5LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters10Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters10LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters20Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters20LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters30Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters30LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters40Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters40LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters50Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters50LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters75Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters75LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters100Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters100LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters150Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters150LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters200Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters200LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters300Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters300LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters400Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters400LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters600Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters600LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters800Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters800LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMeters1000Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMeters1000LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetGrThan1000Low:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetGrThan1000Low, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetGrThan1000LowReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToWaterInMetInfoReqLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToWaterInMetInfoReqLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SecondaryHazardousLevelHighIndirect:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelHighIndirect, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelHighIndirectReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelHighIndirectText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SecondaryHazardousLevelMedIndirect:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelMedIndirect, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelMedIndirectReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelMedIndirectText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SecondaryHazardousLevelLowIndirect:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelLowIndirect, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelLowIndirectReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelLowIndirectText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SecondaryHazardousLevelHighDirect:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelHighDirect, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelHighDirectReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelHighDirectText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SecondaryHazardousLevelMedDirect:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelMedDirect, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelMedDirectReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelMedDirectText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SecondaryHazardousLevelLowDirect:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelLowDirect, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelLowDirectReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSecondaryHazardousLevelLowDirectText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactRatingDirectHighHaz:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectHighHaz, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectHighHazReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectHighHazText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactRatingindirectHighHaz:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectHighHaz, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectHighHazReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectHighHazText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactRatingDirectMedHaz:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectMedHaz, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectMedHazReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectMedHazText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactRatingindirectMedHaz:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectMedHaz, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectMedHazReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectMedHazText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactRatingDirectLowHaz:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectLowHaz, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectLowHazReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingDirectLowHazText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactRatingindirectLowHaz:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectLowHaz, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectLowHazReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingindirectLowHazText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactRatingNone:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingNone, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingNoneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactRatingNoneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusDefiniteHi:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteHi, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteHiReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteHiText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusPotentialHi:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialHi, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialHiReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialHiText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusDefiniteMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusPotentialMed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialMed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialMedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialMedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusDefiniteLo:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteLo, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteLoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusDefiniteLoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusPotentialLo:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialLo, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialLoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusPotentialLoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusNonPollutionSource:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusNonPollutionSource, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusNonPollutionSourceReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusNonPollutionSourceText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StatusNotDetermined:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusNotDetermined, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusNotDeterminedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStatusNotDeterminedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesDirectHighYes:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectHighYes, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectHighYesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectHighYesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesDirectHighNo:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectHighNo, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectHighNoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectHighNoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesIndirectHighYes:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectHighYes, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectHighYesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectHighYesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesIndirectHighNo:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectHighNo, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectHighNoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectHighNoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesDirectMedYes:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectMedYes, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectMedYesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectMedYesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesDirectMedNo:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectMedNo, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectMedNoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesDirectMedNoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesIndirectMedYes:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectMedYes, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectMedYesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectMedYesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ConductDilutionAnalysesIndirectMedNo:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectMedNo, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectMedNoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumConductDilutionAnalysesIndirectMedNoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SuggestedRiskLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SuggestedRiskModerate:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskModerate, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskModerateReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskModerateText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SuggestedRiskHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SuggestedRiskInfoRequired:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskInfoRequired, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskInfoRequiredReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSuggestedRiskInfoRequiredText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskLow:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskLow, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskLowReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskLowText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskModerate:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskModerate, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskModerateReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskModerateText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskHigh:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskHigh, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskHighReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskHighText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskNotDetermined:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskNotDetermined, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskNotDeterminedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskNotDeterminedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskConfirmationNotConfirmed:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationNotConfirmed, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationNotConfirmedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationNotConfirmedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskConfirmationConfirmedVisual:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationConfirmedVisual, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationConfirmedVisualReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationConfirmedVisualText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RiskConfirmationConfirmedWater:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationConfirmedWater, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationConfirmedWaterReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRiskConfirmationConfirmedWaterText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FollowupRequired:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFollowupRequired, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFollowupRequiredReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFollowupRequiredText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.FollowupCompleted:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFollowupCompleted, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFollowupCompletedReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumFollowupCompletedText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypeOfSourceCircular:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypeOfSourceCircular, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypeOfSourceCircularReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypeOfSourceCircularText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TypeOfSourceWaterWays:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypeOfSourceWaterWays, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypeOfSourceWaterWaysReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTypeOfSourceWaterWaysText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterwayWidthInMetersApprox1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterwayWidthInMetersApprox1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterwayWidthInMetersApprox1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterwayWidthInMetersApprox1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.WaterwayWidthInMetersApprox2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterwayWidthInMetersApprox2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterwayWidthInMetersApprox2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumWaterwayWidthInMetersApprox2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AverageDepthApprox50cm1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox50cm1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox50cm1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox50cm1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AverageDepthApprox1m1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox1m1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox1m1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox1m1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AverageDepthApprox50cm2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox50cm2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox50cm2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox50cm2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.AverageDepthApprox1m2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox1m2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox1m2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumAverageDepthApprox1m2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StreamVolSqMeterEquals05m2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals05m2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals05m2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals05m2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StreamVolSqMeterEquals1m2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals1m2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals1m2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals1m2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StreamVolSqMeterEquals3m2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals3m2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals3m2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStreamVolSqMeterEquals3m2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat30SecondsHalf:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsHalf, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsHalfReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsHalfText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat1MinuteHalf:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteHalf, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteHalfReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteHalfText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat2MinutesHalf:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesHalf, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesHalfReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesHalfText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat30SecondsOne:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsOne, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsOneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsOneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat1MinuteOne:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteOne, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteOneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteOneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat2MinutesOne:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesOne, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesOneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesOneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat30SecondsThree:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsThree, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsThreeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat30SecondsThreeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat1MinuteThree:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteThree, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteThreeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat1MinuteThreeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.TimeToFloat2MinutesThree:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesThree, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesThreeReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumTimeToFloat2MinutesThreeText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StructureDiameter50cm:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureDiameter50cm, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureDiameter50cmReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureDiameter50cmText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.StructureDiameter1m:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureDiameter1m, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureDiameter1mReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumStructureDiameter1mText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HeigthOfFlowApprox50Percent50cm:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox50Percent50cm, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox50Percent50cmReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox50Percent50cmText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HeigthOfFlowApprox75Percent50cm:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox75Percent50cm, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox75Percent50cmReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox75Percent50cmText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HeigthOfFlowApprox25Percent1m:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox25Percent1m, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox25Percent1mReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox25Percent1mText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HeigthOfFlowApprox50Percent1m:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox50Percent1m, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox50Percent1mReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox50Percent1mText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.HeigthOfFlowApprox75Percent1m:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox75Percent1m, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox75Percent1mReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumHeigthOfFlowApprox75Percent1mText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DischargeM3Day1:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day1, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day1Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day1Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DischargeM3Day2:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day2, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day2Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day2Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DischargeM3Day3:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day3, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day3Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day3Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DischargeM3Day4:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day4, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day4Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day4Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DischargeM3Day5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DischargeM3Day6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDischargeM3Day6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCount500For4320:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For4320, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For4320Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For4320Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCoun1000For4320:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For4320, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For4320Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For4320Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCount500For8640:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For8640, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For8640Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For8640Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCoun1000For8640:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For8640, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For8640Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For8640Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCount500For17280:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For17280, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For17280Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For17280Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCoun1000For17280:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For17280, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For17280Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For17280Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCount500For25920:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For25920, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For25920Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For25920Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCoun1000For25920:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For25920, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For25920Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For25920Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCount500For43200:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For43200, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For43200Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For43200Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCoun1000For43200:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For43200, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For43200Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For43200Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCount500For64800:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For64800, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For64800Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCount500For64800Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SampleFecalCoun1000For64800:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For64800, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For64800Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSampleFecalCoun1000For64800Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadPerDayA:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayA, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayAReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayAText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadPerDayB:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayB, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayBReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayBText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadPerDayC:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayC, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayCReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayCText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadPerDayD:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayD, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayDReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayDText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadPerDayE:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayE, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayEReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayEText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadPerDayF:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayF, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayFReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayFText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadPerDayG:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayG, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayGReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayGText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.LoadPerDayH:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayH, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayHReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumLoadPerDayHText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeA:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeA, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeAReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeAText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeB:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeB, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeBReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeBText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeC:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeC, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeCReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeCText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeD:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeD, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeDReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeDText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeE:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeE, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeEReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeEText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeF:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeF, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeFReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeFText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeG:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeG, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeGReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeGText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DilutionVolumeH:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeH, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeHReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDilutionVolumeHText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewBrunswick2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNovaScotia2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionPEI2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewfoundland2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionQuebec2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionBritishC2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewBrunswick3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNovaScotiak3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionPEIk3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewfoundlandk3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundlandk3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundlandk3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundlandk3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionQuebeck3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebeck3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebeck3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebeck3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionBritishCk3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishCk3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishCk3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishCk3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewBrunswick6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNovaScotia6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionPEI6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewfoundland6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionQuebec6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionBritishC6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewBrunswick9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNovaScotiak39E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak39E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak39E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak39E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionPEIk9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewfoundlandk9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundlandk9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundlandk9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundlandk9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionQuebeck9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebeck9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebeck9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebeck9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionBritishCk9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishCk9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishCk9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishCk9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewBrunswick1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNovaScotia1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionPEI1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewfoundland1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionQuebec1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionBritishC1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewBrunswick2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNovaScotiak2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotiak2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionPEIk2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEIk2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewfoundland2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionQuebec2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionBritishC2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewBrunswick3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNovaScotia3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionPEI3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewfoundland3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionQuebec3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionBritishC3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewBrunswick5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewBrunswick5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNovaScotia5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNovaScotia5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionPEI5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionPEI5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionNewfoundland5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionNewfoundland5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionQuebec5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionQuebec5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.RegionBritishC5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumRegionBritishC5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB1To2V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB3To4V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB5To7V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB9To12V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB13To15V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals16V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB17To18V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals19V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB1To2V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB3To4V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB5To7V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB9To12V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB13To15V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals16V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB17To18V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals19V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB1To2V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB3To4V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB5To7V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB9To12V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB13To15V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals16V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB17To18V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals19V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB1To2V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB3To4V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB5To7V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB9To12V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB13To15V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals16V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB17To18V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals19V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB1To2V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB3To4V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB5To7V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB9To12V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB13To15V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals16V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB17To18V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals19V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB1To2V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB3To4V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB5To7V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB9To12V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB13To15V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals16V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB17To18V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals19V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB1To2V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB3To4V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB5To7V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB9To12V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB13To15V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals16V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB17To18V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals19V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB1To2V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB1To2V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB3To4V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB3To4V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB5To7V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB5To7V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB9To12V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB9To12V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB13To15V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB13To15V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals16V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals16V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNB17To18V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNB17To18V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNBEquals19V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNBEquals19V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS2To3V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS4To6V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals7V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS8To14V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNEquals15V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals16V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals18V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals20V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS2To3V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS4To6V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals7V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS8To14V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNEquals15V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals16V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals18V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals20V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS2To3V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS4To6V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals7V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS8To14V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNEquals15V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals16V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals18V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals20V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS2To3V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS4To6V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals7V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS8To14V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNEquals15V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals16V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals18V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals20V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS2To3V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS4To6V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals7V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS8To14V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNEquals15V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals16V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals18V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals20V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS2To3V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS4To6V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals7V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS8To14V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNEquals15V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals16V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals18V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals20V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS2To3V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS4To6V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals7V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS8To14V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNEquals15V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals16V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals18V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals20V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS2To3V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS2To3V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS4To6V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS4To6V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals7V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals7V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNS8To14V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNS8To14V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNEquals15V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNEquals15V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals16V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals16V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals18V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals18V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNSEquals20V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNSEquals20V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI1To4Plus9V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI5To6V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI7To8V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI1To4Plus9V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI5To6V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI7To8V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI1To4Plus9V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI5To6V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI7To8V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI1To4Plus9V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI5To6V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI7To8V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI1To4Plus9V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI5To6V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI7To8V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI1To4Plus9V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI5To6V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI7To8V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI1To4Plus9V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI5To6V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI7To8V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI1To4Plus9V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI1To4Plus9V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI5To6V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI5To6V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInPEI7To8V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInPEI7To8V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual2V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfld6To7V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual15V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual29V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual30V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual35V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual43V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual2V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfld6To7V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual15V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual29V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual30V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual35V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual43V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual2V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfld6To7V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual15V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual29V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual30V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual35V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual43V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual2V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfld6To7V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual15V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual29V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual30V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual35V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual43V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual2V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfld6To7V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual15V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual29V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual30V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual35V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual43V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual2V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfld6To7V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual15V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual29V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual30V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual35V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual43V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual2V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfld6To7V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual15V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual29V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual30V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual35V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual43V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual2V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual2V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfld6To7V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfld6To7V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual15V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual15V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual29V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual29V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual30V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual30V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual35V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual35V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInNfldEqual43V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInNfldEqual43V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualAGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualGGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecTandPandNGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecLandKandSandPGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualBGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ01GP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ02GP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ03GP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ04GP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualAGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualGGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecTandPandNGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecLandKandSandPGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualBGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ01GP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ02GP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ03GP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ04GP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualAGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualGGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecTandPandNGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecLandKandSandPGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualBGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ01GP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ02GP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ03GP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ04GP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualAGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualGGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecTandPandNGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecLandKandSandPGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualBGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ01GP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ02GP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ03GP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ04GP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualAGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualGGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecTandPandNGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecLandKandSandPGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualBGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ01GP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ02GP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ03GP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ04GP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualAGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualGGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecTandPandNGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecLandKandSandPGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualBGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ01GP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ02GP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ03GP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ04GP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualAGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualGGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecTandPandNGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecLandKandSandPGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualBGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ01GP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ02GP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ03GP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ04GP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualAGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualAGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualGGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualGGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecTandPandNGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecTandPandNGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecLandKandSandPGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecLandKandSandPGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualBGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualBGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ01GP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ01GP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ02GP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ02GP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ03GP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ03GP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInQuebecEqualZ04GP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInQuebecEqualZ04GP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBEGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBWGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualNCQCGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualWCVIGP1V2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBEGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBWGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualNCQCGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualWCVIGP1V3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBEGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBWGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualNCQCGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualWCVIGP1V6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBEGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBWGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualNCQCGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualWCVIGP1V9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBEGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBWGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualNCQCGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualWCVIGP1V1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBEGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBWGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualNCQCGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualWCVIGP1V2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBEGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBWGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualNCQCGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualWCVIGP1V3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBEGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBEGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualGBWGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualGBWGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualNCQCGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualNCQCGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SectorsInBCEqualWCVIGP1V5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSectorsInBCEqualWCVIGP1V5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater1mV2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater2mV2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater5mV2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater8mV2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater14mV2E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV2E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV2E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV2E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater1mV3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater2mV3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater5mV3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater8mV3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater14mV3E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV3E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV3E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV3E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater1mV6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater2mV6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater5mV6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater8mV6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater14mV6E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV6E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV6E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV6E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater1mV9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater2mV9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater5mV9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater8mV9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater14mV9E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV9E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV9E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV9E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater1mV1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater2mV1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater5mV1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater8mV1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater14mV1E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV1E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV1E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV1E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater1mV2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater2mV2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater5mV2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater8mV2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater14mV2E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV2E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV2E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV2E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater1mV3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater2mV3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater5mV3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater8mV3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater14mV3E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV3E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV3E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV3E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater1mV5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater1mV5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater2mV5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater2mV5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater5mV5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater5mV5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater8mV5E6:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV5E6, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV5E6Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater8mV5E6Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DepthOfWater14mV5E5:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV5E5, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV5E5Report, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDepthOfWater14mV5E5Text, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E5one:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5one, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5oneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5oneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E5Two3E5Two:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5Two3E5Two, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5Two3E5TwoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5Two3E5TwoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E5eight:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5eight, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5eightReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5eightText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E5fourteen:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5fourteen, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5fourteenReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5fourteenText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius3E5one:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5one, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5oneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5oneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius3E5five:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5five, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5fiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5fiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius3E5eight:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5eight, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5eightReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5eightText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius3E5fourteen:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5fourteen, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5fourteenReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E5fourteenText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E5five6E5one:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5five6E5one, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5five6E5oneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E5five6E5oneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius6E5two:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5two, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5twoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5twoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius6E5five:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5five, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5fiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5fiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius6E5eight:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5eight, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5eightReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E5eightText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius6E59E5fourteen:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E59E5fourteen, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E59E5fourteenReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius6E59E5fourteenText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius9E5one:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5one, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5oneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5oneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius9E5two:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5two, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5twoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5twoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius9E5five:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5five, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5fiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5fiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius9E5eight:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5eight, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5eightReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius9E5eightText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius1E6one:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6one, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6oneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6oneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius1E6two:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6two, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6twoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6twoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius1E6five:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6five, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6fiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6fiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E6Eight2E6Eight3E6eight:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6Eight2E6Eight3E6eight, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6Eight2E6Eight3E6eightReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6Eight2E6Eight3E6eightText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius1E6fourteen:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6fourteen, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6fourteenReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius1E6fourteenText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E6one:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6one, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6oneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6oneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E6two:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6two, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6twoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6twoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E6Five3E6Five5E6five:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6Five3E6Five5E6five, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6Five3E6Five5E6fiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6Five3E6Five5E6fiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius2E6fourteen:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6fourteen, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6fourteenReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius2E6fourteenText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius3E6Two5E6Two2E5five:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E6Two5E6Two2E5five, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E6Two5E6Two2E5fiveReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E6Two5E6Two2E5fiveText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius3E6one:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E6one, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E6oneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E6oneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius3E65E6fourteen:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E65E6fourteen, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E65E6fourteenReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius3E65E6fourteenText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius5E6one:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius5E6one, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius5E6oneReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius5E6oneText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.SurfaceAreaImpactRadius5E6eight:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius5E6eight, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius5E6eightReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumSurfaceAreaImpactRadius5E6eightText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactZoneYes:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneYes, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneYesReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneYesText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactZonePotential:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZonePotential, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZonePotentialReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZonePotentialText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactZoneNo:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneNo, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneNoReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneNoText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.ImpactZoneNotSure:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneNotSure, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneNotSureReport, retStrReport);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumImpactZoneNotSureText, retStrText);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters0W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters0W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters0WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters5W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters5W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters5WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters10W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters10W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters10WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters20W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters20W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters20WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters30W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters30W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters30WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters40W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters40W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters40WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters50W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters50W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters50WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters75W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters75W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters75WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters100W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters100W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters100WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters150W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters150W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters150WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters200W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters200W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters200WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters300W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters300W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters300WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters400W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters400W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters400WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters600W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters600W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters600WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters800W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters800W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters800WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters1000W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters1000W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters1000WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMetersGreaterThan1000W:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMetersGreaterThan1000W, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMetersGreaterThan1000WReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters5WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters5WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters5WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters10WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters10WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters10WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters20WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters20WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters20WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters30WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters30WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters30WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters40WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters40WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters40WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters50WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters50WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters50WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters75WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters75WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters75WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters100WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters100WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters100WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters150WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters150WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters150WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters200WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters200WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters200WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters300WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters300WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters300WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters400WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters400WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters400WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters600WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters600WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters600WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters800WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters800WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters800WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters1000WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters1000WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters1000WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMetersGreaterThan1000WAnchor:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMetersGreaterThan1000WAnchor, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMetersGreaterThan1000WAnchorReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters5WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters5WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters5WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters10WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters10WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters10WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters20WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters20WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters20WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters30WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters30WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters30WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters40WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters40WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters40WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters50WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters50WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters50WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters75WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters75WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters75WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters100WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters100WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters100WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters150WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters150WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters150WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters200WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters200WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters200WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters300WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters300WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters300WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters400WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters400WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters400WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters600WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters600WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters600WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters800WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters800WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters800WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMeters1000WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters1000WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMeters1000WDisposalReport, retStrReport);
                    }
                    break;
                    case PolSourceObsInfoEnum.DistanceToShoreInMetersGreaterThan1000WDisposal:
                    {
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMetersGreaterThan1000WDisposal, retStr);
                        Assert.Equal(CulturePolSourcesRes.PolSourceInfoEnumDistanceToShoreInMetersGreaterThan1000WDisposalReport, retStrReport);
                    }
                    break;
                }
            }

            retStr = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), 1000000, null);
            Assert.Equal(CultureEnumsRes.CSSPError.ToString(), retStr);
            retStrDesc = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), 1000000, PolSourceObsInfoTypeEnum.Description);
            Assert.Equal(CultureEnumsRes.CSSPError.ToString(), retStrDesc);
            retStrReport = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), 1000000, PolSourceObsInfoTypeEnum.Report);
            Assert.Equal("", retStrReport);
            retStrText = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), 1000000, PolSourceObsInfoTypeEnum.Text);
            Assert.Equal("", retStrText);
            retStrInit = enums.GetResValueForTypeAndID(typeof(PolSourceObsInfoEnum), 1000000, PolSourceObsInfoTypeEnum.Initial);
            Assert.Equal("", retStrInit);
        }
    }
}
