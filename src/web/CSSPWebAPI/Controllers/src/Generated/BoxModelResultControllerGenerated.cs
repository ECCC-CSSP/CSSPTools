/*
 * Auto generated from the CSSPCodeWriter.proj by clicking on the [[ModelClassName]ControllerGenerated.cs] button
 *
 * Do not edit this file.
 *
 */ 

using CSSPEnums;
using CSSPModels;
using CSSPServices;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;

namespace CSSPWebAPI.Controllers
{
    [Route("api/[controller]")]
    public partial class BoxModelResultController : BaseController
    {
        #region Variables
        #endregion Variables

        #region Properties
        #endregion Properties

        #region Constructors
        public BoxModelResultController(DatabaseTypeEnum dbt = DatabaseTypeEnum.SqlServerTestDB) : base(dbt)
        {
        }
        #endregion Constructors

        #region Functions public
        // GET api/boxModelResult
        [HttpGet]
        public IActionResult GetBoxModelResultList(string lang = "en", int skip = 0, int take = 200,
            string asc = "", string desc = "", string where = "")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                BoxModelResultService boxModelResultService = new BoxModelResultService(new Query() { Lang = lang }, db, ContactID);

                boxModelResultService.Query = boxModelResultService.FillQuery(typeof(BoxModelResult), lang, skip, take, asc, desc, where);

                 if (boxModelResultService.Query.HasErrors)
                 {
                     return Ok(new List<BoxModelResult>()
                     {
                         new BoxModelResult()
                         {
                             HasErrors = boxModelResultService.Query.HasErrors,
                             ValidationResults = boxModelResultService.Query.ValidationResults,
                         },
                     }.ToList());
                 }
                 else
                 {
                     return Ok(boxModelResultService.GetBoxModelResultList().ToList());
                 }
            }
        }
        // GET api/boxModelResult/1
        [HttpGet("{BoxModelResultID}")]
        public IActionResult GetBoxModelResultWithID(int BoxModelResultID, string lang = "en")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                BoxModelResultService boxModelResultService = new BoxModelResultService(new Query() { Lang = lang }, db, ContactID);

                boxModelResultService.Query = boxModelResultService.FillQuery(typeof(BoxModelResult), lang, 0, 1, "", "");

                BoxModelResult boxModelResult = new BoxModelResult();
                boxModelResult = boxModelResultService.GetBoxModelResultWithBoxModelResultID(BoxModelResultID);

                if (boxModelResult == null)
                {
                    return NotFound();
                }

                return Ok(boxModelResult);
            }
        }
        // POST api/boxModelResult
        [HttpPost]
        public IActionResult Post(BoxModelResult boxModelResult, string lang = "en")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                BoxModelResultService boxModelResultService = new BoxModelResultService(new Query() { Lang = lang }, db, ContactID);

                if (!boxModelResultService.Add(boxModelResult))
                {
                    return BadRequest(String.Join("|||", boxModelResult.ValidationResults));
                }
                else
                {
                    boxModelResult.ValidationResults = null;
                    return Created(Url.ToString(), boxModelResult);
                }
            }
        }
        // PUT api/boxModelResult
        [HttpPut]
        public IActionResult Put(BoxModelResult boxModelResult, string lang = "en")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                BoxModelResultService boxModelResultService = new BoxModelResultService(new Query() { Lang = lang }, db, ContactID);

                if (!boxModelResultService.Update(boxModelResult))
                {
                    return BadRequest(String.Join("|||", boxModelResult.ValidationResults));
                }
                else
                {
                    boxModelResult.ValidationResults = null;
                    return Ok(boxModelResult);
                }
            }
        }
        // DELETE api/boxModelResult
        [HttpDelete]
        public IActionResult Delete(BoxModelResult boxModelResult, string lang = "en")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                BoxModelResultService boxModelResultService = new BoxModelResultService(new Query() { Lang = lang }, db, ContactID);

                if (!boxModelResultService.Delete(boxModelResult))
                {
                    return BadRequest(String.Join("|||", boxModelResult.ValidationResults));
                }
                else
                {
                    boxModelResult.ValidationResults = null;
                    return Ok(boxModelResult);
                }
            }
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
