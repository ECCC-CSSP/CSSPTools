/*
 * Auto generated from the CSSPCodeWriter.proj by clicking on the [[ModelClassName]ControllerGenerated.cs] button
 *
 * Do not edit this file.
 *
 */ 

using CSSPEnums;
using CSSPModels;
using CSSPServices;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using CSSPWebAPI.Controllers.Resources;

namespace CSSPWebAPI.Controllers
{
    [Route("api/[controller]")]
    public partial class LabSheetController : BaseController
    {
        #region Variables
        #endregion Variables

        #region Properties
        #endregion Properties

        #region Constructors
        public LabSheetController(DatabaseTypeEnum dbt = DatabaseTypeEnum.SqlServerTestDB) : base(dbt)
        {
        }
        #endregion Constructors

        #region Functions public
        // GET api/labSheet
        [HttpGet]
        public IActionResult GetLabSheetList(string lang = "en", int skip = 0, int take = 200,
            string asc = "", string desc = "", string where = "")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                LabSheetService labSheetService = new LabSheetService(new Query() { Lang = lang }, db, ContactID);

                labSheetService.Query = labSheetService.FillQuery(typeof(LabSheet), lang, skip, take, asc, desc, where);

                 if (labSheetService.Query.HasErrors)
                 {
                     return Ok(new List<LabSheet>()
                     {
                         new LabSheet()
                         {
                             HasErrors = labSheetService.Query.HasErrors,
                             ValidationResults = labSheetService.Query.ValidationResults,
                         },
                     }.ToList());
                 }
                 else
                 {
                     return Ok(labSheetService.GetLabSheetList().ToList());
                 }
            }
        }
        // GET api/labSheet/1
        [HttpGet("{LabSheetID}")]
        public IActionResult GetLabSheetWithID(int LabSheetID, string lang = "en")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                LabSheetService labSheetService = new LabSheetService(new Query() { Lang = lang }, db, ContactID);

                labSheetService.Query = labSheetService.FillQuery(typeof(LabSheet), lang, 0, 1, "", "");

                LabSheet labSheet = new LabSheet();
                labSheet = labSheetService.GetLabSheetWithLabSheetID(LabSheetID);

                if (labSheet == null)
                {
                    return NotFound();
                }

                return Ok(labSheet);
            }
        }
        // POST api/labSheet
        [HttpPost]
        public IActionResult Post(LabSheet labSheet, string lang = "en")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                LabSheetService labSheetService = new LabSheetService(new Query() { Lang = lang }, db, ContactID);

                if (!labSheetService.Add(labSheet))
                {
                    return BadRequest(String.Join("|||", labSheet.ValidationResults));
                }
                else
                {
                    labSheet.ValidationResults = null;
                    return Created("/api/labSheet/" + labSheet.LabSheetID, labSheet);
                }
            }
        }
        // PUT api/labSheet
        [HttpPut]
        public IActionResult Put(LabSheet labSheet, string lang = "en")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                LabSheetService labSheetService = new LabSheetService(new Query() { Lang = lang }, db, ContactID);

                if (!labSheetService.Update(labSheet))
                {
                    return BadRequest(String.Join("|||", labSheet.ValidationResults));
                }
                else
                {
                    labSheet.ValidationResults = null;
                    return Ok(labSheet);
                }
            }
        }
        // DELETE api/labSheet
        [HttpDelete]
        public IActionResult Delete(LabSheet labSheet, string lang = "en")
        {
            using (CSSPDBContext db = new CSSPDBContext(DatabaseType))
            {
                LabSheetService labSheetService = new LabSheetService(new Query() { Lang = lang }, db, ContactID);

                if (!labSheetService.Delete(labSheet))
                {
                    return BadRequest(String.Join("|||", labSheet.ValidationResults));
                }
                else
                {
                    labSheet.ValidationResults = null;
                    return Ok(labSheet);
                }
            }
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
