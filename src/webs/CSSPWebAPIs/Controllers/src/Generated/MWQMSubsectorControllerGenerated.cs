/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\WebAPIClassNameControllerGenerated.exe
 *
 * Do not edit this file.
 *
 */

using CSSPModels;
using CSSPServices;
using CultureServices.Services;
using LoggedInServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace CSSPWebAPIs.Controllers
{
    public partial interface IMWQMSubsectorController
    {
        Task<ActionResult<List<MWQMSubsector>>> Get();
        Task<ActionResult<MWQMSubsector>> Get(int MWQMSubsectorID);
        Task<ActionResult<MWQMSubsector>> Post(MWQMSubsector MWQMSubsector);
        Task<ActionResult<MWQMSubsector>> Put(MWQMSubsector MWQMSubsector);
        Task<ActionResult<bool>> Delete(int MWQMSubsectorID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    [Authorize]
    public partial class MWQMSubsectorController : ControllerBase, IMWQMSubsectorController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICultureService CultureService { get; }
        private ILoggedInService LoggedInService { get; }
        private IMWQMSubsectorService MWQMSubsectorService { get; }
        #endregion Properties

        #region Constructors
        public MWQMSubsectorController(ICultureService CultureService, ILoggedInService LoggedInService, IMWQMSubsectorService MWQMSubsectorService)
        {
            this.CultureService = CultureService;
            this.LoggedInService = LoggedInService;
            this.MWQMSubsectorService = MWQMSubsectorService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<MWQMSubsector>>> Get()
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorService.GetMWQMSubsectorList();
        }
        [HttpGet("{MWQMSubsectorID}")]
        public async Task<ActionResult<MWQMSubsector>> Get(int MWQMSubsectorID)
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorService.GetMWQMSubsectorWithMWQMSubsectorID(MWQMSubsectorID);
        }
        [HttpPost]
        public async Task<ActionResult<MWQMSubsector>> Post(MWQMSubsector MWQMSubsector)
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorService.Post(MWQMSubsector);
        }
        [HttpPut]
        public async Task<ActionResult<MWQMSubsector>> Put(MWQMSubsector MWQMSubsector)
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorService.Put(MWQMSubsector);
        }
        [HttpDelete("{MWQMSubsectorID}")]
        public async Task<ActionResult<bool>> Delete(int MWQMSubsectorID)
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorService.Delete(MWQMSubsectorID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
