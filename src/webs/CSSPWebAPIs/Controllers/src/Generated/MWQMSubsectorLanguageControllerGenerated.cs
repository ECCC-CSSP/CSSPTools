/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\WebAPIClassNameControllerGenerated.exe
 *
 * Do not edit this file.
 *
 */

using CSSPModels;
using CSSPServices;
using CultureServices.Services;
using LoggedInServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace CSSPWebAPI.Controllers
{
    public partial interface IMWQMSubsectorLanguageController
    {
        Task<ActionResult<List<MWQMSubsectorLanguage>>> Get();
        Task<ActionResult<MWQMSubsectorLanguage>> Get(int MWQMSubsectorLanguageID);
        Task<ActionResult<MWQMSubsectorLanguage>> Post(MWQMSubsectorLanguage MWQMSubsectorLanguage);
        Task<ActionResult<MWQMSubsectorLanguage>> Put(MWQMSubsectorLanguage MWQMSubsectorLanguage);
        Task<ActionResult<bool>> Delete(int MWQMSubsectorLanguageID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    [Authorize]
    public partial class MWQMSubsectorLanguageController : ControllerBase, IMWQMSubsectorLanguageController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICultureService CultureService { get; }
        private ILoggedInService LoggedInService { get; }
        private IMWQMSubsectorLanguageService MWQMSubsectorLanguageService { get; }
        #endregion Properties

        #region Constructors
        public MWQMSubsectorLanguageController(ICultureService CultureService, ILoggedInService LoggedInService, IMWQMSubsectorLanguageService MWQMSubsectorLanguageService)
        {
            this.CultureService = CultureService;
            this.LoggedInService = LoggedInService;
            this.MWQMSubsectorLanguageService = MWQMSubsectorLanguageService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<MWQMSubsectorLanguage>>> Get()
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorLanguageService.GetMWQMSubsectorLanguageList();
        }
        [HttpGet("{MWQMSubsectorLanguageID}")]
        public async Task<ActionResult<MWQMSubsectorLanguage>> Get(int MWQMSubsectorLanguageID)
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorLanguageService.GetMWQMSubsectorLanguageWithMWQMSubsectorLanguageID(MWQMSubsectorLanguageID);
        }
        [HttpPost]
        public async Task<ActionResult<MWQMSubsectorLanguage>> Post(MWQMSubsectorLanguage MWQMSubsectorLanguage)
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorLanguageService.Post(MWQMSubsectorLanguage);
        }
        [HttpPut]
        public async Task<ActionResult<MWQMSubsectorLanguage>> Put(MWQMSubsectorLanguage MWQMSubsectorLanguage)
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorLanguageService.Put(MWQMSubsectorLanguage);
        }
        [HttpDelete("{MWQMSubsectorLanguageID}")]
        public async Task<ActionResult<bool>> Delete(int MWQMSubsectorLanguageID)
        {
            CultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await MWQMSubsectorLanguageService.Delete(MWQMSubsectorLanguageID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
