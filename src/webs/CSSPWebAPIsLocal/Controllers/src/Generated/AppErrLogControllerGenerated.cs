/* Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBModels;
using CSSPDBServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface IAppErrLogController
    {
        Task<ActionResult<List<AppErrLog>>> Get();
        Task<ActionResult<AppErrLog>> Get(int AppErrLogID);
        Task<ActionResult<AppErrLog>> Post(AppErrLog AppErrLog);
        Task<ActionResult<AppErrLog>> Put(AppErrLog AppErrLog);
        Task<ActionResult<bool>> Delete(int AppErrLogID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class AppErrLogController : ControllerBase, IAppErrLogController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private IAppErrLogDBService AppErrLogDBService { get; }
        #endregion Properties

        #region Constructors
        public AppErrLogController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, IAppErrLogDBService AppErrLogDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.AppErrLogDBService = AppErrLogDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<AppErrLog>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await AppErrLogDBService.GetAppErrLogList();
        }
        [HttpGet("{AppErrLogID}")]
        public async Task<ActionResult<AppErrLog>> Get(int AppErrLogID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await AppErrLogDBService.GetAppErrLogWithAppErrLogID(AppErrLogID);
        }
        [HttpPost]
        public async Task<ActionResult<AppErrLog>> Post(AppErrLog AppErrLog)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await AppErrLogDBService.Post(AppErrLog);
        }
        [HttpPut]
        public async Task<ActionResult<AppErrLog>> Put(AppErrLog AppErrLog)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await AppErrLogDBService.Put(AppErrLog);
        }
        [HttpDelete("{AppErrLogID}")]
        public async Task<ActionResult<bool>> Delete(int AppErrLogID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await AppErrLogDBService.Delete(AppErrLogID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
