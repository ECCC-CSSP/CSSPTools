/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\WebAPIClassNameControllerGenerated.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBModels;
using CSSPDBLocalServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface IEmailDistributionListContactController
    {
        Task<ActionResult<List<EmailDistributionListContact>>> Get();
        Task<ActionResult<EmailDistributionListContact>> Get(int EmailDistributionListContactID);
        Task<ActionResult<EmailDistributionListContact>> Post(EmailDistributionListContact EmailDistributionListContact);
        Task<ActionResult<EmailDistributionListContact>> Put(EmailDistributionListContact EmailDistributionListContact);
        Task<ActionResult<bool>> Delete(int EmailDistributionListContactID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class EmailDistributionListContactController : ControllerBase, IEmailDistributionListContactController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private IEmailDistributionListContactDBLocalService EmailDistributionListContactDBLocalService { get; }
        #endregion Properties

        #region Constructors
        public EmailDistributionListContactController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, IEmailDistributionListContactDBLocalService EmailDistributionListContactDBLocalService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.EmailDistributionListContactDBLocalService = EmailDistributionListContactDBLocalService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<EmailDistributionListContact>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await EmailDistributionListContactDBLocalService.GetEmailDistributionListContactList();
        }
        [HttpGet("{EmailDistributionListContactID}")]
        public async Task<ActionResult<EmailDistributionListContact>> Get(int EmailDistributionListContactID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await EmailDistributionListContactDBLocalService.GetEmailDistributionListContactWithEmailDistributionListContactID(EmailDistributionListContactID);
        }
        [HttpPost]
        public async Task<ActionResult<EmailDistributionListContact>> Post(EmailDistributionListContact EmailDistributionListContact)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await EmailDistributionListContactDBLocalService.Post(EmailDistributionListContact);
        }
        [HttpPut]
        public async Task<ActionResult<EmailDistributionListContact>> Put(EmailDistributionListContact EmailDistributionListContact)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await EmailDistributionListContactDBLocalService.Put(EmailDistributionListContact);
        }
        [HttpDelete("{EmailDistributionListContactID}")]
        public async Task<ActionResult<bool>> Delete(int EmailDistributionListContactID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await EmailDistributionListContactDBLocalService.Delete(EmailDistributionListContactID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
