/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\WebAPIClassNameControllerGenerated.exe
 *
 * Do not edit this file.
 *
 */

using CSSPModels;
using CSSPDBLocalServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface IHydrometricSiteController
    {
        Task<ActionResult<List<HydrometricSite>>> Get();
        Task<ActionResult<HydrometricSite>> Get(int HydrometricSiteID);
        Task<ActionResult<HydrometricSite>> Post(HydrometricSite HydrometricSite);
        Task<ActionResult<HydrometricSite>> Put(HydrometricSite HydrometricSite);
        Task<ActionResult<bool>> Delete(int HydrometricSiteID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class HydrometricSiteController : ControllerBase, IHydrometricSiteController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private IHydrometricSiteDBLocalService HydrometricSiteDBLocalService { get; }
        #endregion Properties

        #region Constructors
        public HydrometricSiteController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, IHydrometricSiteDBLocalService HydrometricSiteDBLocalService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.HydrometricSiteDBLocalService = HydrometricSiteDBLocalService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<HydrometricSite>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await HydrometricSiteDBLocalService.GetHydrometricSiteList();
        }
        [HttpGet("{HydrometricSiteID}")]
        public async Task<ActionResult<HydrometricSite>> Get(int HydrometricSiteID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await HydrometricSiteDBLocalService.GetHydrometricSiteWithHydrometricSiteID(HydrometricSiteID);
        }
        [HttpPost]
        public async Task<ActionResult<HydrometricSite>> Post(HydrometricSite HydrometricSite)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await HydrometricSiteDBLocalService.Post(HydrometricSite);
        }
        [HttpPut]
        public async Task<ActionResult<HydrometricSite>> Put(HydrometricSite HydrometricSite)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await HydrometricSiteDBLocalService.Put(HydrometricSite);
        }
        [HttpDelete("{HydrometricSiteID}")]
        public async Task<ActionResult<bool>> Delete(int HydrometricSiteID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await HydrometricSiteDBLocalService.Delete(HydrometricSiteID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
