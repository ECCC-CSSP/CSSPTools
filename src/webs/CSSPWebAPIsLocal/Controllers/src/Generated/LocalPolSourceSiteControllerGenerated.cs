/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBLocalModels;
using CSSPDBLocalServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface ILocalPolSourceSiteController
    {
        Task<ActionResult<List<LocalPolSourceSite>>> Get();
        Task<ActionResult<LocalPolSourceSite>> Get(int LocalPolSourceSiteID);
        Task<ActionResult<LocalPolSourceSite>> Post(LocalPolSourceSite LocalPolSourceSite);
        Task<ActionResult<LocalPolSourceSite>> Put(LocalPolSourceSite LocalPolSourceSite);
        Task<ActionResult<bool>> Delete(int LocalPolSourceSiteID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class LocalPolSourceSiteController : ControllerBase, ILocalPolSourceSiteController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private ILocalPolSourceSiteDBService LocalPolSourceSiteDBService { get; }
        #endregion Properties

        #region Constructors
        public LocalPolSourceSiteController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, ILocalPolSourceSiteDBService LocalPolSourceSiteDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.LocalPolSourceSiteDBService = LocalPolSourceSiteDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<LocalPolSourceSite>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalPolSourceSiteDBService.GetLocalPolSourceSiteList();
        }
        [HttpGet("{LocalPolSourceSiteID}")]
        public async Task<ActionResult<LocalPolSourceSite>> Get(int PolSourceSiteID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalPolSourceSiteDBService.GetLocalPolSourceSiteWithPolSourceSiteID(PolSourceSiteID);
        }
        [HttpPost]
        public async Task<ActionResult<LocalPolSourceSite>> Post(LocalPolSourceSite LocalPolSourceSite)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalPolSourceSiteDBService.Post(LocalPolSourceSite);
        }
        [HttpPut]
        public async Task<ActionResult<LocalPolSourceSite>> Put(LocalPolSourceSite LocalPolSourceSite)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalPolSourceSiteDBService.Put(LocalPolSourceSite);
        }
        [HttpDelete("{LocalPolSourceSiteID}")]
        public async Task<ActionResult<bool>> Delete(int LocalPolSourceSiteID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalPolSourceSiteDBService.Delete(LocalPolSourceSiteID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
