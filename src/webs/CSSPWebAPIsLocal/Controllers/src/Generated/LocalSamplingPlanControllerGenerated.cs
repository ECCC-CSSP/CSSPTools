/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBLocalModels;
using CSSPDBLocalServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface ILocalSamplingPlanController
    {
        Task<ActionResult<List<LocalSamplingPlan>>> Get();
        Task<ActionResult<LocalSamplingPlan>> Get(int LocalSamplingPlanID);
        Task<ActionResult<LocalSamplingPlan>> Post(LocalSamplingPlan LocalSamplingPlan);
        Task<ActionResult<LocalSamplingPlan>> Put(LocalSamplingPlan LocalSamplingPlan);
        Task<ActionResult<bool>> Delete(int LocalSamplingPlanID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class LocalSamplingPlanController : ControllerBase, ILocalSamplingPlanController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private ILocalSamplingPlanDBService LocalSamplingPlanDBService { get; }
        #endregion Properties

        #region Constructors
        public LocalSamplingPlanController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, ILocalSamplingPlanDBService LocalSamplingPlanDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.LocalSamplingPlanDBService = LocalSamplingPlanDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<LocalSamplingPlan>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSamplingPlanDBService.GetLocalSamplingPlanList();
        }
        [HttpGet("{LocalSamplingPlanID}")]
        public async Task<ActionResult<LocalSamplingPlan>> Get(int SamplingPlanID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSamplingPlanDBService.GetLocalSamplingPlanWithSamplingPlanID(SamplingPlanID);
        }
        [HttpPost]
        public async Task<ActionResult<LocalSamplingPlan>> Post(LocalSamplingPlan LocalSamplingPlan)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSamplingPlanDBService.Post(LocalSamplingPlan);
        }
        [HttpPut]
        public async Task<ActionResult<LocalSamplingPlan>> Put(LocalSamplingPlan LocalSamplingPlan)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSamplingPlanDBService.Put(LocalSamplingPlan);
        }
        [HttpDelete("{LocalSamplingPlanID}")]
        public async Task<ActionResult<bool>> Delete(int LocalSamplingPlanID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSamplingPlanDBService.Delete(LocalSamplingPlanID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
