/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBLocalModels;
using CSSPDBLocalServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface ILocalSpillController
    {
        Task<ActionResult<List<LocalSpill>>> Get();
        Task<ActionResult<LocalSpill>> Get(int LocalSpillID);
        Task<ActionResult<LocalSpill>> Post(LocalSpill LocalSpill);
        Task<ActionResult<LocalSpill>> Put(LocalSpill LocalSpill);
        Task<ActionResult<bool>> Delete(int LocalSpillID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class LocalSpillController : ControllerBase, ILocalSpillController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private ILocalSpillDBService LocalSpillDBService { get; }
        #endregion Properties

        #region Constructors
        public LocalSpillController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, ILocalSpillDBService LocalSpillDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.LocalSpillDBService = LocalSpillDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<LocalSpill>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSpillDBService.GetLocalSpillList();
        }
        [HttpGet("{LocalSpillID}")]
        public async Task<ActionResult<LocalSpill>> Get(int SpillID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSpillDBService.GetLocalSpillWithSpillID(SpillID);
        }
        [HttpPost]
        public async Task<ActionResult<LocalSpill>> Post(LocalSpill LocalSpill)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSpillDBService.Post(LocalSpill);
        }
        [HttpPut]
        public async Task<ActionResult<LocalSpill>> Put(LocalSpill LocalSpill)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSpillDBService.Put(LocalSpill);
        }
        [HttpDelete("{LocalSpillID}")]
        public async Task<ActionResult<bool>> Delete(int LocalSpillID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalSpillDBService.Delete(LocalSpillID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
