/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBLocalModels;
using CSSPDBLocalServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface ILocalTVFileLanguageController
    {
        Task<ActionResult<List<LocalTVFileLanguage>>> Get();
        Task<ActionResult<LocalTVFileLanguage>> Get(int LocalTVFileLanguageID);
        Task<ActionResult<LocalTVFileLanguage>> Post(LocalTVFileLanguage LocalTVFileLanguage);
        Task<ActionResult<LocalTVFileLanguage>> Put(LocalTVFileLanguage LocalTVFileLanguage);
        Task<ActionResult<bool>> Delete(int LocalTVFileLanguageID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class LocalTVFileLanguageController : ControllerBase, ILocalTVFileLanguageController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private ILocalTVFileLanguageDBService LocalTVFileLanguageDBService { get; }
        #endregion Properties

        #region Constructors
        public LocalTVFileLanguageController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, ILocalTVFileLanguageDBService LocalTVFileLanguageDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.LocalTVFileLanguageDBService = LocalTVFileLanguageDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<LocalTVFileLanguage>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalTVFileLanguageDBService.GetLocalTVFileLanguageList();
        }
        [HttpGet("{LocalTVFileLanguageID}")]
        public async Task<ActionResult<LocalTVFileLanguage>> Get(int TVFileLanguageID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalTVFileLanguageDBService.GetLocalTVFileLanguageWithTVFileLanguageID(TVFileLanguageID);
        }
        [HttpPost]
        public async Task<ActionResult<LocalTVFileLanguage>> Post(LocalTVFileLanguage LocalTVFileLanguage)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalTVFileLanguageDBService.Post(LocalTVFileLanguage);
        }
        [HttpPut]
        public async Task<ActionResult<LocalTVFileLanguage>> Put(LocalTVFileLanguage LocalTVFileLanguage)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalTVFileLanguageDBService.Put(LocalTVFileLanguage);
        }
        [HttpDelete("{LocalTVFileLanguageID}")]
        public async Task<ActionResult<bool>> Delete(int LocalTVFileLanguageID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalTVFileLanguageDBService.Delete(LocalTVFileLanguageID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
