/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBLocalModels;
using CSSPDBLocalServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface ILocalVPAmbientController
    {
        Task<ActionResult<List<LocalVPAmbient>>> Get();
        Task<ActionResult<LocalVPAmbient>> Get(int LocalVPAmbientID);
        Task<ActionResult<LocalVPAmbient>> Post(LocalVPAmbient LocalVPAmbient);
        Task<ActionResult<LocalVPAmbient>> Put(LocalVPAmbient LocalVPAmbient);
        Task<ActionResult<bool>> Delete(int LocalVPAmbientID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class LocalVPAmbientController : ControllerBase, ILocalVPAmbientController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private ILocalVPAmbientDBService LocalVPAmbientDBService { get; }
        #endregion Properties

        #region Constructors
        public LocalVPAmbientController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, ILocalVPAmbientDBService LocalVPAmbientDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.LocalVPAmbientDBService = LocalVPAmbientDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<LocalVPAmbient>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalVPAmbientDBService.GetLocalVPAmbientList();
        }
        [HttpGet("{LocalVPAmbientID}")]
        public async Task<ActionResult<LocalVPAmbient>> Get(int VPAmbientID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalVPAmbientDBService.GetLocalVPAmbientWithVPAmbientID(VPAmbientID);
        }
        [HttpPost]
        public async Task<ActionResult<LocalVPAmbient>> Post(LocalVPAmbient LocalVPAmbient)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalVPAmbientDBService.Post(LocalVPAmbient);
        }
        [HttpPut]
        public async Task<ActionResult<LocalVPAmbient>> Put(LocalVPAmbient LocalVPAmbient)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalVPAmbientDBService.Put(LocalVPAmbient);
        }
        [HttpDelete("{LocalVPAmbientID}")]
        public async Task<ActionResult<bool>> Delete(int LocalVPAmbientID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await LocalVPAmbientDBService.Delete(LocalVPAmbientID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
