/* Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBModels;
using CSSPDBServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface IMikeSourceController
    {
        Task<ActionResult<List<MikeSource>>> Get();
        Task<ActionResult<MikeSource>> Get(int MikeSourceID);
        Task<ActionResult<MikeSource>> Post(MikeSource MikeSource);
        Task<ActionResult<MikeSource>> Put(MikeSource MikeSource);
        Task<ActionResult<bool>> Delete(int MikeSourceID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class MikeSourceController : ControllerBase, IMikeSourceController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private IMikeSourceDBService MikeSourceDBService { get; }
        #endregion Properties

        #region Constructors
        public MikeSourceController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, IMikeSourceDBService MikeSourceDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.MikeSourceDBService = MikeSourceDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<MikeSource>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await MikeSourceDBService.GetMikeSourceList();
        }
        [HttpGet("{MikeSourceID}")]
        public async Task<ActionResult<MikeSource>> Get(int MikeSourceID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await MikeSourceDBService.GetMikeSourceWithMikeSourceID(MikeSourceID);
        }
        [HttpPost]
        public async Task<ActionResult<MikeSource>> Post(MikeSource MikeSource)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await MikeSourceDBService.Post(MikeSource);
        }
        [HttpPut]
        public async Task<ActionResult<MikeSource>> Put(MikeSource MikeSource)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await MikeSourceDBService.Put(MikeSource);
        }
        [HttpDelete("{MikeSourceID}")]
        public async Task<ActionResult<bool>> Delete(int MikeSourceID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await MikeSourceDBService.Delete(MikeSourceID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
