/* Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBModels;
using CSSPDBServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface IReportSectionController
    {
        Task<ActionResult<List<ReportSection>>> Get();
        Task<ActionResult<ReportSection>> Get(int ReportSectionID);
        Task<ActionResult<ReportSection>> Post(ReportSection ReportSection);
        Task<ActionResult<ReportSection>> Put(ReportSection ReportSection);
        Task<ActionResult<bool>> Delete(int ReportSectionID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class ReportSectionController : ControllerBase, IReportSectionController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private IReportSectionDBService ReportSectionDBService { get; }
        #endregion Properties

        #region Constructors
        public ReportSectionController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, IReportSectionDBService ReportSectionDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.ReportSectionDBService = ReportSectionDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<ReportSection>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await ReportSectionDBService.GetReportSectionList();
        }
        [HttpGet("{ReportSectionID}")]
        public async Task<ActionResult<ReportSection>> Get(int ReportSectionID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await ReportSectionDBService.GetReportSectionWithReportSectionID(ReportSectionID);
        }
        [HttpPost]
        public async Task<ActionResult<ReportSection>> Post(ReportSection ReportSection)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await ReportSectionDBService.Post(ReportSection);
        }
        [HttpPut]
        public async Task<ActionResult<ReportSection>> Put(ReportSection ReportSection)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await ReportSectionDBService.Put(ReportSection);
        }
        [HttpDelete("{ReportSectionID}")]
        public async Task<ActionResult<bool>> Delete(int ReportSectionID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await ReportSectionDBService.Delete(ReportSectionID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
