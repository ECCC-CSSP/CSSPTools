/* Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\WebAPIClassNameControllerGenerated.exe
 *
 * Do not edit this file.
 *
 */

using CSSPModels;
using CSSPServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace CSSPWebAPIsLocal.Controllers
{
    public partial interface ITVFileController
    {
        Task<ActionResult<List<TVFile>>> Get();
        Task<ActionResult<TVFile>> Get(int TVFileID);
        Task<ActionResult<TVFile>> Post(TVFile TVFile);
        Task<ActionResult<TVFile>> Put(TVFile TVFile);
        Task<ActionResult<bool>> Delete(int TVFileID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    [Authorize]
    public partial class TVFileController : ControllerBase, ITVFileController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILoggedInService LoggedInService { get; }
        private ITVFileService TVFileService { get; }
        #endregion Properties

        #region Constructors
        public TVFileController(ICSSPCultureService CSSPCultureService, ILoggedInService LoggedInService, ITVFileService TVFileService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LoggedInService = LoggedInService;
            this.TVFileService = TVFileService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<TVFile>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await TVFileService.GetTVFileList();
        }
        [HttpGet("{TVFileID}")]
        public async Task<ActionResult<TVFile>> Get(int TVFileID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await TVFileService.GetTVFileWithTVFileID(TVFileID);
        }
        [HttpPost]
        public async Task<ActionResult<TVFile>> Post(TVFile TVFile)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await TVFileService.Post(TVFile);
        }
        [HttpPut]
        public async Task<ActionResult<TVFile>> Put(TVFile TVFile)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await TVFileService.Put(TVFile);
        }
        [HttpDelete("{TVFileID}")]
        public async Task<ActionResult<bool>> Delete(int TVFileID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LoggedInService.SetLoggedInContactInfo(User.Identity.Name);

            return await TVFileService.Delete(TVFileID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
