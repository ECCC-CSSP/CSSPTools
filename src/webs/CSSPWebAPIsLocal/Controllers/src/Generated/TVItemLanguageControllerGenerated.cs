/* Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBModels;
using CSSPDBServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface ITVItemLanguageController
    {
        Task<ActionResult<List<TVItemLanguage>>> Get();
        Task<ActionResult<TVItemLanguage>> Get(int TVItemLanguageID);
        Task<ActionResult<TVItemLanguage>> Post(TVItemLanguage TVItemLanguage);
        Task<ActionResult<TVItemLanguage>> Put(TVItemLanguage TVItemLanguage);
        Task<ActionResult<bool>> Delete(int TVItemLanguageID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class TVItemLanguageController : ControllerBase, ITVItemLanguageController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private ITVItemLanguageDBService TVItemLanguageDBService { get; }
        #endregion Properties

        #region Constructors
        public TVItemLanguageController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, ITVItemLanguageDBService TVItemLanguageDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.TVItemLanguageDBService = TVItemLanguageDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<TVItemLanguage>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TVItemLanguageDBService.GetTVItemLanguageList();
        }
        [HttpGet("{TVItemLanguageID}")]
        public async Task<ActionResult<TVItemLanguage>> Get(int TVItemLanguageID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TVItemLanguageDBService.GetTVItemLanguageWithTVItemLanguageID(TVItemLanguageID);
        }
        [HttpPost]
        public async Task<ActionResult<TVItemLanguage>> Post(TVItemLanguage TVItemLanguage)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TVItemLanguageDBService.Post(TVItemLanguage);
        }
        [HttpPut]
        public async Task<ActionResult<TVItemLanguage>> Put(TVItemLanguage TVItemLanguage)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TVItemLanguageDBService.Put(TVItemLanguage);
        }
        [HttpDelete("{TVItemLanguageID}")]
        public async Task<ActionResult<bool>> Delete(int TVItemLanguageID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TVItemLanguageDBService.Delete(TVItemLanguageID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
