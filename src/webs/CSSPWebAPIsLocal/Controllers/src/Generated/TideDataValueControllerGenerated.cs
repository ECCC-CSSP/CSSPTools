/* Auto generated from C:\CSSPTools\src\codegen\_package\net5.0\GenerateCSSPWebAPIsLocalController.exe
 *
 * Do not edit this file.
 *
 */

using CSSPDBModels;
using CSSPDBServices;
using CSSPCultureServices.Services;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using System.Collections.Generic;
using System.Threading.Tasks;
using LocalServices;

namespace CSSPWebAPIs.Controllers
{
    public partial interface ITideDataValueController
    {
        Task<ActionResult<List<TideDataValue>>> Get();
        Task<ActionResult<TideDataValue>> Get(int TideDataValueID);
        Task<ActionResult<TideDataValue>> Post(TideDataValue TideDataValue);
        Task<ActionResult<TideDataValue>> Put(TideDataValue TideDataValue);
        Task<ActionResult<bool>> Delete(int TideDataValueID);
    }

    [Route("api/{culture}/[controller]")]
    [ApiController]
    public partial class TideDataValueController : ControllerBase, ITideDataValueController
    {
        #region Variables
        #endregion Variables

        #region Properties
        private ICSSPCultureService CSSPCultureService { get; }
        private ILocalService LocalService { get; }
        private ITideDataValueDBService TideDataValueDBService { get; }
        #endregion Properties

        #region Constructors
        public TideDataValueController(ICSSPCultureService CSSPCultureService, ILocalService LocalService, ITideDataValueDBService TideDataValueDBService)
        {
            this.CSSPCultureService = CSSPCultureService;
            this.LocalService = LocalService;
            this.TideDataValueDBService = TideDataValueDBService;
        }
        #endregion Constructors

        #region Functions public
        [HttpGet]
        public async Task<ActionResult<List<TideDataValue>>> Get()
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TideDataValueDBService.GetTideDataValueList();
        }
        [HttpGet("{TideDataValueID}")]
        public async Task<ActionResult<TideDataValue>> Get(int TideDataValueID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TideDataValueDBService.GetTideDataValueWithTideDataValueID(TideDataValueID);
        }
        [HttpPost]
        public async Task<ActionResult<TideDataValue>> Post(TideDataValue TideDataValue)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TideDataValueDBService.Post(TideDataValue);
        }
        [HttpPut]
        public async Task<ActionResult<TideDataValue>> Put(TideDataValue TideDataValue)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TideDataValueDBService.Put(TideDataValue);
        }
        [HttpDelete("{TideDataValueID}")]
        public async Task<ActionResult<bool>> Delete(int TideDataValueID)
        {
            CSSPCultureService.SetCulture((string)RouteData.Values["culture"]);
            await LocalService.SetLoggedInContactInfo();

            return await TideDataValueDBService.Delete(TideDataValueID);
        }
        #endregion Functions public

        #region Functions private
        #endregion Functions private
    }
}
