/*
 * Auto generated C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularEnumsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { EnumIDAndText } from '../../models/generated/EnumIDAndText.model';

export enum KMZActionEnum {
    DoNothing = 1,
    GenerateKMZContourAnimation = 2,
    GenerateKMZContourLimit = 3,
    GenerateKMZCurrentAnimation = 4,
    GenerateKMZCurrentMaximum = 5,
    GenerateKMZMesh = 6,
    GenerateKMZStudyArea = 7,
    GenerateKMZBoundaryConditionNodes = 8,
}

export function KMZActionEnum_GetOrderedText(): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if ($localize.locale === 'fr-CA') {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'DoNothing (fr)' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'GenerateKMZContourAnimation (fr)' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'GenerateKMZContourLimit (fr)' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'GenerateKMZCurrentAnimation (fr)' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'GenerateKMZCurrentMaximum (fr)' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'GenerateKMZMesh (fr)' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'GenerateKMZStudyArea (fr)' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'GenerateKMZBoundaryConditionNodes (fr)' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'DoNothing' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'GenerateKMZContourAnimation' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'GenerateKMZContourLimit' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'GenerateKMZCurrentAnimation' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'GenerateKMZCurrentMaximum' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'GenerateKMZMesh' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'GenerateKMZStudyArea' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'GenerateKMZBoundaryConditionNodes' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function KMZActionEnum_GetIDText(enumID: number): string {
    let addressTypeEnunText: string;
    KMZActionEnum_GetOrderedText().forEach(e => {
        if (e.EnumID == enumID) {
            addressTypeEnunText = e.EnumText;
            return false;
        }
    });

    return addressTypeEnunText;
}
