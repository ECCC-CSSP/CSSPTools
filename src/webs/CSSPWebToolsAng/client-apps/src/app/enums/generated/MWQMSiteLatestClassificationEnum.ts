/*
 * Auto generated C:\CSSPTools\src\codegen\_package\net5.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppStateService } from 'src/app/services/app-state.service';
import { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum MWQMSiteLatestClassificationEnum {
    Approved = 1,
    ConditionallyApproved = 2,
    Restricted = 3,
    ConditionallyRestricted = 4,
    Prohibited = 5,
    Unclassified = 6,
}

export function GetMWQMSiteLatestClassificationEnum(): typeof MWQMSiteLatestClassificationEnum
{
  return MWQMSiteLatestClassificationEnum;
}

export function MWQMSiteLatestClassificationEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Agréé' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Agréé sous conditions' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Restreint' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Restreint sous conditions' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Interdit' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Non classifié' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Approved' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'ConditionallyApproved' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Restricted' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'ConditionallyRestricted' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Prohibited' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Unclassified' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function MWQMSiteLatestClassificationEnum_GetIDText(enumID: number, appStateService: AppStateService): string {
    let addressTypeEnunText: string;
    MWQMSiteLatestClassificationEnum_GetOrderedText(appStateService).forEach(e => {
        if (e.EnumID == enumID) {
            addressTypeEnunText = e.EnumText;
            return false;
        }
    });

    return addressTypeEnunText;
}
