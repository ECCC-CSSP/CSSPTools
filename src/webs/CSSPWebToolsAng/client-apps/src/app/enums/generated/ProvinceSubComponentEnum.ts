/*
 * Auto generated C:\CSSPTools\src\codegen\_package\net5.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppLanguageService } from 'src/app/services/app-language.service';
import { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum ProvinceSubComponentEnum {
    Areas = 1,
    Municipalities = 2,
    Files = 3,
    SamplingPlan = 4,
    OpenData = 5,
    ProvinceTools = 6,
}

export function GetProvinceSubComponentEnum(): typeof ProvinceSubComponentEnum
{
  return ProvinceSubComponentEnum;
}

export function ProvinceSubComponentEnum_GetOrderedText(appLanguageService: AppLanguageService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appLanguageService.Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Areas (fr)' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Municipalities (fr)' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Files (fr)' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Sampling Plan (fr)' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Open Data (fr)' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Province Tools (fr)' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Areas' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Municipalities' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Files' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Sampling Plan' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Open Data' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Province Tools' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function ProvinceSubComponentEnum_GetIDText(enumID: number, appLanguageService: AppLanguageService): string {
    let addressTypeEnunText: string;
    ProvinceSubComponentEnum_GetOrderedText(appLanguageService).forEach(e => {
        if (e.EnumID == enumID) {
            addressTypeEnunText = e.EnumText;
            return false;
        }
    });

    return addressTypeEnunText;
}
