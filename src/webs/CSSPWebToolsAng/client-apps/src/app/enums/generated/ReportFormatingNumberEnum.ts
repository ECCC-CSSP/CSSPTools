/*
 * Auto generated C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularEnumsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { EnumIDAndText } from '../../models/generated/EnumIDAndText.model';

export enum ReportFormatingNumberEnum {
    ReportFormatingNumber0Decimal = 1,
    ReportFormatingNumber1Decimal = 2,
    ReportFormatingNumber2Decimal = 3,
    ReportFormatingNumber3Decimal = 4,
    ReportFormatingNumber4Decimal = 5,
    ReportFormatingNumber5Decimal = 6,
    ReportFormatingNumber6Decimal = 7,
    ReportFormatingNumberScientific0Decimal = 8,
    ReportFormatingNumberScientific1Decimal = 9,
    ReportFormatingNumberScientific2Decimal = 10,
    ReportFormatingNumberScientific3Decimal = 11,
    ReportFormatingNumberScientific4Decimal = 12,
    ReportFormatingNumberScientific5Decimal = 13,
    ReportFormatingNumberScientific6Decimal = 14,
}

export function ReportFormatingNumberEnum_GetOrderedText(): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if ($localize.locale === 'fr-CA') {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'ReportFormatingNumber0Decimal' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'ReportFormatingNumber1Decimal' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'ReportFormatingNumber2Decimal' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'ReportFormatingNumber3Decimal' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'ReportFormatingNumber4Decimal' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'ReportFormatingNumber5Decimal' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'ReportFormatingNumber6Decimal' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'ReportFormatingNumberScientific0Decimal' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'ReportFormatingNumberScientific1Decimal' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'ReportFormatingNumberScientific2Decimal' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'ReportFormatingNumberScientific3Decimal' });
        enumTextOrderedList.push({ EnumID: 12, EnumText: 'ReportFormatingNumberScientific4Decimal' });
        enumTextOrderedList.push({ EnumID: 13, EnumText: 'ReportFormatingNumberScientific5Decimal' });
        enumTextOrderedList.push({ EnumID: 14, EnumText: 'ReportFormatingNumberScientific6Decimal' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'ReportFormatingNumber0Decimal' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'ReportFormatingNumber1Decimal' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'ReportFormatingNumber2Decimal' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'ReportFormatingNumber3Decimal' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'ReportFormatingNumber4Decimal' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'ReportFormatingNumber5Decimal' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'ReportFormatingNumber6Decimal' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'ReportFormatingNumberScientific0Decimal' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'ReportFormatingNumberScientific1Decimal' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'ReportFormatingNumberScientific2Decimal' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'ReportFormatingNumberScientific3Decimal' });
        enumTextOrderedList.push({ EnumID: 12, EnumText: 'ReportFormatingNumberScientific4Decimal' });
        enumTextOrderedList.push({ EnumID: 13, EnumText: 'ReportFormatingNumberScientific5Decimal' });
        enumTextOrderedList.push({ EnumID: 14, EnumText: 'ReportFormatingNumberScientific6Decimal' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function ReportFormatingNumberEnum_GetIDText(enumID: number): string {
    let addressTypeEnunText: string;
    ReportFormatingNumberEnum_GetOrderedText().forEach(e => {
        if (e.EnumID == enumID) {
            addressTypeEnunText = e.EnumText;
            return false;
        }
    });

    return addressTypeEnunText;
}
