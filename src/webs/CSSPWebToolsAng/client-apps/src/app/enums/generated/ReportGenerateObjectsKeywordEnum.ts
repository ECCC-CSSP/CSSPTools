/*
 * Auto generated C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularEnumsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { AppService } from '../../app.service';
import { EnumIDAndText } from '../../models/generated/EnumIDAndText.model';
import { LanguageEnum } from './LanguageEnum';

export enum ReportGenerateObjectsKeywordEnum {
    SUBSECTOR_RE_EVALUATION_COVER_PAGE = 1,
    SUBSECTOR_FC_SUMMARY_STAT_ALL = 2,
    SUBSECTOR_FC_SUMMARY_STAT_WET = 3,
    SUBSECTOR_FC_SUMMARY_STAT_DRY = 4,
    SUBSECTOR_MWQM_SITES_DATA_AVAILABILITY = 5,
    SUBSECTOR_MWQM_SITES_NUMBER_OF_SITES_BY_YEAR = 6,
    SUBSECTOR_MWQM_SITES_NUMBER_OF_RUNS_BY_YEAR = 7,
    SUBSECTOR_MWQM_SITES_NUMBER_OF_SAMPLES_BY_YEAR = 8,
    SUBSECTOR_MWQM_SITES_FC_TABLE = 9,
    SUBSECTOR_MWQM_SITES_SALINITY_TABLE = 10,
    SUBSECTOR_MWQM_SITES_TEMPERATURE_TABLE = 11,
    SUBSECTOR_POLLUTION_SOURCE_SITES = 12,
    SUBSECTOR_POLLUTION_SOURCE_SITES_COMPACT = 13,
    SUBSECTOR_MUNICIPALITIES_COMPACT = 14,
    SUBSECTOR_MUNICIPALITIES_FULL = 15,
    SUBSECTOR_MUNICIPALITY_INFRASTRUCTURE_MAP = 16,
    SUBSECTOR_ECCC_AND_SWCP_LOGO = 17,
    SUBSECTOR_CSSP_LOGO = 18,
    SUBSECTOR_LOCATION_OF_SURVEY_AREA_MAP = 19,
    SUBSECTOR_CURRENT_CLASSIFICATION_AND_SAMPLING_LOCATION_MAP = 20,
    SUBSECTOR_RECOMMENDED_CLASSIFICATION_MAP = 21,
    SUBSECTOR_POLLUTION_SOURCE_LOCATIONS_MAP = 22,
}

export function ReportGenerateObjectsKeywordEnum_GetOrderedText(appService: AppService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appService.AppVar$?.getValue().Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'SUBSECTOR_RE_EVALUATION_COVER_PAGE' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'SUBSECTOR_FC_SUMMARY_STAT_ALL' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'SUBSECTOR_FC_SUMMARY_STAT_WET' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'SUBSECTOR_FC_SUMMARY_STAT_DRY' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'SUBSECTOR_MWQM_SITES_DATA_AVAILABILITY' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'SUBSECTOR_MWQM_SITES_NUMBER_OF_SITES_BY_YEAR' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'SUBSECTOR_MWQM_SITES_NUMBER_OF_RUNS_BY_YEAR' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'SUBSECTOR_MWQM_SITES_NUMBER_OF_SAMPLES_BY_YEAR' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'SUBSECTOR_MWQM_SITES_FC_TABLE' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'SUBSECTOR_MWQM_SITES_SALINITY_TABLE' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'SUBSECTOR_MWQM_SITES_TEMPERATURE_TABLE' });
        enumTextOrderedList.push({ EnumID: 12, EnumText: 'SUBSECTOR_POLLUTION_SOURCE_SITES' });
        enumTextOrderedList.push({ EnumID: 13, EnumText: 'SUBSECTOR_POLLUTION_SOURCE_SITES_COMPACT' });
        enumTextOrderedList.push({ EnumID: 14, EnumText: 'SUBSECTOR_MUNICIPALITIES_COMPACT' });
        enumTextOrderedList.push({ EnumID: 15, EnumText: 'SUBSECTOR_MUNICIPALITIES_FULL' });
        enumTextOrderedList.push({ EnumID: 16, EnumText: 'SUBSECTOR_MUNICIPALITY_INFRASTRUCTURE_MAP' });
        enumTextOrderedList.push({ EnumID: 17, EnumText: 'SUBSECTOR_ECCC_AND_SWCP_LOGO' });
        enumTextOrderedList.push({ EnumID: 18, EnumText: 'SUBSECTOR_CSSP_LOGO' });
        enumTextOrderedList.push({ EnumID: 19, EnumText: 'SUBSECTOR_LOCATION_OF_SURVEY_AREA_MAP' });
        enumTextOrderedList.push({ EnumID: 20, EnumText: 'SUBSECTOR_CURRENT_CLASSIFICATION_AND_SAMPLING_LOCATION_MAP' });
        enumTextOrderedList.push({ EnumID: 21, EnumText: 'SUBSECTOR_RECOMMENDED_CLASSIFICATION_MAP' });
        enumTextOrderedList.push({ EnumID: 22, EnumText: 'SUBSECTOR_POLLUTION_SOURCE_LOCATIONS_MAP' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'SUBSECTOR_RE_EVALUATION_COVER_PAGE' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'SUBSECTOR_FC_SUMMARY_STAT_ALL' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'SUBSECTOR_FC_SUMMARY_STAT_WET' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'SUBSECTOR_FC_SUMMARY_STAT_DRY' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'SUBSECTOR_MWQM_SITES_DATA_AVAILABILITY' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'SUBSECTOR_MWQM_SITES_NUMBER_OF_SITES_BY_YEAR' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'SUBSECTOR_MWQM_SITES_NUMBER_OF_RUNS_BY_YEAR' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'SUBSECTOR_MWQM_SITES_NUMBER_OF_SAMPLES_BY_YEAR' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'SUBSECTOR_MWQM_SITES_FC_TABLE' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'SUBSECTOR_MWQM_SITES_SALINITY_TABLE' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'SUBSECTOR_MWQM_SITES_TEMPERATURE_TABLE' });
        enumTextOrderedList.push({ EnumID: 12, EnumText: 'SUBSECTOR_POLLUTION_SOURCE_SITES' });
        enumTextOrderedList.push({ EnumID: 13, EnumText: 'SUBSECTOR_POLLUTION_SOURCE_SITES_COMPACT' });
        enumTextOrderedList.push({ EnumID: 14, EnumText: 'SUBSECTOR_MUNICIPALITIES_COMPACT' });
        enumTextOrderedList.push({ EnumID: 15, EnumText: 'SUBSECTOR_MUNICIPALITIES_FULL' });
        enumTextOrderedList.push({ EnumID: 16, EnumText: 'SUBSECTOR_MUNICIPALITY_INFRASTRUCTURE_MAP' });
        enumTextOrderedList.push({ EnumID: 17, EnumText: 'SUBSECTOR_ECCC_AND_SWCP_LOGO' });
        enumTextOrderedList.push({ EnumID: 18, EnumText: 'SUBSECTOR_CSSP_LOGO' });
        enumTextOrderedList.push({ EnumID: 19, EnumText: 'SUBSECTOR_LOCATION_OF_SURVEY_AREA_MAP' });
        enumTextOrderedList.push({ EnumID: 20, EnumText: 'SUBSECTOR_CURRENT_CLASSIFICATION_AND_SAMPLING_LOCATION_MAP' });
        enumTextOrderedList.push({ EnumID: 21, EnumText: 'SUBSECTOR_RECOMMENDED_CLASSIFICATION_MAP' });
        enumTextOrderedList.push({ EnumID: 22, EnumText: 'SUBSECTOR_POLLUTION_SOURCE_LOCATIONS_MAP' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function ReportGenerateObjectsKeywordEnum_GetIDText(enumID: number, appService: AppService): string {
    let addressTypeEnunText: string;
    ReportGenerateObjectsKeywordEnum_GetOrderedText(appService).forEach(e => {
        if (e.EnumID == enumID) {
            addressTypeEnunText = e.EnumText;
            return false;
        }
    });

    return addressTypeEnunText;
}
