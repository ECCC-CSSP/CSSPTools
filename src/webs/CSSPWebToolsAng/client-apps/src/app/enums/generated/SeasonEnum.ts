/*
 * Auto generated C:\CSSPTools\src\codegen\_package\net5.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppLanguageService } from 'src/app/services/app-language.service';
import { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum SeasonEnum {
    Winter = 1,
    Spring = 2,
    Summer = 3,
    Fall = 4,
}

export function GetSeasonEnum(): typeof SeasonEnum
{
  return SeasonEnum;
}

export function SeasonEnum_GetOrderedText(appLanguageService: AppLanguageService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appLanguageService.Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Hiver' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Printemps' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Été' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Automne' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Winter' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Spring' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Summer' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Fall' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function SeasonEnum_GetIDText(enumID: number, appLanguageService: AppLanguageService): string {
    let SeasonEnumText: string;
    SeasonEnum_GetOrderedText(appLanguageService).forEach(e => {
        if (e.EnumID == enumID) {
            SeasonEnumText = e.EnumText;
            return false;
        }
    });

    return SeasonEnumText;
}
