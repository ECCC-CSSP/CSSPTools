/*
 * Auto generated C:\CSSPTools\src\codegen\GenerateAngularEnums\bin\Debug\net5.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppLanguageService } from 'src/app/services/app/app-language.service';
import { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum SortOrderAngularEnum {
    AreaSectors = 1,
    CountryProvinces = 2,
    MunicipalityMIKEScenarios = 3,
    ProvinceAreas = 4,
    ProvinceMunicipalities = 5,
    RootCountries = 6,
    SectorSubsectors = 7,
    SectorMikeScenarios = 8,
    SubsectorMWQMRuns = 9,
    SubsectorMWQMSites = 10,
    SubsectorPolSourceSites = 11,
}

export function GetSortOrderAngularEnum(): typeof SortOrderAngularEnum
{
  return SortOrderAngularEnum;
}

export function SortOrderAngularEnum_GetOrderedText(appLanguageService: AppLanguageService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appLanguageService.Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'AreaSectors' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'CountryProvinces' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MunicipalityMIKEScenarios' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'ProvinceAreas' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'ProvinceMunicipalities' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'RootCountries' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'SectorSubsectors' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'SectorMikeScenarios' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'SubsectorMWQMRuns' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'SubsectorMWQMSites' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'SubsectorPolSourceSites' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'AreaSectors' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'CountryProvinces' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MunicipalityMIKEScenarios' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'ProvinceAreas' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'ProvinceMunicipalities' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'RootCountries' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'SectorSubsectors' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'SectorMikeScenarios' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'SubsectorMWQMRuns' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'SubsectorMWQMSites' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'SubsectorPolSourceSites' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function SortOrderAngularEnum_GetIDText(enumID: number, appLanguageService: AppLanguageService): string {
    let SortOrderAngularEnumText: string;
    SortOrderAngularEnum_GetOrderedText(appLanguageService).forEach(e => {
        if (e.EnumID == enumID) {
            SortOrderAngularEnumText = e.EnumText;
            return false;
        }
    });

    return SortOrderAngularEnumText;
}
