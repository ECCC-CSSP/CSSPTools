/*
 * Auto generated C:\CSSPTools\src\codegen\_package\net5.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppLanguageService } from 'src/app/services/app-language.service';
import { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum SubsectorSubComponentEnum {
    MWQMSites = 1,
    Analysis = 2,
    MWQMRuns = 3,
    PollutionSourceSites = 4,
    Files = 5,
    SubsectorTools = 6,
    LogBook = 7,
}

export function GetSubsectorSubComponentEnum(): typeof SubsectorSubComponentEnum
{
  return SubsectorSubComponentEnum;
}

export function SubsectorSubComponentEnum_GetOrderedText(appLanguageService: AppLanguageService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appLanguageService.Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Sites PSQEM' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Analyse' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'TournÃ©es PSQEM' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Sites des sources de pollution' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Fichiers' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Outils de sous-secteurs' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'Journal de bord' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'MWQM Sites' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Analysis' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MWQM Runs' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Pollution Source Sites' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Files' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Subsector Tools' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'Log Book' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function SubsectorSubComponentEnum_GetIDText(enumID: number, appLanguageService: AppLanguageService): string {
    let SubsectorSubComponentEnumText: string;
    SubsectorSubComponentEnum_GetOrderedText(appLanguageService).forEach(e => {
        if (e.EnumID == enumID) {
            SubsectorSubComponentEnumText = e.EnumText;
            return false;
        }
    });

    return SubsectorSubComponentEnumText;
}
