/*
 * Auto generated C:\CSSPTools\src\codegen\_package\net5.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppStateService } from 'src/app/services/app-state.service';
import { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum TVAuthEnum {
    NoAccess = 1,
    Read = 2,
    Write = 3,
    Create = 4,
    Delete = 5,
    Admin = 6,
}

export function GetTVAuthEnum(): typeof TVAuthEnum
{
  return TVAuthEnum;
}

export function TVAuthEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'No access (fr)' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Read (fr)' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Write (fr)' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Create (fr)' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Delete (fr)' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Admin (fr)' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'No access' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Read' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Write' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Create' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Delete' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Admin' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function TVAuthEnum_GetIDText(enumID: number, appStateService: AppStateService): string {
    let addressTypeEnunText: string;
    TVAuthEnum_GetOrderedText(appStateService).forEach(e => {
        if (e.EnumID == enumID) {
            addressTypeEnunText = e.EnumText;
            return false;
        }
    });

    return addressTypeEnunText;
}
