/*
 * Auto generated C:\CSSPTools\src\codegen\_package\net5.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppStateService } from 'src/app/services/app-state.service';
import { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum TelTypeEnum {
    Personal = 1,
    Work = 2,
    Mobile = 3,
    Personal2 = 4,
    Work2 = 5,
    Mobile2 = 6,
}

export function GetTelTypeEnum(): typeof TelTypeEnum
{
  return TelTypeEnum;
}

export function TelTypeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Personnel' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Travail' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Cellulaire' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Personnel-2' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Travail-2' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Cellulaire-2' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Personal' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Work' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Mobile' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Personal-2' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Work-2' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Mobile-2' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function TelTypeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {
    let addressTypeEnunText: string;
    TelTypeEnum_GetOrderedText(appStateService).forEach(e => {
        if (e.EnumID == enumID) {
            addressTypeEnunText = e.EnumText;
            return false;
        }
    });

    return addressTypeEnunText;
}
