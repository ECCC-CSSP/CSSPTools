/*
 * Auto generated C:\CSSPTools\src\codegen\GenerateAngularEnums\bin\Debug\net6.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppLanguageService } from 'src/app/services/app/app-language.service';
import { EnumIDAndText } from 'src/app/models/generated/models/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum WebTideDataSetEnum {
    arctic9 = 1,
    brador = 2,
    HRglobal = 3,
    h3o = 4,
    hudson = 5,
    ne_pac4 = 6,
    nwatl = 7,
    QuatsinoModel14 = 8,
    sshelf = 9,
    flood = 10,
    vigf8 = 11,
}

export function GetWebTideDataSetEnum(): typeof WebTideDataSetEnum
{
  return WebTideDataSetEnum;
}

export function WebTideDataSetEnum_GetOrderedText(appLanguageService: AppLanguageService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appLanguageService.Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Arctic (fr)' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Brador (fr)' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Global (LEGOS France) (fr)' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Halifax Harbour (fr)' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Hudson Bay (IML) (fr)' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'North East Pacific (IOS) (fr)' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'North West Atlantic (fr)' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'Quatsino Sound (fr)' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'Scotian Fundy Maine (fr)' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'Upper Bay of Fundy (fr)' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'Vancouver Island (Mike Foreman) (fr)' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Arctic' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Brador' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Global (LEGOS France)' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Halifax Harbour' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Hudson Bay (IML)' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'North East Pacific (IOS)' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'North West Atlantic' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'Quatsino Sound' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'Scotian Fundy Maine' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'Upper Bay of Fundy' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'Vancouver Island (Mike Foreman)' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function WebTideDataSetEnum_GetIDText(enumID: number, appLanguageService: AppLanguageService): string {
    let WebTideDataSetEnumText: string;
    WebTideDataSetEnum_GetOrderedText(appLanguageService).forEach(e => {
        if (e.EnumID == enumID) {
            WebTideDataSetEnumText = e.EnumText;
            return false;
        }
    });

    return WebTideDataSetEnumText;
}
