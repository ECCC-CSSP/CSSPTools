/*
 * Auto generated C:\CSSPTools\src\codegen\_package\net5.0\GenerateAngularEnums.exe
 *
 * Do not edit this file.
 *
 */

import { AppLanguageService } from 'src/app/services/app-language.service';
import { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';
import { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';

export enum WebTypeEnum {
    WebAllAddresses = 1,
    WebAllContacts = 2,
    WebAllCountries = 3,
    WebAllEmails = 4,
    WebAllHelpDocs = 5,
    WebAllMunicipalities = 6,
    WebAllMWQMLookupMPNs = 7,
    WebAllPolSourceGroupings = 8,
    WebAllPolSourceSiteEffectTerms = 9,
    WebAllProvinces = 10,
    WebAllReportTypes = 11,
    WebAllTels = 12,
    WebAllTideLocations = 13,
    WebAllSearch = 14,
    WebArea = 15,
    WebClimateSites = 16,
    WebCountry = 17,
    WebDrogueRuns = 18,
    WebHydrometricSites = 19,
    WebLabSheets = 20,
    WebMikeScenarios = 21,
    WebMunicipality = 22,
    WebMWQMRuns = 23,
    WebMWQMSamples1980_2020 = 24,
    WebMWQMSamples2021_2060 = 25,
    WebMWQMSites = 26,
    WebPolSourceSites = 27,
    WebProvince = 28,
    WebRoot = 29,
    WebSector = 30,
    WebSubsector = 31,
    WebTideSites = 32,
    WebMonitoringRoutineStatsByYearForCountry = 33,
    WebMonitoringOtherStatsByYearForCountry = 34,
    WebMonitoringRoutineStatsByYearForProvince = 35,
    WebMonitoringOtherStatsByYearForProvince = 36,
}

export function GetWebTypeEnum(): typeof WebTypeEnum
{
  return WebTypeEnum;
}

export function WebTypeEnum_GetOrderedText(appLanguageService: AppLanguageService): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if (appLanguageService.Language == LanguageEnum.fr) {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'WebAllAddresses' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'WebAllContacts' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'WebAllCountries' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'WebAllEmails' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'WebAllHelpDocs' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'WebAllMunicipalities' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'WebAllMWQMLookupMPNs' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'WebAllPolSourceGroupings' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'WebAllPolSourceSiteEffectTerms' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'WebAllProvinces' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'WebAllReportTypes' });
        enumTextOrderedList.push({ EnumID: 12, EnumText: 'WebAllTels' });
        enumTextOrderedList.push({ EnumID: 13, EnumText: 'WebAllTideLocations' });
        enumTextOrderedList.push({ EnumID: 14, EnumText: 'WebAllSearch' });
        enumTextOrderedList.push({ EnumID: 15, EnumText: 'WebArea' });
        enumTextOrderedList.push({ EnumID: 16, EnumText: 'WebClimateSites' });
        enumTextOrderedList.push({ EnumID: 17, EnumText: 'WebCountry' });
        enumTextOrderedList.push({ EnumID: 18, EnumText: 'WebDrogueRuns' });
        enumTextOrderedList.push({ EnumID: 19, EnumText: 'WebHydrometricSites' });
        enumTextOrderedList.push({ EnumID: 20, EnumText: 'WebLabSheets' });
        enumTextOrderedList.push({ EnumID: 21, EnumText: 'WebMikeScenarios' });
        enumTextOrderedList.push({ EnumID: 22, EnumText: 'WebMunicipality' });
        enumTextOrderedList.push({ EnumID: 23, EnumText: 'WebMWQMRuns' });
        enumTextOrderedList.push({ EnumID: 24, EnumText: 'WebMWQMSamples1980_2020' });
        enumTextOrderedList.push({ EnumID: 25, EnumText: 'WebMWQMSamples2021_2060' });
        enumTextOrderedList.push({ EnumID: 26, EnumText: 'WebMWQMSites' });
        enumTextOrderedList.push({ EnumID: 27, EnumText: 'WebPolSourceSites' });
        enumTextOrderedList.push({ EnumID: 28, EnumText: 'WebProvince' });
        enumTextOrderedList.push({ EnumID: 29, EnumText: 'WebRoot' });
        enumTextOrderedList.push({ EnumID: 30, EnumText: 'WebSector' });
        enumTextOrderedList.push({ EnumID: 31, EnumText: 'WebSubsector' });
        enumTextOrderedList.push({ EnumID: 32, EnumText: 'WebTideSites' });
        enumTextOrderedList.push({ EnumID: 33, EnumText: 'WebMonitoringRoutiineStatsByYearForCountry' });
        enumTextOrderedList.push({ EnumID: 34, EnumText: 'WebMonitoringOtherStatsByYearForCountry' });
        enumTextOrderedList.push({ EnumID: 35, EnumText: 'WebMonitoringRoutineStatsByYearForProvince' });
        enumTextOrderedList.push({ EnumID: 36, EnumText: 'WebMonitoringOtherStatsByYearForProvince' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'WebAllAddresses' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'WebAllContacts' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'WebAllCountries' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'WebAllEmails' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'WebAllHelpDocs' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'WebAllMunicipalities' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'WebAllMWQMLookupMPNs' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'WebAllPolSourceGroupings' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'WebAllPolSourceSiteEffectTerms' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'WebAllProvinces' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'WebAllReportTypes' });
        enumTextOrderedList.push({ EnumID: 12, EnumText: 'WebAllTels' });
        enumTextOrderedList.push({ EnumID: 13, EnumText: 'WebAllTideLocations' });
        enumTextOrderedList.push({ EnumID: 14, EnumText: 'WebAllSearch' });
        enumTextOrderedList.push({ EnumID: 15, EnumText: 'WebArea' });
        enumTextOrderedList.push({ EnumID: 16, EnumText: 'WebClimateSites' });
        enumTextOrderedList.push({ EnumID: 17, EnumText: 'WebCountry' });
        enumTextOrderedList.push({ EnumID: 18, EnumText: 'WebDrogueRuns' });
        enumTextOrderedList.push({ EnumID: 19, EnumText: 'WebHydrometricSites' });
        enumTextOrderedList.push({ EnumID: 20, EnumText: 'WebLabSheets' });
        enumTextOrderedList.push({ EnumID: 21, EnumText: 'WebMikeScenarios' });
        enumTextOrderedList.push({ EnumID: 22, EnumText: 'WebMunicipality' });
        enumTextOrderedList.push({ EnumID: 23, EnumText: 'WebMWQMRuns' });
        enumTextOrderedList.push({ EnumID: 24, EnumText: 'WebMWQMSamples1980_2020' });
        enumTextOrderedList.push({ EnumID: 25, EnumText: 'WebMWQMSamples2021_2060' });
        enumTextOrderedList.push({ EnumID: 26, EnumText: 'WebMWQMSites' });
        enumTextOrderedList.push({ EnumID: 27, EnumText: 'WebPolSourceSites' });
        enumTextOrderedList.push({ EnumID: 28, EnumText: 'WebProvince' });
        enumTextOrderedList.push({ EnumID: 29, EnumText: 'WebRoot' });
        enumTextOrderedList.push({ EnumID: 30, EnumText: 'WebSector' });
        enumTextOrderedList.push({ EnumID: 31, EnumText: 'WebSubsector' });
        enumTextOrderedList.push({ EnumID: 32, EnumText: 'WebTideSites' });
        enumTextOrderedList.push({ EnumID: 33, EnumText: 'WebMonitoringRoutiineStatsByYearForCountry' });
        enumTextOrderedList.push({ EnumID: 34, EnumText: 'WebMonitoringOtherStatsByYearForCountry' });
        enumTextOrderedList.push({ EnumID: 35, EnumText: 'WebMonitoringRoutineStatsByYearForProvince' });
        enumTextOrderedList.push({ EnumID: 36, EnumText: 'WebMonitoringOtherStatsByYearForProvince' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function WebTypeEnum_GetIDText(enumID: number, appLanguageService: AppLanguageService): string {
    let WebTypeEnumText: string;
    WebTypeEnum_GetOrderedText(appLanguageService).forEach(e => {
        if (e.EnumID == enumID) {
            WebTypeEnumText = e.EnumText;
            return false;
        }
    });

    return WebTypeEnumText;
}
