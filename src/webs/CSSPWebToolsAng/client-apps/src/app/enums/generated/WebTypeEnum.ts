/*
 * Auto generated C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularEnumsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { EnumIDAndText } from '../../models/enumidandtext.model';

export enum WebTypeEnum {
    WebRoot = 1,
    WebCountry = 2,
    WebProvince = 3,
    WebArea = 4,
    WebMunicipalities = 5,
    WebSector = 6,
    WebSubsector = 7,
    WebMunicipality = 8,
    WebMWQMSample = 9,
    WebSamplingPlan = 10,
    WebMWQMRun = 11,
    WebMWQMSite = 12,
    WebContact = 13,
    WebClimateSite = 14,
    WebHydrometricSite = 15,
    WebDrogueRun = 16,
    WebMWQMLookupMPN = 17,
    WebMikeScenario = 18,
    WebClimateDataValue = 19,
    WebHydrometricDataValue = 20,
    WebHelpDoc = 21,
    WebTideLocation = 22,
    WebPolSourceSite = 23,
    WebPolSourceGrouping = 24,
    WebReportType = 25,
    WebTVItem = 26,
}

export function WebTypeEnum_GetOrderedText(): EnumIDAndText[] {
    let enumTextOrderedList: EnumIDAndText[] = [];
    if ($localize.locale === 'fr-CA') {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'WebRoot (fr)' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'WebCountry (fr)' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'WebProvince (fr)' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'WebArea (fr)' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'WebMunicipalities (fr)' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'WebSector (fr)' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'WebSubsector (fr)' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'WebMunicipality (fr)' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'WebMWQMSample (fr)' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'WebSamplingPlan (fr)' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'WebMWQMRun (fr)' });
        enumTextOrderedList.push({ EnumID: 12, EnumText: 'WebMWQMSite (fr)' });
        enumTextOrderedList.push({ EnumID: 13, EnumText: 'WebContact (fr)' });
        enumTextOrderedList.push({ EnumID: 14, EnumText: 'WebClimateSite (fr)' });
        enumTextOrderedList.push({ EnumID: 15, EnumText: 'WebHydrometricSite (fr)' });
        enumTextOrderedList.push({ EnumID: 16, EnumText: 'WebDrogueRun (fr)' });
        enumTextOrderedList.push({ EnumID: 17, EnumText: 'WebMWQMLookupMPN (fr)' });
        enumTextOrderedList.push({ EnumID: 18, EnumText: 'WebMikeScenario (fr)' });
        enumTextOrderedList.push({ EnumID: 19, EnumText: 'WebClimateDataValue (fr)' });
        enumTextOrderedList.push({ EnumID: 20, EnumText: 'WebHydrometricDataValue (fr)' });
        enumTextOrderedList.push({ EnumID: 21, EnumText: 'WebHelpDoc (fr)' });
        enumTextOrderedList.push({ EnumID: 22, EnumText: 'WebTideLocation (fr)' });
        enumTextOrderedList.push({ EnumID: 23, EnumText: 'WebPolSourceSite (fr)' });
        enumTextOrderedList.push({ EnumID: 24, EnumText: 'WebPolSourceGrouping (fr)' });
        enumTextOrderedList.push({ EnumID: 25, EnumText: 'WebReportType (fr)' });
        enumTextOrderedList.push({ EnumID: 26, EnumText: 'WebTVItem (fr)' });
    }
    else {
        enumTextOrderedList.push({ EnumID: 1, EnumText: 'WebRoot' });
        enumTextOrderedList.push({ EnumID: 2, EnumText: 'WebCountry' });
        enumTextOrderedList.push({ EnumID: 3, EnumText: 'WebProvince' });
        enumTextOrderedList.push({ EnumID: 4, EnumText: 'WebArea' });
        enumTextOrderedList.push({ EnumID: 5, EnumText: 'WebMunicipalities' });
        enumTextOrderedList.push({ EnumID: 6, EnumText: 'WebSector' });
        enumTextOrderedList.push({ EnumID: 7, EnumText: 'WebSubsector' });
        enumTextOrderedList.push({ EnumID: 8, EnumText: 'WebMunicipality' });
        enumTextOrderedList.push({ EnumID: 9, EnumText: 'WebMWQMSample' });
        enumTextOrderedList.push({ EnumID: 10, EnumText: 'WebSamplingPlan' });
        enumTextOrderedList.push({ EnumID: 11, EnumText: 'WebMWQMRun' });
        enumTextOrderedList.push({ EnumID: 12, EnumText: 'WebMWQMSite' });
        enumTextOrderedList.push({ EnumID: 13, EnumText: 'WebContact' });
        enumTextOrderedList.push({ EnumID: 14, EnumText: 'WebClimateSite' });
        enumTextOrderedList.push({ EnumID: 15, EnumText: 'WebHydrometricSite' });
        enumTextOrderedList.push({ EnumID: 16, EnumText: 'WebDrogueRun' });
        enumTextOrderedList.push({ EnumID: 17, EnumText: 'WebMWQMLookupMPN' });
        enumTextOrderedList.push({ EnumID: 18, EnumText: 'WebMikeScenario' });
        enumTextOrderedList.push({ EnumID: 19, EnumText: 'WebClimateDataValue' });
        enumTextOrderedList.push({ EnumID: 20, EnumText: 'WebHydrometricDataValue' });
        enumTextOrderedList.push({ EnumID: 21, EnumText: 'WebHelpDoc' });
        enumTextOrderedList.push({ EnumID: 22, EnumText: 'WebTideLocation' });
        enumTextOrderedList.push({ EnumID: 23, EnumText: 'WebPolSourceSite' });
        enumTextOrderedList.push({ EnumID: 24, EnumText: 'WebPolSourceGrouping' });
        enumTextOrderedList.push({ EnumID: 25, EnumText: 'WebReportType' });
        enumTextOrderedList.push({ EnumID: 26, EnumText: 'WebTVItem' });
    }

    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));
}

export function WebTypeEnum_GetIDText(enumID: number): string {
    let addressTypeEnunText: string;
    WebTypeEnum_GetOrderedText().forEach(e => {
        if (e.EnumID == enumID) {
            addressTypeEnunText = e.EnumText;
            return false;
        }
    });

    return addressTypeEnunText;
}
