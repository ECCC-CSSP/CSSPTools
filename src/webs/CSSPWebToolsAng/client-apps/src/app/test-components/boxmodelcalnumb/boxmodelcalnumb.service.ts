/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { BoxModelCalNumbTextModel, BoxModelCalNumbModel } from './boxmodelcalnumb.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesBoxModelCalNumbText } from './boxmodelcalnumb.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { BoxModelCalNumb } from 'src/app/models/generated/BoxModelCalNumb.model';

@Injectable({
  providedIn: 'root'
})
export class BoxModelCalNumbService {
  boxmodelcalnumbTextModel$: BehaviorSubject<BoxModelCalNumbTextModel> = new BehaviorSubject<BoxModelCalNumbTextModel>(<BoxModelCalNumbTextModel>{});
  boxmodelcalnumbModel$: BehaviorSubject<BoxModelCalNumbModel> = new BehaviorSubject<BoxModelCalNumbModel>(<BoxModelCalNumbModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesBoxModelCalNumbText(this);
    this.UpdateBoxModelCalNumbText(<BoxModelCalNumbTextModel>{ Title: "Something2 for text" });
  }

  UpdateBoxModelCalNumbText(boxmodelcalnumbTextModel: BoxModelCalNumbTextModel) {
    this.boxmodelcalnumbTextModel$.next(<BoxModelCalNumbTextModel>{ ...this.boxmodelcalnumbTextModel$.getValue(), ...boxmodelcalnumbTextModel });
  }

  UpdateBoxModelCalNumbModel(boxmodelcalnumbModel: BoxModelCalNumbModel) {
    this.boxmodelcalnumbModel$.next(<BoxModelCalNumbModel>{ ...this.boxmodelcalnumbModel$.getValue(), ...boxmodelcalnumbModel });
  }

  GetBoxModelCalNumb(router: Router) {
    let oldURL = router.url;
    this.UpdateBoxModelCalNumbModel(<BoxModelCalNumbModel>{ Working: true, Error: null });

    return this.httpClient.get<BoxModelCalNumb[]>('/api/BoxModelCalNumb').pipe(
      map((x: any) => {
        console.debug(`BoxModelCalNumb OK. Return: ${x}`);
        this.boxmodelcalnumbModel$.getValue().BoxModelCalNumbList = <BoxModelCalNumb[]>x;
        this.UpdateBoxModelCalNumbModel(this.boxmodelcalnumbModel$.getValue());
        this.UpdateBoxModelCalNumbModel(<BoxModelCalNumbModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateBoxModelCalNumbModel(<BoxModelCalNumbModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`BoxModelCalNumb ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
