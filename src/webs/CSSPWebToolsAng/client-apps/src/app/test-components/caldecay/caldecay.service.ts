/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { CalDecayTextModel, CalDecayModel } from './caldecay.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesCalDecayText } from './caldecay.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { CalDecay } from 'src/app/models/generated/CalDecay.model';

@Injectable({
  providedIn: 'root'
})
export class CalDecayService {
  caldecayTextModel$: BehaviorSubject<CalDecayTextModel> = new BehaviorSubject<CalDecayTextModel>(<CalDecayTextModel>{});
  caldecayModel$: BehaviorSubject<CalDecayModel> = new BehaviorSubject<CalDecayModel>(<CalDecayModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesCalDecayText(this);
    this.UpdateCalDecayText(<CalDecayTextModel>{ Title: "Something2 for text" });
  }

  UpdateCalDecayText(caldecayTextModel: CalDecayTextModel) {
    this.caldecayTextModel$.next(<CalDecayTextModel>{ ...this.caldecayTextModel$.getValue(), ...caldecayTextModel });
  }

  UpdateCalDecayModel(caldecayModel: CalDecayModel) {
    this.caldecayModel$.next(<CalDecayModel>{ ...this.caldecayModel$.getValue(), ...caldecayModel });
  }

  GetCalDecay(router: Router) {
    let oldURL = router.url;
    this.UpdateCalDecayModel(<CalDecayModel>{ Working: true, Error: null });

    return this.httpClient.get<CalDecay[]>('/api/CalDecay').pipe(
      map((x: any) => {
        console.debug(`CalDecay OK. Return: ${x}`);
        this.caldecayModel$.getValue().CalDecayList = <CalDecay[]>x;
        this.UpdateCalDecayModel(this.caldecayModel$.getValue());
        this.UpdateCalDecayModel(<CalDecayModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateCalDecayModel(<CalDecayModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`CalDecay ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
