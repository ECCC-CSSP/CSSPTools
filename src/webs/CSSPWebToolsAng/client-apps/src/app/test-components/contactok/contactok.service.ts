/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { ContactOKTextModel, ContactOKModel } from './contactok.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesContactOKText } from './contactok.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { ContactOK } from 'src/app/models/generated/ContactOK.model';

@Injectable({
  providedIn: 'root'
})
export class ContactOKService {
  contactokTextModel$: BehaviorSubject<ContactOKTextModel> = new BehaviorSubject<ContactOKTextModel>(<ContactOKTextModel>{});
  contactokModel$: BehaviorSubject<ContactOKModel> = new BehaviorSubject<ContactOKModel>(<ContactOKModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesContactOKText(this);
    this.UpdateContactOKText(<ContactOKTextModel>{ Title: "Something2 for text" });
  }

  UpdateContactOKText(contactokTextModel: ContactOKTextModel) {
    this.contactokTextModel$.next(<ContactOKTextModel>{ ...this.contactokTextModel$.getValue(), ...contactokTextModel });
  }

  UpdateContactOKModel(contactokModel: ContactOKModel) {
    this.contactokModel$.next(<ContactOKModel>{ ...this.contactokModel$.getValue(), ...contactokModel });
  }

  GetContactOK(router: Router) {
    let oldURL = router.url;
    this.UpdateContactOKModel(<ContactOKModel>{ Working: true, Error: null });

    return this.httpClient.get<ContactOK[]>('/api/ContactOK').pipe(
      map((x: any) => {
        console.debug(`ContactOK OK. Return: ${x}`);
        this.contactokModel$.getValue().ContactOKList = <ContactOK[]>x;
        this.UpdateContactOKModel(this.contactokModel$.getValue());
        this.UpdateContactOKModel(<ContactOKModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateContactOKModel(<ContactOKModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`ContactOK ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
