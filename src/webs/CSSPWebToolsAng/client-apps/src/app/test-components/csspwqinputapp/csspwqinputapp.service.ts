/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { CSSPWQInputAppTextModel, CSSPWQInputAppModel } from './csspwqinputapp.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesCSSPWQInputAppText } from './csspwqinputapp.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { CSSPWQInputApp } from 'src/app/models/generated/CSSPWQInputApp.model';

@Injectable({
  providedIn: 'root'
})
export class CSSPWQInputAppService {
  csspwqinputappTextModel$: BehaviorSubject<CSSPWQInputAppTextModel> = new BehaviorSubject<CSSPWQInputAppTextModel>(<CSSPWQInputAppTextModel>{});
  csspwqinputappModel$: BehaviorSubject<CSSPWQInputAppModel> = new BehaviorSubject<CSSPWQInputAppModel>(<CSSPWQInputAppModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesCSSPWQInputAppText(this);
    this.UpdateCSSPWQInputAppText(<CSSPWQInputAppTextModel>{ Title: "Something2 for text" });
  }

  UpdateCSSPWQInputAppText(csspwqinputappTextModel: CSSPWQInputAppTextModel) {
    this.csspwqinputappTextModel$.next(<CSSPWQInputAppTextModel>{ ...this.csspwqinputappTextModel$.getValue(), ...csspwqinputappTextModel });
  }

  UpdateCSSPWQInputAppModel(csspwqinputappModel: CSSPWQInputAppModel) {
    this.csspwqinputappModel$.next(<CSSPWQInputAppModel>{ ...this.csspwqinputappModel$.getValue(), ...csspwqinputappModel });
  }

  GetCSSPWQInputApp(router: Router) {
    let oldURL = router.url;
    this.UpdateCSSPWQInputAppModel(<CSSPWQInputAppModel>{ Working: true, Error: null });

    return this.httpClient.get<CSSPWQInputApp[]>('/api/CSSPWQInputApp').pipe(
      map((x: any) => {
        console.debug(`CSSPWQInputApp OK. Return: ${x}`);
        this.csspwqinputappModel$.getValue().CSSPWQInputAppList = <CSSPWQInputApp[]>x;
        this.UpdateCSSPWQInputAppModel(this.csspwqinputappModel$.getValue());
        this.UpdateCSSPWQInputAppModel(<CSSPWQInputAppModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateCSSPWQInputAppModel(<CSSPWQInputAppModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`CSSPWQInputApp ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
