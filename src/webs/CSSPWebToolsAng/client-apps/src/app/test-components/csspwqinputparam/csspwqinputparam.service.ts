/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { CSSPWQInputParamTextModel, CSSPWQInputParamModel } from './csspwqinputparam.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesCSSPWQInputParamText } from './csspwqinputparam.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { CSSPWQInputParam } from 'src/app/models/generated/CSSPWQInputParam.model';

@Injectable({
  providedIn: 'root'
})
export class CSSPWQInputParamService {
  csspwqinputparamTextModel$: BehaviorSubject<CSSPWQInputParamTextModel> = new BehaviorSubject<CSSPWQInputParamTextModel>(<CSSPWQInputParamTextModel>{});
  csspwqinputparamModel$: BehaviorSubject<CSSPWQInputParamModel> = new BehaviorSubject<CSSPWQInputParamModel>(<CSSPWQInputParamModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesCSSPWQInputParamText(this);
    this.UpdateCSSPWQInputParamText(<CSSPWQInputParamTextModel>{ Title: "Something2 for text" });
  }

  UpdateCSSPWQInputParamText(csspwqinputparamTextModel: CSSPWQInputParamTextModel) {
    this.csspwqinputparamTextModel$.next(<CSSPWQInputParamTextModel>{ ...this.csspwqinputparamTextModel$.getValue(), ...csspwqinputparamTextModel });
  }

  UpdateCSSPWQInputParamModel(csspwqinputparamModel: CSSPWQInputParamModel) {
    this.csspwqinputparamModel$.next(<CSSPWQInputParamModel>{ ...this.csspwqinputparamModel$.getValue(), ...csspwqinputparamModel });
  }

  GetCSSPWQInputParam(router: Router) {
    let oldURL = router.url;
    this.UpdateCSSPWQInputParamModel(<CSSPWQInputParamModel>{ Working: true, Error: null });

    return this.httpClient.get<CSSPWQInputParam[]>('/api/CSSPWQInputParam').pipe(
      map((x: any) => {
        console.debug(`CSSPWQInputParam OK. Return: ${x}`);
        this.csspwqinputparamModel$.getValue().CSSPWQInputParamList = <CSSPWQInputParam[]>x;
        this.UpdateCSSPWQInputParamModel(this.csspwqinputparamModel$.getValue());
        this.UpdateCSSPWQInputParamModel(<CSSPWQInputParamModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateCSSPWQInputParamModel(<CSSPWQInputParamModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`CSSPWQInputParam ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
