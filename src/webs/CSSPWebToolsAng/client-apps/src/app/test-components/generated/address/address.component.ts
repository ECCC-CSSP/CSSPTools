/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { AddressService } from './address.service';
import { LoadLocalesAddressText } from './address.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { AddressTypeEnum_GetIDText, AddressTypeEnum_GetOrderedText } from 'src/app/enums/generated/AddressTypeEnum';
import { StreetTypeEnum_GetIDText, StreetTypeEnum_GetOrderedText } from 'src/app/enums/generated/StreetTypeEnum';
import { Address } from 'src/app/models/generated/Address.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from 'src/app/models/enumidandtext.model';

@Component({
  selector: 'app-address',
  templateUrl: './address.component.html',
  styleUrls: ['./address.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class AddressComponent implements OnInit, OnDestroy {
  sub: Subscription;
  addressTypeList: EnumIDAndText[];
  streetTypeList: EnumIDAndText[]; 
  addressFormPut: FormGroup;
  addressFormPost: FormGroup;

  constructor(public addressService: AddressService, public router: Router, public fb: FormBuilder) { }

  GetAddress() {
    this.sub = this.addressService.GetAddress(this.router).subscribe();
  }

  PutAddress() {
    this.sub = this.addressService.PutAddress(this.addressFormPut.value, this.router).subscribe();
  }

  PostAddress() {
    this.sub = this.addressService.PostAddress(this.addressFormPost.value, this.router).subscribe();
  }

  DeleteAddress(address: Address) {
    this.sub = this.addressService.DeleteAddress(address, this.router).subscribe();
  }

  GetAddressTypeEnumText(enumID: number) {
    return AddressTypeEnum_GetIDText(enumID)
  }

  GetStreetTypeEnumText(enumID: number) {
    return StreetTypeEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesAddressText(this.addressService);
    this.addressTypeList = AddressTypeEnum_GetOrderedText();
    this.streetTypeList = StreetTypeEnum_GetOrderedText();
    this.FillAddFormBuilderGroup();
    this.FillUpdateFormBuilderGroup();
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillAddFormBuilderGroup()
  {
    this.addressFormPost = this.fb.group(
      {
        AddressID: [
          {
            value: 0,
            disabled: false
          }, Validators.required],
        AddressTVItemID: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.AddressTVItemID : '',
            disabled: false
          }, Validators.required],
        AddressType: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.AddressType : '',
            disabled: false
          }, Validators.required],
        CountryTVItemID: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.CountryTVItemID : '',
            disabled: false
          }, Validators.required],
        ProvinceTVItemID: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.ProvinceTVItemID : '',
            disabled: false
          }, Validators.required],
        MunicipalityTVItemID: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.MunicipalityTVItemID : '',
            disabled: false
          }, Validators.required],
        StreetName: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.StreetName : '',
            disabled: false
          }, Validators.required],
        StreetNumber: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.StreetNumber : '',
            disabled: false
          }, Validators.required],
        StreetType: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.StreetType : '',
            disabled: false
          }, Validators.required],
        PostalCode: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.PostalCode : '',
            disabled: false
          }, [ Validators.required ]],
        GoogleAddressText: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.GoogleAddressText : '',
            disabled: false
          }, Validators.required],
        LastUpdateDate_UTC: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.LastUpdateDate_UTC : '',
            disabled: false
          }, Validators.required],
        LastUpdateContactTVItemID: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.LastUpdateContactTVItemID : '',
            disabled: false
          }, Validators.required],
      }
    );
  
  }

  FillUpdateFormBuilderGroup()
  {
    this.addressFormPut = this.fb.group(
      {
        AddressID: [
          {
            value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.AddressID : '',
            disabled: false
          }, Validators.required],
          AddressTVItemID: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.AddressTVItemID : '',
              disabled: false
            }, Validators.required],
          AddressType: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.AddressType : '',
              disabled: false
            }, Validators.required],
          CountryTVItemID: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.CountryTVItemID : '',
              disabled: false
            }, Validators.required],
          ProvinceTVItemID: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.ProvinceTVItemID : '',
              disabled: false
            }, Validators.required],
          MunicipalityTVItemID: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.MunicipalityTVItemID : '',
              disabled: false
            }, Validators.required],
          StreetName: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.StreetName : '',
              disabled: false
            }, Validators.required],
          StreetNumber: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.StreetNumber : '',
              disabled: false
            }, Validators.required],
          StreetType: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.StreetType : '',
              disabled: false
            }, Validators.required],
          PostalCode: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.PostalCode : '',
              disabled: false
            }, [ Validators.required ]],
          GoogleAddressText: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.GoogleAddressText : '',
              disabled: false
            }, Validators.required],
          LastUpdateDate_UTC: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.LastUpdateDate_UTC : '',
              disabled: false
            }, Validators.required],
          LastUpdateContactTVItemID: [
            {
              value: this.addressService.addressModel$.getValue() ? this.addressService.addressModel$.getValue()?.AddressList[0]?.LastUpdateContactTVItemID : '',
              disabled: false
            }, Validators.required],
        }
    );
  
  }
}
