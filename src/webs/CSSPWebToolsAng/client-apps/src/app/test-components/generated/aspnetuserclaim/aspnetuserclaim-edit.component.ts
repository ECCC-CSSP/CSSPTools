/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp5.0\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { AspNetUserClaimService } from './aspnetuserclaim.service';
import { LoadLocalesAspNetUserClaimText } from './aspnetuserclaim.locales';
import { Subscription } from 'rxjs';
import { AspNetUserClaim } from '../../../models/generated/AspNetUserClaim.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-aspnetuserclaim-edit',
  templateUrl: './aspnetuserclaim-edit.component.html',
  styleUrls: ['./aspnetuserclaim-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class AspNetUserClaimEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  aspnetuserclaimFormEdit: FormGroup;
  @Input() aspnetuserclaim: AspNetUserClaim = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public aspnetuserclaimService: AspNetUserClaimService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutAspNetUserClaim(aspnetuserclaim: AspNetUserClaim) {
    this.sub = this.aspnetuserclaimService.PutAspNetUserClaim(aspnetuserclaim).subscribe();
  }

  PostAspNetUserClaim(aspnetuserclaim: AspNetUserClaim) {
    this.sub = this.aspnetuserclaimService.PostAspNetUserClaim(aspnetuserclaim).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.aspnetuserclaim) {
      let formGroup: FormGroup = this.fb.group(
        {
          Id: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.aspnetuserclaim.Id)),
              disabled: false
            }, [Validators.required]],
          UserId: [
            {
              value: this.aspnetuserclaim.UserId,
              disabled: false
            }, [Validators.required, Validators.maxLength(450)]],
          ClaimType: [
            {
              value: this.aspnetuserclaim.ClaimType,
              disabled: false
            }],
          ClaimValue: [
            {
              value: this.aspnetuserclaim.ClaimValue,
              disabled: false
            }],
        }
      );

      this.aspnetuserclaimFormEdit = formGroup
    }
  }
}
