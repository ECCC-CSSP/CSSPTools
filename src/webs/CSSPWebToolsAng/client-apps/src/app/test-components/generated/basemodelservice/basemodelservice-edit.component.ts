/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp5.0\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { BaseModelServiceService } from './basemodelservice.service';
import { LoadLocalesBaseModelServiceText } from './basemodelservice.locales';
import { Subscription } from 'rxjs';
import { BaseModelService } from '../../../models/generated/BaseModelService.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-basemodelservice-edit',
  templateUrl: './basemodelservice-edit.component.html',
  styleUrls: ['./basemodelservice-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class BaseModelServiceEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  basemodelserviceFormEdit: FormGroup;
  @Input() basemodelservice: BaseModelService = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public basemodelserviceService: BaseModelServiceService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutBaseModelService(basemodelservice: BaseModelService) {
    this.sub = this.basemodelserviceService.PutBaseModelService(basemodelservice).subscribe();
  }

  PostBaseModelService(basemodelservice: BaseModelService) {
    this.sub = this.basemodelserviceService.PostBaseModelService(basemodelservice).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.basemodelservice) {
      let formGroup: FormGroup = this.fb.group(
        {
        }
      );

      this.basemodelserviceFormEdit = formGroup
    }
  }
}
