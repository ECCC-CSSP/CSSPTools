/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp5.0\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { BoxModelResultService } from './boxmodelresult.service';
import { LoadLocalesBoxModelResultText } from './boxmodelresult.locales';
import { Subscription } from 'rxjs';
import { BoxModelResultTypeEnum_GetIDText } from '../../../enums/generated/BoxModelResultTypeEnum';
import { BoxModelResult } from '../../../models/generated/BoxModelResult.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-boxmodelresult',
  templateUrl: './boxmodelresult.component.html',
  styleUrls: ['./boxmodelresult.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class BoxModelResultComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public boxmodelresultService: BoxModelResultService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(boxmodelresult: BoxModelResult) {
    if (this.IDToShow === boxmodelresult.BoxModelResultID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(boxmodelresult: BoxModelResult) {
    if (this.IDToShow === boxmodelresult.BoxModelResultID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(boxmodelresult: BoxModelResult) {
    if (this.IDToShow === boxmodelresult.BoxModelResultID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = boxmodelresult.BoxModelResultID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(boxmodelresult: BoxModelResult) {
    if (this.IDToShow === boxmodelresult.BoxModelResultID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = boxmodelresult.BoxModelResultID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetBoxModelResultList() {
    this.sub = this.boxmodelresultService.GetBoxModelResultList().subscribe();
  }

  DeleteBoxModelResult(boxmodelresult: BoxModelResult) {
    this.sub = this.boxmodelresultService.DeleteBoxModelResult(boxmodelresult).subscribe();
  }

  GetBoxModelResultTypeEnumText(enumID: number) {
    return BoxModelResultTypeEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesBoxModelResultText(this.boxmodelresultService.boxmodelresultTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
