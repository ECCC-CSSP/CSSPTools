/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { ClimateSiteService } from './climatesite.service';
import { LoadLocalesClimateSiteText } from './climatesite.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { ClimateSite } from '../../../models/generated/ClimateSite.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-climatesite',
  templateUrl: './climatesite.component.html',
  styleUrls: ['./climatesite.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class ClimateSiteComponent implements OnInit, OnDestroy {
  sub: Subscription;
  climatesiteFormPut: FormGroup;
  climatesiteFormPost: FormGroup;

  constructor(public climatesiteService: ClimateSiteService, public router: Router, public fb: FormBuilder) { }

  GetClimateSiteList() {
    this.sub = this.climatesiteService.GetClimateSiteList(this.router).subscribe();
  }

  PutClimateSite(climatesite: ClimateSite) {
    this.sub = this.climatesiteService.PutClimateSite(climatesite, this.router).subscribe();
  }

  PostClimateSite(climatesite: ClimateSite) {
    this.sub = this.climatesiteService.PostClimateSite(climatesite, this.router).subscribe();
  }

  DeleteClimateSite(climatesite: ClimateSite) {
    this.sub = this.climatesiteService.DeleteClimateSite(climatesite, this.router).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesClimateSiteText(this.climatesiteService);
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.climatesiteService.climatesiteList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          ClimateSiteID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.climatesiteService.climatesiteList[0]?.ClimateSiteID)),
              disabled: false
            }],
          ClimateSiteTVItemID: [
            {
              value: this.climatesiteService.climatesiteList[0]?.ClimateSiteTVItemID,
              disabled: false
            }],
          ECDBID: [
            {
              value: this.climatesiteService.climatesiteList[0]?.ECDBID,
              disabled: false
            }],
          ClimateSiteName: [
            {
              value: this.climatesiteService.climatesiteList[0]?.ClimateSiteName,
              disabled: false
            }],
          Province: [
            {
              value: this.climatesiteService.climatesiteList[0]?.Province,
              disabled: false
            }],
          Elevation_m: [
            {
              value: this.climatesiteService.climatesiteList[0]?.Elevation_m,
              disabled: false
            }],
          ClimateID: [
            {
              value: this.climatesiteService.climatesiteList[0]?.ClimateID,
              disabled: false
            }],
          WMOID: [
            {
              value: this.climatesiteService.climatesiteList[0]?.WMOID,
              disabled: false
            }],
          TCID: [
            {
              value: this.climatesiteService.climatesiteList[0]?.TCID,
              disabled: false
            }],
          IsQuebecSite: [
            {
              value: this.climatesiteService.climatesiteList[0]?.IsQuebecSite,
              disabled: false
            }],
          IsCoCoRaHS: [
            {
              value: this.climatesiteService.climatesiteList[0]?.IsCoCoRaHS,
              disabled: false
            }],
          TimeOffset_hour: [
            {
              value: this.climatesiteService.climatesiteList[0]?.TimeOffset_hour,
              disabled: false
            }],
          File_desc: [
            {
              value: this.climatesiteService.climatesiteList[0]?.File_desc,
              disabled: false
            }],
          HourlyStartDate_Local: [
            {
              value: this.climatesiteService.climatesiteList[0]?.HourlyStartDate_Local,
              disabled: false
            }],
          HourlyEndDate_Local: [
            {
              value: this.climatesiteService.climatesiteList[0]?.HourlyEndDate_Local,
              disabled: false
            }],
          HourlyNow: [
            {
              value: this.climatesiteService.climatesiteList[0]?.HourlyNow,
              disabled: false
            }],
          DailyStartDate_Local: [
            {
              value: this.climatesiteService.climatesiteList[0]?.DailyStartDate_Local,
              disabled: false
            }],
          DailyEndDate_Local: [
            {
              value: this.climatesiteService.climatesiteList[0]?.DailyEndDate_Local,
              disabled: false
            }],
          DailyNow: [
            {
              value: this.climatesiteService.climatesiteList[0]?.DailyNow,
              disabled: false
            }],
          MonthlyStartDate_Local: [
            {
              value: this.climatesiteService.climatesiteList[0]?.MonthlyStartDate_Local,
              disabled: false
            }],
          MonthlyEndDate_Local: [
            {
              value: this.climatesiteService.climatesiteList[0]?.MonthlyEndDate_Local,
              disabled: false
            }],
          MonthlyNow: [
            {
              value: this.climatesiteService.climatesiteList[0]?.MonthlyNow,
              disabled: false
            }],
          LastUpdateDate_UTC: [
            {
              value: this.climatesiteService.climatesiteList[0]?.LastUpdateDate_UTC,
              disabled: false
            }],
          LastUpdateContactTVItemID: [
            {
              value: this.climatesiteService.climatesiteList[0]?.LastUpdateContactTVItemID,
              disabled: false
            }],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.climatesiteFormPost = formGroup
      }
      else {
        this.climatesiteFormPut = formGroup;
      }
    }
  }
}
