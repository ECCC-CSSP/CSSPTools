/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { ContactService } from './contact.service';
import { LoadLocalesContactText } from './contact.locales';
import { Subscription } from 'rxjs';
import { ContactTitleEnum_GetIDText } from '../../../enums/generated/ContactTitleEnum';
import { Contact } from '../../../models/generated/Contact.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-contact',
  templateUrl: './contact.component.html',
  styleUrls: ['./contact.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class ContactComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public contactService: ContactService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(contact: Contact) {
    if (this.IDToShow === contact.ContactID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(contact: Contact) {
    if (this.IDToShow === contact.ContactID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(contact: Contact) {
    if (this.IDToShow === contact.ContactID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = contact.ContactID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(contact: Contact) {
    if (this.IDToShow === contact.ContactID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = contact.ContactID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetContactList() {
    this.sub = this.contactService.GetContactList().subscribe();
  }

  DeleteContact(contact: Contact) {
    this.sub = this.contactService.DeleteContact(contact).subscribe();
  }

  GetContactTitleEnumText(enumID: number) {
    return ContactTitleEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesContactText(this.contactService.contactTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
