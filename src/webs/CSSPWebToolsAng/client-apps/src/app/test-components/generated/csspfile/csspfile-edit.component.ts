/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { CSSPFileService } from './csspfile.service';
import { LoadLocalesCSSPFileText } from './csspfile.locales';
import { Subscription } from 'rxjs';
import { CSSPFile } from '../../../models/generated/CSSPFile.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-csspfile-edit',
  templateUrl: './csspfile-edit.component.html',
  styleUrls: ['./csspfile-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class CSSPFileEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  csspfileFormEdit: FormGroup;
  @Input() csspfile: CSSPFile = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public csspfileService: CSSPFileService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutCSSPFile(csspfile: CSSPFile) {
    this.sub = this.csspfileService.PutCSSPFile(csspfile).subscribe();
  }

  PostCSSPFile(csspfile: CSSPFile) {
    this.sub = this.csspfileService.PostCSSPFile(csspfile).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.csspfile) {
      let formGroup: FormGroup = this.fb.group(
        {
          CSSPFileID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.csspfile.CSSPFileID)),
              disabled: false
            }, [Validators.required]],
          AzureStorage: [
            {
              value: this.csspfile.AzureStorage,
              disabled: false
            }, [Validators.required, Validators.maxLength(100)]],
          AzureFileName: [
            {
              value: this.csspfile.AzureFileName,
              disabled: false
            }, [Validators.required, Validators.maxLength(200)]],
          AzureETag: [
            {
              value: this.csspfile.AzureETag,
              disabled: false
            }, [Validators.required, Validators.maxLength(50)]],
          AzureCreationTime: [
            {
              value: this.csspfile.AzureCreationTime,
              disabled: false
            }, [Validators.required]],
          LocalExist: [
            {
              value: this.csspfile.LocalExist,
              disabled: false
            }, [Validators.required]],
          LocalOld: [
            {
              value: this.csspfile.LocalOld,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.csspfileFormEdit = formGroup
    }
  }
}
