/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { DrogueRunPositionTextModel, DrogueRunPositionModel } from './droguerunposition.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesDrogueRunPositionText } from './droguerunposition.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { DrogueRunPosition } from 'src/app/models/generated/DrogueRunPosition.model';

@Injectable({
  providedIn: 'root'
})
export class DrogueRunPositionService {
  droguerunpositionTextModel$: BehaviorSubject<DrogueRunPositionTextModel> = new BehaviorSubject<DrogueRunPositionTextModel>(<DrogueRunPositionTextModel>{});
  droguerunpositionModel$: BehaviorSubject<DrogueRunPositionModel> = new BehaviorSubject<DrogueRunPositionModel>(<DrogueRunPositionModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesDrogueRunPositionText(this);
    this.UpdateDrogueRunPositionText(<DrogueRunPositionTextModel>{ Title: "Something2 for text" });
  }

  UpdateDrogueRunPositionText(droguerunpositionTextModel: DrogueRunPositionTextModel) {
    this.droguerunpositionTextModel$.next(<DrogueRunPositionTextModel>{ ...this.droguerunpositionTextModel$.getValue(), ...droguerunpositionTextModel });
  }

  UpdateDrogueRunPositionModel(droguerunpositionModel: DrogueRunPositionModel) {
    this.droguerunpositionModel$.next(<DrogueRunPositionModel>{ ...this.droguerunpositionModel$.getValue(), ...droguerunpositionModel });
  }

  GetDrogueRunPosition(router: Router) {
    let oldURL = router.url;
    this.UpdateDrogueRunPositionModel(<DrogueRunPositionModel>{ Working: true, Error: null });

    return this.httpClient.get<DrogueRunPosition[]>('/api/DrogueRunPosition').pipe(
      map((x: any) => {
        console.debug(`DrogueRunPosition OK. Return: ${x}`);
        this.droguerunpositionModel$.getValue().DrogueRunPositionList = <DrogueRunPosition[]>x;
        this.UpdateDrogueRunPositionModel(this.droguerunpositionModel$.getValue());
        this.UpdateDrogueRunPositionModel(<DrogueRunPositionModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateDrogueRunPositionModel(<DrogueRunPositionModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`DrogueRunPosition ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
