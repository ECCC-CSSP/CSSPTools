/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { EmailDistributionListService } from './emaildistributionlist.service';
import { LoadLocalesEmailDistributionListText } from './emaildistributionlist.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { EmailDistributionList } from '../../../models/generated/EmailDistributionList.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-emaildistributionlist',
  templateUrl: './emaildistributionlist.component.html',
  styleUrls: ['./emaildistributionlist.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class EmailDistributionListComponent implements OnInit, OnDestroy {
  sub: Subscription;
  emaildistributionlistFormPut: FormGroup;
  emaildistributionlistFormPost: FormGroup;

  constructor(public emaildistributionlistService: EmailDistributionListService, public router: Router, public fb: FormBuilder) { }

  GetEmailDistributionListList() {
    this.sub = this.emaildistributionlistService.GetEmailDistributionListList(this.router).subscribe();
  }

  PutEmailDistributionList(emaildistributionlist: EmailDistributionList) {
    this.sub = this.emaildistributionlistService.PutEmailDistributionList(emaildistributionlist, this.router).subscribe();
  }

  PostEmailDistributionList(emaildistributionlist: EmailDistributionList) {
    this.sub = this.emaildistributionlistService.PostEmailDistributionList(emaildistributionlist, this.router).subscribe();
  }

  DeleteEmailDistributionList(emaildistributionlist: EmailDistributionList) {
    this.sub = this.emaildistributionlistService.DeleteEmailDistributionList(emaildistributionlist, this.router).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesEmailDistributionListText(this.emaildistributionlistService);
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.emaildistributionlistService.emaildistributionlistList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          EmailDistributionListID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.emaildistributionlistService.emaildistributionlistList[0]?.EmailDistributionListID ?? '')),
              disabled: false
            }, Validators.required],
          ParentTVItemID: [
            {
              value: this.emaildistributionlistService.emaildistributionlistList[0]?.ParentTVItemID ?? '',
              disabled: false
            }, Validators.required],
          Ordinal: [
            {
              value: this.emaildistributionlistService.emaildistributionlistList[0]?.Ordinal ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateDate_UTC: [
            {
              value: this.emaildistributionlistService.emaildistributionlistList[0]?.LastUpdateDate_UTC ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateContactTVItemID: [
            {
              value: this.emaildistributionlistService.emaildistributionlistList[0]?.LastUpdateContactTVItemID ?? '',
              disabled: false
            }, Validators.required],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.emaildistributionlistFormPost = formGroup
      }
      else {
        this.emaildistributionlistFormPut = formGroup;
      }
    }
  }
}
