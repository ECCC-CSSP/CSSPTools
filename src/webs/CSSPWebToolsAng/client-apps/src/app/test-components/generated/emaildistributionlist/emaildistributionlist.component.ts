/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { EmailDistributionListService } from './emaildistributionlist.service';
import { LoadLocalesEmailDistributionListText } from './emaildistributionlist.locales';
import { Subscription } from 'rxjs';
import { EmailDistributionList } from '../../../models/generated/EmailDistributionList.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-emaildistributionlist',
  templateUrl: './emaildistributionlist.component.html',
  styleUrls: ['./emaildistributionlist.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class EmailDistributionListComponent implements OnInit, OnDestroy {
  sub: Subscription;
  emaildistributionlistFormPut: FormGroup;
  emaildistributionlistFormPost: FormGroup;

  constructor(public emaildistributionlistService: EmailDistributionListService, private router: Router, private httpClientService: HttpClientService, private fb: FormBuilder) {
    httpClientService.oldURL = router.url;
  }

  GetEmailDistributionListList() {
    this.sub = this.emaildistributionlistService.GetEmailDistributionListList().subscribe();
  }

  PutEmailDistributionList(emaildistributionlist: EmailDistributionList) {
    this.sub = this.emaildistributionlistService.PutEmailDistributionList(emaildistributionlist).subscribe();
  }

  PostEmailDistributionList(emaildistributionlist: EmailDistributionList) {
    this.sub = this.emaildistributionlistService.PostEmailDistributionList(emaildistributionlist).subscribe();
  }

  DeleteEmailDistributionList(emaildistributionlist: EmailDistributionList) {
    this.sub = this.emaildistributionlistService.DeleteEmailDistributionList(emaildistributionlist).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesEmailDistributionListText(this.emaildistributionlistService);
    this.FillFormBuilderGroup(HttpClientCommand.Post);
    this.FillFormBuilderGroup(HttpClientCommand.Put);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.emaildistributionlistService.emaildistributionlistListModel$.getValue().length) {
      let formGroup: FormGroup = this.fb.group(
        {
          EmailDistributionListID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.emaildistributionlistService.emaildistributionlistListModel$.getValue()[0]?.EmailDistributionListID)),
              disabled: false
            }, [  Validators.required ]],
          ParentTVItemID: [
            {
              value: this.emaildistributionlistService.emaildistributionlistListModel$.getValue()[0]?.ParentTVItemID,
              disabled: false
            }, [  Validators.required ]],
          Ordinal: [
            {
              value: this.emaildistributionlistService.emaildistributionlistListModel$.getValue()[0]?.Ordinal,
              disabled: false
            }, [  Validators.required, Validators.min(0), Validators.max(1000) ]],
          LastUpdateDate_UTC: [
            {
              value: this.emaildistributionlistService.emaildistributionlistListModel$.getValue()[0]?.LastUpdateDate_UTC,
              disabled: false
            }, [  Validators.required ]],
          LastUpdateContactTVItemID: [
            {
              value: this.emaildistributionlistService.emaildistributionlistListModel$.getValue()[0]?.LastUpdateContactTVItemID,
              disabled: false
            }, [  Validators.required ]],
        }
      );

      if (httpClientCommand === HttpClientCommand.Post) {
        this.emaildistributionlistFormPost = formGroup
      }
      else {
        this.emaildistributionlistFormPut = formGroup;
      }
    }
  }
}
