/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { EmailDistributionListContactTextModel, EmailDistributionListContactModel } from './emaildistributionlistcontact.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesEmailDistributionListContactText } from './emaildistributionlistcontact.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { EmailDistributionListContact } from 'src/app/models/generated/EmailDistributionListContact.model';

@Injectable({
  providedIn: 'root'
})
export class EmailDistributionListContactService {
  emaildistributionlistcontactTextModel$: BehaviorSubject<EmailDistributionListContactTextModel> = new BehaviorSubject<EmailDistributionListContactTextModel>(<EmailDistributionListContactTextModel>{});
  emaildistributionlistcontactModel$: BehaviorSubject<EmailDistributionListContactModel> = new BehaviorSubject<EmailDistributionListContactModel>(<EmailDistributionListContactModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesEmailDistributionListContactText(this);
    this.UpdateEmailDistributionListContactText(<EmailDistributionListContactTextModel>{ Title: "Something2 for text" });
  }

  UpdateEmailDistributionListContactText(emaildistributionlistcontactTextModel: EmailDistributionListContactTextModel) {
    this.emaildistributionlistcontactTextModel$.next(<EmailDistributionListContactTextModel>{ ...this.emaildistributionlistcontactTextModel$.getValue(), ...emaildistributionlistcontactTextModel });
  }

  UpdateEmailDistributionListContactModel(emaildistributionlistcontactModel: EmailDistributionListContactModel) {
    this.emaildistributionlistcontactModel$.next(<EmailDistributionListContactModel>{ ...this.emaildistributionlistcontactModel$.getValue(), ...emaildistributionlistcontactModel });
  }

  GetEmailDistributionListContact(router: Router) {
    let oldURL = router.url;
    this.UpdateEmailDistributionListContactModel(<EmailDistributionListContactModel>{ Working: true, Error: null });

    return this.httpClient.get<EmailDistributionListContact[]>('/api/EmailDistributionListContact').pipe(
      map((x: any) => {
        console.debug(`EmailDistributionListContact OK. Return: ${x}`);
        this.emaildistributionlistcontactModel$.getValue().EmailDistributionListContactList = <EmailDistributionListContact[]>x;
        this.UpdateEmailDistributionListContactModel(this.emaildistributionlistcontactModel$.getValue());
        this.UpdateEmailDistributionListContactModel(<EmailDistributionListContactModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateEmailDistributionListContactModel(<EmailDistributionListContactModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`EmailDistributionListContact ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
