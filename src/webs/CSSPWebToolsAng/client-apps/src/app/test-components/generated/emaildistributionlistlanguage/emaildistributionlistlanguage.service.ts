/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { EmailDistributionListLanguageTextModel, EmailDistributionListLanguageModel } from './emaildistributionlistlanguage.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesEmailDistributionListLanguageText } from './emaildistributionlistlanguage.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { EmailDistributionListLanguage } from 'src/app/models/generated/EmailDistributionListLanguage.model';

@Injectable({
  providedIn: 'root'
})
export class EmailDistributionListLanguageService {
  emaildistributionlistlanguageTextModel$: BehaviorSubject<EmailDistributionListLanguageTextModel> = new BehaviorSubject<EmailDistributionListLanguageTextModel>(<EmailDistributionListLanguageTextModel>{});
  emaildistributionlistlanguageModel$: BehaviorSubject<EmailDistributionListLanguageModel> = new BehaviorSubject<EmailDistributionListLanguageModel>(<EmailDistributionListLanguageModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesEmailDistributionListLanguageText(this);
    this.UpdateEmailDistributionListLanguageText(<EmailDistributionListLanguageTextModel>{ Title: "Something2 for text" });
  }

  UpdateEmailDistributionListLanguageText(emaildistributionlistlanguageTextModel: EmailDistributionListLanguageTextModel) {
    this.emaildistributionlistlanguageTextModel$.next(<EmailDistributionListLanguageTextModel>{ ...this.emaildistributionlistlanguageTextModel$.getValue(), ...emaildistributionlistlanguageTextModel });
  }

  UpdateEmailDistributionListLanguageModel(emaildistributionlistlanguageModel: EmailDistributionListLanguageModel) {
    this.emaildistributionlistlanguageModel$.next(<EmailDistributionListLanguageModel>{ ...this.emaildistributionlistlanguageModel$.getValue(), ...emaildistributionlistlanguageModel });
  }

  GetEmailDistributionListLanguage(router: Router) {
    let oldURL = router.url;
    this.UpdateEmailDistributionListLanguageModel(<EmailDistributionListLanguageModel>{ Working: true, Error: null });

    return this.httpClient.get<EmailDistributionListLanguage[]>('/api/EmailDistributionListLanguage').pipe(
      map((x: any) => {
        console.debug(`EmailDistributionListLanguage OK. Return: ${x}`);
        this.emaildistributionlistlanguageModel$.getValue().EmailDistributionListLanguageList = <EmailDistributionListLanguage[]>x;
        this.UpdateEmailDistributionListLanguageModel(this.emaildistributionlistlanguageModel$.getValue());
        this.UpdateEmailDistributionListLanguageModel(<EmailDistributionListLanguageModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateEmailDistributionListLanguageModel(<EmailDistributionListLanguageModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`EmailDistributionListLanguage ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
