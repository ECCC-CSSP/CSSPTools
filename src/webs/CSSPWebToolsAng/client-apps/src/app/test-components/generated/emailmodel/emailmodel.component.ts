/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { EmailModelService } from './emailmodel.service';
import { LoadLocalesEmailModelText } from './emailmodel.locales';
import { Subscription } from 'rxjs';
import { EmailModel } from '../../../models/generated/EmailModel.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-emailmodel',
  templateUrl: './emailmodel.component.html',
  styleUrls: ['./emailmodel.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class EmailModelComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public emailmodelService: EmailModelService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(emailmodel: EmailModel) {
    if (this.IDToShow === emailmodel.EmailModelID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(emailmodel: EmailModel) {
    if (this.IDToShow === emailmodel.EmailModelID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(emailmodel: EmailModel) {
    if (this.IDToShow === emailmodel.EmailModelID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = emailmodel.EmailModelID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(emailmodel: EmailModel) {
    if (this.IDToShow === emailmodel.EmailModelID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = emailmodel.EmailModelID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetEmailModelList() {
    this.sub = this.emailmodelService.GetEmailModelList().subscribe();
  }

  DeleteEmailModel(emailmodel: EmailModel) {
    this.sub = this.emailmodelService.DeleteEmailModel(emailmodel).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesEmailModelText(this.emailmodelService.emailmodelTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
