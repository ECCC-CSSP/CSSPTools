/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp3.1\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { HydrometricSiteService } from './hydrometricsite.service';
import { LoadLocalesHydrometricSiteText } from './hydrometricsite.locales';
import { Subscription } from 'rxjs';
import { HydrometricSite } from '../../../models/generated/HydrometricSite.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-hydrometricsite-edit',
  templateUrl: './hydrometricsite-edit.component.html',
  styleUrls: ['./hydrometricsite-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class HydrometricSiteEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  hydrometricsiteFormEdit: FormGroup;
  @Input() hydrometricsite: HydrometricSite = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public hydrometricsiteService: HydrometricSiteService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutHydrometricSite(hydrometricsite: HydrometricSite) {
    this.sub = this.hydrometricsiteService.PutHydrometricSite(hydrometricsite).subscribe();
  }

  PostHydrometricSite(hydrometricsite: HydrometricSite) {
    this.sub = this.hydrometricsiteService.PostHydrometricSite(hydrometricsite).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.hydrometricsite) {
      let formGroup: FormGroup = this.fb.group(
        {
          HydrometricSiteID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.hydrometricsite.HydrometricSiteID)),
              disabled: false
            }, [Validators.required]],
          HydrometricSiteTVItemID: [
            {
              value: this.hydrometricsite.HydrometricSiteTVItemID,
              disabled: false
            }, [Validators.required]],
          FedSiteNumber: [
            {
              value: this.hydrometricsite.FedSiteNumber,
              disabled: false
            }, [Validators.maxLength(7)]],
          QuebecSiteNumber: [
            {
              value: this.hydrometricsite.QuebecSiteNumber,
              disabled: false
            }, [Validators.maxLength(7)]],
          HydrometricSiteName: [
            {
              value: this.hydrometricsite.HydrometricSiteName,
              disabled: false
            }, [Validators.required, Validators.maxLength(200)]],
          Description: [
            {
              value: this.hydrometricsite.Description,
              disabled: false
            }, [Validators.maxLength(200)]],
          Province: [
            {
              value: this.hydrometricsite.Province,
              disabled: false
            }, [Validators.required, Validators.maxLength(4)]],
          Elevation_m: [
            {
              value: this.hydrometricsite.Elevation_m,
              disabled: false
            }, [Validators.min(0), Validators.max(10000)]],
          StartDate_Local: [
            {
              value: this.hydrometricsite.StartDate_Local,
              disabled: false
            }],
          EndDate_Local: [
            {
              value: this.hydrometricsite.EndDate_Local,
              disabled: false
            }],
          TimeOffset_hour: [
            {
              value: this.hydrometricsite.TimeOffset_hour,
              disabled: false
            }, [Validators.min(-10), Validators.max(0)]],
          DrainageArea_km2: [
            {
              value: this.hydrometricsite.DrainageArea_km2,
              disabled: false
            }, [Validators.min(0), Validators.max(1000000)]],
          IsNatural: [
            {
              value: this.hydrometricsite.IsNatural,
              disabled: false
            }],
          IsActive: [
            {
              value: this.hydrometricsite.IsActive,
              disabled: false
            }],
          Sediment: [
            {
              value: this.hydrometricsite.Sediment,
              disabled: false
            }],
          RHBN: [
            {
              value: this.hydrometricsite.RHBN,
              disabled: false
            }],
          RealTime: [
            {
              value: this.hydrometricsite.RealTime,
              disabled: false
            }],
          HasDischarge: [
            {
              value: this.hydrometricsite.HasDischarge,
              disabled: false
            }],
          HasLevel: [
            {
              value: this.hydrometricsite.HasLevel,
              disabled: false
            }],
          HasRatingCurve: [
            {
              value: this.hydrometricsite.HasRatingCurve,
              disabled: false
            }],
          LastUpdateDate_UTC: [
            {
              value: this.hydrometricsite.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.hydrometricsite.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.hydrometricsiteFormEdit = formGroup
    }
  }
}
