/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { LabSheetService } from './labsheet.service';
import { LoadLocalesLabSheetText } from './labsheet.locales';
import { Subscription } from 'rxjs';
import { SamplingPlanTypeEnum_GetIDText } from '../../../enums/generated/SamplingPlanTypeEnum';
import { SampleTypeEnum_GetIDText } from '../../../enums/generated/SampleTypeEnum';
import { LabSheetTypeEnum_GetIDText } from '../../../enums/generated/LabSheetTypeEnum';
import { LabSheetStatusEnum_GetIDText } from '../../../enums/generated/LabSheetStatusEnum';
import { LabSheet } from '../../../models/generated/LabSheet.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-labsheet',
  templateUrl: './labsheet.component.html',
  styleUrls: ['./labsheet.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class LabSheetComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public labsheetService: LabSheetService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(labsheet: LabSheet) {
    if (this.IDToShow === labsheet.LabSheetID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(labsheet: LabSheet) {
    if (this.IDToShow === labsheet.LabSheetID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(labsheet: LabSheet) {
    if (this.IDToShow === labsheet.LabSheetID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = labsheet.LabSheetID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(labsheet: LabSheet) {
    if (this.IDToShow === labsheet.LabSheetID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = labsheet.LabSheetID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetLabSheetList() {
    this.sub = this.labsheetService.GetLabSheetList().subscribe();
  }

  DeleteLabSheet(labsheet: LabSheet) {
    this.sub = this.labsheetService.DeleteLabSheet(labsheet).subscribe();
  }

  GetSamplingPlanTypeEnumText(enumID: number) {
    return SamplingPlanTypeEnum_GetIDText(enumID)
  }

  GetSampleTypeEnumText(enumID: number) {
    return SampleTypeEnum_GetIDText(enumID)
  }

  GetLabSheetTypeEnumText(enumID: number) {
    return LabSheetTypeEnum_GetIDText(enumID)
  }

  GetLabSheetStatusEnumText(enumID: number) {
    return LabSheetStatusEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesLabSheetText(this.labsheetService.labsheetTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
