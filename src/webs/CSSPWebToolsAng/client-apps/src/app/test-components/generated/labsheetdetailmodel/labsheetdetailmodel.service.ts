/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { LabSheetDetailModelTextModel } from './labsheetdetailmodel.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesLabSheetDetailModelText } from './labsheetdetailmodel.locales';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { LabSheetDetailModel } from '../../../models/generated/LabSheetDetailModel.model';
import { HttpRequestModel } from '../../../models/http.model';
import { HttpClientService } from '../../../services/http-client.service';
import { HttpClientCommand } from '../../../enums/app.enums';

@Injectable({
  providedIn: 'root'
})
export class LabSheetDetailModelService {
  /* Variables */
  labsheetdetailmodelTextModel$: BehaviorSubject<LabSheetDetailModelTextModel> = new BehaviorSubject<LabSheetDetailModelTextModel>(<LabSheetDetailModelTextModel>{});
  labsheetdetailmodelListModel$: BehaviorSubject<LabSheetDetailModel[]> = new BehaviorSubject<LabSheetDetailModel[]>(<LabSheetDetailModel[]>{});
  labsheetdetailmodelGetModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  labsheetdetailmodelPutModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  labsheetdetailmodelPostModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  labsheetdetailmodelDeleteModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});

  /* Constructors */
  constructor(private httpClient: HttpClient, private httpClientService: HttpClientService) {
    LoadLocalesLabSheetDetailModelText(this.labsheetdetailmodelTextModel$);
    this.labsheetdetailmodelTextModel$.next(<LabSheetDetailModelTextModel>{ Title: "Something2 for text" });
  }

  /* Functions public */
  GetLabSheetDetailModelList() {
    this.httpClientService.BeforeHttpClient(this.labsheetdetailmodelGetModel$);

    return this.httpClient.get<LabSheetDetailModel[]>('/api/LabSheetDetailModel').pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<LabSheetDetailModel>(this.labsheetdetailmodelListModel$, this.labsheetdetailmodelGetModel$, x, HttpClientCommand.Get, null);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<LabSheetDetailModel>(this.labsheetdetailmodelListModel$, this.labsheetdetailmodelGetModel$, e);
      })))
    );
  }

  PutLabSheetDetailModel(labsheetdetailmodel: LabSheetDetailModel) {
    this.httpClientService.BeforeHttpClient(this.labsheetdetailmodelPutModel$);

    return this.httpClient.put<LabSheetDetailModel>('/api/LabSheetDetailModel', labsheetdetailmodel, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<LabSheetDetailModel>(this.labsheetdetailmodelListModel$, this.labsheetdetailmodelPutModel$, x, HttpClientCommand.Put, labsheetdetailmodel);
      }),
      catchError(e => of(e).pipe(map(e => {
       this.httpClientService.DoCatchError<LabSheetDetailModel>(this.labsheetdetailmodelListModel$, this.labsheetdetailmodelPutModel$, e);
      })))
    );
  }

  PostLabSheetDetailModel(labsheetdetailmodel: LabSheetDetailModel) {
    this.httpClientService.BeforeHttpClient(this.labsheetdetailmodelPostModel$);

    return this.httpClient.post<LabSheetDetailModel>('/api/LabSheetDetailModel', labsheetdetailmodel, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<LabSheetDetailModel>(this.labsheetdetailmodelListModel$, this.labsheetdetailmodelPostModel$, x, HttpClientCommand.Post, labsheetdetailmodel);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<LabSheetDetailModel>(this.labsheetdetailmodelListModel$, this.labsheetdetailmodelPostModel$, e);
      })))
    );
  }

  DeleteLabSheetDetailModel(labsheetdetailmodel: LabSheetDetailModel) {
    this.httpClientService.BeforeHttpClient(this.labsheetdetailmodelDeleteModel$);

    return this.httpClient.delete<boolean>(`/api/LabSheetDetailModel/${ labsheetdetailmodel.LabSheetDetailModelID }`).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<LabSheetDetailModel>(this.labsheetdetailmodelListModel$, this.labsheetdetailmodelDeleteModel$, x, HttpClientCommand.Delete, labsheetdetailmodel);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<LabSheetDetailModel>(this.labsheetdetailmodelListModel$, this.labsheetdetailmodelDeleteModel$, e);
      })))
    );
  }
}
