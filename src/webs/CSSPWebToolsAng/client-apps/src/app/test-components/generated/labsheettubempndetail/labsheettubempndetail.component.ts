/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { LabSheetTubeMPNDetailService } from './labsheettubempndetail.service';
import { LoadLocalesLabSheetTubeMPNDetailText } from './labsheettubempndetail.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { SampleTypeEnum_GetIDText, SampleTypeEnum_GetOrderedText } from '../../../enums/generated/SampleTypeEnum';
import { LabSheetTubeMPNDetail } from '../../../models/generated/LabSheetTubeMPNDetail.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enumidandtext.model';

@Component({
  selector: 'app-labsheettubempndetail',
  templateUrl: './labsheettubempndetail.component.html',
  styleUrls: ['./labsheettubempndetail.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class LabSheetTubeMPNDetailComponent implements OnInit, OnDestroy {
  sub: Subscription;
  sampleTypeList: EnumIDAndText[];
  labsheettubempndetailFormPut: FormGroup;
  labsheettubempndetailFormPost: FormGroup;

  constructor(public labsheettubempndetailService: LabSheetTubeMPNDetailService, public router: Router, public fb: FormBuilder) { }

  GetLabSheetTubeMPNDetailList() {
    this.sub = this.labsheettubempndetailService.GetLabSheetTubeMPNDetailList(this.router).subscribe();
  }

  PutLabSheetTubeMPNDetail(labsheettubempndetail: LabSheetTubeMPNDetail) {
    this.sub = this.labsheettubempndetailService.PutLabSheetTubeMPNDetail(labsheettubempndetail, this.router).subscribe();
  }

  PostLabSheetTubeMPNDetail(labsheettubempndetail: LabSheetTubeMPNDetail) {
    this.sub = this.labsheettubempndetailService.PostLabSheetTubeMPNDetail(labsheettubempndetail, this.router).subscribe();
  }

  DeleteLabSheetTubeMPNDetail(labsheettubempndetail: LabSheetTubeMPNDetail) {
    this.sub = this.labsheettubempndetailService.DeleteLabSheetTubeMPNDetail(labsheettubempndetail, this.router).subscribe();
  }

  GetSampleTypeEnumText(enumID: number) {
    return SampleTypeEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesLabSheetTubeMPNDetailText(this.labsheettubempndetailService);
    this.sampleTypeList = SampleTypeEnum_GetOrderedText();
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.labsheettubempndetailService.labsheettubempndetailList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          LabSheetTubeMPNDetailID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.labsheettubempndetailService.labsheettubempndetailList[0]?.LabSheetTubeMPNDetailID ?? '')),
              disabled: false
            }, Validators.required],
          LabSheetDetailID: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.LabSheetDetailID ?? '',
              disabled: false
            }, Validators.required],
          Ordinal: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.Ordinal ?? '',
              disabled: false
            }, Validators.required],
          MWQMSiteTVItemID: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.MWQMSiteTVItemID ?? '',
              disabled: false
            }, Validators.required],
          SampleDateTime: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.SampleDateTime ?? '',
              disabled: false
            }, Validators.required],
          MPN: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.MPN ?? '',
              disabled: false
            }, Validators.required],
          Tube10: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.Tube10 ?? '',
              disabled: false
            }, Validators.required],
          Tube1_0: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.Tube1_0 ?? '',
              disabled: false
            }, Validators.required],
          Tube0_1: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.Tube0_1 ?? '',
              disabled: false
            }, Validators.required],
          Salinity: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.Salinity ?? '',
              disabled: false
            }, Validators.required],
          Temperature: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.Temperature ?? '',
              disabled: false
            }, Validators.required],
          ProcessedBy: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.ProcessedBy ?? '',
              disabled: false
            }, Validators.required],
          SampleType: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.SampleType ?? '',
              disabled: false
            }, Validators.required],
          SiteComment: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.SiteComment ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateDate_UTC: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.LastUpdateDate_UTC ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateContactTVItemID: [
            {
              value: this.labsheettubempndetailService.labsheettubempndetailList[0]?.LastUpdateContactTVItemID ?? '',
              disabled: false
            }, Validators.required],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.labsheettubempndetailFormPost = formGroup
      }
      else {
        this.labsheettubempndetailFormPut = formGroup;
      }
    }
  }
}
