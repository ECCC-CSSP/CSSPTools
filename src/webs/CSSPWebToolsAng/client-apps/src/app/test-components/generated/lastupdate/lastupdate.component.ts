/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { LastUpdateService } from './lastupdate.service';
import { LoadLocalesLastUpdateText } from './lastupdate.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { LastUpdate } from '../../../models/generated/LastUpdate.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-lastupdate',
  templateUrl: './lastupdate.component.html',
  styleUrls: ['./lastupdate.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class LastUpdateComponent implements OnInit, OnDestroy {
  sub: Subscription;
  lastupdateFormPut: FormGroup;
  lastupdateFormPost: FormGroup;

  constructor(public lastupdateService: LastUpdateService, public router: Router, public fb: FormBuilder) { }

  GetLastUpdateList() {
    this.sub = this.lastupdateService.GetLastUpdateList(this.router).subscribe();
  }

  PutLastUpdate(lastupdate: LastUpdate) {
    this.sub = this.lastupdateService.PutLastUpdate(lastupdate, this.router).subscribe();
  }

  PostLastUpdate(lastupdate: LastUpdate) {
    this.sub = this.lastupdateService.PostLastUpdate(lastupdate, this.router).subscribe();
  }

  DeleteLastUpdate(lastupdate: LastUpdate) {
    this.sub = this.lastupdateService.DeleteLastUpdate(lastupdate, this.router).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesLastUpdateText(this.lastupdateService);
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.lastupdateService.lastupdateList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          LastUpdateDate_UTC: [
            {
              value: this.lastupdateService.lastupdateList[0]?.LastUpdateDate_UTC ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateContactTVItemID: [
            {
              value: this.lastupdateService.lastupdateList[0]?.LastUpdateContactTVItemID ?? '',
              disabled: false
            }, Validators.required],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.lastupdateFormPost = formGroup
      }
      else {
        this.lastupdateFormPut = formGroup;
      }
    }
  }
}
