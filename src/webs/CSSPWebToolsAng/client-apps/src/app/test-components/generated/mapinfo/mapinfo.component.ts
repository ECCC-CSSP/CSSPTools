/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp3.1\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { MapInfoService } from './mapinfo.service';
import { LoadLocalesMapInfoText } from './mapinfo.locales';
import { Subscription } from 'rxjs';
import { TVTypeEnum_GetIDText } from '../../../enums/generated/TVTypeEnum';
import { MapInfoDrawTypeEnum_GetIDText } from '../../../enums/generated/MapInfoDrawTypeEnum';
import { MapInfo } from '../../../models/generated/MapInfo.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-mapinfo',
  templateUrl: './mapinfo.component.html',
  styleUrls: ['./mapinfo.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class MapInfoComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public mapinfoService: MapInfoService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(mapinfo: MapInfo) {
    if (this.IDToShow === mapinfo.MapInfoID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(mapinfo: MapInfo) {
    if (this.IDToShow === mapinfo.MapInfoID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(mapinfo: MapInfo) {
    if (this.IDToShow === mapinfo.MapInfoID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = mapinfo.MapInfoID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(mapinfo: MapInfo) {
    if (this.IDToShow === mapinfo.MapInfoID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = mapinfo.MapInfoID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetMapInfoList() {
    this.sub = this.mapinfoService.GetMapInfoList().subscribe();
  }

  DeleteMapInfo(mapinfo: MapInfo) {
    this.sub = this.mapinfoService.DeleteMapInfo(mapinfo).subscribe();
  }

  GetTVTypeEnumText(enumID: number) {
    return TVTypeEnum_GetIDText(enumID)
  }

  GetMapInfoDrawTypeEnumText(enumID: number) {
    return MapInfoDrawTypeEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesMapInfoText(this.mapinfoService.mapinfoTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
