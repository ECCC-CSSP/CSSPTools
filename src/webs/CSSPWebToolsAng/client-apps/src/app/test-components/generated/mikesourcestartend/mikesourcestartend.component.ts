/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { MikeSourceStartEndService } from './mikesourcestartend.service';
import { LoadLocalesMikeSourceStartEndText } from './mikesourcestartend.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { MikeSourceStartEnd } from '../../../models/generated/MikeSourceStartEnd.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-mikesourcestartend',
  templateUrl: './mikesourcestartend.component.html',
  styleUrls: ['./mikesourcestartend.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class MikeSourceStartEndComponent implements OnInit, OnDestroy {
  sub: Subscription;
  mikesourcestartendFormPut: FormGroup;
  mikesourcestartendFormPost: FormGroup;

  constructor(public mikesourcestartendService: MikeSourceStartEndService, public router: Router, public fb: FormBuilder) { }

  GetMikeSourceStartEndList() {
    this.sub = this.mikesourcestartendService.GetMikeSourceStartEndList(this.router).subscribe();
  }

  PutMikeSourceStartEnd(mikesourcestartend: MikeSourceStartEnd) {
    this.sub = this.mikesourcestartendService.PutMikeSourceStartEnd(mikesourcestartend, this.router).subscribe();
  }

  PostMikeSourceStartEnd(mikesourcestartend: MikeSourceStartEnd) {
    this.sub = this.mikesourcestartendService.PostMikeSourceStartEnd(mikesourcestartend, this.router).subscribe();
  }

  DeleteMikeSourceStartEnd(mikesourcestartend: MikeSourceStartEnd) {
    this.sub = this.mikesourcestartendService.DeleteMikeSourceStartEnd(mikesourcestartend, this.router).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesMikeSourceStartEndText(this.mikesourcestartendService);
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.mikesourcestartendService.mikesourcestartendList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          MikeSourceStartEndID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.mikesourcestartendService.mikesourcestartendList[0]?.MikeSourceStartEndID)),
              disabled: false
            }],
          MikeSourceID: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.MikeSourceID,
              disabled: false
            }],
          StartDateAndTime_Local: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.StartDateAndTime_Local,
              disabled: false
            }],
          EndDateAndTime_Local: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.EndDateAndTime_Local,
              disabled: false
            }],
          SourceFlowStart_m3_day: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.SourceFlowStart_m3_day,
              disabled: false
            }],
          SourceFlowEnd_m3_day: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.SourceFlowEnd_m3_day,
              disabled: false
            }],
          SourcePollutionStart_MPN_100ml: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.SourcePollutionStart_MPN_100ml,
              disabled: false
            }],
          SourcePollutionEnd_MPN_100ml: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.SourcePollutionEnd_MPN_100ml,
              disabled: false
            }],
          SourceTemperatureStart_C: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.SourceTemperatureStart_C,
              disabled: false
            }],
          SourceTemperatureEnd_C: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.SourceTemperatureEnd_C,
              disabled: false
            }],
          SourceSalinityStart_PSU: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.SourceSalinityStart_PSU,
              disabled: false
            }],
          SourceSalinityEnd_PSU: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.SourceSalinityEnd_PSU,
              disabled: false
            }],
          LastUpdateDate_UTC: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.LastUpdateDate_UTC,
              disabled: false
            }],
          LastUpdateContactTVItemID: [
            {
              value: this.mikesourcestartendService.mikesourcestartendList[0]?.LastUpdateContactTVItemID,
              disabled: false
            }],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.mikesourcestartendFormPost = formGroup
      }
      else {
        this.mikesourcestartendFormPut = formGroup;
      }
    }
  }
}
