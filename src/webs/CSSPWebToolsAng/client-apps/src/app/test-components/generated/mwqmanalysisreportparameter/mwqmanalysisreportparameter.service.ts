/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { MWQMAnalysisReportParameterTextModel } from './mwqmanalysisreportparameter.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesMWQMAnalysisReportParameterText } from './mwqmanalysisreportparameter.locales';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { MWQMAnalysisReportParameter } from '../../../models/generated/MWQMAnalysisReportParameter.model';
import { HttpRequestModel } from '../../../models/http.model';
import { HttpClientService } from '../../../services/http-client.service';
import { HttpClientCommand } from '../../../enums/app.enums';

@Injectable({
  providedIn: 'root'
})
export class MWQMAnalysisReportParameterService {
  /* Variables */
  mwqmanalysisreportparameterTextModel$: BehaviorSubject<MWQMAnalysisReportParameterTextModel> = new BehaviorSubject<MWQMAnalysisReportParameterTextModel>(<MWQMAnalysisReportParameterTextModel>{});
  mwqmanalysisreportparameterListModel$: BehaviorSubject<MWQMAnalysisReportParameter[]> = new BehaviorSubject<MWQMAnalysisReportParameter[]>(<MWQMAnalysisReportParameter[]>{});
  mwqmanalysisreportparameterGetModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  mwqmanalysisreportparameterPutModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  mwqmanalysisreportparameterPostModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  mwqmanalysisreportparameterDeleteModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});

  /* Constructors */
  constructor(private httpClient: HttpClient, private httpClientService: HttpClientService) {
    LoadLocalesMWQMAnalysisReportParameterText(this.mwqmanalysisreportparameterTextModel$);
    this.mwqmanalysisreportparameterTextModel$.next(<MWQMAnalysisReportParameterTextModel>{ Title: "Something2 for text" });
  }

  /* Functions public */
  GetMWQMAnalysisReportParameterList() {
    this.httpClientService.BeforeHttpClient(this.mwqmanalysisreportparameterGetModel$);

    return this.httpClient.get<MWQMAnalysisReportParameter[]>('/api/MWQMAnalysisReportParameter').pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<MWQMAnalysisReportParameter>(this.mwqmanalysisreportparameterListModel$, this.mwqmanalysisreportparameterGetModel$, x, HttpClientCommand.Get, null);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<MWQMAnalysisReportParameter>(this.mwqmanalysisreportparameterListModel$, this.mwqmanalysisreportparameterGetModel$, e);
      })))
    );
  }

  PutMWQMAnalysisReportParameter(mwqmanalysisreportparameter: MWQMAnalysisReportParameter) {
    this.httpClientService.BeforeHttpClient(this.mwqmanalysisreportparameterPutModel$);

    return this.httpClient.put<MWQMAnalysisReportParameter>('/api/MWQMAnalysisReportParameter', mwqmanalysisreportparameter, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<MWQMAnalysisReportParameter>(this.mwqmanalysisreportparameterListModel$, this.mwqmanalysisreportparameterPutModel$, x, HttpClientCommand.Put, mwqmanalysisreportparameter);
      }),
      catchError(e => of(e).pipe(map(e => {
       this.httpClientService.DoCatchError<MWQMAnalysisReportParameter>(this.mwqmanalysisreportparameterListModel$, this.mwqmanalysisreportparameterPutModel$, e);
      })))
    );
  }

  PostMWQMAnalysisReportParameter(mwqmanalysisreportparameter: MWQMAnalysisReportParameter) {
    this.httpClientService.BeforeHttpClient(this.mwqmanalysisreportparameterPostModel$);

    return this.httpClient.post<MWQMAnalysisReportParameter>('/api/MWQMAnalysisReportParameter', mwqmanalysisreportparameter, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<MWQMAnalysisReportParameter>(this.mwqmanalysisreportparameterListModel$, this.mwqmanalysisreportparameterPostModel$, x, HttpClientCommand.Post, mwqmanalysisreportparameter);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<MWQMAnalysisReportParameter>(this.mwqmanalysisreportparameterListModel$, this.mwqmanalysisreportparameterPostModel$, e);
      })))
    );
  }

  DeleteMWQMAnalysisReportParameter(mwqmanalysisreportparameter: MWQMAnalysisReportParameter) {
    this.httpClientService.BeforeHttpClient(this.mwqmanalysisreportparameterDeleteModel$);

    return this.httpClient.delete<boolean>(`/api/MWQMAnalysisReportParameter/${ mwqmanalysisreportparameter.MWQMAnalysisReportParameterID }`).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<MWQMAnalysisReportParameter>(this.mwqmanalysisreportparameterListModel$, this.mwqmanalysisreportparameterDeleteModel$, x, HttpClientCommand.Delete, mwqmanalysisreportparameter);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<MWQMAnalysisReportParameter>(this.mwqmanalysisreportparameterListModel$, this.mwqmanalysisreportparameterDeleteModel$, e);
      })))
    );
  }
}
