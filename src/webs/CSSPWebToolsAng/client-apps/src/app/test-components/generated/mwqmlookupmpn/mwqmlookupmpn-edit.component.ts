/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp3.1\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { MWQMLookupMPNService } from './mwqmlookupmpn.service';
import { LoadLocalesMWQMLookupMPNText } from './mwqmlookupmpn.locales';
import { Subscription } from 'rxjs';
import { MWQMLookupMPN } from '../../../models/generated/MWQMLookupMPN.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-mwqmlookupmpn-edit',
  templateUrl: './mwqmlookupmpn-edit.component.html',
  styleUrls: ['./mwqmlookupmpn-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class MWQMLookupMPNEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  mwqmlookupmpnFormEdit: FormGroup;
  @Input() mwqmlookupmpn: MWQMLookupMPN = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public mwqmlookupmpnService: MWQMLookupMPNService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutMWQMLookupMPN(mwqmlookupmpn: MWQMLookupMPN) {
    this.sub = this.mwqmlookupmpnService.PutMWQMLookupMPN(mwqmlookupmpn).subscribe();
  }

  PostMWQMLookupMPN(mwqmlookupmpn: MWQMLookupMPN) {
    this.sub = this.mwqmlookupmpnService.PostMWQMLookupMPN(mwqmlookupmpn).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.mwqmlookupmpn) {
      let formGroup: FormGroup = this.fb.group(
        {
          MWQMLookupMPNID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.mwqmlookupmpn.MWQMLookupMPNID)),
              disabled: false
            }, [Validators.required]],
          Tubes10: [
            {
              value: this.mwqmlookupmpn.Tubes10,
              disabled: false
            }, [Validators.required, Validators.min(0), Validators.max(5)]],
          Tubes1: [
            {
              value: this.mwqmlookupmpn.Tubes1,
              disabled: false
            }, [Validators.required, Validators.min(0), Validators.max(5)]],
          Tubes01: [
            {
              value: this.mwqmlookupmpn.Tubes01,
              disabled: false
            }, [Validators.required, Validators.min(0), Validators.max(5)]],
          MPN_100ml: [
            {
              value: this.mwqmlookupmpn.MPN_100ml,
              disabled: false
            }, [Validators.required, Validators.min(1), Validators.max(10000)]],
          LastUpdateDate_UTC: [
            {
              value: this.mwqmlookupmpn.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.mwqmlookupmpn.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.mwqmlookupmpnFormEdit = formGroup
    }
  }
}
