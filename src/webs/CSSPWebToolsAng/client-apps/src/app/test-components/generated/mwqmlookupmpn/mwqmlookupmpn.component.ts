/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { MWQMLookupMPNService } from './mwqmlookupmpn.service';
import { LoadLocalesMWQMLookupMPNText } from './mwqmlookupmpn.locales';
import { Subscription } from 'rxjs';
import { MWQMLookupMPN } from '../../../models/generated/MWQMLookupMPN.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-mwqmlookupmpn',
  templateUrl: './mwqmlookupmpn.component.html',
  styleUrls: ['./mwqmlookupmpn.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class MWQMLookupMPNComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public mwqmlookupmpnService: MWQMLookupMPNService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(mwqmlookupmpn: MWQMLookupMPN) {
    if (this.IDToShow === mwqmlookupmpn.MWQMLookupMPNID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(mwqmlookupmpn: MWQMLookupMPN) {
    if (this.IDToShow === mwqmlookupmpn.MWQMLookupMPNID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(mwqmlookupmpn: MWQMLookupMPN) {
    if (this.IDToShow === mwqmlookupmpn.MWQMLookupMPNID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = mwqmlookupmpn.MWQMLookupMPNID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(mwqmlookupmpn: MWQMLookupMPN) {
    if (this.IDToShow === mwqmlookupmpn.MWQMLookupMPNID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = mwqmlookupmpn.MWQMLookupMPNID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetMWQMLookupMPNList() {
    this.sub = this.mwqmlookupmpnService.GetMWQMLookupMPNList().subscribe();
  }

  DeleteMWQMLookupMPN(mwqmlookupmpn: MWQMLookupMPN) {
    this.sub = this.mwqmlookupmpnService.DeleteMWQMLookupMPN(mwqmlookupmpn).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesMWQMLookupMPNText(this.mwqmlookupmpnService.mwqmlookupmpnTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
