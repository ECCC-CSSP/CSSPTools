/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { MWQMRunLanguageTextModel, MWQMRunLanguageModel } from './mwqmrunlanguage.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesMWQMRunLanguageText } from './mwqmrunlanguage.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { MWQMRunLanguage } from 'src/app/models/generated/MWQMRunLanguage.model';

@Injectable({
  providedIn: 'root'
})
export class MWQMRunLanguageService {
  mwqmrunlanguageTextModel$: BehaviorSubject<MWQMRunLanguageTextModel> = new BehaviorSubject<MWQMRunLanguageTextModel>(<MWQMRunLanguageTextModel>{});
  mwqmrunlanguageModel$: BehaviorSubject<MWQMRunLanguageModel> = new BehaviorSubject<MWQMRunLanguageModel>(<MWQMRunLanguageModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesMWQMRunLanguageText(this);
    this.UpdateMWQMRunLanguageText(<MWQMRunLanguageTextModel>{ Title: "Something2 for text" });
  }

  UpdateMWQMRunLanguageText(mwqmrunlanguageTextModel: MWQMRunLanguageTextModel) {
    this.mwqmrunlanguageTextModel$.next(<MWQMRunLanguageTextModel>{ ...this.mwqmrunlanguageTextModel$.getValue(), ...mwqmrunlanguageTextModel });
  }

  UpdateMWQMRunLanguageModel(mwqmrunlanguageModel: MWQMRunLanguageModel) {
    this.mwqmrunlanguageModel$.next(<MWQMRunLanguageModel>{ ...this.mwqmrunlanguageModel$.getValue(), ...mwqmrunlanguageModel });
  }

  GetMWQMRunLanguage(router: Router) {
    let oldURL = router.url;
    this.UpdateMWQMRunLanguageModel(<MWQMRunLanguageModel>{ Working: true, Error: null });

    return this.httpClient.get<MWQMRunLanguage[]>('/api/MWQMRunLanguage').pipe(
      map((x: any) => {
        console.debug(`MWQMRunLanguage OK. Return: ${x}`);
        this.mwqmrunlanguageModel$.getValue().MWQMRunLanguageList = <MWQMRunLanguage[]>x;
        this.UpdateMWQMRunLanguageModel(this.mwqmrunlanguageModel$.getValue());
        this.UpdateMWQMRunLanguageModel(<MWQMRunLanguageModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateMWQMRunLanguageModel(<MWQMRunLanguageModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`MWQMRunLanguage ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
