/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { MWQMSiteService } from './mwqmsite.service';
import { LoadLocalesMWQMSiteText } from './mwqmsite.locales';
import { Subscription } from 'rxjs';
import { MWQMSiteLatestClassificationEnum_GetIDText } from '../../../enums/generated/MWQMSiteLatestClassificationEnum';
import { MWQMSite } from '../../../models/generated/MWQMSite.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-mwqmsite',
  templateUrl: './mwqmsite.component.html',
  styleUrls: ['./mwqmsite.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class MWQMSiteComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public mwqmsiteService: MWQMSiteService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(mwqmsite: MWQMSite) {
    if (this.IDToShow === mwqmsite.MWQMSiteID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(mwqmsite: MWQMSite) {
    if (this.IDToShow === mwqmsite.MWQMSiteID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(mwqmsite: MWQMSite) {
    if (this.IDToShow === mwqmsite.MWQMSiteID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = mwqmsite.MWQMSiteID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(mwqmsite: MWQMSite) {
    if (this.IDToShow === mwqmsite.MWQMSiteID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = mwqmsite.MWQMSiteID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetMWQMSiteList() {
    this.sub = this.mwqmsiteService.GetMWQMSiteList().subscribe();
  }

  DeleteMWQMSite(mwqmsite: MWQMSite) {
    this.sub = this.mwqmsiteService.DeleteMWQMSite(mwqmsite).subscribe();
  }

  GetMWQMSiteLatestClassificationEnumText(enumID: number) {
    return MWQMSiteLatestClassificationEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesMWQMSiteText(this.mwqmsiteService);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }
}
