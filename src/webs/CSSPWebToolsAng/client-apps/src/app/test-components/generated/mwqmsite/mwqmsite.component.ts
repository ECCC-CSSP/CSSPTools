/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { MWQMSiteService } from './mwqmsite.service';
import { LoadLocalesMWQMSiteText } from './mwqmsite.locales';
import { Subscription } from 'rxjs';
import { MWQMSiteLatestClassificationEnum_GetIDText, MWQMSiteLatestClassificationEnum_GetOrderedText } from '../../../enums/generated/MWQMSiteLatestClassificationEnum';
import { MWQMSite } from '../../../models/generated/MWQMSite.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enumidandtext.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-mwqmsite',
  templateUrl: './mwqmsite.component.html',
  styleUrls: ['./mwqmsite.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class MWQMSiteComponent implements OnInit, OnDestroy {
  sub: Subscription;
  mWQMSiteLatestClassificationList: EnumIDAndText[];
  mwqmsiteFormPut: FormGroup;
  mwqmsiteFormPost: FormGroup;

  constructor(public mwqmsiteService: MWQMSiteService, private router: Router, private httpClientService: HttpClientService, private fb: FormBuilder) {
    httpClientService.oldURL = router.url;
  }

  GetMWQMSiteList() {
    this.sub = this.mwqmsiteService.GetMWQMSiteList().subscribe();
  }

  PutMWQMSite(mwqmsite: MWQMSite) {
    this.sub = this.mwqmsiteService.PutMWQMSite(mwqmsite).subscribe();
  }

  PostMWQMSite(mwqmsite: MWQMSite) {
    this.sub = this.mwqmsiteService.PostMWQMSite(mwqmsite).subscribe();
  }

  DeleteMWQMSite(mwqmsite: MWQMSite) {
    this.sub = this.mwqmsiteService.DeleteMWQMSite(mwqmsite).subscribe();
  }

  GetMWQMSiteLatestClassificationEnumText(enumID: number) {
    return MWQMSiteLatestClassificationEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesMWQMSiteText(this.mwqmsiteService);
    this.mWQMSiteLatestClassificationList = MWQMSiteLatestClassificationEnum_GetOrderedText();
    this.FillFormBuilderGroup(HttpClientCommand.Post);
    this.FillFormBuilderGroup(HttpClientCommand.Put);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.mwqmsiteService.mwqmsiteListModel$.getValue().length) {
      let formGroup: FormGroup = this.fb.group(
        {
          MWQMSiteID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.mwqmsiteService.mwqmsiteListModel$.getValue()[0]?.MWQMSiteID)),
              disabled: false
            }, [  Validators.required ]],
          MWQMSiteTVItemID: [
            {
              value: this.mwqmsiteService.mwqmsiteListModel$.getValue()[0]?.MWQMSiteTVItemID,
              disabled: false
            }, [  Validators.required ]],
          MWQMSiteNumber: [
            {
              value: this.mwqmsiteService.mwqmsiteListModel$.getValue()[0]?.MWQMSiteNumber,
              disabled: false
            }, [  Validators.required, Validators.maxLength(8) ]],
          MWQMSiteDescription: [
            {
              value: this.mwqmsiteService.mwqmsiteListModel$.getValue()[0]?.MWQMSiteDescription,
              disabled: false
            }, [  Validators.required, Validators.maxLength(200) ]],
          MWQMSiteLatestClassification: [
            {
              value: this.mwqmsiteService.mwqmsiteListModel$.getValue()[0]?.MWQMSiteLatestClassification,
              disabled: false
            }, [  Validators.required ]],
          Ordinal: [
            {
              value: this.mwqmsiteService.mwqmsiteListModel$.getValue()[0]?.Ordinal,
              disabled: false
            }, [  Validators.required, Validators.min(0), Validators.max(1000) ]],
          LastUpdateDate_UTC: [
            {
              value: this.mwqmsiteService.mwqmsiteListModel$.getValue()[0]?.LastUpdateDate_UTC,
              disabled: false
            }, [  Validators.required ]],
          LastUpdateContactTVItemID: [
            {
              value: this.mwqmsiteService.mwqmsiteListModel$.getValue()[0]?.LastUpdateContactTVItemID,
              disabled: false
            }, [  Validators.required ]],
        }
      );

      if (httpClientCommand === HttpClientCommand.Post) {
        this.mwqmsiteFormPost = formGroup
      }
      else {
        this.mwqmsiteFormPut = formGroup;
      }
    }
  }
}
