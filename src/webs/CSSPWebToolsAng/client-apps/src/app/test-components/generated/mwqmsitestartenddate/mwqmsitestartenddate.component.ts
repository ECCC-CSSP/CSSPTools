/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { MWQMSiteStartEndDateService } from './mwqmsitestartenddate.service';
import { LoadLocalesMWQMSiteStartEndDateText } from './mwqmsitestartenddate.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { MWQMSiteStartEndDate } from '../../../models/generated/MWQMSiteStartEndDate.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-mwqmsitestartenddate',
  templateUrl: './mwqmsitestartenddate.component.html',
  styleUrls: ['./mwqmsitestartenddate.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class MWQMSiteStartEndDateComponent implements OnInit, OnDestroy {
  sub: Subscription;
  mwqmsitestartenddateFormPut: FormGroup;
  mwqmsitestartenddateFormPost: FormGroup;

  constructor(public mwqmsitestartenddateService: MWQMSiteStartEndDateService, public router: Router, public fb: FormBuilder) { }

  GetMWQMSiteStartEndDateList() {
    this.sub = this.mwqmsitestartenddateService.GetMWQMSiteStartEndDateList(this.router).subscribe();
  }

  PutMWQMSiteStartEndDate(mwqmsitestartenddate: MWQMSiteStartEndDate) {
    this.sub = this.mwqmsitestartenddateService.PutMWQMSiteStartEndDate(mwqmsitestartenddate, this.router).subscribe();
  }

  PostMWQMSiteStartEndDate(mwqmsitestartenddate: MWQMSiteStartEndDate) {
    this.sub = this.mwqmsitestartenddateService.PostMWQMSiteStartEndDate(mwqmsitestartenddate, this.router).subscribe();
  }

  DeleteMWQMSiteStartEndDate(mwqmsitestartenddate: MWQMSiteStartEndDate) {
    this.sub = this.mwqmsitestartenddateService.DeleteMWQMSiteStartEndDate(mwqmsitestartenddate, this.router).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesMWQMSiteStartEndDateText(this.mwqmsitestartenddateService);
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.mwqmsitestartenddateService.mwqmsitestartenddateList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          MWQMSiteStartEndDateID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.mwqmsitestartenddateService.mwqmsitestartenddateList[0]?.MWQMSiteStartEndDateID)),
              disabled: false
            }],
          MWQMSiteTVItemID: [
            {
              value: this.mwqmsitestartenddateService.mwqmsitestartenddateList[0]?.MWQMSiteTVItemID,
              disabled: false
            }],
          StartDate: [
            {
              value: this.mwqmsitestartenddateService.mwqmsitestartenddateList[0]?.StartDate,
              disabled: false
            }],
          EndDate: [
            {
              value: this.mwqmsitestartenddateService.mwqmsitestartenddateList[0]?.EndDate,
              disabled: false
            }],
          LastUpdateDate_UTC: [
            {
              value: this.mwqmsitestartenddateService.mwqmsitestartenddateList[0]?.LastUpdateDate_UTC,
              disabled: false
            }],
          LastUpdateContactTVItemID: [
            {
              value: this.mwqmsitestartenddateService.mwqmsitestartenddateList[0]?.LastUpdateContactTVItemID,
              disabled: false
            }],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.mwqmsitestartenddateFormPost = formGroup
      }
      else {
        this.mwqmsitestartenddateFormPut = formGroup;
      }
    }
  }
}
