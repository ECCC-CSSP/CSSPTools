/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp5.0\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { PersistedGrantService } from './persistedgrant.service';
import { LoadLocalesPersistedGrantText } from './persistedgrant.locales';
import { Subscription } from 'rxjs';
import { PersistedGrant } from '../../../models/generated/PersistedGrant.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-persistedgrant',
  templateUrl: './persistedgrant.component.html',
  styleUrls: ['./persistedgrant.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class PersistedGrantComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public persistedgrantService: PersistedGrantService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(persistedgrant: PersistedGrant) {
    if (this.IDToShow === persistedgrant.PersistedGrantID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(persistedgrant: PersistedGrant) {
    if (this.IDToShow === persistedgrant.PersistedGrantID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(persistedgrant: PersistedGrant) {
    if (this.IDToShow === persistedgrant.PersistedGrantID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = persistedgrant.PersistedGrantID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(persistedgrant: PersistedGrant) {
    if (this.IDToShow === persistedgrant.PersistedGrantID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = persistedgrant.PersistedGrantID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetPersistedGrantList() {
    this.sub = this.persistedgrantService.GetPersistedGrantList().subscribe();
  }

  DeletePersistedGrant(persistedgrant: PersistedGrant) {
    this.sub = this.persistedgrantService.DeletePersistedGrant(persistedgrant).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesPersistedGrantText(this.persistedgrantService.persistedgrantTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
