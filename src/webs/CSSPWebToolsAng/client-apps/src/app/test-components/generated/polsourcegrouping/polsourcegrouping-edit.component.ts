/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { PolSourceGroupingService } from './polsourcegrouping.service';
import { LoadLocalesPolSourceGroupingText } from './polsourcegrouping.locales';
import { Subscription } from 'rxjs';
import { PolSourceGrouping } from '../../../models/generated/PolSourceGrouping.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-polsourcegrouping-edit',
  templateUrl: './polsourcegrouping-edit.component.html',
  styleUrls: ['./polsourcegrouping-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class PolSourceGroupingEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  polsourcegroupingFormEdit: FormGroup;
  @Input() polsourcegrouping: PolSourceGrouping = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public polsourcegroupingService: PolSourceGroupingService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutPolSourceGrouping(polsourcegrouping: PolSourceGrouping) {
    this.sub = this.polsourcegroupingService.PutPolSourceGrouping(polsourcegrouping).subscribe();
  }

  PostPolSourceGrouping(polsourcegrouping: PolSourceGrouping) {
    this.sub = this.polsourcegroupingService.PostPolSourceGrouping(polsourcegrouping).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesPolSourceGroupingText(this.polsourcegroupingService);
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.polsourcegrouping) {
      let formGroup: FormGroup = this.fb.group(
        {
          PolSourceGroupingID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.polsourcegroupingService.polsourcegroupingListModel$.getValue()[0]?.PolSourceGroupingID)),
              disabled: false
            }, [  Validators.required ]],
          CSSPID: [
            {
              value: this.polsourcegroupingService.polsourcegroupingListModel$.getValue()[0]?.CSSPID,
              disabled: false
            }, [  Validators.required, Validators.min(10000), Validators.max(100000) ]],
          GroupName: [
            {
              value: this.polsourcegroupingService.polsourcegroupingListModel$.getValue()[0]?.GroupName,
              disabled: false
            }, [  Validators.required, Validators.maxLength(150) ]],
          Child: [
            {
              value: this.polsourcegroupingService.polsourcegroupingListModel$.getValue()[0]?.Child,
              disabled: false
            }, [  Validators.required, Validators.maxLength(150) ]],
          Hide: [
            {
              value: this.polsourcegroupingService.polsourcegroupingListModel$.getValue()[0]?.Hide,
              disabled: false
            }, [  Validators.required, Validators.maxLength(150) ]],
          LastUpdateDate_UTC: [
            {
              value: this.polsourcegroupingService.polsourcegroupingListModel$.getValue()[0]?.LastUpdateDate_UTC,
              disabled: false
            }, [  Validators.required ]],
          LastUpdateContactTVItemID: [
            {
              value: this.polsourcegroupingService.polsourcegroupingListModel$.getValue()[0]?.LastUpdateContactTVItemID,
              disabled: false
            }, [  Validators.required ]],
        }
      );

      this.polsourcegroupingFormEdit = formGroup
    }
  }
}
