/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp5.0\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { PolSourceObservationService } from './polsourceobservation.service';
import { LoadLocalesPolSourceObservationText } from './polsourceobservation.locales';
import { Subscription } from 'rxjs';
import { PolSourceObservation } from '../../../models/generated/PolSourceObservation.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-polsourceobservation-edit',
  templateUrl: './polsourceobservation-edit.component.html',
  styleUrls: ['./polsourceobservation-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class PolSourceObservationEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  polsourceobservationFormEdit: FormGroup;
  @Input() polsourceobservation: PolSourceObservation = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public polsourceobservationService: PolSourceObservationService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutPolSourceObservation(polsourceobservation: PolSourceObservation) {
    this.sub = this.polsourceobservationService.PutPolSourceObservation(polsourceobservation).subscribe();
  }

  PostPolSourceObservation(polsourceobservation: PolSourceObservation) {
    this.sub = this.polsourceobservationService.PostPolSourceObservation(polsourceobservation).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.polsourceobservation) {
      let formGroup: FormGroup = this.fb.group(
        {
          PolSourceObservationID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.polsourceobservation.PolSourceObservationID)),
              disabled: false
            }, [Validators.required]],
          PolSourceSiteID: [
            {
              value: this.polsourceobservation.PolSourceSiteID,
              disabled: false
            }, [Validators.required]],
          ObservationDate_Local: [
            {
              value: this.polsourceobservation.ObservationDate_Local,
              disabled: false
            }, [Validators.required]],
          ContactTVItemID: [
            {
              value: this.polsourceobservation.ContactTVItemID,
              disabled: false
            }, [Validators.required]],
          DesktopReviewed: [
            {
              value: this.polsourceobservation.DesktopReviewed,
              disabled: false
            }, [Validators.required]],
          Observation_ToBeDeleted: [
            {
              value: this.polsourceobservation.Observation_ToBeDeleted,
              disabled: false
            }, [Validators.required]],
          LastUpdateDate_UTC: [
            {
              value: this.polsourceobservation.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.polsourceobservation.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.polsourceobservationFormEdit = formGroup
    }
  }
}
