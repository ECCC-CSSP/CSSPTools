/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { PolSourceObservationService } from './polsourceobservation.service';
import { LoadLocalesPolSourceObservationText } from './polsourceobservation.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { PolSourceObservation } from '../../../models/generated/PolSourceObservation.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-polsourceobservation',
  templateUrl: './polsourceobservation.component.html',
  styleUrls: ['./polsourceobservation.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class PolSourceObservationComponent implements OnInit, OnDestroy {
  sub: Subscription;
  polsourceobservationFormPut: FormGroup;
  polsourceobservationFormPost: FormGroup;

  constructor(public polsourceobservationService: PolSourceObservationService, public router: Router, public fb: FormBuilder) { }

  GetPolSourceObservationList() {
    this.sub = this.polsourceobservationService.GetPolSourceObservationList(this.router).subscribe();
  }

  PutPolSourceObservation(polsourceobservation: PolSourceObservation) {
    this.sub = this.polsourceobservationService.PutPolSourceObservation(polsourceobservation, this.router).subscribe();
  }

  PostPolSourceObservation(polsourceobservation: PolSourceObservation) {
    this.sub = this.polsourceobservationService.PostPolSourceObservation(polsourceobservation, this.router).subscribe();
  }

  DeletePolSourceObservation(polsourceobservation: PolSourceObservation) {
    this.sub = this.polsourceobservationService.DeletePolSourceObservation(polsourceobservation, this.router).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesPolSourceObservationText(this.polsourceobservationService);
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.polsourceobservationService.polsourceobservationList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          PolSourceObservationID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.polsourceobservationService.polsourceobservationList[0]?.PolSourceObservationID)),
              disabled: false
            }],
          PolSourceSiteID: [
            {
              value: this.polsourceobservationService.polsourceobservationList[0]?.PolSourceSiteID,
              disabled: false
            }],
          ObservationDate_Local: [
            {
              value: this.polsourceobservationService.polsourceobservationList[0]?.ObservationDate_Local,
              disabled: false
            }],
          ContactTVItemID: [
            {
              value: this.polsourceobservationService.polsourceobservationList[0]?.ContactTVItemID,
              disabled: false
            }],
          DesktopReviewed: [
            {
              value: this.polsourceobservationService.polsourceobservationList[0]?.DesktopReviewed,
              disabled: false
            }],
          Observation_ToBeDeleted: [
            {
              value: this.polsourceobservationService.polsourceobservationList[0]?.Observation_ToBeDeleted,
              disabled: false
            }],
          LastUpdateDate_UTC: [
            {
              value: this.polsourceobservationService.polsourceobservationList[0]?.LastUpdateDate_UTC,
              disabled: false
            }],
          LastUpdateContactTVItemID: [
            {
              value: this.polsourceobservationService.polsourceobservationList[0]?.LastUpdateContactTVItemID,
              disabled: false
            }],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.polsourceobservationFormPost = formGroup
      }
      else {
        this.polsourceobservationFormPut = formGroup;
      }
    }
  }
}
