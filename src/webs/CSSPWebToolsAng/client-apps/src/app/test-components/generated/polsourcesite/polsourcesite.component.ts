/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { PolSourceSiteService } from './polsourcesite.service';
import { LoadLocalesPolSourceSiteText } from './polsourcesite.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { PolSourceInactiveReasonEnum_GetIDText, PolSourceInactiveReasonEnum_GetOrderedText } from '../../../enums/generated/PolSourceInactiveReasonEnum';
import { PolSourceSite } from '../../../models/generated/PolSourceSite.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enumidandtext.model';

@Component({
  selector: 'app-polsourcesite',
  templateUrl: './polsourcesite.component.html',
  styleUrls: ['./polsourcesite.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class PolSourceSiteComponent implements OnInit, OnDestroy {
  sub: Subscription;
  inactiveReasonList: EnumIDAndText[];
  polsourcesiteFormPut: FormGroup;
  polsourcesiteFormPost: FormGroup;

  constructor(public polsourcesiteService: PolSourceSiteService, public router: Router, public fb: FormBuilder) { }

  GetPolSourceSiteList() {
    this.sub = this.polsourcesiteService.GetPolSourceSiteList(this.router).subscribe();
  }

  PutPolSourceSite(polsourcesite: PolSourceSite) {
    this.sub = this.polsourcesiteService.PutPolSourceSite(polsourcesite, this.router).subscribe();
  }

  PostPolSourceSite(polsourcesite: PolSourceSite) {
    this.sub = this.polsourcesiteService.PostPolSourceSite(polsourcesite, this.router).subscribe();
  }

  DeletePolSourceSite(polsourcesite: PolSourceSite) {
    this.sub = this.polsourcesiteService.DeletePolSourceSite(polsourcesite, this.router).subscribe();
  }

  GetPolSourceInactiveReasonEnumText(enumID: number) {
    return PolSourceInactiveReasonEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesPolSourceSiteText(this.polsourcesiteService);
    this.inactiveReasonList = PolSourceInactiveReasonEnum_GetOrderedText();
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.polsourcesiteService.polsourcesiteList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          PolSourceSiteID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.polsourcesiteService.polsourcesiteList[0]?.PolSourceSiteID)),
              disabled: false
            }],
          PolSourceSiteTVItemID: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.PolSourceSiteTVItemID,
              disabled: false
            }],
          Temp_Locator_CanDelete: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.Temp_Locator_CanDelete,
              disabled: false
            }],
          Oldsiteid: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.Oldsiteid,
              disabled: false
            }],
          Site: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.Site,
              disabled: false
            }],
          SiteID: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.SiteID,
              disabled: false
            }],
          IsPointSource: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.IsPointSource,
              disabled: false
            }],
          InactiveReason: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.InactiveReason,
              disabled: false
            }],
          CivicAddressTVItemID: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.CivicAddressTVItemID,
              disabled: false
            }],
          LastUpdateDate_UTC: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.LastUpdateDate_UTC,
              disabled: false
            }],
          LastUpdateContactTVItemID: [
            {
              value: this.polsourcesiteService.polsourcesiteList[0]?.LastUpdateContactTVItemID,
              disabled: false
            }],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.polsourcesiteFormPost = formGroup
      }
      else {
        this.polsourcesiteFormPut = formGroup;
      }
    }
  }
}
