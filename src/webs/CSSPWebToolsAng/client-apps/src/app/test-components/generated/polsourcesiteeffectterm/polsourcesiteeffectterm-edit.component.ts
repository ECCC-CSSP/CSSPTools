/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { PolSourceSiteEffectTermService } from './polsourcesiteeffectterm.service';
import { LoadLocalesPolSourceSiteEffectTermText } from './polsourcesiteeffectterm.locales';
import { Subscription } from 'rxjs';
import { PolSourceSiteEffectTerm } from '../../../models/generated/PolSourceSiteEffectTerm.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-polsourcesiteeffectterm-edit',
  templateUrl: './polsourcesiteeffectterm-edit.component.html',
  styleUrls: ['./polsourcesiteeffectterm-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class PolSourceSiteEffectTermEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  polsourcesiteeffecttermFormEdit: FormGroup;
  @Input() polsourcesiteeffectterm: PolSourceSiteEffectTerm = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public polsourcesiteeffecttermService: PolSourceSiteEffectTermService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutPolSourceSiteEffectTerm(polsourcesiteeffectterm: PolSourceSiteEffectTerm) {
    this.sub = this.polsourcesiteeffecttermService.PutPolSourceSiteEffectTerm(polsourcesiteeffectterm).subscribe();
  }

  PostPolSourceSiteEffectTerm(polsourcesiteeffectterm: PolSourceSiteEffectTerm) {
    this.sub = this.polsourcesiteeffecttermService.PostPolSourceSiteEffectTerm(polsourcesiteeffectterm).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesPolSourceSiteEffectTermText(this.polsourcesiteeffecttermService);
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.polsourcesiteeffectterm) {
      let formGroup: FormGroup = this.fb.group(
        {
          PolSourceSiteEffectTermID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.polsourcesiteeffecttermService.polsourcesiteeffecttermListModel$.getValue()[0]?.PolSourceSiteEffectTermID)),
              disabled: false
            }, [Validators.required]],
          IsGroup: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermListModel$.getValue()[0]?.IsGroup,
              disabled: false
            }, [Validators.required]],
          UnderGroupID: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermListModel$.getValue()[0]?.UnderGroupID,
              disabled: false
            }],
          EffectTermEN: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermListModel$.getValue()[0]?.EffectTermEN,
              disabled: false
            }, [Validators.required, Validators.maxLength(100)]],
          EffectTermFR: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermListModel$.getValue()[0]?.EffectTermFR,
              disabled: false
            }, [Validators.required, Validators.maxLength(100)]],
          LastUpdateDate_UTC: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermListModel$.getValue()[0]?.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermListModel$.getValue()[0]?.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.polsourcesiteeffecttermFormEdit = formGroup
    }
  }
}
