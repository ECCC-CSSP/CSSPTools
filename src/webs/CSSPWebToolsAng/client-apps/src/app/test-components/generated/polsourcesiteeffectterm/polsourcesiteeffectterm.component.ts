/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { PolSourceSiteEffectTermService } from './polsourcesiteeffectterm.service';
import { LoadLocalesPolSourceSiteEffectTermText } from './polsourcesiteeffectterm.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { PolSourceSiteEffectTerm } from '../../../models/generated/PolSourceSiteEffectTerm.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-polsourcesiteeffectterm',
  templateUrl: './polsourcesiteeffectterm.component.html',
  styleUrls: ['./polsourcesiteeffectterm.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class PolSourceSiteEffectTermComponent implements OnInit, OnDestroy {
  sub: Subscription;
  polsourcesiteeffecttermFormPut: FormGroup;
  polsourcesiteeffecttermFormPost: FormGroup;

  constructor(public polsourcesiteeffecttermService: PolSourceSiteEffectTermService, public router: Router, public fb: FormBuilder) { }

  GetPolSourceSiteEffectTermList() {
    this.sub = this.polsourcesiteeffecttermService.GetPolSourceSiteEffectTermList(this.router).subscribe();
  }

  PutPolSourceSiteEffectTerm(polsourcesiteeffectterm: PolSourceSiteEffectTerm) {
    this.sub = this.polsourcesiteeffecttermService.PutPolSourceSiteEffectTerm(polsourcesiteeffectterm, this.router).subscribe();
  }

  PostPolSourceSiteEffectTerm(polsourcesiteeffectterm: PolSourceSiteEffectTerm) {
    this.sub = this.polsourcesiteeffecttermService.PostPolSourceSiteEffectTerm(polsourcesiteeffectterm, this.router).subscribe();
  }

  DeletePolSourceSiteEffectTerm(polsourcesiteeffectterm: PolSourceSiteEffectTerm) {
    this.sub = this.polsourcesiteeffecttermService.DeletePolSourceSiteEffectTerm(polsourcesiteeffectterm, this.router).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesPolSourceSiteEffectTermText(this.polsourcesiteeffecttermService);
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.polsourcesiteeffecttermService.polsourcesiteeffecttermList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          PolSourceSiteEffectTermID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.polsourcesiteeffecttermService.polsourcesiteeffecttermList[0]?.PolSourceSiteEffectTermID)),
              disabled: false
            }, [ Validators.required ]],
          IsGroup: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermList[0]?.IsGroup,
              disabled: false
            }, [ Validators.required ]],
          UnderGroupID: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermList[0]?.UnderGroupID,
              disabled: false
            }, [ Validators.required ]],
          EffectTermEN: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermList[0]?.EffectTermEN,
              disabled: false
            }, [ Validators.required ]],
          EffectTermFR: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermList[0]?.EffectTermFR,
              disabled: false
            }, [ Validators.required ]],
          LastUpdateDate_UTC: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermList[0]?.LastUpdateDate_UTC,
              disabled: false
            }, [ Validators.required ]],
          LastUpdateContactTVItemID: [
            {
              value: this.polsourcesiteeffecttermService.polsourcesiteeffecttermList[0]?.LastUpdateContactTVItemID,
              disabled: false
            }, [ Validators.required ]],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.polsourcesiteeffecttermFormPost = formGroup
      }
      else {
        this.polsourcesiteeffecttermFormPut = formGroup;
      }
    }
  }
}
