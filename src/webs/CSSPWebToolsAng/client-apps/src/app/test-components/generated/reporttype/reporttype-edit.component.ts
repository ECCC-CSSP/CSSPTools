/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { ReportTypeService } from './reporttype.service';
import { LoadLocalesReportTypeText } from './reporttype.locales';
import { Subscription } from 'rxjs';
import { TVTypeEnum_GetOrderedText } from '../../../enums/generated/TVTypeEnum';
import { FileTypeEnum_GetOrderedText } from '../../../enums/generated/FileTypeEnum';
import { LanguageEnum_GetOrderedText } from '../../../enums/generated/LanguageEnum';
import { ReportType } from '../../../models/generated/ReportType.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enumidandtext.model';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-reporttype-edit',
  templateUrl: './reporttype-edit.component.html',
  styleUrls: ['./reporttype-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class ReportTypeEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  tVTypeList: EnumIDAndText[];
  fileTypeList: EnumIDAndText[];
  languageList: EnumIDAndText[];
  reporttypeFormEdit: FormGroup;
  @Input() reporttype: ReportType = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public reporttypeService: ReportTypeService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutReportType(reporttype: ReportType) {
    this.sub = this.reporttypeService.PutReportType(reporttype).subscribe();
  }

  PostReportType(reporttype: ReportType) {
    this.sub = this.reporttypeService.PostReportType(reporttype).subscribe();
  }

  ngOnInit(): void {
    this.tVTypeList = TVTypeEnum_GetOrderedText();
    this.fileTypeList = FileTypeEnum_GetOrderedText();
    this.languageList = LanguageEnum_GetOrderedText();
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.reporttype) {
      let formGroup: FormGroup = this.fb.group(
        {
          ReportTypeID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.reporttype.ReportTypeID)),
              disabled: false
            }, [Validators.required]],
          TVType: [
            {
              value: this.reporttype.TVType,
              disabled: false
            }, [Validators.required]],
          FileType: [
            {
              value: this.reporttype.FileType,
              disabled: false
            }, [Validators.required]],
          UniqueCode: [
            {
              value: this.reporttype.UniqueCode,
              disabled: false
            }, [Validators.required, Validators.maxLength(100)]],
          Language: [
            {
              value: this.reporttype.Language,
              disabled: false
            }],
          Name: [
            {
              value: this.reporttype.Name,
              disabled: false
            }, [Validators.maxLength(100)]],
          Description: [
            {
              value: this.reporttype.Description,
              disabled: false
            }, [Validators.maxLength(1000)]],
          StartOfFileName: [
            {
              value: this.reporttype.StartOfFileName,
              disabled: false
            }, [Validators.maxLength(100)]],
          LastUpdateDate_UTC: [
            {
              value: this.reporttype.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.reporttype.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.reporttypeFormEdit = formGroup
    }
  }
}
