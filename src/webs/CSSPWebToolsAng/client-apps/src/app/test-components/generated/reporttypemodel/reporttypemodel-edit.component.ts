/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { ReportTypeModelService } from './reporttypemodel.service';
import { LoadLocalesReportTypeModelText } from './reporttypemodel.locales';
import { Subscription } from 'rxjs';
import { ReportTypeModel } from '../../../models/generated/ReportTypeModel.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-reporttypemodel-edit',
  templateUrl: './reporttypemodel-edit.component.html',
  styleUrls: ['./reporttypemodel-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class ReportTypeModelEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  reporttypemodelFormEdit: FormGroup;
  @Input() reporttypemodel: ReportTypeModel = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public reporttypemodelService: ReportTypeModelService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutReportTypeModel(reporttypemodel: ReportTypeModel) {
    this.sub = this.reporttypemodelService.PutReportTypeModel(reporttypemodel).subscribe();
  }

  PostReportTypeModel(reporttypemodel: ReportTypeModel) {
    this.sub = this.reporttypemodelService.PostReportTypeModel(reporttypemodel).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.reporttypemodel) {
      let formGroup: FormGroup = this.fb.group(
        {
          ReportType: [
            {
              value: this.reporttypemodel.ReportType,
              disabled: false
            }, [Validators.required]],
          ReportSectionList: [
            {
              value: this.reporttypemodel.ReportSectionList,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.reporttypemodelFormEdit = formGroup
    }
  }
}
