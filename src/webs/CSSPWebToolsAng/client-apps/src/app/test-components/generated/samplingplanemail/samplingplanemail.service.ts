/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { SamplingPlanEmailTextModel, SamplingPlanEmailModel } from './samplingplanemail.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesSamplingPlanEmailText } from './samplingplanemail.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { SamplingPlanEmail } from 'src/app/models/generated/SamplingPlanEmail.model';

@Injectable({
  providedIn: 'root'
})
export class SamplingPlanEmailService {
  samplingplanemailTextModel$: BehaviorSubject<SamplingPlanEmailTextModel> = new BehaviorSubject<SamplingPlanEmailTextModel>(<SamplingPlanEmailTextModel>{});
  samplingplanemailModel$: BehaviorSubject<SamplingPlanEmailModel> = new BehaviorSubject<SamplingPlanEmailModel>(<SamplingPlanEmailModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesSamplingPlanEmailText(this);
    this.UpdateSamplingPlanEmailText(<SamplingPlanEmailTextModel>{ Title: "Something2 for text" });
  }

  UpdateSamplingPlanEmailText(samplingplanemailTextModel: SamplingPlanEmailTextModel) {
    this.samplingplanemailTextModel$.next(<SamplingPlanEmailTextModel>{ ...this.samplingplanemailTextModel$.getValue(), ...samplingplanemailTextModel });
  }

  UpdateSamplingPlanEmailModel(samplingplanemailModel: SamplingPlanEmailModel) {
    this.samplingplanemailModel$.next(<SamplingPlanEmailModel>{ ...this.samplingplanemailModel$.getValue(), ...samplingplanemailModel });
  }

  GetSamplingPlanEmail(router: Router) {
    let oldURL = router.url;
    this.UpdateSamplingPlanEmailModel(<SamplingPlanEmailModel>{ Working: true, Error: null });

    return this.httpClient.get<SamplingPlanEmail[]>('/api/SamplingPlanEmail').pipe(
      map((x: any) => {
        console.debug(`SamplingPlanEmail OK. Return: ${x}`);
        this.samplingplanemailModel$.getValue().SamplingPlanEmailList = <SamplingPlanEmail[]>x;
        this.UpdateSamplingPlanEmailModel(this.samplingplanemailModel$.getValue());
        this.UpdateSamplingPlanEmailModel(<SamplingPlanEmailModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateSamplingPlanEmailModel(<SamplingPlanEmailModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`SamplingPlanEmail ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
