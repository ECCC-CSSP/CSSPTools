/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp5.0\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { SamplingPlanSubsectorService } from './samplingplansubsector.service';
import { LoadLocalesSamplingPlanSubsectorText } from './samplingplansubsector.locales';
import { Subscription } from 'rxjs';
import { SamplingPlanSubsector } from '../../../models/generated/SamplingPlanSubsector.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-samplingplansubsector-edit',
  templateUrl: './samplingplansubsector-edit.component.html',
  styleUrls: ['./samplingplansubsector-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class SamplingPlanSubsectorEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  samplingplansubsectorFormEdit: FormGroup;
  @Input() samplingplansubsector: SamplingPlanSubsector = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public samplingplansubsectorService: SamplingPlanSubsectorService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutSamplingPlanSubsector(samplingplansubsector: SamplingPlanSubsector) {
    this.sub = this.samplingplansubsectorService.PutSamplingPlanSubsector(samplingplansubsector).subscribe();
  }

  PostSamplingPlanSubsector(samplingplansubsector: SamplingPlanSubsector) {
    this.sub = this.samplingplansubsectorService.PostSamplingPlanSubsector(samplingplansubsector).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.samplingplansubsector) {
      let formGroup: FormGroup = this.fb.group(
        {
          SamplingPlanSubsectorID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.samplingplansubsector.SamplingPlanSubsectorID)),
              disabled: false
            }, [Validators.required]],
          SamplingPlanID: [
            {
              value: this.samplingplansubsector.SamplingPlanID,
              disabled: false
            }, [Validators.required]],
          SubsectorTVItemID: [
            {
              value: this.samplingplansubsector.SubsectorTVItemID,
              disabled: false
            }, [Validators.required]],
          LastUpdateDate_UTC: [
            {
              value: this.samplingplansubsector.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.samplingplansubsector.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.samplingplansubsectorFormEdit = formGroup
    }
  }
}
