/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp5.0\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { SamplingPlanSubsectorService } from './samplingplansubsector.service';
import { LoadLocalesSamplingPlanSubsectorText } from './samplingplansubsector.locales';
import { Subscription } from 'rxjs';
import { SamplingPlanSubsector } from '../../../models/generated/SamplingPlanSubsector.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-samplingplansubsector',
  templateUrl: './samplingplansubsector.component.html',
  styleUrls: ['./samplingplansubsector.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class SamplingPlanSubsectorComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public samplingplansubsectorService: SamplingPlanSubsectorService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(samplingplansubsector: SamplingPlanSubsector) {
    if (this.IDToShow === samplingplansubsector.SamplingPlanSubsectorID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(samplingplansubsector: SamplingPlanSubsector) {
    if (this.IDToShow === samplingplansubsector.SamplingPlanSubsectorID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(samplingplansubsector: SamplingPlanSubsector) {
    if (this.IDToShow === samplingplansubsector.SamplingPlanSubsectorID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = samplingplansubsector.SamplingPlanSubsectorID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(samplingplansubsector: SamplingPlanSubsector) {
    if (this.IDToShow === samplingplansubsector.SamplingPlanSubsectorID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = samplingplansubsector.SamplingPlanSubsectorID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetSamplingPlanSubsectorList() {
    this.sub = this.samplingplansubsectorService.GetSamplingPlanSubsectorList().subscribe();
  }

  DeleteSamplingPlanSubsector(samplingplansubsector: SamplingPlanSubsector) {
    this.sub = this.samplingplansubsectorService.DeleteSamplingPlanSubsector(samplingplansubsector).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesSamplingPlanSubsectorText(this.samplingplansubsectorService.samplingplansubsectorTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
