/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { SamplingPlanSubsectorSiteService } from './samplingplansubsectorsite.service';
import { LoadLocalesSamplingPlanSubsectorSiteText } from './samplingplansubsectorsite.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { SamplingPlanSubsectorSite } from '../../../models/generated/SamplingPlanSubsectorSite.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';

@Component({
  selector: 'app-samplingplansubsectorsite',
  templateUrl: './samplingplansubsectorsite.component.html',
  styleUrls: ['./samplingplansubsectorsite.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class SamplingPlanSubsectorSiteComponent implements OnInit, OnDestroy {
  sub: Subscription;
  samplingplansubsectorsiteFormPut: FormGroup;
  samplingplansubsectorsiteFormPost: FormGroup;

  constructor(public samplingplansubsectorsiteService: SamplingPlanSubsectorSiteService, public router: Router, public fb: FormBuilder) { }

  GetSamplingPlanSubsectorSiteList() {
    this.sub = this.samplingplansubsectorsiteService.GetSamplingPlanSubsectorSiteList(this.router).subscribe();
  }

  PutSamplingPlanSubsectorSite(samplingplansubsectorsite: SamplingPlanSubsectorSite) {
    this.sub = this.samplingplansubsectorsiteService.PutSamplingPlanSubsectorSite(samplingplansubsectorsite, this.router).subscribe();
  }

  PostSamplingPlanSubsectorSite(samplingplansubsectorsite: SamplingPlanSubsectorSite) {
    this.sub = this.samplingplansubsectorsiteService.PostSamplingPlanSubsectorSite(samplingplansubsectorsite, this.router).subscribe();
  }

  DeleteSamplingPlanSubsectorSite(samplingplansubsectorsite: SamplingPlanSubsectorSite) {
    this.sub = this.samplingplansubsectorsiteService.DeleteSamplingPlanSubsectorSite(samplingplansubsectorsite, this.router).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesSamplingPlanSubsectorSiteText(this.samplingplansubsectorsiteService);
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.samplingplansubsectorsiteService.samplingplansubsectorsiteList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          SamplingPlanSubsectorSiteID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.samplingplansubsectorsiteService.samplingplansubsectorsiteList[0]?.SamplingPlanSubsectorSiteID ?? '')),
              disabled: false
            }, Validators.required],
          SamplingPlanSubsectorID: [
            {
              value: this.samplingplansubsectorsiteService.samplingplansubsectorsiteList[0]?.SamplingPlanSubsectorID ?? '',
              disabled: false
            }, Validators.required],
          MWQMSiteTVItemID: [
            {
              value: this.samplingplansubsectorsiteService.samplingplansubsectorsiteList[0]?.MWQMSiteTVItemID ?? '',
              disabled: false
            }, Validators.required],
          IsDuplicate: [
            {
              value: this.samplingplansubsectorsiteService.samplingplansubsectorsiteList[0]?.IsDuplicate ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateDate_UTC: [
            {
              value: this.samplingplansubsectorsiteService.samplingplansubsectorsiteList[0]?.LastUpdateDate_UTC ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateContactTVItemID: [
            {
              value: this.samplingplansubsectorsiteService.samplingplansubsectorsiteList[0]?.LastUpdateContactTVItemID ?? '',
              disabled: false
            }, Validators.required],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.samplingplansubsectorsiteFormPost = formGroup
      }
      else {
        this.samplingplansubsectorsiteFormPut = formGroup;
      }
    }
  }
}
