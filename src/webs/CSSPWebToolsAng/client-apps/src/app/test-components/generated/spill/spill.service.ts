/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { SpillTextModel, SpillModel } from './spill.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesSpillText } from './spill.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { Spill } from 'src/app/models/generated/Spill.model';

@Injectable({
  providedIn: 'root'
})
export class SpillService {
  spillTextModel$: BehaviorSubject<SpillTextModel> = new BehaviorSubject<SpillTextModel>(<SpillTextModel>{});
  spillModel$: BehaviorSubject<SpillModel> = new BehaviorSubject<SpillModel>(<SpillModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesSpillText(this);
    this.UpdateSpillText(<SpillTextModel>{ Title: "Something2 for text" });
  }

  UpdateSpillText(spillTextModel: SpillTextModel) {
    this.spillTextModel$.next(<SpillTextModel>{ ...this.spillTextModel$.getValue(), ...spillTextModel });
  }

  UpdateSpillModel(spillModel: SpillModel) {
    this.spillModel$.next(<SpillModel>{ ...this.spillModel$.getValue(), ...spillModel });
  }

  GetSpill(router: Router) {
    let oldURL = router.url;
    this.UpdateSpillModel(<SpillModel>{ Working: true, Error: null });

    return this.httpClient.get<Spill[]>('/api/Spill').pipe(
      map((x: any) => {
        console.debug(`Spill OK. Return: ${x}`);
        this.spillModel$.getValue().SpillList = <Spill[]>x;
        this.UpdateSpillModel(this.spillModel$.getValue());
        this.UpdateSpillModel(<SpillModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateSpillModel(<SpillModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`Spill ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
