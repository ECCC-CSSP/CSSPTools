/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { TelService } from './tel.service';
import { LoadLocalesTelText } from './tel.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { TelTypeEnum_GetIDText, TelTypeEnum_GetOrderedText } from '../../../enums/generated/TelTypeEnum';
import { Tel } from '../../../models/generated/Tel.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from 'src/app/models/enumidandtext.model';

@Component({
  selector: 'app-tel',
  templateUrl: './tel.component.html',
  styleUrls: ['./tel.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TelComponent implements OnInit, OnDestroy {
  sub: Subscription;
  telTypeList: EnumIDAndText[];
  telFormPut: FormGroup;
  telFormPost: FormGroup;

  constructor(public telService: TelService, public router: Router, public fb: FormBuilder) { }

  GetTelList() {
    this.sub = this.telService.GetTelList(this.router).subscribe();
  }

  PutTel(tel: Tel) {
    this.sub = this.telService.PutTel(tel, this.router).subscribe();
  }

  PostTel(tel: Tel) {
    this.sub = this.telService.PostTel(tel, this.router).subscribe();
  }

  DeleteTel(tel: Tel) {
    this.sub = this.telService.DeleteTel(tel, this.router).subscribe();
  }

  GetTelTypeEnumText(enumID: number) {
    return TelTypeEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesTelText(this.telService);
    this.telTypeList = TelTypeEnum_GetOrderedText();
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.telService.telList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          TelID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.telService.telList[0]?.TelID ?? '')),
              disabled: false
            }, Validators.required],
          TelTVItemID: [
            {
              value: this.telService.telList[0]?.TelTVItemID ?? '',
              disabled: false
            }, Validators.required],
          TelNumber: [
            {
              value: this.telService.telList[0]?.TelNumber ?? '',
              disabled: false
            }, Validators.required],
          TelType: [
            {
              value: this.telService.telList[0]?.TelType ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateDate_UTC: [
            {
              value: this.telService.telList[0]?.LastUpdateDate_UTC ?? '',
              disabled: false
            }, Validators.required],
          LastUpdateContactTVItemID: [
            {
              value: this.telService.telList[0]?.LastUpdateContactTVItemID ?? '',
              disabled: false
            }, Validators.required],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.telFormPost = formGroup
      }
      else {
        this.telFormPut = formGroup;
      }
    }
  }
}
