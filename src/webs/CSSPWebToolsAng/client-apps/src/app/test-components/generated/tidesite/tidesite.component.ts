/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { TideSiteService } from './tidesite.service';
import { LoadLocalesTideSiteText } from './tidesite.locales';
import { Subscription } from 'rxjs';
import { TideSite } from '../../../models/generated/TideSite.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-tidesite',
  templateUrl: './tidesite.component.html',
  styleUrls: ['./tidesite.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TideSiteComponent implements OnInit, OnDestroy {
  sub: Subscription;
  tidesiteFormPut: FormGroup;
  tidesiteFormPost: FormGroup;

  constructor(public tidesiteService: TideSiteService, private router: Router, private httpClientService: HttpClientService, private fb: FormBuilder) {
    httpClientService.oldURL = router.url;
  }

  GetTideSiteList() {
    this.sub = this.tidesiteService.GetTideSiteList().subscribe();
  }

  PutTideSite(tidesite: TideSite) {
    this.sub = this.tidesiteService.PutTideSite(tidesite).subscribe();
  }

  PostTideSite(tidesite: TideSite) {
    this.sub = this.tidesiteService.PostTideSite(tidesite).subscribe();
  }

  DeleteTideSite(tidesite: TideSite) {
    this.sub = this.tidesiteService.DeleteTideSite(tidesite).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesTideSiteText(this.tidesiteService);
    this.FillFormBuilderGroup(HttpClientCommand.Post);
    this.FillFormBuilderGroup(HttpClientCommand.Put);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.tidesiteService.tidesiteListModel$.getValue().length) {
      let formGroup: FormGroup = this.fb.group(
        {
          TideSiteID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.tidesiteService.tidesiteListModel$.getValue()[0]?.TideSiteID)),
              disabled: false
            }, [  Validators.required ]],
          TideSiteTVItemID: [
            {
              value: this.tidesiteService.tidesiteListModel$.getValue()[0]?.TideSiteTVItemID,
              disabled: false
            }, [  Validators.required ]],
          TideSiteName: [
            {
              value: this.tidesiteService.tidesiteListModel$.getValue()[0]?.TideSiteName,
              disabled: false
            }, [  Validators.required, Validators.maxLength(100) ]],
          Province: [
            {
              value: this.tidesiteService.tidesiteListModel$.getValue()[0]?.Province,
              disabled: false
            }, [  Validators.required, Validators.minLength(2), Validators.maxLength(2) ]],
          sid: [
            {
              value: this.tidesiteService.tidesiteListModel$.getValue()[0]?.sid,
              disabled: false
            }, [  Validators.required, Validators.min(0), Validators.max(10000) ]],
          Zone: [
            {
              value: this.tidesiteService.tidesiteListModel$.getValue()[0]?.Zone,
              disabled: false
            }, [  Validators.required, Validators.min(0), Validators.max(10000) ]],
          LastUpdateDate_UTC: [
            {
              value: this.tidesiteService.tidesiteListModel$.getValue()[0]?.LastUpdateDate_UTC,
              disabled: false
            }, [  Validators.required ]],
          LastUpdateContactTVItemID: [
            {
              value: this.tidesiteService.tidesiteListModel$.getValue()[0]?.LastUpdateContactTVItemID,
              disabled: false
            }, [  Validators.required ]],
        }
      );

      if (httpClientCommand === HttpClientCommand.Post) {
        this.tidesiteFormPost = formGroup
      }
      else {
        this.tidesiteFormPut = formGroup;
      }
    }
  }
}
