/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { TVFileService } from './tvfile.service';
import { LoadLocalesTVFileText } from './tvfile.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { TVTypeEnum_GetIDText } from 'src/app/enums/generated/TVTypeEnum';
import { LanguageEnum_GetIDText } from 'src/app/enums/generated/LanguageEnum';
import { FilePurposeEnum_GetIDText } from 'src/app/enums/generated/FilePurposeEnum';
import { FileTypeEnum_GetIDText } from 'src/app/enums/generated/FileTypeEnum';

@Component({
  selector: 'app-tvfile',
  templateUrl: './tvfile.component.html',
  styleUrls: ['./tvfile.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TVFileComponent implements OnInit, OnDestroy {
  sub: Subscription;

  constructor(public tvfileService: TVFileService, public router: Router) { }

  GetTVFile() {
    this.sub = this.tvfileService.GetTVFile(this.router).subscribe();
  }

  GetTVTypeEnumText(enumID: number) {
    return TVTypeEnum_GetIDText(enumID)
  }

  GetLanguageEnumText(enumID: number) {
    return LanguageEnum_GetIDText(enumID)
  }

  GetFilePurposeEnumText(enumID: number) {
    return FilePurposeEnum_GetIDText(enumID)
  }

  GetFileTypeEnumText(enumID: number) {
    return FileTypeEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesTVFileText(this.tvfileService);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

}
