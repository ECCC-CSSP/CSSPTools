/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { TVFileTextModel, TVFileModel } from './tvfile.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesTVFileText } from './tvfile.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { TVFile } from 'src/app/models/generated/TVFile.model';

@Injectable({
  providedIn: 'root'
})
export class TVFileService {
  tvfileTextModel$: BehaviorSubject<TVFileTextModel> = new BehaviorSubject<TVFileTextModel>(<TVFileTextModel>{});
  tvfileModel$: BehaviorSubject<TVFileModel> = new BehaviorSubject<TVFileModel>(<TVFileModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesTVFileText(this);
    this.UpdateTVFileText(<TVFileTextModel>{ Title: "Something2 for text" });
  }

  UpdateTVFileText(tvfileTextModel: TVFileTextModel) {
    this.tvfileTextModel$.next(<TVFileTextModel>{ ...this.tvfileTextModel$.getValue(), ...tvfileTextModel });
  }

  UpdateTVFileModel(tvfileModel: TVFileModel) {
    this.tvfileModel$.next(<TVFileModel>{ ...this.tvfileModel$.getValue(), ...tvfileModel });
  }

  GetTVFile(router: Router) {
    let oldURL = router.url;
    this.UpdateTVFileModel(<TVFileModel>{ Working: true, Error: null });

    return this.httpClient.get<TVFile[]>('/api/TVFile').pipe(
      map((x: any) => {
        console.debug(`TVFile OK. Return: ${x}`);
        this.tvfileModel$.getValue().TVFileList = <TVFile[]>x;
        this.UpdateTVFileModel(this.tvfileModel$.getValue());
        this.UpdateTVFileModel(<TVFileModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateTVFileModel(<TVFileModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`TVFile ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
