/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { TVItemService } from './tvitem.service';
import { LoadLocalesTVItemText } from './tvitem.locales';
import { Router } from '@angular/router';
import { Subscription } from 'rxjs';
import { TVTypeEnum_GetIDText, TVTypeEnum_GetOrderedText } from '../../../enums/generated/TVTypeEnum';
import { TVItem } from '../../../models/generated/TVItem.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enumidandtext.model';

@Component({
  selector: 'app-tvitem',
  templateUrl: './tvitem.component.html',
  styleUrls: ['./tvitem.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TVItemComponent implements OnInit, OnDestroy {
  sub: Subscription;
  tVTypeList: EnumIDAndText[];
  tvitemFormPut: FormGroup;
  tvitemFormPost: FormGroup;

  constructor(public tvitemService: TVItemService, public router: Router, public fb: FormBuilder) { }

  GetTVItemList() {
    this.sub = this.tvitemService.GetTVItemList(this.router).subscribe();
  }

  PutTVItem(tvitem: TVItem) {
    this.sub = this.tvitemService.PutTVItem(tvitem, this.router).subscribe();
  }

  PostTVItem(tvitem: TVItem) {
    this.sub = this.tvitemService.PostTVItem(tvitem, this.router).subscribe();
  }

  DeleteTVItem(tvitem: TVItem) {
    this.sub = this.tvitemService.DeleteTVItem(tvitem, this.router).subscribe();
  }

  GetTVTypeEnumText(enumID: number) {
    return TVTypeEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesTVItemText(this.tvitemService);
    this.tVTypeList = TVTypeEnum_GetOrderedText();
    this.FillFormBuilderGroup('Add');
    this.FillFormBuilderGroup('Update');
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(AddOrUpdate: string) {
    if (this.tvitemService.tvitemList.length) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItemID: [
            {
              value: (AddOrUpdate === 'Add' ? 0 : (this.tvitemService.tvitemList[0]?.TVItemID)),
              disabled: false
            }],
          TVLevel: [
            {
              value: this.tvitemService.tvitemList[0]?.TVLevel,
              disabled: false
            }],
          TVPath: [
            {
              value: this.tvitemService.tvitemList[0]?.TVPath,
              disabled: false
            }],
          TVType: [
            {
              value: this.tvitemService.tvitemList[0]?.TVType,
              disabled: false
            }],
          ParentID: [
            {
              value: this.tvitemService.tvitemList[0]?.ParentID,
              disabled: false
            }],
          IsActive: [
            {
              value: this.tvitemService.tvitemList[0]?.IsActive,
              disabled: false
            }],
          LastUpdateDate_UTC: [
            {
              value: this.tvitemService.tvitemList[0]?.LastUpdateDate_UTC,
              disabled: false
            }],
          LastUpdateContactTVItemID: [
            {
              value: this.tvitemService.tvitemList[0]?.LastUpdateContactTVItemID,
              disabled: false
            }],
        }
      );

      if (AddOrUpdate === 'Add') {
        this.tvitemFormPost = formGroup
      }
      else {
        this.tvitemFormPut = formGroup;
      }
    }
  }
}
