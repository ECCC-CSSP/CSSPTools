/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { TVItemLanguageService } from './tvitemlanguage.service';
import { LoadLocalesTVItemLanguageText } from './tvitemlanguage.locales';
import { Subscription } from 'rxjs';
import { LanguageEnum_GetOrderedText } from '../../../enums/generated/LanguageEnum';
import { TranslationStatusEnum_GetOrderedText } from '../../../enums/generated/TranslationStatusEnum';
import { TVItemLanguage } from '../../../models/generated/TVItemLanguage.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enum-idandtext.model';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-tvitemlanguage-edit',
  templateUrl: './tvitemlanguage-edit.component.html',
  styleUrls: ['./tvitemlanguage-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TVItemLanguageEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  languageList: EnumIDAndText[];
  translationStatusList: EnumIDAndText[];
  tvitemlanguageFormEdit: FormGroup;
  @Input() tvitemlanguage: TVItemLanguage = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public tvitemlanguageService: TVItemLanguageService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutTVItemLanguage(tvitemlanguage: TVItemLanguage) {
    this.sub = this.tvitemlanguageService.PutTVItemLanguage(tvitemlanguage).subscribe();
  }

  PostTVItemLanguage(tvitemlanguage: TVItemLanguage) {
    this.sub = this.tvitemlanguageService.PostTVItemLanguage(tvitemlanguage).subscribe();
  }

  ngOnInit(): void {
    this.languageList = LanguageEnum_GetOrderedText();
    this.translationStatusList = TranslationStatusEnum_GetOrderedText();
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.tvitemlanguage) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItemLanguageID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.tvitemlanguage.TVItemLanguageID)),
              disabled: false
            }, [Validators.required]],
          TVItemID: [
            {
              value: this.tvitemlanguage.TVItemID,
              disabled: false
            }, [Validators.required]],
          Language: [
            {
              value: this.tvitemlanguage.Language,
              disabled: false
            }, [Validators.required]],
          TVText: [
            {
              value: this.tvitemlanguage.TVText,
              disabled: false
            }, [Validators.required, Validators.maxLength(200)]],
          TranslationStatus: [
            {
              value: this.tvitemlanguage.TranslationStatus,
              disabled: false
            }, [Validators.required]],
          LastUpdateDate_UTC: [
            {
              value: this.tvitemlanguage.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.tvitemlanguage.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.tvitemlanguageFormEdit = formGroup
    }
  }
}
