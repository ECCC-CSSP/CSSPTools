/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { TVItemLanguageService } from './tvitemlanguage.service';
import { LoadLocalesTVItemLanguageText } from './tvitemlanguage.locales';
import { Subscription } from 'rxjs';
import { LanguageEnum_GetIDText, LanguageEnum_GetOrderedText } from '../../../enums/generated/LanguageEnum';
import { TranslationStatusEnum_GetIDText, TranslationStatusEnum_GetOrderedText } from '../../../enums/generated/TranslationStatusEnum';
import { TVItemLanguage } from '../../../models/generated/TVItemLanguage.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enumidandtext.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-tvitemlanguage',
  templateUrl: './tvitemlanguage.component.html',
  styleUrls: ['./tvitemlanguage.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TVItemLanguageComponent implements OnInit, OnDestroy {
  sub: Subscription;
  languageList: EnumIDAndText[];
  translationStatusList: EnumIDAndText[];
  tvitemlanguageFormPut: FormGroup;
  tvitemlanguageFormPost: FormGroup;

  constructor(public tvitemlanguageService: TVItemLanguageService, private router: Router, private httpClientService: HttpClientService, private fb: FormBuilder) {
    httpClientService.oldURL = router.url;
  }

  GetTVItemLanguageList() {
    this.sub = this.tvitemlanguageService.GetTVItemLanguageList().subscribe();
  }

  PutTVItemLanguage(tvitemlanguage: TVItemLanguage) {
    this.sub = this.tvitemlanguageService.PutTVItemLanguage(tvitemlanguage).subscribe();
  }

  PostTVItemLanguage(tvitemlanguage: TVItemLanguage) {
    this.sub = this.tvitemlanguageService.PostTVItemLanguage(tvitemlanguage).subscribe();
  }

  DeleteTVItemLanguage(tvitemlanguage: TVItemLanguage) {
    this.sub = this.tvitemlanguageService.DeleteTVItemLanguage(tvitemlanguage).subscribe();
  }

  GetLanguageEnumText(enumID: number) {
    return LanguageEnum_GetIDText(enumID)
  }

  GetTranslationStatusEnumText(enumID: number) {
    return TranslationStatusEnum_GetIDText(enumID)
  }

  ngOnInit(): void {
    LoadLocalesTVItemLanguageText(this.tvitemlanguageService);
    this.languageList = LanguageEnum_GetOrderedText();
    this.translationStatusList = TranslationStatusEnum_GetOrderedText();
    this.FillFormBuilderGroup(HttpClientCommand.Post);
    this.FillFormBuilderGroup(HttpClientCommand.Put);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.tvitemlanguageService.tvitemlanguageListModel$.getValue().length) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItemLanguageID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.tvitemlanguageService.tvitemlanguageListModel$.getValue()[0]?.TVItemLanguageID)),
              disabled: false
            }, [  Validators.required ]],
          TVItemID: [
            {
              value: this.tvitemlanguageService.tvitemlanguageListModel$.getValue()[0]?.TVItemID,
              disabled: false
            }, [  Validators.required ]],
          Language: [
            {
              value: this.tvitemlanguageService.tvitemlanguageListModel$.getValue()[0]?.Language,
              disabled: false
            }, [  Validators.required ]],
          TVText: [
            {
              value: this.tvitemlanguageService.tvitemlanguageListModel$.getValue()[0]?.TVText,
              disabled: false
            }, [  Validators.required, Validators.maxLength(200) ]],
          TranslationStatus: [
            {
              value: this.tvitemlanguageService.tvitemlanguageListModel$.getValue()[0]?.TranslationStatus,
              disabled: false
            }, [  Validators.required ]],
          LastUpdateDate_UTC: [
            {
              value: this.tvitemlanguageService.tvitemlanguageListModel$.getValue()[0]?.LastUpdateDate_UTC,
              disabled: false
            }, [  Validators.required ]],
          LastUpdateContactTVItemID: [
            {
              value: this.tvitemlanguageService.tvitemlanguageListModel$.getValue()[0]?.LastUpdateContactTVItemID,
              disabled: false
            }, [  Validators.required ]],
        }
      );

      if (httpClientCommand === HttpClientCommand.Post) {
        this.tvitemlanguageFormPost = formGroup
      }
      else {
        this.tvitemlanguageFormPut = formGroup;
      }
    }
  }
}
