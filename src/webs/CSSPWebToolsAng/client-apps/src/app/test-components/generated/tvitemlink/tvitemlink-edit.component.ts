/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { TVItemLinkService } from './tvitemlink.service';
import { LoadLocalesTVItemLinkText } from './tvitemlink.locales';
import { Subscription } from 'rxjs';
import { TVTypeEnum_GetOrderedText } from '../../../enums/generated/TVTypeEnum';
import { TVItemLink } from '../../../models/generated/TVItemLink.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enumidandtext.model';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-tvitemlink-edit',
  templateUrl: './tvitemlink-edit.component.html',
  styleUrls: ['./tvitemlink-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TVItemLinkEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  fromTVTypeList: EnumIDAndText[];
  toTVTypeList: EnumIDAndText[];
  tvitemlinkFormEdit: FormGroup;
  @Input() tvitemlink: TVItemLink = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public tvitemlinkService: TVItemLinkService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutTVItemLink(tvitemlink: TVItemLink) {
    this.sub = this.tvitemlinkService.PutTVItemLink(tvitemlink).subscribe();
  }

  PostTVItemLink(tvitemlink: TVItemLink) {
    this.sub = this.tvitemlinkService.PostTVItemLink(tvitemlink).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesTVItemLinkText(this.tvitemlinkService);
    this.fromTVTypeList = TVTypeEnum_GetOrderedText();
    this.toTVTypeList = TVTypeEnum_GetOrderedText();
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    if (this.sub) {
      this.sub.unsubscribe();
    }
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.tvitemlink) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItemLinkID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.TVItemLinkID)),
              disabled: false
            }, [Validators.required]],
          FromTVItemID: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.FromTVItemID,
              disabled: false
            }, [Validators.required]],
          ToTVItemID: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.ToTVItemID,
              disabled: false
            }, [Validators.required]],
          FromTVType: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.FromTVType,
              disabled: false
            }, [Validators.required]],
          ToTVType: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.ToTVType,
              disabled: false
            }, [Validators.required]],
          StartDateTime_Local: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.StartDateTime_Local,
              disabled: false
            }],
          EndDateTime_Local: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.EndDateTime_Local,
              disabled: false
            }],
          Ordinal: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.Ordinal,
              disabled: false
            }, [Validators.required, Validators.min(0), Validators.max(100)]],
          TVLevel: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.TVLevel,
              disabled: false
            }, [Validators.required, Validators.min(0), Validators.max(100)]],
          TVPath: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.TVPath,
              disabled: false
            }, [Validators.required, Validators.maxLength(250)]],
          ParentTVItemLinkID: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.ParentTVItemLinkID,
              disabled: false
            }],
          LastUpdateDate_UTC: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.tvitemlinkService.tvitemlinkListModel$.getValue()[0]?.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.tvitemlinkFormEdit = formGroup
    }
  }
}
