/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { TVItemModelService } from './tvitemmodel.service';
import { LoadLocalesTVItemModelText } from './tvitemmodel.locales';
import { Subscription } from 'rxjs';
import { TVItemModel } from '../../../models/generated/TVItemModel.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-tvitemmodel-edit',
  templateUrl: './tvitemmodel-edit.component.html',
  styleUrls: ['./tvitemmodel-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TVItemModelEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  tvitemmodelFormEdit: FormGroup;
  @Input() tvitemmodel: TVItemModel = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public tvitemmodelService: TVItemModelService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutTVItemModel(tvitemmodel: TVItemModel) {
    this.sub = this.tvitemmodelService.PutTVItemModel(tvitemmodel).subscribe();
  }

  PostTVItemModel(tvitemmodel: TVItemModel) {
    this.sub = this.tvitemmodelService.PostTVItemModel(tvitemmodel).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.tvitemmodel) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItem: [
            {
              value: this.tvitemmodel.TVItem,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageEN: [
            {
              value: this.tvitemmodel.TVItemLanguageEN,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageFR: [
            {
              value: this.tvitemmodel.TVItemLanguageFR,
              disabled: false
            }, [Validators.required]],
          TVItemStatList: [
            {
              value: this.tvitemmodel.TVItemStatList,
              disabled: false
            }, [Validators.required]],
          MapInfoModelList: [
            {
              value: this.tvitemmodel.MapInfoModelList,
              disabled: false
            }, [Validators.required]],
          TVFileModelList: [
            {
              value: this.tvitemmodel.TVFileModelList,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.tvitemmodelFormEdit = formGroup
    }
  }
}
