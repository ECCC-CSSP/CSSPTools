/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp3.1\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { TVItemStatService } from './tvitemstat.service';
import { LoadLocalesTVItemStatText } from './tvitemstat.locales';
import { Subscription } from 'rxjs';
import { TVTypeEnum_GetOrderedText } from '../../../enums/generated/TVTypeEnum';
import { TVItemStat } from '../../../models/generated/TVItemStat.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enumidandtext.model';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-tvitemstat-edit',
  templateUrl: './tvitemstat-edit.component.html',
  styleUrls: ['./tvitemstat-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TVItemStatEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  tVTypeList: EnumIDAndText[];
  tvitemstatFormEdit: FormGroup;
  @Input() tvitemstat: TVItemStat = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public tvitemstatService: TVItemStatService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutTVItemStat(tvitemstat: TVItemStat) {
    this.sub = this.tvitemstatService.PutTVItemStat(tvitemstat).subscribe();
  }

  PostTVItemStat(tvitemstat: TVItemStat) {
    this.sub = this.tvitemstatService.PostTVItemStat(tvitemstat).subscribe();
  }

  ngOnInit(): void {
    this.tVTypeList = TVTypeEnum_GetOrderedText();
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.tvitemstat) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItemStatID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.tvitemstat.TVItemStatID)),
              disabled: false
            }, [Validators.required]],
          TVItemID: [
            {
              value: this.tvitemstat.TVItemID,
              disabled: false
            }, [Validators.required]],
          TVType: [
            {
              value: this.tvitemstat.TVType,
              disabled: false
            }, [Validators.required]],
          ChildCount: [
            {
              value: this.tvitemstat.ChildCount,
              disabled: false
            }, [Validators.required, Validators.min(0), Validators.max(10000000)]],
          LastUpdateDate_UTC: [
            {
              value: this.tvitemstat.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.tvitemstat.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.tvitemstatFormEdit = formGroup
    }
  }
}
