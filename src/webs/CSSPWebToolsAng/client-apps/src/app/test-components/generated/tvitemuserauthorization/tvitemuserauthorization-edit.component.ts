/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { TVItemUserAuthorizationService } from './tvitemuserauthorization.service';
import { LoadLocalesTVItemUserAuthorizationText } from './tvitemuserauthorization.locales';
import { Subscription } from 'rxjs';
import { TVAuthEnum_GetOrderedText } from '../../../enums/generated/TVAuthEnum';
import { TVItemUserAuthorization } from '../../../models/generated/TVItemUserAuthorization.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { EnumIDAndText } from '../../../models/enum-idandtext.model';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-tvitemuserauthorization-edit',
  templateUrl: './tvitemuserauthorization-edit.component.html',
  styleUrls: ['./tvitemuserauthorization-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class TVItemUserAuthorizationEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  tVAuthList: EnumIDAndText[];
  tvitemuserauthorizationFormEdit: FormGroup;
  @Input() tvitemuserauthorization: TVItemUserAuthorization = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public tvitemuserauthorizationService: TVItemUserAuthorizationService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutTVItemUserAuthorization(tvitemuserauthorization: TVItemUserAuthorization) {
    this.sub = this.tvitemuserauthorizationService.PutTVItemUserAuthorization(tvitemuserauthorization).subscribe();
  }

  PostTVItemUserAuthorization(tvitemuserauthorization: TVItemUserAuthorization) {
    this.sub = this.tvitemuserauthorizationService.PostTVItemUserAuthorization(tvitemuserauthorization).subscribe();
  }

  ngOnInit(): void {
    this.tVAuthList = TVAuthEnum_GetOrderedText();
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.tvitemuserauthorization) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItemUserAuthorizationID: [
            {
              value: (httpClientCommand === HttpClientCommand.Post ? 0 : (this.tvitemuserauthorization.TVItemUserAuthorizationID)),
              disabled: false
            }, [Validators.required]],
          ContactTVItemID: [
            {
              value: this.tvitemuserauthorization.ContactTVItemID,
              disabled: false
            }, [Validators.required]],
          TVItemID1: [
            {
              value: this.tvitemuserauthorization.TVItemID1,
              disabled: false
            }, [Validators.required]],
          TVItemID2: [
            {
              value: this.tvitemuserauthorization.TVItemID2,
              disabled: false
            }],
          TVItemID3: [
            {
              value: this.tvitemuserauthorization.TVItemID3,
              disabled: false
            }],
          TVItemID4: [
            {
              value: this.tvitemuserauthorization.TVItemID4,
              disabled: false
            }],
          TVAuth: [
            {
              value: this.tvitemuserauthorization.TVAuth,
              disabled: false
            }, [Validators.required]],
          LastUpdateDate_UTC: [
            {
              value: this.tvitemuserauthorization.LastUpdateDate_UTC,
              disabled: false
            }, [Validators.required]],
          LastUpdateContactTVItemID: [
            {
              value: this.tvitemuserauthorization.LastUpdateContactTVItemID,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.tvitemuserauthorizationFormEdit = formGroup
    }
  }
}
