/*
 * Auto generated from C:\CSSPTools\src\codegen\Tests\_package\netcoreapp3.1\testhost.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { VPAmbientService } from './vpambient.service';
import { LoadLocalesVPAmbientText } from './vpambient.locales';
import { Subscription } from 'rxjs';
import { VPAmbient } from '../../../models/generated/VPAmbient.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-vpambient',
  templateUrl: './vpambient.component.html',
  styleUrls: ['./vpambient.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class VPAmbientComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public vpambientService: VPAmbientService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(vpambient: VPAmbient) {
    if (this.IDToShow === vpambient.VPAmbientID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(vpambient: VPAmbient) {
    if (this.IDToShow === vpambient.VPAmbientID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(vpambient: VPAmbient) {
    if (this.IDToShow === vpambient.VPAmbientID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = vpambient.VPAmbientID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(vpambient: VPAmbient) {
    if (this.IDToShow === vpambient.VPAmbientID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = vpambient.VPAmbientID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetVPAmbientList() {
    this.sub = this.vpambientService.GetVPAmbientList().subscribe();
  }

  DeleteVPAmbient(vpambient: VPAmbient) {
    this.sub = this.vpambientService.DeleteVPAmbient(vpambient).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesVPAmbientText(this.vpambientService.vpambientTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
