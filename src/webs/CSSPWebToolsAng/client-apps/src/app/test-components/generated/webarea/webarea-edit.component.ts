/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { WebAreaService } from './webarea.service';
import { LoadLocalesWebAreaText } from './webarea.locales';
import { Subscription } from 'rxjs';
import { WebArea } from '../../../models/generated/WebArea.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-webarea-edit',
  templateUrl: './webarea-edit.component.html',
  styleUrls: ['./webarea-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class WebAreaEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  webareaFormEdit: FormGroup;
  @Input() webarea: WebArea = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public webareaService: WebAreaService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutWebArea(webarea: WebArea) {
    this.sub = this.webareaService.PutWebArea(webarea).subscribe();
  }

  PostWebArea(webarea: WebArea) {
    this.sub = this.webareaService.PostWebArea(webarea).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.webarea) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItemSectorList: [
            {
              value: this.webarea.TVItemSectorList,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageSectorList: [
            {
              value: this.webarea.TVItemLanguageSectorList,
              disabled: false
            }, [Validators.required]],
          TVItemStatSectorList: [
            {
              value: this.webarea.TVItemStatSectorList,
              disabled: false
            }, [Validators.required]],
          MapInfoSectorList: [
            {
              value: this.webarea.MapInfoSectorList,
              disabled: false
            }, [Validators.required]],
          MapInfoPointSectorList: [
            {
              value: this.webarea.MapInfoPointSectorList,
              disabled: false
            }, [Validators.required]],
          TVItem: [
            {
              value: this.webarea.TVItem,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageList: [
            {
              value: this.webarea.TVItemLanguageList,
              disabled: false
            }, [Validators.required]],
          TVItemLinkList: [
            {
              value: this.webarea.TVItemLinkList,
              disabled: false
            }, [Validators.required]],
          TVItemStatList: [
            {
              value: this.webarea.TVItemStatList,
              disabled: false
            }, [Validators.required]],
          MapInfoList: [
            {
              value: this.webarea.MapInfoList,
              disabled: false
            }, [Validators.required]],
          MapInfoPointList: [
            {
              value: this.webarea.MapInfoPointList,
              disabled: false
            }, [Validators.required]],
          TVFileList: [
            {
              value: this.webarea.TVFileList,
              disabled: false
            }, [Validators.required]],
          TVFileLanguageList: [
            {
              value: this.webarea.TVFileLanguageList,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.webareaFormEdit = formGroup
    }
  }
}
