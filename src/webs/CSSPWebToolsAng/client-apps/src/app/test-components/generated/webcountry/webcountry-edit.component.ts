/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { WebCountryService } from './webcountry.service';
import { LoadLocalesWebCountryText } from './webcountry.locales';
import { Subscription } from 'rxjs';
import { WebCountry } from '../../../models/generated/WebCountry.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-webcountry-edit',
  templateUrl: './webcountry-edit.component.html',
  styleUrls: ['./webcountry-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class WebCountryEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  webcountryFormEdit: FormGroup;
  @Input() webcountry: WebCountry = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public webcountryService: WebCountryService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutWebCountry(webcountry: WebCountry) {
    this.sub = this.webcountryService.PutWebCountry(webcountry).subscribe();
  }

  PostWebCountry(webcountry: WebCountry) {
    this.sub = this.webcountryService.PostWebCountry(webcountry).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.webcountry) {
      let formGroup: FormGroup = this.fb.group(
        {
          TVItemProvinceList: [
            {
              value: this.webcountry.TVItemProvinceList,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageProvinceList: [
            {
              value: this.webcountry.TVItemLanguageProvinceList,
              disabled: false
            }, [Validators.required]],
          TVItemStatProvinceList: [
            {
              value: this.webcountry.TVItemStatProvinceList,
              disabled: false
            }, [Validators.required]],
          MapInfoProvinceList: [
            {
              value: this.webcountry.MapInfoProvinceList,
              disabled: false
            }, [Validators.required]],
          MapInfoPointProvinceList: [
            {
              value: this.webcountry.MapInfoPointProvinceList,
              disabled: false
            }, [Validators.required]],
          EmailDistributionListList: [
            {
              value: this.webcountry.EmailDistributionListList,
              disabled: false
            }, [Validators.required]],
          EmailDistributionListLanguageList: [
            {
              value: this.webcountry.EmailDistributionListLanguageList,
              disabled: false
            }, [Validators.required]],
          EmailDistributionListContactList: [
            {
              value: this.webcountry.EmailDistributionListContactList,
              disabled: false
            }, [Validators.required]],
          EmailDistributionListContactLanguageList: [
            {
              value: this.webcountry.EmailDistributionListContactLanguageList,
              disabled: false
            }, [Validators.required]],
          TVItem: [
            {
              value: this.webcountry.TVItem,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageList: [
            {
              value: this.webcountry.TVItemLanguageList,
              disabled: false
            }, [Validators.required]],
          TVItemLinkList: [
            {
              value: this.webcountry.TVItemLinkList,
              disabled: false
            }, [Validators.required]],
          TVItemStatList: [
            {
              value: this.webcountry.TVItemStatList,
              disabled: false
            }, [Validators.required]],
          MapInfoList: [
            {
              value: this.webcountry.MapInfoList,
              disabled: false
            }, [Validators.required]],
          MapInfoPointList: [
            {
              value: this.webcountry.MapInfoPointList,
              disabled: false
            }, [Validators.required]],
          TVFileList: [
            {
              value: this.webcountry.TVFileList,
              disabled: false
            }, [Validators.required]],
          TVFileLanguageList: [
            {
              value: this.webcountry.TVFileLanguageList,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.webcountryFormEdit = formGroup
    }
  }
}
