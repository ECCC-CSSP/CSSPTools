/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { WebHelpDocService } from './webhelpdoc.service';
import { LoadLocalesWebHelpDocText } from './webhelpdoc.locales';
import { Subscription } from 'rxjs';
import { WebHelpDoc } from '../../../models/generated/WebHelpDoc.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-webhelpdoc-edit',
  templateUrl: './webhelpdoc-edit.component.html',
  styleUrls: ['./webhelpdoc-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class WebHelpDocEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  webhelpdocFormEdit: FormGroup;
  @Input() webhelpdoc: WebHelpDoc = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public webhelpdocService: WebHelpDocService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutWebHelpDoc(webhelpdoc: WebHelpDoc) {
    this.sub = this.webhelpdocService.PutWebHelpDoc(webhelpdoc).subscribe();
  }

  PostWebHelpDoc(webhelpdoc: WebHelpDoc) {
    this.sub = this.webhelpdocService.PostWebHelpDoc(webhelpdoc).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.webhelpdoc) {
      let formGroup: FormGroup = this.fb.group(
        {
          HelpDocList: [
            {
              value: this.webhelpdoc.HelpDocList,
              disabled: false
            }, [Validators.required]],
          TVItem: [
            {
              value: this.webhelpdoc.TVItem,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageList: [
            {
              value: this.webhelpdoc.TVItemLanguageList,
              disabled: false
            }, [Validators.required]],
          TVItemLinkList: [
            {
              value: this.webhelpdoc.TVItemLinkList,
              disabled: false
            }, [Validators.required]],
          TVItemStatList: [
            {
              value: this.webhelpdoc.TVItemStatList,
              disabled: false
            }, [Validators.required]],
          MapInfoList: [
            {
              value: this.webhelpdoc.MapInfoList,
              disabled: false
            }, [Validators.required]],
          MapInfoPointList: [
            {
              value: this.webhelpdoc.MapInfoPointList,
              disabled: false
            }, [Validators.required]],
          TVFileList: [
            {
              value: this.webhelpdoc.TVFileList,
              disabled: false
            }, [Validators.required]],
          TVFileLanguageList: [
            {
              value: this.webhelpdoc.TVFileLanguageList,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.webhelpdocFormEdit = formGroup
    }
  }
}
