/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { WebMikeScenarioService } from './webmikescenario.service';
import { LoadLocalesWebMikeScenarioText } from './webmikescenario.locales';
import { Subscription } from 'rxjs';
import { WebMikeScenario } from '../../../models/generated/WebMikeScenario.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-webmikescenario-edit',
  templateUrl: './webmikescenario-edit.component.html',
  styleUrls: ['./webmikescenario-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class WebMikeScenarioEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  webmikescenarioFormEdit: FormGroup;
  @Input() webmikescenario: WebMikeScenario = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public webmikescenarioService: WebMikeScenarioService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutWebMikeScenario(webmikescenario: WebMikeScenario) {
    this.sub = this.webmikescenarioService.PutWebMikeScenario(webmikescenario).subscribe();
  }

  PostWebMikeScenario(webmikescenario: WebMikeScenario) {
    this.sub = this.webmikescenarioService.PostWebMikeScenario(webmikescenario).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.webmikescenario) {
      let formGroup: FormGroup = this.fb.group(
        {
          MikeScenario: [
            {
              value: this.webmikescenario.MikeScenario,
              disabled: false
            }, [Validators.required]],
          MikeBoundaryConditionList: [
            {
              value: this.webmikescenario.MikeBoundaryConditionList,
              disabled: false
            }, [Validators.required]],
          TVItemMikeBoundaryConditionList: [
            {
              value: this.webmikescenario.TVItemMikeBoundaryConditionList,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageMikeBoundaryConditionList: [
            {
              value: this.webmikescenario.TVItemLanguageMikeBoundaryConditionList,
              disabled: false
            }, [Validators.required]],
          TVItemStatMikeBoundaryConditionList: [
            {
              value: this.webmikescenario.TVItemStatMikeBoundaryConditionList,
              disabled: false
            }, [Validators.required]],
          MapInfoMikeBoundaryConditionList: [
            {
              value: this.webmikescenario.MapInfoMikeBoundaryConditionList,
              disabled: false
            }, [Validators.required]],
          MapInfoPointMikeBoundaryConditionList: [
            {
              value: this.webmikescenario.MapInfoPointMikeBoundaryConditionList,
              disabled: false
            }, [Validators.required]],
          MikeSourceList: [
            {
              value: this.webmikescenario.MikeSourceList,
              disabled: false
            }, [Validators.required]],
          TVItemMikeSourceList: [
            {
              value: this.webmikescenario.TVItemMikeSourceList,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageMikeSourceList: [
            {
              value: this.webmikescenario.TVItemLanguageMikeSourceList,
              disabled: false
            }, [Validators.required]],
          TVItemStatMikeSourceList: [
            {
              value: this.webmikescenario.TVItemStatMikeSourceList,
              disabled: false
            }, [Validators.required]],
          MapInfoMikeSourceList: [
            {
              value: this.webmikescenario.MapInfoMikeSourceList,
              disabled: false
            }, [Validators.required]],
          MapInfoPointMikeSourceList: [
            {
              value: this.webmikescenario.MapInfoPointMikeSourceList,
              disabled: false
            }, [Validators.required]],
          MikeSourceStartEndList: [
            {
              value: this.webmikescenario.MikeSourceStartEndList,
              disabled: false
            }, [Validators.required]],
          TVItem: [
            {
              value: this.webmikescenario.TVItem,
              disabled: false
            }, [Validators.required]],
          TVItemLanguageList: [
            {
              value: this.webmikescenario.TVItemLanguageList,
              disabled: false
            }, [Validators.required]],
          TVItemLinkList: [
            {
              value: this.webmikescenario.TVItemLinkList,
              disabled: false
            }, [Validators.required]],
          TVItemStatList: [
            {
              value: this.webmikescenario.TVItemStatList,
              disabled: false
            }, [Validators.required]],
          MapInfoList: [
            {
              value: this.webmikescenario.MapInfoList,
              disabled: false
            }, [Validators.required]],
          MapInfoPointList: [
            {
              value: this.webmikescenario.MapInfoPointList,
              disabled: false
            }, [Validators.required]],
          TVFileList: [
            {
              value: this.webmikescenario.TVFileList,
              disabled: false
            }, [Validators.required]],
          TVFileLanguageList: [
            {
              value: this.webmikescenario.TVFileLanguageList,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.webmikescenarioFormEdit = formGroup
    }
  }
}
