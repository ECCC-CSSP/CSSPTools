/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { WebMWQMLookupMPNService } from './webmwqmlookupmpn.service';
import { LoadLocalesWebMWQMLookupMPNText } from './webmwqmlookupmpn.locales';
import { Subscription } from 'rxjs';
import { WebMWQMLookupMPN } from '../../../models/generated/WebMWQMLookupMPN.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-webmwqmlookupmpn',
  templateUrl: './webmwqmlookupmpn.component.html',
  styleUrls: ['./webmwqmlookupmpn.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class WebMWQMLookupMPNComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public webmwqmlookupmpnService: WebMWQMLookupMPNService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(webmwqmlookupmpn: WebMWQMLookupMPN) {
    if (this.IDToShow === webmwqmlookupmpn.WebMWQMLookupMPNID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(webmwqmlookupmpn: WebMWQMLookupMPN) {
    if (this.IDToShow === webmwqmlookupmpn.WebMWQMLookupMPNID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(webmwqmlookupmpn: WebMWQMLookupMPN) {
    if (this.IDToShow === webmwqmlookupmpn.WebMWQMLookupMPNID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = webmwqmlookupmpn.WebMWQMLookupMPNID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(webmwqmlookupmpn: WebMWQMLookupMPN) {
    if (this.IDToShow === webmwqmlookupmpn.WebMWQMLookupMPNID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = webmwqmlookupmpn.WebMWQMLookupMPNID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetWebMWQMLookupMPNList() {
    this.sub = this.webmwqmlookupmpnService.GetWebMWQMLookupMPNList().subscribe();
  }

  DeleteWebMWQMLookupMPN(webmwqmlookupmpn: WebMWQMLookupMPN) {
    this.sub = this.webmwqmlookupmpnService.DeleteWebMWQMLookupMPN(webmwqmlookupmpn).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesWebMWQMLookupMPNText(this.webmwqmlookupmpnService.webmwqmlookupmpnTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
