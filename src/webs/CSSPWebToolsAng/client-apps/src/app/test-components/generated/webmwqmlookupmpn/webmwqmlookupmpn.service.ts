/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { WebMWQMLookupMPNTextModel } from './webmwqmlookupmpn.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesWebMWQMLookupMPNText } from './webmwqmlookupmpn.locales';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { WebMWQMLookupMPN } from '../../../models/generated/WebMWQMLookupMPN.model';
import { HttpRequestModel } from '../../../models/http.model';
import { HttpClientService } from '../../../services/http-client.service';
import { HttpClientCommand } from '../../../enums/app.enums';

@Injectable({
  providedIn: 'root'
})
export class WebMWQMLookupMPNService {
  /* Variables */
  webmwqmlookupmpnTextModel$: BehaviorSubject<WebMWQMLookupMPNTextModel> = new BehaviorSubject<WebMWQMLookupMPNTextModel>(<WebMWQMLookupMPNTextModel>{});
  webmwqmlookupmpnListModel$: BehaviorSubject<WebMWQMLookupMPN[]> = new BehaviorSubject<WebMWQMLookupMPN[]>(<WebMWQMLookupMPN[]>{});
  webmwqmlookupmpnGetModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmlookupmpnPutModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmlookupmpnPostModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmlookupmpnDeleteModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});

  /* Constructors */
  constructor(private httpClient: HttpClient, private httpClientService: HttpClientService) {
    LoadLocalesWebMWQMLookupMPNText(this.webmwqmlookupmpnTextModel$);
    this.webmwqmlookupmpnTextModel$.next(<WebMWQMLookupMPNTextModel>{ Title: "Something2 for text" });
  }

  /* Functions public */
  GetWebMWQMLookupMPNList() {
    this.httpClientService.BeforeHttpClient(this.webmwqmlookupmpnGetModel$);

    return this.httpClient.get<WebMWQMLookupMPN[]>('/api/WebMWQMLookupMPN').pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMLookupMPN>(this.webmwqmlookupmpnListModel$, this.webmwqmlookupmpnGetModel$, x, HttpClientCommand.Get, null);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMLookupMPN>(this.webmwqmlookupmpnListModel$, this.webmwqmlookupmpnGetModel$, e);
      })))
    );
  }

  PutWebMWQMLookupMPN(webmwqmlookupmpn: WebMWQMLookupMPN) {
    this.httpClientService.BeforeHttpClient(this.webmwqmlookupmpnPutModel$);

    return this.httpClient.put<WebMWQMLookupMPN>('/api/WebMWQMLookupMPN', webmwqmlookupmpn, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMLookupMPN>(this.webmwqmlookupmpnListModel$, this.webmwqmlookupmpnPutModel$, x, HttpClientCommand.Put, webmwqmlookupmpn);
      }),
      catchError(e => of(e).pipe(map(e => {
       this.httpClientService.DoCatchError<WebMWQMLookupMPN>(this.webmwqmlookupmpnListModel$, this.webmwqmlookupmpnPutModel$, e);
      })))
    );
  }

  PostWebMWQMLookupMPN(webmwqmlookupmpn: WebMWQMLookupMPN) {
    this.httpClientService.BeforeHttpClient(this.webmwqmlookupmpnPostModel$);

    return this.httpClient.post<WebMWQMLookupMPN>('/api/WebMWQMLookupMPN', webmwqmlookupmpn, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMLookupMPN>(this.webmwqmlookupmpnListModel$, this.webmwqmlookupmpnPostModel$, x, HttpClientCommand.Post, webmwqmlookupmpn);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMLookupMPN>(this.webmwqmlookupmpnListModel$, this.webmwqmlookupmpnPostModel$, e);
      })))
    );
  }

  DeleteWebMWQMLookupMPN(webmwqmlookupmpn: WebMWQMLookupMPN) {
    this.httpClientService.BeforeHttpClient(this.webmwqmlookupmpnDeleteModel$);

    return this.httpClient.delete<boolean>(`/api/WebMWQMLookupMPN/${ webmwqmlookupmpn.WebMWQMLookupMPNID }`).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMLookupMPN>(this.webmwqmlookupmpnListModel$, this.webmwqmlookupmpnDeleteModel$, x, HttpClientCommand.Delete, webmwqmlookupmpn);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMLookupMPN>(this.webmwqmlookupmpnListModel$, this.webmwqmlookupmpnDeleteModel$, e);
      })))
    );
  }
}
