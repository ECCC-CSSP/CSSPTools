/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { WebMWQMSampleTextModel } from './webmwqmsample.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesWebMWQMSampleText } from './webmwqmsample.locales';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { WebMWQMSample } from '../../../models/generated/WebMWQMSample.model';
import { HttpRequestModel } from '../../../models/http.model';
import { HttpClientService } from '../../../services/http-client.service';
import { HttpClientCommand } from '../../../enums/app.enums';

@Injectable({
  providedIn: 'root'
})
export class WebMWQMSampleService {
  /* Variables */
  webmwqmsampleTextModel$: BehaviorSubject<WebMWQMSampleTextModel> = new BehaviorSubject<WebMWQMSampleTextModel>(<WebMWQMSampleTextModel>{});
  webmwqmsampleListModel$: BehaviorSubject<WebMWQMSample[]> = new BehaviorSubject<WebMWQMSample[]>(<WebMWQMSample[]>{});
  webmwqmsampleGetModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmsamplePutModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmsamplePostModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmsampleDeleteModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});

  /* Constructors */
  constructor(private httpClient: HttpClient, private httpClientService: HttpClientService) {
    LoadLocalesWebMWQMSampleText(this.webmwqmsampleTextModel$);
    this.webmwqmsampleTextModel$.next(<WebMWQMSampleTextModel>{ Title: "Something2 for text" });
  }

  /* Functions public */
  GetWebMWQMSampleList() {
    this.httpClientService.BeforeHttpClient(this.webmwqmsampleGetModel$);

    return this.httpClient.get<WebMWQMSample[]>('/api/WebMWQMSample').pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMSample>(this.webmwqmsampleListModel$, this.webmwqmsampleGetModel$, x, HttpClientCommand.Get, null);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMSample>(this.webmwqmsampleListModel$, this.webmwqmsampleGetModel$, e);
      })))
    );
  }

  PutWebMWQMSample(webmwqmsample: WebMWQMSample) {
    this.httpClientService.BeforeHttpClient(this.webmwqmsamplePutModel$);

    return this.httpClient.put<WebMWQMSample>('/api/WebMWQMSample', webmwqmsample, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMSample>(this.webmwqmsampleListModel$, this.webmwqmsamplePutModel$, x, HttpClientCommand.Put, webmwqmsample);
      }),
      catchError(e => of(e).pipe(map(e => {
       this.httpClientService.DoCatchError<WebMWQMSample>(this.webmwqmsampleListModel$, this.webmwqmsamplePutModel$, e);
      })))
    );
  }

  PostWebMWQMSample(webmwqmsample: WebMWQMSample) {
    this.httpClientService.BeforeHttpClient(this.webmwqmsamplePostModel$);

    return this.httpClient.post<WebMWQMSample>('/api/WebMWQMSample', webmwqmsample, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMSample>(this.webmwqmsampleListModel$, this.webmwqmsamplePostModel$, x, HttpClientCommand.Post, webmwqmsample);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMSample>(this.webmwqmsampleListModel$, this.webmwqmsamplePostModel$, e);
      })))
    );
  }

  DeleteWebMWQMSample(webmwqmsample: WebMWQMSample) {
    this.httpClientService.BeforeHttpClient(this.webmwqmsampleDeleteModel$);

    return this.httpClient.delete<boolean>(`/api/WebMWQMSample/${ webmwqmsample.WebMWQMSampleID }`).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMSample>(this.webmwqmsampleListModel$, this.webmwqmsampleDeleteModel$, x, HttpClientCommand.Delete, webmwqmsample);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMSample>(this.webmwqmsampleListModel$, this.webmwqmsampleDeleteModel$, e);
      })))
    );
  }
}
