/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { WebMWQMSiteTextModel } from './webmwqmsite.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesWebMWQMSiteText } from './webmwqmsite.locales';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { WebMWQMSite } from '../../../models/generated/WebMWQMSite.model';
import { HttpRequestModel } from '../../../models/http.model';
import { HttpClientService } from '../../../services/http-client.service';
import { HttpClientCommand } from '../../../enums/app.enums';

@Injectable({
  providedIn: 'root'
})
export class WebMWQMSiteService {
  /* Variables */
  webmwqmsiteTextModel$: BehaviorSubject<WebMWQMSiteTextModel> = new BehaviorSubject<WebMWQMSiteTextModel>(<WebMWQMSiteTextModel>{});
  webmwqmsiteListModel$: BehaviorSubject<WebMWQMSite[]> = new BehaviorSubject<WebMWQMSite[]>(<WebMWQMSite[]>{});
  webmwqmsiteGetModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmsitePutModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmsitePostModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});
  webmwqmsiteDeleteModel$: BehaviorSubject<HttpRequestModel> = new BehaviorSubject<HttpRequestModel>(<HttpRequestModel>{});

  /* Constructors */
  constructor(private httpClient: HttpClient, private httpClientService: HttpClientService) {
    LoadLocalesWebMWQMSiteText(this.webmwqmsiteTextModel$);
    this.webmwqmsiteTextModel$.next(<WebMWQMSiteTextModel>{ Title: "Something2 for text" });
  }

  /* Functions public */
  GetWebMWQMSiteList() {
    this.httpClientService.BeforeHttpClient(this.webmwqmsiteGetModel$);

    return this.httpClient.get<WebMWQMSite[]>('/api/WebMWQMSite').pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMSite>(this.webmwqmsiteListModel$, this.webmwqmsiteGetModel$, x, HttpClientCommand.Get, null);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMSite>(this.webmwqmsiteListModel$, this.webmwqmsiteGetModel$, e);
      })))
    );
  }

  PutWebMWQMSite(webmwqmsite: WebMWQMSite) {
    this.httpClientService.BeforeHttpClient(this.webmwqmsitePutModel$);

    return this.httpClient.put<WebMWQMSite>('/api/WebMWQMSite', webmwqmsite, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMSite>(this.webmwqmsiteListModel$, this.webmwqmsitePutModel$, x, HttpClientCommand.Put, webmwqmsite);
      }),
      catchError(e => of(e).pipe(map(e => {
       this.httpClientService.DoCatchError<WebMWQMSite>(this.webmwqmsiteListModel$, this.webmwqmsitePutModel$, e);
      })))
    );
  }

  PostWebMWQMSite(webmwqmsite: WebMWQMSite) {
    this.httpClientService.BeforeHttpClient(this.webmwqmsitePostModel$);

    return this.httpClient.post<WebMWQMSite>('/api/WebMWQMSite', webmwqmsite, { headers: new HttpHeaders() }).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMSite>(this.webmwqmsiteListModel$, this.webmwqmsitePostModel$, x, HttpClientCommand.Post, webmwqmsite);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMSite>(this.webmwqmsiteListModel$, this.webmwqmsitePostModel$, e);
      })))
    );
  }

  DeleteWebMWQMSite(webmwqmsite: WebMWQMSite) {
    this.httpClientService.BeforeHttpClient(this.webmwqmsiteDeleteModel$);

    return this.httpClient.delete<boolean>(`/api/WebMWQMSite/${ webmwqmsite.WebMWQMSiteID }`).pipe(
      map((x: any) => {
        this.httpClientService.DoSuccess<WebMWQMSite>(this.webmwqmsiteListModel$, this.webmwqmsiteDeleteModel$, x, HttpClientCommand.Delete, webmwqmsite);
      }),
      catchError(e => of(e).pipe(map(e => {
        this.httpClientService.DoCatchError<WebMWQMSite>(this.webmwqmsiteListModel$, this.webmwqmsiteDeleteModel$, e);
      })))
    );
  }
}
