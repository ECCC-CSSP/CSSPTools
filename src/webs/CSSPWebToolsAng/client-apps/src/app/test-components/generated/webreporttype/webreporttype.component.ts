/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';
import { WebReportTypeService } from './webreporttype.service';
import { LoadLocalesWebReportTypeText } from './webreporttype.locales';
import { Subscription } from 'rxjs';
import { WebReportType } from '../../../models/generated/WebReportType.model';
import { HttpClientService } from '../../../services/http-client.service';
import { Router } from '@angular/router';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-webreporttype',
  templateUrl: './webreporttype.component.html',
  styleUrls: ['./webreporttype.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class WebReportTypeComponent implements OnInit, OnDestroy {
  sub: Subscription;
  IDToShow: number;
  showType?: HttpClientCommand = null;

  constructor(public webreporttypeService: WebReportTypeService, private router: Router, private httpClientService: HttpClientService) {
    httpClientService.oldURL = router.url;
  }

  GetPutButtonColor(webreporttype: WebReportType) {
    if (this.IDToShow === webreporttype.WebReportTypeID && this.showType === HttpClientCommand.Put) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  GetPostButtonColor(webreporttype: WebReportType) {
    if (this.IDToShow === webreporttype.WebReportTypeID && this.showType === HttpClientCommand.Post) {
      return 'primary';
    }
    else {
      return 'basic';
    }
  }

  ShowPut(webreporttype: WebReportType) {
    if (this.IDToShow === webreporttype.WebReportTypeID && this.showType === HttpClientCommand.Put) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = webreporttype.WebReportTypeID;
      this.showType = HttpClientCommand.Put;
    }
  }

  ShowPost(webreporttype: WebReportType) {
    if (this.IDToShow === webreporttype.WebReportTypeID && this.showType === HttpClientCommand.Post) {
      this.IDToShow = 0;
      this.showType = null;
    }
    else {
      this.IDToShow = webreporttype.WebReportTypeID;
      this.showType = HttpClientCommand.Post;
    }
  }

  GetPutEnum() {
    return <number>HttpClientCommand.Put;
  }

  GetPostEnum() {
    return <number>HttpClientCommand.Post;
  }

  GetWebReportTypeList() {
    this.sub = this.webreporttypeService.GetWebReportTypeList().subscribe();
  }

  DeleteWebReportType(webreporttype: WebReportType) {
    this.sub = this.webreporttypeService.DeleteWebReportType(webreporttype).subscribe();
  }

  ngOnInit(): void {
    LoadLocalesWebReportTypeText(this.webreporttypeService.webreporttypeTextModel$);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }
}
