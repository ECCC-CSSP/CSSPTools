/*
 * Auto generated from C:\CSSPTools\src\codegen\_package\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, Input } from '@angular/core';
import { WebSamplingPlanService } from './websamplingplan.service';
import { LoadLocalesWebSamplingPlanText } from './websamplingplan.locales';
import { Subscription } from 'rxjs';
import { WebSamplingPlan } from '../../../models/generated/WebSamplingPlan.model';
import { FormBuilder, Validators, FormGroup } from '@angular/forms';
import { HttpClientCommand } from '../../../enums/app.enums';

@Component({
  selector: 'app-websamplingplan-edit',
  templateUrl: './websamplingplan-edit.component.html',
  styleUrls: ['./websamplingplan-edit.component.css'],
  changeDetection: ChangeDetectionStrategy.OnPush
})
export class WebSamplingPlanEditComponent implements OnInit, OnDestroy {
  sub: Subscription;
  websamplingplanFormEdit: FormGroup;
  @Input() websamplingplan: WebSamplingPlan = null;
  @Input() httpClientCommand: HttpClientCommand = HttpClientCommand.Put;

  constructor(public websamplingplanService: WebSamplingPlanService, private fb: FormBuilder) {
  }

  GetPut() {
    return this.httpClientCommand == HttpClientCommand.Put ? true : false;
  }

  PutWebSamplingPlan(websamplingplan: WebSamplingPlan) {
    this.sub = this.websamplingplanService.PutWebSamplingPlan(websamplingplan).subscribe();
  }

  PostWebSamplingPlan(websamplingplan: WebSamplingPlan) {
    this.sub = this.websamplingplanService.PostWebSamplingPlan(websamplingplan).subscribe();
  }

  ngOnInit(): void {
    this.FillFormBuilderGroup(this.httpClientCommand);
  }

  ngOnDestroy() {
    this.sub?.unsubscribe();
  }

  FillFormBuilderGroup(httpClientCommand: HttpClientCommand) {
    if (this.websamplingplan) {
      let formGroup: FormGroup = this.fb.group(
        {
          SamplingPlan: [
            {
              value: this.websamplingplan.SamplingPlan,
              disabled: false
            }, [Validators.required]],
          SamplingPlanSubsectorList: [
            {
              value: this.websamplingplan.SamplingPlanSubsectorList,
              disabled: false
            }, [Validators.required]],
          SamplingPlanSubsectorSiteList: [
            {
              value: this.websamplingplan.SamplingPlanSubsectorSiteList,
              disabled: false
            }, [Validators.required]],
          SamplingPlanEmailList: [
            {
              value: this.websamplingplan.SamplingPlanEmailList,
              disabled: false
            }, [Validators.required]],
        }
      );

      this.websamplingplanFormEdit = formGroup
    }
  }
}
