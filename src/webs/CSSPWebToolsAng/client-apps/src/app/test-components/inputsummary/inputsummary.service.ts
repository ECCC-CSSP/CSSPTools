/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { InputSummaryTextModel, InputSummaryModel } from './inputsummary.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesInputSummaryText } from './inputsummary.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { InputSummary } from 'src/app/models/generated/InputSummary.model';

@Injectable({
  providedIn: 'root'
})
export class InputSummaryService {
  inputsummaryTextModel$: BehaviorSubject<InputSummaryTextModel> = new BehaviorSubject<InputSummaryTextModel>(<InputSummaryTextModel>{});
  inputsummaryModel$: BehaviorSubject<InputSummaryModel> = new BehaviorSubject<InputSummaryModel>(<InputSummaryModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesInputSummaryText(this);
    this.UpdateInputSummaryText(<InputSummaryTextModel>{ Title: "Something2 for text" });
  }

  UpdateInputSummaryText(inputsummaryTextModel: InputSummaryTextModel) {
    this.inputsummaryTextModel$.next(<InputSummaryTextModel>{ ...this.inputsummaryTextModel$.getValue(), ...inputsummaryTextModel });
  }

  UpdateInputSummaryModel(inputsummaryModel: InputSummaryModel) {
    this.inputsummaryModel$.next(<InputSummaryModel>{ ...this.inputsummaryModel$.getValue(), ...inputsummaryModel });
  }

  GetInputSummary(router: Router) {
    let oldURL = router.url;
    this.UpdateInputSummaryModel(<InputSummaryModel>{ Working: true, Error: null });

    return this.httpClient.get<InputSummary[]>('/api/InputSummary').pipe(
      map((x: any) => {
        console.debug(`InputSummary OK. Return: ${x}`);
        this.inputsummaryModel$.getValue().InputSummaryList = <InputSummary[]>x;
        this.UpdateInputSummaryModel(this.inputsummaryModel$.getValue());
        this.UpdateInputSummaryModel(<InputSummaryModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateInputSummaryModel(<InputSummaryModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`InputSummary ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
