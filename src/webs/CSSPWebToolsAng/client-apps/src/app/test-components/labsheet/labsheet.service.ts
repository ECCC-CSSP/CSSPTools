/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { LabSheetTextModel, LabSheetModel } from './labsheet.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesLabSheetText } from './labsheet.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { LabSheet } from 'src/app/models/generated/LabSheet.model';

@Injectable({
  providedIn: 'root'
})
export class LabSheetService {
  labsheetTextModel$: BehaviorSubject<LabSheetTextModel> = new BehaviorSubject<LabSheetTextModel>(<LabSheetTextModel>{});
  labsheetModel$: BehaviorSubject<LabSheetModel> = new BehaviorSubject<LabSheetModel>(<LabSheetModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesLabSheetText(this);
    this.UpdateLabSheetText(<LabSheetTextModel>{ Title: "Something2 for text" });
  }

  UpdateLabSheetText(labsheetTextModel: LabSheetTextModel) {
    this.labsheetTextModel$.next(<LabSheetTextModel>{ ...this.labsheetTextModel$.getValue(), ...labsheetTextModel });
  }

  UpdateLabSheetModel(labsheetModel: LabSheetModel) {
    this.labsheetModel$.next(<LabSheetModel>{ ...this.labsheetModel$.getValue(), ...labsheetModel });
  }

  GetLabSheet(router: Router) {
    let oldURL = router.url;
    this.UpdateLabSheetModel(<LabSheetModel>{ Working: true, Error: null });

    return this.httpClient.get<LabSheet[]>('/api/LabSheet').pipe(
      map((x: any) => {
        console.debug(`LabSheet OK. Return: ${x}`);
        this.labsheetModel$.getValue().LabSheetList = <LabSheet[]>x;
        this.UpdateLabSheetModel(this.labsheetModel$.getValue());
        this.UpdateLabSheetModel(<LabSheetModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateLabSheetModel(<LabSheetModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`LabSheet ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
