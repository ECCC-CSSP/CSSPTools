/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { LabSheetA1MeasurementTextModel, LabSheetA1MeasurementModel } from './labsheeta1measurement.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesLabSheetA1MeasurementText } from './labsheeta1measurement.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { LabSheetA1Measurement } from 'src/app/models/generated/LabSheetA1Measurement.model';

@Injectable({
  providedIn: 'root'
})
export class LabSheetA1MeasurementService {
  labsheeta1measurementTextModel$: BehaviorSubject<LabSheetA1MeasurementTextModel> = new BehaviorSubject<LabSheetA1MeasurementTextModel>(<LabSheetA1MeasurementTextModel>{});
  labsheeta1measurementModel$: BehaviorSubject<LabSheetA1MeasurementModel> = new BehaviorSubject<LabSheetA1MeasurementModel>(<LabSheetA1MeasurementModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesLabSheetA1MeasurementText(this);
    this.UpdateLabSheetA1MeasurementText(<LabSheetA1MeasurementTextModel>{ Title: "Something2 for text" });
  }

  UpdateLabSheetA1MeasurementText(labsheeta1measurementTextModel: LabSheetA1MeasurementTextModel) {
    this.labsheeta1measurementTextModel$.next(<LabSheetA1MeasurementTextModel>{ ...this.labsheeta1measurementTextModel$.getValue(), ...labsheeta1measurementTextModel });
  }

  UpdateLabSheetA1MeasurementModel(labsheeta1measurementModel: LabSheetA1MeasurementModel) {
    this.labsheeta1measurementModel$.next(<LabSheetA1MeasurementModel>{ ...this.labsheeta1measurementModel$.getValue(), ...labsheeta1measurementModel });
  }

  GetLabSheetA1Measurement(router: Router) {
    let oldURL = router.url;
    this.UpdateLabSheetA1MeasurementModel(<LabSheetA1MeasurementModel>{ Working: true, Error: null });

    return this.httpClient.get<LabSheetA1Measurement[]>('/api/LabSheetA1Measurement').pipe(
      map((x: any) => {
        console.debug(`LabSheetA1Measurement OK. Return: ${x}`);
        this.labsheeta1measurementModel$.getValue().LabSheetA1MeasurementList = <LabSheetA1Measurement[]>x;
        this.UpdateLabSheetA1MeasurementModel(this.labsheeta1measurementModel$.getValue());
        this.UpdateLabSheetA1MeasurementModel(<LabSheetA1MeasurementModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateLabSheetA1MeasurementModel(<LabSheetA1MeasurementModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`LabSheetA1Measurement ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
