/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { LabSheetA1SheetTextModel, LabSheetA1SheetModel } from './labsheeta1sheet.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesLabSheetA1SheetText } from './labsheeta1sheet.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { LabSheetA1Sheet } from 'src/app/models/generated/LabSheetA1Sheet.model';

@Injectable({
  providedIn: 'root'
})
export class LabSheetA1SheetService {
  labsheeta1sheetTextModel$: BehaviorSubject<LabSheetA1SheetTextModel> = new BehaviorSubject<LabSheetA1SheetTextModel>(<LabSheetA1SheetTextModel>{});
  labsheeta1sheetModel$: BehaviorSubject<LabSheetA1SheetModel> = new BehaviorSubject<LabSheetA1SheetModel>(<LabSheetA1SheetModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesLabSheetA1SheetText(this);
    this.UpdateLabSheetA1SheetText(<LabSheetA1SheetTextModel>{ Title: "Something2 for text" });
  }

  UpdateLabSheetA1SheetText(labsheeta1sheetTextModel: LabSheetA1SheetTextModel) {
    this.labsheeta1sheetTextModel$.next(<LabSheetA1SheetTextModel>{ ...this.labsheeta1sheetTextModel$.getValue(), ...labsheeta1sheetTextModel });
  }

  UpdateLabSheetA1SheetModel(labsheeta1sheetModel: LabSheetA1SheetModel) {
    this.labsheeta1sheetModel$.next(<LabSheetA1SheetModel>{ ...this.labsheeta1sheetModel$.getValue(), ...labsheeta1sheetModel });
  }

  GetLabSheetA1Sheet(router: Router) {
    let oldURL = router.url;
    this.UpdateLabSheetA1SheetModel(<LabSheetA1SheetModel>{ Working: true, Error: null });

    return this.httpClient.get<LabSheetA1Sheet[]>('/api/LabSheetA1Sheet').pipe(
      map((x: any) => {
        console.debug(`LabSheetA1Sheet OK. Return: ${x}`);
        this.labsheeta1sheetModel$.getValue().LabSheetA1SheetList = <LabSheetA1Sheet[]>x;
        this.UpdateLabSheetA1SheetModel(this.labsheeta1sheetModel$.getValue());
        this.UpdateLabSheetA1SheetModel(<LabSheetA1SheetModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateLabSheetA1SheetModel(<LabSheetA1SheetModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`LabSheetA1Sheet ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
