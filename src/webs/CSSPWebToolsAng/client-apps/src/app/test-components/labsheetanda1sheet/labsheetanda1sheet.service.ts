/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { LabSheetAndA1SheetTextModel, LabSheetAndA1SheetModel } from './labsheetanda1sheet.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesLabSheetAndA1SheetText } from './labsheetanda1sheet.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { LabSheetAndA1Sheet } from 'src/app/models/generated/LabSheetAndA1Sheet.model';

@Injectable({
  providedIn: 'root'
})
export class LabSheetAndA1SheetService {
  labsheetanda1sheetTextModel$: BehaviorSubject<LabSheetAndA1SheetTextModel> = new BehaviorSubject<LabSheetAndA1SheetTextModel>(<LabSheetAndA1SheetTextModel>{});
  labsheetanda1sheetModel$: BehaviorSubject<LabSheetAndA1SheetModel> = new BehaviorSubject<LabSheetAndA1SheetModel>(<LabSheetAndA1SheetModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesLabSheetAndA1SheetText(this);
    this.UpdateLabSheetAndA1SheetText(<LabSheetAndA1SheetTextModel>{ Title: "Something2 for text" });
  }

  UpdateLabSheetAndA1SheetText(labsheetanda1sheetTextModel: LabSheetAndA1SheetTextModel) {
    this.labsheetanda1sheetTextModel$.next(<LabSheetAndA1SheetTextModel>{ ...this.labsheetanda1sheetTextModel$.getValue(), ...labsheetanda1sheetTextModel });
  }

  UpdateLabSheetAndA1SheetModel(labsheetanda1sheetModel: LabSheetAndA1SheetModel) {
    this.labsheetanda1sheetModel$.next(<LabSheetAndA1SheetModel>{ ...this.labsheetanda1sheetModel$.getValue(), ...labsheetanda1sheetModel });
  }

  GetLabSheetAndA1Sheet(router: Router) {
    let oldURL = router.url;
    this.UpdateLabSheetAndA1SheetModel(<LabSheetAndA1SheetModel>{ Working: true, Error: null });

    return this.httpClient.get<LabSheetAndA1Sheet[]>('/api/LabSheetAndA1Sheet').pipe(
      map((x: any) => {
        console.debug(`LabSheetAndA1Sheet OK. Return: ${x}`);
        this.labsheetanda1sheetModel$.getValue().LabSheetAndA1SheetList = <LabSheetAndA1Sheet[]>x;
        this.UpdateLabSheetAndA1SheetModel(this.labsheetanda1sheetModel$.getValue());
        this.UpdateLabSheetAndA1SheetModel(<LabSheetAndA1SheetModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateLabSheetAndA1SheetModel(<LabSheetAndA1SheetModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`LabSheetAndA1Sheet ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
