/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { LatLngTextModel, LatLngModel } from './latlng.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesLatLngText } from './latlng.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { LatLng } from 'src/app/models/generated/LatLng.model';

@Injectable({
  providedIn: 'root'
})
export class LatLngService {
  latlngTextModel$: BehaviorSubject<LatLngTextModel> = new BehaviorSubject<LatLngTextModel>(<LatLngTextModel>{});
  latlngModel$: BehaviorSubject<LatLngModel> = new BehaviorSubject<LatLngModel>(<LatLngModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesLatLngText(this);
    this.UpdateLatLngText(<LatLngTextModel>{ Title: "Something2 for text" });
  }

  UpdateLatLngText(latlngTextModel: LatLngTextModel) {
    this.latlngTextModel$.next(<LatLngTextModel>{ ...this.latlngTextModel$.getValue(), ...latlngTextModel });
  }

  UpdateLatLngModel(latlngModel: LatLngModel) {
    this.latlngModel$.next(<LatLngModel>{ ...this.latlngModel$.getValue(), ...latlngModel });
  }

  GetLatLng(router: Router) {
    let oldURL = router.url;
    this.UpdateLatLngModel(<LatLngModel>{ Working: true, Error: null });

    return this.httpClient.get<LatLng[]>('/api/LatLng').pipe(
      map((x: any) => {
        console.debug(`LatLng OK. Return: ${x}`);
        this.latlngModel$.getValue().LatLngList = <LatLng[]>x;
        this.UpdateLatLngModel(this.latlngModel$.getValue());
        this.UpdateLatLngModel(<LatLngModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateLatLngModel(<LatLngModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`LatLng ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
