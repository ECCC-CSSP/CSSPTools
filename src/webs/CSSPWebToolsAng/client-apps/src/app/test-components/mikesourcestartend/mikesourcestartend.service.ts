/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { MikeSourceStartEndTextModel, MikeSourceStartEndModel } from './mikesourcestartend.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesMikeSourceStartEndText } from './mikesourcestartend.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { MikeSourceStartEnd } from 'src/app/models/generated/MikeSourceStartEnd.model';

@Injectable({
  providedIn: 'root'
})
export class MikeSourceStartEndService {
  mikesourcestartendTextModel$: BehaviorSubject<MikeSourceStartEndTextModel> = new BehaviorSubject<MikeSourceStartEndTextModel>(<MikeSourceStartEndTextModel>{});
  mikesourcestartendModel$: BehaviorSubject<MikeSourceStartEndModel> = new BehaviorSubject<MikeSourceStartEndModel>(<MikeSourceStartEndModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesMikeSourceStartEndText(this);
    this.UpdateMikeSourceStartEndText(<MikeSourceStartEndTextModel>{ Title: "Something2 for text" });
  }

  UpdateMikeSourceStartEndText(mikesourcestartendTextModel: MikeSourceStartEndTextModel) {
    this.mikesourcestartendTextModel$.next(<MikeSourceStartEndTextModel>{ ...this.mikesourcestartendTextModel$.getValue(), ...mikesourcestartendTextModel });
  }

  UpdateMikeSourceStartEndModel(mikesourcestartendModel: MikeSourceStartEndModel) {
    this.mikesourcestartendModel$.next(<MikeSourceStartEndModel>{ ...this.mikesourcestartendModel$.getValue(), ...mikesourcestartendModel });
  }

  GetMikeSourceStartEnd(router: Router) {
    let oldURL = router.url;
    this.UpdateMikeSourceStartEndModel(<MikeSourceStartEndModel>{ Working: true, Error: null });

    return this.httpClient.get<MikeSourceStartEnd[]>('/api/MikeSourceStartEnd').pipe(
      map((x: any) => {
        console.debug(`MikeSourceStartEnd OK. Return: ${x}`);
        this.mikesourcestartendModel$.getValue().MikeSourceStartEndList = <MikeSourceStartEnd[]>x;
        this.UpdateMikeSourceStartEndModel(this.mikesourcestartendModel$.getValue());
        this.UpdateMikeSourceStartEndModel(<MikeSourceStartEndModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateMikeSourceStartEndModel(<MikeSourceStartEndModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`MikeSourceStartEnd ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
