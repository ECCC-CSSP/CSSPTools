/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { MWQMAnalysisReportParameterTextModel, MWQMAnalysisReportParameterModel } from './mwqmanalysisreportparameter.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesMWQMAnalysisReportParameterText } from './mwqmanalysisreportparameter.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { MWQMAnalysisReportParameter } from 'src/app/models/generated/MWQMAnalysisReportParameter.model';

@Injectable({
  providedIn: 'root'
})
export class MWQMAnalysisReportParameterService {
  mwqmanalysisreportparameterTextModel$: BehaviorSubject<MWQMAnalysisReportParameterTextModel> = new BehaviorSubject<MWQMAnalysisReportParameterTextModel>(<MWQMAnalysisReportParameterTextModel>{});
  mwqmanalysisreportparameterModel$: BehaviorSubject<MWQMAnalysisReportParameterModel> = new BehaviorSubject<MWQMAnalysisReportParameterModel>(<MWQMAnalysisReportParameterModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesMWQMAnalysisReportParameterText(this);
    this.UpdateMWQMAnalysisReportParameterText(<MWQMAnalysisReportParameterTextModel>{ Title: "Something2 for text" });
  }

  UpdateMWQMAnalysisReportParameterText(mwqmanalysisreportparameterTextModel: MWQMAnalysisReportParameterTextModel) {
    this.mwqmanalysisreportparameterTextModel$.next(<MWQMAnalysisReportParameterTextModel>{ ...this.mwqmanalysisreportparameterTextModel$.getValue(), ...mwqmanalysisreportparameterTextModel });
  }

  UpdateMWQMAnalysisReportParameterModel(mwqmanalysisreportparameterModel: MWQMAnalysisReportParameterModel) {
    this.mwqmanalysisreportparameterModel$.next(<MWQMAnalysisReportParameterModel>{ ...this.mwqmanalysisreportparameterModel$.getValue(), ...mwqmanalysisreportparameterModel });
  }

  GetMWQMAnalysisReportParameter(router: Router) {
    let oldURL = router.url;
    this.UpdateMWQMAnalysisReportParameterModel(<MWQMAnalysisReportParameterModel>{ Working: true, Error: null });

    return this.httpClient.get<MWQMAnalysisReportParameter[]>('/api/MWQMAnalysisReportParameter').pipe(
      map((x: any) => {
        console.debug(`MWQMAnalysisReportParameter OK. Return: ${x}`);
        this.mwqmanalysisreportparameterModel$.getValue().MWQMAnalysisReportParameterList = <MWQMAnalysisReportParameter[]>x;
        this.UpdateMWQMAnalysisReportParameterModel(this.mwqmanalysisreportparameterModel$.getValue());
        this.UpdateMWQMAnalysisReportParameterModel(<MWQMAnalysisReportParameterModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateMWQMAnalysisReportParameterModel(<MWQMAnalysisReportParameterModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`MWQMAnalysisReportParameter ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
