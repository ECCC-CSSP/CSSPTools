/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { MWQMSampleDuplicateItemTextModel, MWQMSampleDuplicateItemModel } from './mwqmsampleduplicateitem.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesMWQMSampleDuplicateItemText } from './mwqmsampleduplicateitem.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { MWQMSampleDuplicateItem } from 'src/app/models/generated/MWQMSampleDuplicateItem.model';

@Injectable({
  providedIn: 'root'
})
export class MWQMSampleDuplicateItemService {
  mwqmsampleduplicateitemTextModel$: BehaviorSubject<MWQMSampleDuplicateItemTextModel> = new BehaviorSubject<MWQMSampleDuplicateItemTextModel>(<MWQMSampleDuplicateItemTextModel>{});
  mwqmsampleduplicateitemModel$: BehaviorSubject<MWQMSampleDuplicateItemModel> = new BehaviorSubject<MWQMSampleDuplicateItemModel>(<MWQMSampleDuplicateItemModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesMWQMSampleDuplicateItemText(this);
    this.UpdateMWQMSampleDuplicateItemText(<MWQMSampleDuplicateItemTextModel>{ Title: "Something2 for text" });
  }

  UpdateMWQMSampleDuplicateItemText(mwqmsampleduplicateitemTextModel: MWQMSampleDuplicateItemTextModel) {
    this.mwqmsampleduplicateitemTextModel$.next(<MWQMSampleDuplicateItemTextModel>{ ...this.mwqmsampleduplicateitemTextModel$.getValue(), ...mwqmsampleduplicateitemTextModel });
  }

  UpdateMWQMSampleDuplicateItemModel(mwqmsampleduplicateitemModel: MWQMSampleDuplicateItemModel) {
    this.mwqmsampleduplicateitemModel$.next(<MWQMSampleDuplicateItemModel>{ ...this.mwqmsampleduplicateitemModel$.getValue(), ...mwqmsampleduplicateitemModel });
  }

  GetMWQMSampleDuplicateItem(router: Router) {
    let oldURL = router.url;
    this.UpdateMWQMSampleDuplicateItemModel(<MWQMSampleDuplicateItemModel>{ Working: true, Error: null });

    return this.httpClient.get<MWQMSampleDuplicateItem[]>('/api/MWQMSampleDuplicateItem').pipe(
      map((x: any) => {
        console.debug(`MWQMSampleDuplicateItem OK. Return: ${x}`);
        this.mwqmsampleduplicateitemModel$.getValue().MWQMSampleDuplicateItemList = <MWQMSampleDuplicateItem[]>x;
        this.UpdateMWQMSampleDuplicateItemModel(this.mwqmsampleduplicateitemModel$.getValue());
        this.UpdateMWQMSampleDuplicateItemModel(<MWQMSampleDuplicateItemModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateMWQMSampleDuplicateItemModel(<MWQMSampleDuplicateItemModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`MWQMSampleDuplicateItem ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
