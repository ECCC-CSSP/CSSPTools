/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { MWQMSampleLanguageTextModel, MWQMSampleLanguageModel } from './mwqmsamplelanguage.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesMWQMSampleLanguageText } from './mwqmsamplelanguage.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { MWQMSampleLanguage } from 'src/app/models/generated/MWQMSampleLanguage.model';

@Injectable({
  providedIn: 'root'
})
export class MWQMSampleLanguageService {
  mwqmsamplelanguageTextModel$: BehaviorSubject<MWQMSampleLanguageTextModel> = new BehaviorSubject<MWQMSampleLanguageTextModel>(<MWQMSampleLanguageTextModel>{});
  mwqmsamplelanguageModel$: BehaviorSubject<MWQMSampleLanguageModel> = new BehaviorSubject<MWQMSampleLanguageModel>(<MWQMSampleLanguageModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesMWQMSampleLanguageText(this);
    this.UpdateMWQMSampleLanguageText(<MWQMSampleLanguageTextModel>{ Title: "Something2 for text" });
  }

  UpdateMWQMSampleLanguageText(mwqmsamplelanguageTextModel: MWQMSampleLanguageTextModel) {
    this.mwqmsamplelanguageTextModel$.next(<MWQMSampleLanguageTextModel>{ ...this.mwqmsamplelanguageTextModel$.getValue(), ...mwqmsamplelanguageTextModel });
  }

  UpdateMWQMSampleLanguageModel(mwqmsamplelanguageModel: MWQMSampleLanguageModel) {
    this.mwqmsamplelanguageModel$.next(<MWQMSampleLanguageModel>{ ...this.mwqmsamplelanguageModel$.getValue(), ...mwqmsamplelanguageModel });
  }

  GetMWQMSampleLanguage(router: Router) {
    let oldURL = router.url;
    this.UpdateMWQMSampleLanguageModel(<MWQMSampleLanguageModel>{ Working: true, Error: null });

    return this.httpClient.get<MWQMSampleLanguage[]>('/api/MWQMSampleLanguage').pipe(
      map((x: any) => {
        console.debug(`MWQMSampleLanguage OK. Return: ${x}`);
        this.mwqmsamplelanguageModel$.getValue().MWQMSampleLanguageList = <MWQMSampleLanguage[]>x;
        this.UpdateMWQMSampleLanguageModel(this.mwqmsamplelanguageModel$.getValue());
        this.UpdateMWQMSampleLanguageModel(<MWQMSampleLanguageModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateMWQMSampleLanguageModel(<MWQMSampleLanguageModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`MWQMSampleLanguage ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
