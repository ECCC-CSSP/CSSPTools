/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { PolSourceGroupingTextModel, PolSourceGroupingModel } from './polsourcegrouping.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesPolSourceGroupingText } from './polsourcegrouping.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { PolSourceGrouping } from 'src/app/models/generated/PolSourceGrouping.model';

@Injectable({
  providedIn: 'root'
})
export class PolSourceGroupingService {
  polsourcegroupingTextModel$: BehaviorSubject<PolSourceGroupingTextModel> = new BehaviorSubject<PolSourceGroupingTextModel>(<PolSourceGroupingTextModel>{});
  polsourcegroupingModel$: BehaviorSubject<PolSourceGroupingModel> = new BehaviorSubject<PolSourceGroupingModel>(<PolSourceGroupingModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesPolSourceGroupingText(this);
    this.UpdatePolSourceGroupingText(<PolSourceGroupingTextModel>{ Title: "Something2 for text" });
  }

  UpdatePolSourceGroupingText(polsourcegroupingTextModel: PolSourceGroupingTextModel) {
    this.polsourcegroupingTextModel$.next(<PolSourceGroupingTextModel>{ ...this.polsourcegroupingTextModel$.getValue(), ...polsourcegroupingTextModel });
  }

  UpdatePolSourceGroupingModel(polsourcegroupingModel: PolSourceGroupingModel) {
    this.polsourcegroupingModel$.next(<PolSourceGroupingModel>{ ...this.polsourcegroupingModel$.getValue(), ...polsourcegroupingModel });
  }

  GetPolSourceGrouping(router: Router) {
    let oldURL = router.url;
    this.UpdatePolSourceGroupingModel(<PolSourceGroupingModel>{ Working: true, Error: null });

    return this.httpClient.get<PolSourceGrouping[]>('/api/PolSourceGrouping').pipe(
      map((x: any) => {
        console.debug(`PolSourceGrouping OK. Return: ${x}`);
        this.polsourcegroupingModel$.getValue().PolSourceGroupingList = <PolSourceGrouping[]>x;
        this.UpdatePolSourceGroupingModel(this.polsourcegroupingModel$.getValue());
        this.UpdatePolSourceGroupingModel(<PolSourceGroupingModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdatePolSourceGroupingModel(<PolSourceGroupingModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`PolSourceGrouping ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
