/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { PolSourceGroupingLanguageTextModel, PolSourceGroupingLanguageModel } from './polsourcegroupinglanguage.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesPolSourceGroupingLanguageText } from './polsourcegroupinglanguage.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { PolSourceGroupingLanguage } from 'src/app/models/generated/PolSourceGroupingLanguage.model';

@Injectable({
  providedIn: 'root'
})
export class PolSourceGroupingLanguageService {
  polsourcegroupinglanguageTextModel$: BehaviorSubject<PolSourceGroupingLanguageTextModel> = new BehaviorSubject<PolSourceGroupingLanguageTextModel>(<PolSourceGroupingLanguageTextModel>{});
  polsourcegroupinglanguageModel$: BehaviorSubject<PolSourceGroupingLanguageModel> = new BehaviorSubject<PolSourceGroupingLanguageModel>(<PolSourceGroupingLanguageModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesPolSourceGroupingLanguageText(this);
    this.UpdatePolSourceGroupingLanguageText(<PolSourceGroupingLanguageTextModel>{ Title: "Something2 for text" });
  }

  UpdatePolSourceGroupingLanguageText(polsourcegroupinglanguageTextModel: PolSourceGroupingLanguageTextModel) {
    this.polsourcegroupinglanguageTextModel$.next(<PolSourceGroupingLanguageTextModel>{ ...this.polsourcegroupinglanguageTextModel$.getValue(), ...polsourcegroupinglanguageTextModel });
  }

  UpdatePolSourceGroupingLanguageModel(polsourcegroupinglanguageModel: PolSourceGroupingLanguageModel) {
    this.polsourcegroupinglanguageModel$.next(<PolSourceGroupingLanguageModel>{ ...this.polsourcegroupinglanguageModel$.getValue(), ...polsourcegroupinglanguageModel });
  }

  GetPolSourceGroupingLanguage(router: Router) {
    let oldURL = router.url;
    this.UpdatePolSourceGroupingLanguageModel(<PolSourceGroupingLanguageModel>{ Working: true, Error: null });

    return this.httpClient.get<PolSourceGroupingLanguage[]>('/api/PolSourceGroupingLanguage').pipe(
      map((x: any) => {
        console.debug(`PolSourceGroupingLanguage OK. Return: ${x}`);
        this.polsourcegroupinglanguageModel$.getValue().PolSourceGroupingLanguageList = <PolSourceGroupingLanguage[]>x;
        this.UpdatePolSourceGroupingLanguageModel(this.polsourcegroupinglanguageModel$.getValue());
        this.UpdatePolSourceGroupingLanguageModel(<PolSourceGroupingLanguageModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdatePolSourceGroupingLanguageModel(<PolSourceGroupingLanguageModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`PolSourceGroupingLanguage ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
