/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { PolSourceInactiveReasonEnumTextAndIDTextModel, PolSourceInactiveReasonEnumTextAndIDModel } from './polsourceinactivereasonenumtextandid.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesPolSourceInactiveReasonEnumTextAndIDText } from './polsourceinactivereasonenumtextandid.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { PolSourceInactiveReasonEnumTextAndID } from 'src/app/models/generated/PolSourceInactiveReasonEnumTextAndID.model';

@Injectable({
  providedIn: 'root'
})
export class PolSourceInactiveReasonEnumTextAndIDService {
  polsourceinactivereasonenumtextandidTextModel$: BehaviorSubject<PolSourceInactiveReasonEnumTextAndIDTextModel> = new BehaviorSubject<PolSourceInactiveReasonEnumTextAndIDTextModel>(<PolSourceInactiveReasonEnumTextAndIDTextModel>{});
  polsourceinactivereasonenumtextandidModel$: BehaviorSubject<PolSourceInactiveReasonEnumTextAndIDModel> = new BehaviorSubject<PolSourceInactiveReasonEnumTextAndIDModel>(<PolSourceInactiveReasonEnumTextAndIDModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesPolSourceInactiveReasonEnumTextAndIDText(this);
    this.UpdatePolSourceInactiveReasonEnumTextAndIDText(<PolSourceInactiveReasonEnumTextAndIDTextModel>{ Title: "Something2 for text" });
  }

  UpdatePolSourceInactiveReasonEnumTextAndIDText(polsourceinactivereasonenumtextandidTextModel: PolSourceInactiveReasonEnumTextAndIDTextModel) {
    this.polsourceinactivereasonenumtextandidTextModel$.next(<PolSourceInactiveReasonEnumTextAndIDTextModel>{ ...this.polsourceinactivereasonenumtextandidTextModel$.getValue(), ...polsourceinactivereasonenumtextandidTextModel });
  }

  UpdatePolSourceInactiveReasonEnumTextAndIDModel(polsourceinactivereasonenumtextandidModel: PolSourceInactiveReasonEnumTextAndIDModel) {
    this.polsourceinactivereasonenumtextandidModel$.next(<PolSourceInactiveReasonEnumTextAndIDModel>{ ...this.polsourceinactivereasonenumtextandidModel$.getValue(), ...polsourceinactivereasonenumtextandidModel });
  }

  GetPolSourceInactiveReasonEnumTextAndID(router: Router) {
    let oldURL = router.url;
    this.UpdatePolSourceInactiveReasonEnumTextAndIDModel(<PolSourceInactiveReasonEnumTextAndIDModel>{ Working: true, Error: null });

    return this.httpClient.get<PolSourceInactiveReasonEnumTextAndID[]>('/api/PolSourceInactiveReasonEnumTextAndID').pipe(
      map((x: any) => {
        console.debug(`PolSourceInactiveReasonEnumTextAndID OK. Return: ${x}`);
        this.polsourceinactivereasonenumtextandidModel$.getValue().PolSourceInactiveReasonEnumTextAndIDList = <PolSourceInactiveReasonEnumTextAndID[]>x;
        this.UpdatePolSourceInactiveReasonEnumTextAndIDModel(this.polsourceinactivereasonenumtextandidModel$.getValue());
        this.UpdatePolSourceInactiveReasonEnumTextAndIDModel(<PolSourceInactiveReasonEnumTextAndIDModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdatePolSourceInactiveReasonEnumTextAndIDModel(<PolSourceInactiveReasonEnumTextAndIDModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`PolSourceInactiveReasonEnumTextAndID ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
