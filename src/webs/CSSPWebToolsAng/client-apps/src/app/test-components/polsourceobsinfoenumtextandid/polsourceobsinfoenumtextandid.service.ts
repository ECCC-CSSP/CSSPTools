/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { PolSourceObsInfoEnumTextAndIDTextModel, PolSourceObsInfoEnumTextAndIDModel } from './polsourceobsinfoenumtextandid.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesPolSourceObsInfoEnumTextAndIDText } from './polsourceobsinfoenumtextandid.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { PolSourceObsInfoEnumTextAndID } from 'src/app/models/generated/PolSourceObsInfoEnumTextAndID.model';

@Injectable({
  providedIn: 'root'
})
export class PolSourceObsInfoEnumTextAndIDService {
  polsourceobsinfoenumtextandidTextModel$: BehaviorSubject<PolSourceObsInfoEnumTextAndIDTextModel> = new BehaviorSubject<PolSourceObsInfoEnumTextAndIDTextModel>(<PolSourceObsInfoEnumTextAndIDTextModel>{});
  polsourceobsinfoenumtextandidModel$: BehaviorSubject<PolSourceObsInfoEnumTextAndIDModel> = new BehaviorSubject<PolSourceObsInfoEnumTextAndIDModel>(<PolSourceObsInfoEnumTextAndIDModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesPolSourceObsInfoEnumTextAndIDText(this);
    this.UpdatePolSourceObsInfoEnumTextAndIDText(<PolSourceObsInfoEnumTextAndIDTextModel>{ Title: "Something2 for text" });
  }

  UpdatePolSourceObsInfoEnumTextAndIDText(polsourceobsinfoenumtextandidTextModel: PolSourceObsInfoEnumTextAndIDTextModel) {
    this.polsourceobsinfoenumtextandidTextModel$.next(<PolSourceObsInfoEnumTextAndIDTextModel>{ ...this.polsourceobsinfoenumtextandidTextModel$.getValue(), ...polsourceobsinfoenumtextandidTextModel });
  }

  UpdatePolSourceObsInfoEnumTextAndIDModel(polsourceobsinfoenumtextandidModel: PolSourceObsInfoEnumTextAndIDModel) {
    this.polsourceobsinfoenumtextandidModel$.next(<PolSourceObsInfoEnumTextAndIDModel>{ ...this.polsourceobsinfoenumtextandidModel$.getValue(), ...polsourceobsinfoenumtextandidModel });
  }

  GetPolSourceObsInfoEnumTextAndID(router: Router) {
    let oldURL = router.url;
    this.UpdatePolSourceObsInfoEnumTextAndIDModel(<PolSourceObsInfoEnumTextAndIDModel>{ Working: true, Error: null });

    return this.httpClient.get<PolSourceObsInfoEnumTextAndID[]>('/api/PolSourceObsInfoEnumTextAndID').pipe(
      map((x: any) => {
        console.debug(`PolSourceObsInfoEnumTextAndID OK. Return: ${x}`);
        this.polsourceobsinfoenumtextandidModel$.getValue().PolSourceObsInfoEnumTextAndIDList = <PolSourceObsInfoEnumTextAndID[]>x;
        this.UpdatePolSourceObsInfoEnumTextAndIDModel(this.polsourceobsinfoenumtextandidModel$.getValue());
        this.UpdatePolSourceObsInfoEnumTextAndIDModel(<PolSourceObsInfoEnumTextAndIDModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdatePolSourceObsInfoEnumTextAndIDModel(<PolSourceObsInfoEnumTextAndIDModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`PolSourceObsInfoEnumTextAndID ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
