/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { PolSourceSiteEffectTextModel, PolSourceSiteEffectModel } from './polsourcesiteeffect.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesPolSourceSiteEffectText } from './polsourcesiteeffect.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { PolSourceSiteEffect } from 'src/app/models/generated/PolSourceSiteEffect.model';

@Injectable({
  providedIn: 'root'
})
export class PolSourceSiteEffectService {
  polsourcesiteeffectTextModel$: BehaviorSubject<PolSourceSiteEffectTextModel> = new BehaviorSubject<PolSourceSiteEffectTextModel>(<PolSourceSiteEffectTextModel>{});
  polsourcesiteeffectModel$: BehaviorSubject<PolSourceSiteEffectModel> = new BehaviorSubject<PolSourceSiteEffectModel>(<PolSourceSiteEffectModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesPolSourceSiteEffectText(this);
    this.UpdatePolSourceSiteEffectText(<PolSourceSiteEffectTextModel>{ Title: "Something2 for text" });
  }

  UpdatePolSourceSiteEffectText(polsourcesiteeffectTextModel: PolSourceSiteEffectTextModel) {
    this.polsourcesiteeffectTextModel$.next(<PolSourceSiteEffectTextModel>{ ...this.polsourcesiteeffectTextModel$.getValue(), ...polsourcesiteeffectTextModel });
  }

  UpdatePolSourceSiteEffectModel(polsourcesiteeffectModel: PolSourceSiteEffectModel) {
    this.polsourcesiteeffectModel$.next(<PolSourceSiteEffectModel>{ ...this.polsourcesiteeffectModel$.getValue(), ...polsourcesiteeffectModel });
  }

  GetPolSourceSiteEffect(router: Router) {
    let oldURL = router.url;
    this.UpdatePolSourceSiteEffectModel(<PolSourceSiteEffectModel>{ Working: true, Error: null });

    return this.httpClient.get<PolSourceSiteEffect[]>('/api/PolSourceSiteEffect').pipe(
      map((x: any) => {
        console.debug(`PolSourceSiteEffect OK. Return: ${x}`);
        this.polsourcesiteeffectModel$.getValue().PolSourceSiteEffectList = <PolSourceSiteEffect[]>x;
        this.UpdatePolSourceSiteEffectModel(this.polsourcesiteeffectModel$.getValue());
        this.UpdatePolSourceSiteEffectModel(<PolSourceSiteEffectModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdatePolSourceSiteEffectModel(<PolSourceSiteEffectModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`PolSourceSiteEffect ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
