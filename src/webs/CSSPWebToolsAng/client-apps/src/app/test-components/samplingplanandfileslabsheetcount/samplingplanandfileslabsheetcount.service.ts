/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { SamplingPlanAndFilesLabSheetCountTextModel, SamplingPlanAndFilesLabSheetCountModel } from './samplingplanandfileslabsheetcount.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesSamplingPlanAndFilesLabSheetCountText } from './samplingplanandfileslabsheetcount.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { SamplingPlanAndFilesLabSheetCount } from 'src/app/models/generated/SamplingPlanAndFilesLabSheetCount.model';

@Injectable({
  providedIn: 'root'
})
export class SamplingPlanAndFilesLabSheetCountService {
  samplingplanandfileslabsheetcountTextModel$: BehaviorSubject<SamplingPlanAndFilesLabSheetCountTextModel> = new BehaviorSubject<SamplingPlanAndFilesLabSheetCountTextModel>(<SamplingPlanAndFilesLabSheetCountTextModel>{});
  samplingplanandfileslabsheetcountModel$: BehaviorSubject<SamplingPlanAndFilesLabSheetCountModel> = new BehaviorSubject<SamplingPlanAndFilesLabSheetCountModel>(<SamplingPlanAndFilesLabSheetCountModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesSamplingPlanAndFilesLabSheetCountText(this);
    this.UpdateSamplingPlanAndFilesLabSheetCountText(<SamplingPlanAndFilesLabSheetCountTextModel>{ Title: "Something2 for text" });
  }

  UpdateSamplingPlanAndFilesLabSheetCountText(samplingplanandfileslabsheetcountTextModel: SamplingPlanAndFilesLabSheetCountTextModel) {
    this.samplingplanandfileslabsheetcountTextModel$.next(<SamplingPlanAndFilesLabSheetCountTextModel>{ ...this.samplingplanandfileslabsheetcountTextModel$.getValue(), ...samplingplanandfileslabsheetcountTextModel });
  }

  UpdateSamplingPlanAndFilesLabSheetCountModel(samplingplanandfileslabsheetcountModel: SamplingPlanAndFilesLabSheetCountModel) {
    this.samplingplanandfileslabsheetcountModel$.next(<SamplingPlanAndFilesLabSheetCountModel>{ ...this.samplingplanandfileslabsheetcountModel$.getValue(), ...samplingplanandfileslabsheetcountModel });
  }

  GetSamplingPlanAndFilesLabSheetCount(router: Router) {
    let oldURL = router.url;
    this.UpdateSamplingPlanAndFilesLabSheetCountModel(<SamplingPlanAndFilesLabSheetCountModel>{ Working: true, Error: null });

    return this.httpClient.get<SamplingPlanAndFilesLabSheetCount[]>('/api/SamplingPlanAndFilesLabSheetCount').pipe(
      map((x: any) => {
        console.debug(`SamplingPlanAndFilesLabSheetCount OK. Return: ${x}`);
        this.samplingplanandfileslabsheetcountModel$.getValue().SamplingPlanAndFilesLabSheetCountList = <SamplingPlanAndFilesLabSheetCount[]>x;
        this.UpdateSamplingPlanAndFilesLabSheetCountModel(this.samplingplanandfileslabsheetcountModel$.getValue());
        this.UpdateSamplingPlanAndFilesLabSheetCountModel(<SamplingPlanAndFilesLabSheetCountModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateSamplingPlanAndFilesLabSheetCountModel(<SamplingPlanAndFilesLabSheetCountModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`SamplingPlanAndFilesLabSheetCount ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
