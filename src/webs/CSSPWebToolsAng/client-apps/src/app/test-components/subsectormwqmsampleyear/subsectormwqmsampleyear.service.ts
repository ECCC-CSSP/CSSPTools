/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { SubsectorMWQMSampleYearTextModel, SubsectorMWQMSampleYearModel } from './subsectormwqmsampleyear.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesSubsectorMWQMSampleYearText } from './subsectormwqmsampleyear.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { SubsectorMWQMSampleYear } from 'src/app/models/generated/SubsectorMWQMSampleYear.model';

@Injectable({
  providedIn: 'root'
})
export class SubsectorMWQMSampleYearService {
  subsectormwqmsampleyearTextModel$: BehaviorSubject<SubsectorMWQMSampleYearTextModel> = new BehaviorSubject<SubsectorMWQMSampleYearTextModel>(<SubsectorMWQMSampleYearTextModel>{});
  subsectormwqmsampleyearModel$: BehaviorSubject<SubsectorMWQMSampleYearModel> = new BehaviorSubject<SubsectorMWQMSampleYearModel>(<SubsectorMWQMSampleYearModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesSubsectorMWQMSampleYearText(this);
    this.UpdateSubsectorMWQMSampleYearText(<SubsectorMWQMSampleYearTextModel>{ Title: "Something2 for text" });
  }

  UpdateSubsectorMWQMSampleYearText(subsectormwqmsampleyearTextModel: SubsectorMWQMSampleYearTextModel) {
    this.subsectormwqmsampleyearTextModel$.next(<SubsectorMWQMSampleYearTextModel>{ ...this.subsectormwqmsampleyearTextModel$.getValue(), ...subsectormwqmsampleyearTextModel });
  }

  UpdateSubsectorMWQMSampleYearModel(subsectormwqmsampleyearModel: SubsectorMWQMSampleYearModel) {
    this.subsectormwqmsampleyearModel$.next(<SubsectorMWQMSampleYearModel>{ ...this.subsectormwqmsampleyearModel$.getValue(), ...subsectormwqmsampleyearModel });
  }

  GetSubsectorMWQMSampleYear(router: Router) {
    let oldURL = router.url;
    this.UpdateSubsectorMWQMSampleYearModel(<SubsectorMWQMSampleYearModel>{ Working: true, Error: null });

    return this.httpClient.get<SubsectorMWQMSampleYear[]>('/api/SubsectorMWQMSampleYear').pipe(
      map((x: any) => {
        console.debug(`SubsectorMWQMSampleYear OK. Return: ${x}`);
        this.subsectormwqmsampleyearModel$.getValue().SubsectorMWQMSampleYearList = <SubsectorMWQMSampleYear[]>x;
        this.UpdateSubsectorMWQMSampleYearModel(this.subsectormwqmsampleyearModel$.getValue());
        this.UpdateSubsectorMWQMSampleYearModel(<SubsectorMWQMSampleYearModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateSubsectorMWQMSampleYearModel(<SubsectorMWQMSampleYearModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`SubsectorMWQMSampleYear ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
