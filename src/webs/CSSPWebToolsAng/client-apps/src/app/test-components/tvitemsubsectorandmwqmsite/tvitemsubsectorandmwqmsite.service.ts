/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { TVItemSubsectorAndMWQMSiteTextModel, TVItemSubsectorAndMWQMSiteModel } from './tvitemsubsectorandmwqmsite.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesTVItemSubsectorAndMWQMSiteText } from './tvitemsubsectorandmwqmsite.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { TVItemSubsectorAndMWQMSite } from 'src/app/models/generated/TVItemSubsectorAndMWQMSite.model';

@Injectable({
  providedIn: 'root'
})
export class TVItemSubsectorAndMWQMSiteService {
  tvitemsubsectorandmwqmsiteTextModel$: BehaviorSubject<TVItemSubsectorAndMWQMSiteTextModel> = new BehaviorSubject<TVItemSubsectorAndMWQMSiteTextModel>(<TVItemSubsectorAndMWQMSiteTextModel>{});
  tvitemsubsectorandmwqmsiteModel$: BehaviorSubject<TVItemSubsectorAndMWQMSiteModel> = new BehaviorSubject<TVItemSubsectorAndMWQMSiteModel>(<TVItemSubsectorAndMWQMSiteModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesTVItemSubsectorAndMWQMSiteText(this);
    this.UpdateTVItemSubsectorAndMWQMSiteText(<TVItemSubsectorAndMWQMSiteTextModel>{ Title: "Something2 for text" });
  }

  UpdateTVItemSubsectorAndMWQMSiteText(tvitemsubsectorandmwqmsiteTextModel: TVItemSubsectorAndMWQMSiteTextModel) {
    this.tvitemsubsectorandmwqmsiteTextModel$.next(<TVItemSubsectorAndMWQMSiteTextModel>{ ...this.tvitemsubsectorandmwqmsiteTextModel$.getValue(), ...tvitemsubsectorandmwqmsiteTextModel });
  }

  UpdateTVItemSubsectorAndMWQMSiteModel(tvitemsubsectorandmwqmsiteModel: TVItemSubsectorAndMWQMSiteModel) {
    this.tvitemsubsectorandmwqmsiteModel$.next(<TVItemSubsectorAndMWQMSiteModel>{ ...this.tvitemsubsectorandmwqmsiteModel$.getValue(), ...tvitemsubsectorandmwqmsiteModel });
  }

  GetTVItemSubsectorAndMWQMSite(router: Router) {
    let oldURL = router.url;
    this.UpdateTVItemSubsectorAndMWQMSiteModel(<TVItemSubsectorAndMWQMSiteModel>{ Working: true, Error: null });

    return this.httpClient.get<TVItemSubsectorAndMWQMSite[]>('/api/TVItemSubsectorAndMWQMSite').pipe(
      map((x: any) => {
        console.debug(`TVItemSubsectorAndMWQMSite OK. Return: ${x}`);
        this.tvitemsubsectorandmwqmsiteModel$.getValue().TVItemSubsectorAndMWQMSiteList = <TVItemSubsectorAndMWQMSite[]>x;
        this.UpdateTVItemSubsectorAndMWQMSiteModel(this.tvitemsubsectorandmwqmsiteModel$.getValue());
        this.UpdateTVItemSubsectorAndMWQMSiteModel(<TVItemSubsectorAndMWQMSiteModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateTVItemSubsectorAndMWQMSiteModel(<TVItemSubsectorAndMWQMSiteModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`TVItemSubsectorAndMWQMSite ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
