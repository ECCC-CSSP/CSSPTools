/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { TVTypeNamesAndPathTextModel, TVTypeNamesAndPathModel } from './tvtypenamesandpath.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesTVTypeNamesAndPathText } from './tvtypenamesandpath.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { TVTypeNamesAndPath } from 'src/app/models/generated/TVTypeNamesAndPath.model';

@Injectable({
  providedIn: 'root'
})
export class TVTypeNamesAndPathService {
  tvtypenamesandpathTextModel$: BehaviorSubject<TVTypeNamesAndPathTextModel> = new BehaviorSubject<TVTypeNamesAndPathTextModel>(<TVTypeNamesAndPathTextModel>{});
  tvtypenamesandpathModel$: BehaviorSubject<TVTypeNamesAndPathModel> = new BehaviorSubject<TVTypeNamesAndPathModel>(<TVTypeNamesAndPathModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesTVTypeNamesAndPathText(this);
    this.UpdateTVTypeNamesAndPathText(<TVTypeNamesAndPathTextModel>{ Title: "Something2 for text" });
  }

  UpdateTVTypeNamesAndPathText(tvtypenamesandpathTextModel: TVTypeNamesAndPathTextModel) {
    this.tvtypenamesandpathTextModel$.next(<TVTypeNamesAndPathTextModel>{ ...this.tvtypenamesandpathTextModel$.getValue(), ...tvtypenamesandpathTextModel });
  }

  UpdateTVTypeNamesAndPathModel(tvtypenamesandpathModel: TVTypeNamesAndPathModel) {
    this.tvtypenamesandpathModel$.next(<TVTypeNamesAndPathModel>{ ...this.tvtypenamesandpathModel$.getValue(), ...tvtypenamesandpathModel });
  }

  GetTVTypeNamesAndPath(router: Router) {
    let oldURL = router.url;
    this.UpdateTVTypeNamesAndPathModel(<TVTypeNamesAndPathModel>{ Working: true, Error: null });

    return this.httpClient.get<TVTypeNamesAndPath[]>('/api/TVTypeNamesAndPath').pipe(
      map((x: any) => {
        console.debug(`TVTypeNamesAndPath OK. Return: ${x}`);
        this.tvtypenamesandpathModel$.getValue().TVTypeNamesAndPathList = <TVTypeNamesAndPath[]>x;
        this.UpdateTVTypeNamesAndPathModel(this.tvtypenamesandpathModel$.getValue());
        this.UpdateTVTypeNamesAndPathModel(<TVTypeNamesAndPathModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateTVTypeNamesAndPathModel(<TVTypeNamesAndPathModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`TVTypeNamesAndPath ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
