/*
 * Auto generated from C:\CSSPTools\src\codegen\AngularComponentsGenerated\bin\Debug\netcoreapp3.1\AngularComponentsGenerated.exe
 *
 * Do not edit this file.
 *
 */

import { Injectable } from '@angular/core';
import { TVTypeUserAuthorizationTextModel, TVTypeUserAuthorizationModel } from './tvtypeuserauthorization.models';
import { BehaviorSubject, of } from 'rxjs';
import { LoadLocalesTVTypeUserAuthorizationText } from './tvtypeuserauthorization.locales';
import { Router } from '@angular/router';
import { HttpClient, HttpErrorResponse } from '@angular/common/http';
import { map, catchError } from 'rxjs/operators';
import { TVTypeUserAuthorization } from 'src/app/models/generated/TVTypeUserAuthorization.model';

@Injectable({
  providedIn: 'root'
})
export class TVTypeUserAuthorizationService {
  tvtypeuserauthorizationTextModel$: BehaviorSubject<TVTypeUserAuthorizationTextModel> = new BehaviorSubject<TVTypeUserAuthorizationTextModel>(<TVTypeUserAuthorizationTextModel>{});
  tvtypeuserauthorizationModel$: BehaviorSubject<TVTypeUserAuthorizationModel> = new BehaviorSubject<TVTypeUserAuthorizationModel>(<TVTypeUserAuthorizationModel>{});

  constructor(private httpClient: HttpClient) {
    LoadLocalesTVTypeUserAuthorizationText(this);
    this.UpdateTVTypeUserAuthorizationText(<TVTypeUserAuthorizationTextModel>{ Title: "Something2 for text" });
  }

  UpdateTVTypeUserAuthorizationText(tvtypeuserauthorizationTextModel: TVTypeUserAuthorizationTextModel) {
    this.tvtypeuserauthorizationTextModel$.next(<TVTypeUserAuthorizationTextModel>{ ...this.tvtypeuserauthorizationTextModel$.getValue(), ...tvtypeuserauthorizationTextModel });
  }

  UpdateTVTypeUserAuthorizationModel(tvtypeuserauthorizationModel: TVTypeUserAuthorizationModel) {
    this.tvtypeuserauthorizationModel$.next(<TVTypeUserAuthorizationModel>{ ...this.tvtypeuserauthorizationModel$.getValue(), ...tvtypeuserauthorizationModel });
  }

  GetTVTypeUserAuthorization(router: Router) {
    let oldURL = router.url;
    this.UpdateTVTypeUserAuthorizationModel(<TVTypeUserAuthorizationModel>{ Working: true, Error: null });

    return this.httpClient.get<TVTypeUserAuthorization[]>('/api/TVTypeUserAuthorization').pipe(
      map((x: any) => {
        console.debug(`TVTypeUserAuthorization OK. Return: ${x}`);
        this.tvtypeuserauthorizationModel$.getValue().TVTypeUserAuthorizationList = <TVTypeUserAuthorization[]>x;
        this.UpdateTVTypeUserAuthorizationModel(this.tvtypeuserauthorizationModel$.getValue());
        this.UpdateTVTypeUserAuthorizationModel(<TVTypeUserAuthorizationModel>{ Working: false, Error: null });
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      }),
      catchError(e => of(e).pipe(map(e => {
        this.UpdateTVTypeUserAuthorizationModel(<TVTypeUserAuthorizationModel>{ Working: false, Error: <HttpErrorResponse>e });
        console.debug(`TVTypeUserAuthorization ERROR. Return: ${<HttpErrorResponse>e}`);
        router.navigateByUrl('', { skipLocationChange: true }).then(() => {
          router.navigate([`/${oldURL}`]);
        });
      })))
    );
  }
}
