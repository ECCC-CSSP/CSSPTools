{"version":3,"sources":["webpack:///src/app/components/subsector/subsector-item/subsector-item.component.ts","webpack:///src/app/components/subsector/subsector-item/subsector-item.component.html","webpack:///src/app/services/helpers/date-format.service.ts","webpack:///src/app/services/helpers/file-icon.service.ts","webpack:///src/app/enums/generated/MapInfoDrawTypeEnum.ts","webpack:///src/app/components/mwqm-site/mwqm-site-tvitem-list-item-special/mwqm-site-tvitem-list-item-special.component.ts","webpack:///src/app/components/mwqm-site/mwqm-site-tvitem-list-item-special/mwqm-site-tvitem-list-item-special.component.html","webpack:///src/app/services/helpers/predicate-desc-by.service.ts","webpack:///src/app/services/loaders/web-all-report-types.service.ts","webpack:///src/app/components/country/country-item/country-item.component.ts","webpack:///src/app/components/country/country-item/country-item.component.html","webpack:///src/app/services/helpers/file-download.service.ts","webpack:///src/app/components/country/country-item-view/country-item-view.component.ts","webpack:///src/app/components/country/country-item-view/country-item-view.component.html","webpack:///src/app/enums/generated/RootSubComponentEnum.ts","webpack:///src/app/services/loaders/web-country.service.ts","webpack:///src/app/components/area/area-tvitem-list-item/area-tvitem-list-item.component.ts","webpack:///src/app/components/area/area-tvitem-list-item/area-tvitem-list-item.component.html","webpack:///src/app/components/map/map-item/map-item.component.ts","webpack:///src/app/components/map/map-item/map-item.component.html","webpack:///src/app/components/mike-scenario/mike-scenario-item-edit/mike-scenario-item-edit.component.html","webpack:///src/app/components/mike-scenario/mike-scenario-item-edit/mike-scenario-item-edit.component.ts","webpack:///src/app/models/generated/web/WebProvince.model.ts","webpack:///src/app/services/helpers/show-tvfile.service.ts","webpack:///src/app/components/province/province-tvitem-list-detail/province-tvitem-list-detail.component.ts","webpack:///src/app/components/province/province-tvitem-list-detail/province-tvitem-list-detail.component.html","webpack:///src/app/services/loaders/file.service.ts","webpack:///src/app/components/pol-source-site/pol-source-site-tvitem-list-detail/pol-source-site-tvitem-list-detail.component.ts","webpack:///src/app/components/pol-source-site/pol-source-site-tvitem-list-detail/pol-source-site-tvitem-list-detail.component.html","webpack:///src/app/components/helpers/search/search.component.ts","webpack:///src/app/components/helpers/search/search.component.html","webpack:///src/app/components/sector/sector-tvitem-list-item/sector-tvitem-list-item.component.ts","webpack:///src/app/components/sector/sector-tvitem-list-item/sector-tvitem-list-item.component.html","webpack:///src/app/services/loaders/web-mwqm-runs.service.ts","webpack:///src/app/enums/generated/ClassificationTypeEnum.ts","webpack:///src/app/services/app-state.service.ts","webpack:///src/app/services/helpers/analysis.service.ts","webpack:///src/app/components/pol-source-site/pol-source-site-item-view/pol-source-site-item-view.component.html","webpack:///src/app/components/pol-source-site/pol-source-site-item-view/pol-source-site-item-view.component.ts","webpack:///src/app/components/root/root-item/root-item.component.ts","webpack:///src/app/components/root/root-item/root-item.component.html","webpack:///src/app/components/open-data-national/open-data-national-item/open-data-national-item.component.html","webpack:///src/app/components/open-data-national/open-data-national-item/open-data-national-item.component.ts","webpack:///src/app/components/country/country-tvitem-list-item/country-tvitem-list-item.component.ts","webpack:///src/app/components/country/country-tvitem-list-item/country-tvitem-list-item.component.html","webpack:///src/app/models/generated/web/WebPolSourceSites.model.ts","webpack:///src/app/components/municipality/municipality-item/municipality-item.component.ts","webpack:///src/app/components/municipality/municipality-item/municipality-item.component.html","webpack:///src/app/services/helpers/component-data-loaded.service.ts","webpack:///src/app/enums/generated/SectorSubComponentEnum.ts","webpack:///src/app/components/subsector/subsector-tvitem-list-item/subsector-tvitem-list-item.component.ts","webpack:///src/app/components/subsector/subsector-tvitem-list-item/subsector-tvitem-list-item.component.html","webpack:///src/app/enums/generated/SubsectorSubComponentEnum.ts","webpack:///src/app/components/provincial-tools/provincial-tools-item/provincial-tools-item.component.html","webpack:///src/app/components/provincial-tools/provincial-tools-item/provincial-tools-item.component.ts","webpack:///src/app/services/helpers/file-upload.service.ts","webpack:///src/app/services/map/map-polylines.service.ts","webpack:///src/app/services/map/map-polygons.service.ts","webpack:///src/app/components/helpers/stat-count/stat-count.component.ts","webpack:///src/app/components/helpers/stat-count/stat-count.component.html","webpack:///src/app/components/mwqm-run/mwqm-run-item-view/mwqm-run-item-view.component.html","webpack:///src/app/components/mwqm-run/mwqm-run-item-view/mwqm-run-item-view.component.ts","webpack:///src/app/enums/generated/AscDescEnum.ts","webpack:///src/app/services/loaders/web-all-countries.service.ts","webpack:///src/app/services/map/map-helper.service.ts","webpack:///src/app/services/loaders/web-all-municipalities.service.ts","webpack:///src/app/components/country/country-tvitem-list-detail/country-tvitem-list-detail.component.ts","webpack:///src/app/components/country/country-tvitem-list-detail/country-tvitem-list-detail.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/app-material.module.ts","webpack:///src/app/services/helpers/component-show.service.ts","webpack:///src/app/services/loaders/web-root.service.ts","webpack:///src/app/enums/generated/TVTypeEnum.ts","webpack:///src/app/services/helpers/sub-page.service.ts","webpack:///src/app/models/generated/web/WebAllPolSourceSiteEffectTerms.model.ts","webpack:///src/app/components/province/province-tvitem-list-item/province-tvitem-list-item.component.ts","webpack:///src/app/components/province/province-tvitem-list-item/province-tvitem-list-item.component.html","webpack:///src/app/services/loaders/web-all-emails.service.ts","webpack:///src/app/components/area/area-item/area-item.component.ts","webpack:///src/app/components/area/area-item/area-item.component.html","webpack:///src/app/enums/generated/MWQMRunSubComponentEnum.ts","webpack:///src/app/models/generated/web/WebAllEmails.model.ts","webpack:///src/app/components/open-data/open-data-item/open-data-item.component.html","webpack:///src/app/components/open-data/open-data-item/open-data-item.component.ts","webpack:///src/app/components/shell/shell-item/shell-item.component.ts","webpack:///src/app/components/shell/shell-item/shell-item.component.html","webpack:///src/app/services/helpers/show-tvitem.service.ts","webpack:///src/app/enums/generated/TopComponentEnum.ts","webpack:///src/app/components/pol-source-site/pol-source-site-tvitem-list-item/pol-source-site-tvitem-list-item.component.ts","webpack:///src/app/components/pol-source-site/pol-source-site-tvitem-list-item/pol-source-site-tvitem-list-item.component.html","webpack:///src/app/models/generated/web/WebMWQMRuns.model.ts","webpack:///src/app/components/helpers/footer/footer.component.ts","webpack:///src/app/components/helpers/footer/footer.component.html","webpack:///src/app/components/mwqm-run/mwqm-run-item-edit/mwqm-run-item-edit.component.html","webpack:///src/app/components/mwqm-run/mwqm-run-item-edit/mwqm-run-item-edit.component.ts","webpack:///src/app/services/map/map-markers.service.ts","webpack:///src/app/services/map/map.service.ts","webpack:///src/app/models/generated/web/WebSubsector.model.ts","webpack:///src/app/components/helpers/last-update-tvfilemodel/last-update-tvfilemodel.component.ts","webpack:///src/app/components/helpers/last-update-tvfilemodel/last-update-tvfilemodel.component.html","webpack:///src/app/components/helpers/tvfile-menu/tvfile-menu.component.ts","webpack:///src/app/components/helpers/tvfile-menu/tvfile-menu.component.html","webpack:///src/app/services/loaders/logged-in-contact.service.ts","webpack:///src/app/services/loaders/web-pol-source-sites.service.ts","webpack:///src/app/enums/generated/SampleTypeEnum.ts","webpack:///src/app/components/mwqm-site/mwqm-site-tvitem-list-item/mwqm-site-tvitem-list-item.component.ts","webpack:///src/app/components/mwqm-site/mwqm-site-tvitem-list-item/mwqm-site-tvitem-list-item.component.html","webpack:///src/app/enums/generated/MapSizeEnum.ts","webpack:///src/app/services/loaders/web-all-pol-source-groupings.service.ts","webpack:///src/app/services/helpers/sort-mwqm-run-list-desc.service.ts","webpack:///src/app/services/loaders/web-province.service.ts","webpack:///src/app/models/generated/web/WebRoot.model.ts","webpack:///src/app/enums/generated/PolSourceSiteSubComponentEnum.ts","webpack:///src/app/models/generated/web/WebAllTideLocations.model.ts","webpack:///src/app/models/MWQMRunModelSiteAndSample.model.ts","webpack:///src/app/components/files/file-list/file-list.component.ts","webpack:///src/app/components/files/file-list/file-list.component.html","webpack:///src/app/components/export-arc-gis/export-arc-gis-item/export-arc-gis-item.component.html","webpack:///src/app/components/export-arc-gis/export-arc-gis-item/export-arc-gis-item.component.ts","webpack:///src/app/enums/generated/SortOrderAngularEnum.ts","webpack:///src/app/enums/generated/FileTypeEnum.ts","webpack:///src/app/components/sector/sector-tvitem-list-detail/sector-tvitem-list-detail.component.ts","webpack:///src/app/components/sector/sector-tvitem-list-detail/sector-tvitem-list-detail.component.html","webpack:///src/app/enums/generated/LanguageEnum.ts","webpack:///src/app/components/mwqm-run/mwqm-run-tvitem-list-detail/mwqm-run-tvitem-list-detail.component.html","webpack:///src/app/components/mwqm-run/mwqm-run-tvitem-list-detail/mwqm-run-tvitem-list-detail.component.ts","webpack:///src/app/components/helpers/bread-crumb/bread-crumb.component.html","webpack:///src/app/components/helpers/bread-crumb/bread-crumb.component.ts","webpack:///src/app/components/mike-scenario/mike-scenario-item/mike-scenario-item.component.html","webpack:///src/app/components/mike-scenario/mike-scenario-item/mike-scenario-item.component.ts","webpack:///src/app/components/files/file-upload/file-upload.component.ts","webpack:///src/app/components/files/file-upload/file-upload.component.html","webpack:///src/app/components/mike-scenario/mike-scenario-tvitem-list-item/mike-scenario-tvitem-list-item.component.ts","webpack:///src/app/components/mike-scenario/mike-scenario-tvitem-list-item/mike-scenario-tvitem-list-item.component.html","webpack:///src/app/models/generated/web/WebAllTels.model.ts","webpack:///src/app/components/mwqm-site/mwqm-site-item-view/mwqm-site-item-view.component.html","webpack:///src/app/components/mwqm-site/mwqm-site-item-view/mwqm-site-item-view.component.ts","webpack:///src/app/components/home/home-item/home-item.component.ts","webpack:///src/app/components/home/home-item/home-item.component.html","webpack:///src/app/services/loaders/web-mwqm-sites.service.ts","webpack:///src/app/models/generated/web/WebMunicipality.model.ts","webpack:///src/app/enums/generated/MWQMSiteLatestClassificationEnum.ts","webpack:///src/app/models/generated/web/WebAllCountries.model.ts","webpack:///src/app/services/helpers/type-icon.service.ts","webpack:///src/app/services/helpers/file-download.ts","webpack:///src/app/services/loaders/web-sector.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/models/generated/web/WebAllPolSourceGroupings.model.ts","webpack:///src/app/components/mwqm-site/mwqm-site-item/mwqm-site-item.component.html","webpack:///src/app/components/mwqm-site/mwqm-site-item/mwqm-site-item.component.ts","webpack:///src/app/services/helpers/sort-mwqm-site-sample-list.service.ts","webpack:///src/app/components/analysis/analysis-item/analysis-item.component.ts","webpack:///src/app/components/analysis/analysis-item/analysis-item.component.html","webpack:///src/app/services/app-language.service.ts","webpack:///src/app/components/pol-source-site/pol-source-site-item-edit/pol-source-site-item-edit.component.html","webpack:///src/app/components/pol-source-site/pol-source-site-item-edit/pol-source-site-item-edit.component.ts","webpack:///src/app/components/municipality/municipality-item-view/municipality-item-view.component.html","webpack:///src/app/components/municipality/municipality-item-view/municipality-item-view.component.ts","webpack:///src/app/services/loaders/web-all-help-docs.service.ts","webpack:///src/app/components/municipality/municipality-tvitem-list-detail/municipality-tvitem-list-detail.component.ts","webpack:///src/app/components/municipality/municipality-tvitem-list-detail/municipality-tvitem-list-detail.component.html","webpack:///src/app/components/municipality/municipality-item-edit/municipality-item-edit.component.html","webpack:///src/app/components/municipality/municipality-item-edit/municipality-item-edit.component.ts","webpack:///src/app/models/generated/web/WebAllReportTypes.model.ts","webpack:///src/app/enums/generated/FilesSortPropEnum.ts","webpack:///src/app/components/map/map-menu/map-menu.component.ts","webpack:///src/app/components/map/map-menu/map-menu.component.html","webpack:///src/app/components/mwqm-run/mwqm-run-tvitem-list-item/mwqm-run-tvitem-list-item.component.ts","webpack:///src/app/components/mwqm-run/mwqm-run-tvitem-list-item/mwqm-run-tvitem-list-item.component.html","webpack:///src/app/enums/generated/ShellSubComponentEnum.ts","webpack:///src/app/components/area/area-item-view/area-item-view.component.html","webpack:///src/app/components/area/area-item-view/area-item-view.component.ts","webpack:///src/app/components/helpers/tvitem-menu/tvitem-menu.component.html","webpack:///src/app/components/helpers/tvitem-menu/tvitem-menu.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/mike-scenario/mike-scenario-item-view/mike-scenario-item-view.component.html","webpack:///src/app/components/mike-scenario/mike-scenario-item-view/mike-scenario-item-view.component.ts","webpack:///src/app/components/area/area-item-edit/area-item-edit.component.html","webpack:///src/app/components/area/area-item-edit/area-item-edit.component.ts","webpack:///src/app/components/mwqm-site/mwqm-site-tvitem-list-detail/mwqm-site-tvitem-list-detail.component.html","webpack:///src/app/components/mwqm-site/mwqm-site-tvitem-list-detail/mwqm-site-tvitem-list-detail.component.ts","webpack:///src/app/models/generated/web/WebAllContacts.model.ts","webpack:///src/app/services/helpers/history.service.ts","webpack:///src/app/components/country/country-item-create/country-item-create.component.ts","webpack:///src/app/components/country/country-item-create/country-item-create.component.html","webpack:///src/app/services/loaders/web-all-mwqm-lookup-mpns.service.ts","webpack:///src/app/services/loaders/web-municipalty.service.ts","webpack:///src/app/components/log-book/log-book-item/log-book-item.component.html","webpack:///src/app/components/log-book/log-book-item/log-book-item.component.ts","webpack:///src/app/components/sector/sector-item/sector-item.component.ts","webpack:///src/app/components/sector/sector-item/sector-item.component.html","webpack:///src/app/components/mwqm-site/mwqm-site-item-edit/mwqm-site-item-edit.component.html","webpack:///src/app/components/mwqm-site/mwqm-site-item-edit/mwqm-site-item-edit.component.ts","webpack:///src/app/shared.module.ts","webpack:///src/app/components/country/country-item-modify/country-item-modify.component.ts","webpack:///src/app/components/country/country-item-modify/country-item-modify.component.html","webpack:///src/app/services/loaders/web-all-tels.service.ts","webpack:///src/app/components/subsector/subsector-item-view/subsector-item-view.component.html","webpack:///src/app/components/subsector/subsector-item-view/subsector-item-view.component.ts","webpack:///src/app/models/generated/web/WebAllMunicipalities.model.ts","webpack:///src/app/enums/generated/MunicipalitySubComponentEnum.ts","webpack:///src/app/services/loaders/search.service.ts","webpack:///src/app/components/helpers/error/error.component.html","webpack:///src/app/components/helpers/error/error.component.ts","webpack:///src/app/services/loaders/web-all-addresses.service.ts","webpack:///src/app/components/province/province-item-view/province-item-view.component.html","webpack:///src/app/components/province/province-item-view/province-item-view.component.ts","webpack:///src/app/services/loaders/web-drogue-runs.service.ts","webpack:///src/app/models/generated/web/WebAllAddresses.model.ts","webpack:///src/app/services/loaders/web-all-provinces.service.ts","webpack:///src/app/components/mwqm-run/mwqm-run-item/mwqm-run-item.component.html","webpack:///src/app/components/mwqm-run/mwqm-run-item/mwqm-run-item.component.ts","webpack:///src/app/components/subsector/subsector-tvitem-list-detail/subsector-tvitem-list-detail.component.ts","webpack:///src/app/components/subsector/subsector-tvitem-list-detail/subsector-tvitem-list-detail.component.html","webpack:///src/app/enums/generated/FilePurposeEnum.ts","webpack:///src/app/components/infrastructure/infrastructure-item/infrastructure-item.component.html","webpack:///src/app/components/infrastructure/infrastructure-item/infrastructure-item.component.ts","webpack:///src/app/enums/generated/AnalysisCalculationTypeEnum.ts","webpack:///src/app/components/sector/sector-item-edit/sector-item-edit.component.html","webpack:///src/app/components/sector/sector-item-edit/sector-item-edit.component.ts","webpack:///src/app/services/app-loaded.service.ts","webpack:///src/app/services/loaders/web-all-tide-locations.service.ts","webpack:///src/app/components/subsector-tools/subsector-tools-item/subsector-tools-item.component.html","webpack:///src/app/components/subsector-tools/subsector-tools-item/subsector-tools-item.component.ts","webpack:///src/app/services/helpers/stat-count.service.ts","webpack:///src/app/components/files/file-list-item/file-list-item.component.ts","webpack:///src/app/components/files/file-list-item/file-list-item.component.html","webpack:///src/app/components/files/file-list-item-edit/file-list-item-edit.component.html","webpack:///src/app/components/files/file-list-item-edit/file-list-item-edit.component.ts","webpack:///src/app/components/rain-exceedance/rain-exceedance-item/rain-exceedance-item.component.html","webpack:///src/app/components/rain-exceedance/rain-exceedance-item/rain-exceedance-item.component.ts","webpack:///src/app/models/generated/web/WebSector.model.ts","webpack:///src/app/models/generated/web/WebAllHelpDocs.model.ts","webpack:///src/app/models/generated/web/WebAllMWQMLookupMPNs.model.ts","webpack:///src/app/services/helpers/sort-mwqm-site-model-list.service.ts","webpack:///src/app/models/generated/web/WebMWQMSites.model.ts","webpack:///src/app/components/files/file-list-item-view/file-list-item-view.component.html","webpack:///src/app/components/files/file-list-item-view/file-list-item-view.component.ts","webpack:///src/app/services/loaders/web-all-pol-source-site-effect-terms.service.ts","webpack:///src/app/enums/generated/CountrySubComponentEnum.ts","webpack:///src/app/enums/generated/MWQMSiteSubComponentEnum.ts","webpack:///src/app/components/email-distribution-list/email-distribution-list-item/email-distribution-list-item.component.html","webpack:///src/app/components/email-distribution-list/email-distribution-list-item/email-distribution-list-item.component.ts","webpack:///src/app/services/loaders/web-subsector.service.ts","webpack:///src/app/models/generated/web/WebDrogueRuns.model.ts","webpack:///src/app/components/files/file-list-item-detail/file-list-item-detail.component.ts","webpack:///src/app/components/files/file-list-item-detail/file-list-item-detail.component.html","webpack:///src/app/services/loaders/web-all-contacts.service.ts","webpack:///src/app/components/province/province-item-edit/province-item-edit.component.html","webpack:///src/app/components/province/province-item-edit/province-item-edit.component.ts","webpack:///src/app/services/loaders/web-area.service.ts","webpack:///src/app/models/generated/web/WebMWQMSamples.model.ts","webpack:///src/app/services/helpers/type-text.service.ts","webpack:///src/app/components/area/area-tvitem-list-detail/area-tvitem-list-detail.component.ts","webpack:///src/app/components/area/area-tvitem-list-detail/area-tvitem-list-detail.component.html","webpack:///src/app/components/analysis/analysis-data-visible/analysis-data-visible.component.ts","webpack:///src/app/components/analysis/analysis-data-visible/analysis-data-visible.component.html","webpack:///src/app/services/helpers/tvitem-sort-order.service.ts","webpack:///src/app/services/helpers/sort-tvitem-list.service.ts","webpack:///src/app/components/contact/contact-item/contact-item.component.html","webpack:///src/app/components/contact/contact-item/contact-item.component.ts","webpack:///src/app/enums/generated/AreaSubComponentEnum.ts","webpack:///src/app/enums/generated/ProvinceSubComponentEnum.ts","webpack:///src/app/services/helpers/toggles.service.ts","webpack:///src/app/components/municipality/municipality-tvitem-list-item/municipality-tvitem-list-item.component.ts","webpack:///src/app/components/municipality/municipality-tvitem-list-item/municipality-tvitem-list-item.component.html","webpack:///src/app/components/pol-source-site/pol-source-site-item/pol-source-site-item.component.html","webpack:///src/app/components/pol-source-site/pol-source-site-item/pol-source-site-item.component.ts","webpack:///src/app/models/generated/web/WebCountry.model.ts","webpack:///src/app/services/helpers/component-button-selection.service.ts","webpack:///src/app/components/mike-scenario/mike-scenario-tvitem-list-detail/mike-scenario-tvitem-list-detail.component.ts","webpack:///src/app/components/mike-scenario/mike-scenario-tvitem-list-detail/mike-scenario-tvitem-list-detail.component.html","webpack:///src/app/services/loaders/web-mwqm-samples.service.ts","webpack:///src/app/services/helpers/predicate-asc-by.service.ts","webpack:///src/app/components/sampling-plan/sampling-plan-item/sampling-plan-item.component.html","webpack:///src/app/components/sampling-plan/sampling-plan-item/sampling-plan-item.component.ts","webpack:///src/app/services/helpers/saver.provider.ts","webpack:///src/app/enums/generated/TideTextEnum.ts","webpack:///src/app/components/analysis/analysis-options/analysis-options.component.ts","webpack:///src/app/components/analysis/analysis-options/analysis-options.component.html","webpack:///src/app/components/analysis/analysis-item-menu/analysis-item-menu.component.ts","webpack:///src/app/components/analysis/analysis-item-menu/analysis-item-menu.component.html","webpack:///src/app/components/subsector/subsector-item-edit/subsector-item-edit.component.html","webpack:///src/app/components/subsector/subsector-item-edit/subsector-item-edit.component.ts","webpack:///src/app/components/sidenavs/sidenav-menu/sidenav-menu.component.ts","webpack:///src/app/components/sidenavs/sidenav-menu/sidenav-menu.component.html","webpack:///src/app/components/helpers/last-update-tvitemmodel/last-update-tvitemmodel.component.ts","webpack:///src/app/components/helpers/last-update-tvitemmodel/last-update-tvitemmodel.component.html","webpack:///src/app/services/helpers/structure-tvfile-list.service.ts","webpack:///src/app/components/province/province-item/province-item.component.ts","webpack:///src/app/components/province/province-item/province-item.component.html","webpack:///src/app/models/generated/web/WebAllProvinces.model.ts","webpack:///src/app/services/helpers/contact-name.service.ts","webpack:///src/app/components/helpers/search-option/search-option.component.ts","webpack:///src/app/components/helpers/search-option/search-option.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/components/sector/sector-item-view/sector-item-view.component.html","webpack:///src/app/components/sector/sector-item-view/sector-item-view.component.ts"],"names":["tvItemSortOrderService","SubsectorItemComponent","appStateService","appLoadedService","appLanguageService","webSubsectorService","webMWQMSamplesService","statCountService","componentButtonSelectionService","componentShowService","subsectorSubComponentEnum","tvTypeEnum","ascDescEnum","sortOrderAngular","DoWebSubsector","AppState$","getValue","CurrentTVItemID","DateFormatService","statMWQMSiteSample","undefined","LastSampleDate","GetDateFromDateText","toString","mwqmRun","DateText","DateTime_Local","substring","mwqmSample","SampleDateTime_Local","tvItemModel","TVItem","LastUpdateDate_UTC","tvFileModel","TVFile","FileCreatedDate_UTC","DateOnly","Year","parseInt","Month","Day","Hour","Minute","Second","HourText","MinuteText","SecondText","Language","fr","GetMonthName","month","acronym","AppLanguage","DateJanuaryAcronym","DateJanuary","DateFebruaryAcronym","DateFebruary","DateMarchAcronym","DateMarch","DateAprilAcronym","DateApril","DateMayAcronym","DateMay","DateJuneAcronym","DateJune","DateJulyAcronym","DateJuly","DateAugustAcronym","DateAugust","DateSeptemberAcronym","DateSeptember","DateOctoberAcronym","DateOctober","DateNovemberAcronym","DateNovember","DateDecemberAcronym","DateDecember","FileIconService","fileName","FileType","CSV","XLSX","DFS0","DFS1","DFSU","MESH","DOCX","GIF","JPEG","JPG","PNG","HTML","KML","KMZ","LOG","TXT","XYZ","M21FM","M3FM","MDF","PDF","WMV","MapInfoDrawTypeEnum","GetMapInfoDrawTypeEnum","MapInfoDrawTypeEnum_GetOrderedText","enumTextOrderedList","push","EnumID","EnumText","sort","a","b","localeCompare","MapInfoDrawTypeEnum_GetIDText","enumID","addressTypeEnunText","forEach","e","MWQMSiteTVItemListItemSpecialComponent","subPageService","mapService","dateFormatService","languageEnum","mwqmSiteLatestClassification","SampleYear","PredicateDescByService","prop","WebAllReportTypesService","httpClient","webAllTelsService","componentDataLoadedService","LangID","DoOther","sub","unsubscribe","AppLoaded$","WebAllReportTypes","ReportTypeModelList","length","KeepWebAllReportTypes","GetWebAllReportTypes","subscribe","UpdateAppLoaded","UpdateAppState","Status","Loading","Working","url","BaseApiUrl","get","pipe","x","UpdateWebAllReportTypes","console","debug","DoWebAllTels","Error","DataLoadedWebRoot","DataLoadedWebAllReportTypes","CountryItemComponent","webCountryService","countrySubComponentEnum","DoWebCountry","DownloadService","http","save","ParentID","ServerFileName","reportProgress","observe","responseType","blob","filename","CountryItemViewComponent","showTVItemService","RootSubComponentEnum","GetRootSubComponentEnum","RootSubComponentEnum_GetOrderedText","RootSubComponentEnum_GetIDText","WebCountryService","sortTVItemListService","structureTVFileListService","historyService","TVItemID","WebCountry","KeepWebCountry","GetWebCountry","UpdateWebCountry","AddHistory","TVItemModel","DataLoadedWebCountry","GoogleJSLoaded","CountrySubComponent","Provinces","ClearMap","DrawObjects","TVItemModelProvinceList","Files","OpenDataNational","EmailDistributionList","RainExceedance","AreaTVItemListItemComponent","TVItemModelList","IsBreadCrumb","MapItemComponent","SetupMap","mapElement","MikeScenarioItemEditComponent","WebProvince","ShowTVFileService","TVFileVisible","RemoveShowTVFile","AddShowTVFile","tvFileModelExist","ShowTVFileModelList","filter","c","TVFileID","ShowNewTVFileModelList","count","i","splice","ProvinceTVItemListDetailComponent","FileService","ParentTVItemID","FileName","PolSourceSiteTVItemListDetailComponent","SearchComponent","searchService","webRootService","webProvinceService","webAreaService","webSectorService","webMunicipalityService","webMWQMSitesService","webMWQMRunsService","webPolSourceSitesService","myControl","options","formFieldWidthClass","subSearch","GetSearch","searchResult","sr","TVType","Country","ShellSubComponent","Area","DoWebArea","Municipality","DoWebMunicipality","MWQMRun","DoWebMWQMRuns","MWQMSite","DoWebMWQMSites","PolSourceSite","DoWebPolSourceSites","Province","DoWebProvince","Root","DoWebRoot","Sector","DoWebSector","Subsector","alert","subWebRoot","subWebCountry","subWebProvince","subWebMunicipalities","subWebArea","subWebSector","subWebSubsector","subWebMunicipality","subWebMWQMSite","subWebMWQMRun","subWebPolSourceSite","ToggleSearchWidth","NavigateTo","SectorTVItemListItemComponent","WebMWQMRunsService","sortMWQMRunListDescService","WebMWQMRuns","KeepWebMWQMRuns","GetWebMWQMRuns","UpdateWebMWQMRuns","DataLoadedWebSubsector","DataLoadedWebMWQMRuns","ClassificationTypeEnum","GetClassificationTypeEnum","ClassificationTypeEnum_GetOrderedText","ClassificationTypeEnum_GetIDText","AppStateService","History","SearchWorking","StatRunsForDetail","ShowTVItemModelList","AnalysisStartRun","AnalysisEndRun","AnalysisRuns","AnalysisFullYear","AnalysisShowOnlyUsed","AnalysisCalculationType","All","AnalysisHighlightSalFromAverage","AnalysisShortRange","AnalysisMidRange","AnalysisDry24h","AnalysisDry48h","AnalysisDry72h","AnalysisDry96h","AnalysisWet24h","AnalysisWet48h","AnalysisWet72h","AnalysisWet96h","AnalysisFCDataVisible","AnalysisTempDataVisible","AnalysisSalDataVisible","AnalysisP90DataVisible","AnalysisGeoMeanDataVisible","AnalysisMedianDataVisible","AnalysisPerOver43DataVisible","AnalysisPerOver260DataVisible","TopComponent","Home","RootSubComponent","Countries","ProvinceSubComponent","Areas","AreaSubComponent","Sectors","SectorSubComponent","Subsectors","SubsectorSubComponent","MWQMSites","MunicipalitySubComponent","Infrastructures","MWQMSiteSubComponent","Information","MWQMRunSubComponent","PolSourceSiteSubComponent","SamplingPlanID","en","DetailVisible","StatCountVisible","LastUpdateVisible","InactVisible","MenuVisible","EditVisible","MapVisible","EditMapVisible","EditMapChanged","MarkerDragStartPos","MarkerDragEndPos","MarkerTVItemID","MarkerMapInfoID","MarkerLabel","MapSize","Size50","MapMarkerPathCharacters","MapMarkerColorArea","MapMarkerColorClimateSite","MapMarkerColorCountry","MapMarkerColorFailed","MapMarkerColorHydrometricSite","MapMarkerColorInfrastructure","MapMarkerColorLessThan10","MapMarkerColorLiftStation","MapMarkerColorLineOverflow","MapMarkerColorMeshNode","MapMarkerColorMikeBoundaryConditionMesh","MapMarkerColorMikeBoundaryConditionWebTide","MapMarkerColorMikeScenario","MapMarkerColorMikeSource","MapMarkerColorMikeSourceIncluded","MapMarkerColorMikeSourceIsRiver","MapMarkerColorMikeSourceNotIncluded","MapMarkerColorMunicipality","MapMarkerColorMWQMRun","MapMarkerColorMWQMSite","MapMarkerColorNoData","MapMarkerColorNoDepuration","MapMarkerColorOtherInfrastructure","MapMarkerColorOutfall","MapMarkerColorPassed","MapMarkerColorPolSourceSite","MapMarkerColorProvince","MapMarkerColorSector","MapMarkerColorSeeOtherMunicipality","MapMarkerColorSubsector","MapMarkerColorTideSite","MapMarkerColorWasteWaterTreatmentPlant","MapMarkerColorWebTideNode","ClassificationColorApproved","ClassificationColorConditionallyApproved","ClassificationColorConditionallyRestricted","ClassificationColorProhibited","ClassificationColorRestricted","MapPolylineColorInfrastructureLineOverflowToOutfall","MapPolylineColorInfrastructureLiftStationToLiftStation","MapPolylineColorInfrastructureLiftStationToOutfall","MapPolylineColorInfrastructureLiftStationToWWTP","MapPolylineColorInfrastructureWWTPToOutfall","MapPolygonColorArea","MapPolygonColorCountry","MapPolygonColorProvince","MapPolygonColorSector","MapPolygonColorSubsector","zoom","center","lat","lng","zoomControl","scrollwheel","disableDoubleClickZoom","mapTypeId","infoContent","CSSLoaded","IconLoaded","AreaSectorsSortOrder","Ascending","AreaFilesSortByProp","AreaFilesSortOrder","CountryProvincesSortOrder","CountryFilesSortByProp","CountryFilesSortOrder","MunicipalityContactsSortOrder","MunicipalityFilesSortByProp","MunicipalityFilesSortOrder","MunicipalityInfrastructuresSortOrder","MunicipalityMIKEScenariosSortOrder","MWQMRunFilesSortByProp","MWQMRunFilesSortOrder","MWQMSiteFilesSortByProp","MWQMSiteFilesSortOrder","PolSourceSiteFilesSortByProp","PolSourceSiteFilesSortOrder","ProvinceAreasSortOrder","ProvinceFilesSortByProp","ProvinceFilesSortOrder","ProvinceMunicipalitiesSortOrder","RootCountriesSortOrder","RootFilesSortByProp","RootFilesSortOrder","SectorFilesSortByProp","SectorFilesSortOrder","SectorMikeScenariosSortOrder","SectorSubsectorsSortOrder","SubsectorFilesSortByProp","SubsectorFilesSortOrder","SubsectorMWQMRunsSortOrder","Descending","SubsectorMWQMSitesSortOrder","SubsectorPolSourceSitesSortOrder","appState","next","AnalysisService","statMWQMRun","RainDay1","RainDay2","RainDay3","RainDay4","statMWQMSite","runIndex","highlight","Math","abs","StatMWQMSiteSampleList","Sal","SalinityAverage","Approved","ConditionallyApproved","ConditionallyRestricted","Prohibited","Restricted","Unclassified","tideTextEnum","LowTide","LowTideFalling","LowTideRising","MidTide","MidTideFalling","MidTideRising","HighTide","HighTideFalling","HighTideRising","statEndMWQMRun","RemoveFromStat","FillStatMWQMSiteList","dryRain_mm_List","wetRain_mm_List","analysisCalculationTypeEnum","statStartMWQMRun","runs","statCalculationType","sal","dry24h","dry48h","dry72h","dry96h","wet24h","wet48h","wet72h","wet96h","PolSourceSiteItemViewComponent","RootItemComponent","rootSubComponentEnum","OpenDataNationalItemComponent","CountryTVItemListItemComponent","WebPolSourceSites","MunicipalityItemComponent","municipalitySubComponentEnum","ComponentDataLoadedService","AllTrue","WebAllAddresses","Object","keys","constructor","WebAllContacts","WebAllCountries","WebAllEmails","WebAllHelpDocs","WebAllMunicipalities","WebAllMWQMLookupMPNs","WebAllPolSourceGroupings","WebAllPolSourceSiteEffectTerms","WebAllProvinces","WebAllTels","WebAllTideLocations","WebArea","WebClimateSites","WebDrogueRuns","WebHydrometricSites","WebLabSheets","WebMikeScenarios","WebMunicipality","WebMWQMSamples","WebMWQMSites","WebRoot","WebSector","WebSubsector","WebTideSites","SectorSubComponentEnum","GetSectorSubComponentEnum","SectorSubComponentEnum_GetOrderedText","SectorSubComponentEnum_GetIDText","SubsectorTVItemListItemComponent","SubsectorSubComponentEnum","GetSubsectorSubComponentEnum","SubsectorSubComponentEnum_GetOrderedText","SubsectorSubComponentEnum_GetIDText","ProvincialToolsItemComponent","FileUploadService","formData","post","MapPolylinesService","mapHelperService","tvItemStatMapList","polylineList","tvItemStatMapModel","MapInfoModelList","mapInfoModel","MapInfo","MapInfoDrawType","Polyline","polyPoints","google","maps","MVCArray","MapInfoPointList","point","LatLng","Lat","Lng","strokeColor","GetMapPolylineColor","path","strokeOpacity","strokeWeight","map","Map","event","addListener","evt","document","getElementById","value","latLng","toFixed","GooglePolylineListMVC","MapPolygonsService","tvItemStatMapModelList","polygonList","Polygon","GetMapPolygonColor","fillColor","paths","fillOpacity","GooglePolygonListMVC","StatCountComponent","MWQMRunItemViewComponent","AscDescEnum","GetAscDescEnum","AscDescEnum_GetOrderedText","AscDescEnum_GetIDText","WebAllCountriesService","webAllEmailsService","KeepWebAllCountries","GetWebAllCountries","UpdateWebAllCountries","DoWebAllEmails","DataLoadedWebAllCountries","MapHelperService","bounds","LatLngBounds","googleMarkerMVCArray","GoogleMarkerListMVC","getLength","marker","getAt","extend","getPosition","googlePolygonMVCArray","getPath","googlePolylineMVCArray","fitBounds","classification","ClimateSite","Failed","HydrometricSite","Infrastructure","LessThan10","LiftStation","LineOverflow","MeshNode","MikeBoundaryConditionMesh","MikeBoundaryConditionWebTide","MikeScenario","MikeSource","MikeSourceIncluded","MikeSourceIsRiver","MikeSourceNotIncluded","NoData","NoDepuration","OtherInfrastructure","Outfall","Passed","SeeOtherMunicipality","TideSite","WasteWaterTreatmentPlant","WebTideNode","FromTVType","ToTVType","MapColorNotFound","WebAllMunicipalitiesService","webAllMWQMLookupMPNsService","KeepWebAllMunicipalities","GetWebAllMunicipalities","UpdateWebAllMunicipalities","DoWebAllMWQMLookupMPNs","DataLoadedWebAllMunicipalities","CountryTVItemListDetailComponent","environment","production","MaterialModule","ComponentShowService","areaSubComponent","countrySubComponent","municipalitySubComponent","mwqmRunSubComponent","mwqmSiteSubComponent","polSourceSiteSubComponent","provinceSubComponent","rootSubComponent","sectorSubComponent","subsectorSubComponent","WebRootService","webAllAddressesService","KeepWebRoot","GetWebRoot","UpdateWebRoot","DoWebAllAddresses","TVItemModelCountryList","ExportArcGIS","TVTypeEnum","GetTVTypeEnum","TVTypeEnum_GetOrderedText","TVTypeEnum_GetIDText","SubPageService","GetSubPage","tvItem","ProvinceTVItemListItemComponent","WebAllEmailsService","webAllHelpDocsServices","KeepWebAllEmails","GetWebAllEmails","UpdateWebAllEmails","DoWebAllHelpDocs","DataLoadedWebAllEmails","AreaItemComponent","areaSubComponentEnum","MWQMRunSubComponentEnum","GetMWQMRunSubComponentEnum","MWQMRunSubComponentEnum_GetOrderedText","MWQMRunSubComponentEnum_GetIDText","OpenDataItemComponent","togglesService","ShellItemComponent","title","shellSubComponentEnum","mapSizeEnum","setTitle","ShellApplicationName","subMapSize","language","mapSize","ShowTVItemService","TVItemVisible","RemoveShowTVItem","AddShowTVItem","tvItemModelExist","ShowNewTVItemModelList","TopComponentEnum","GetTopComponentEnum","TopComponentEnum_GetOrderedText","TopComponentEnum_GetIDText","PolSourceSiteTVItemListItemComponent","FooterComponent","year","Date","getFullYear","MWQMRunItemEditComponent","MapMarkersService","markerList","Point","mark","Marker","position","label","color","fontWeight","text","TVItemLanguageList","TVText","info","GetMapMarkerColor","icon","rotation","scale","labelOrigin","draggable","zIndex","MapInfoID","GetMapInfoCoord","getLabel","MapService","mapMarkersService","mapPolygonsService","mapPolylinesService","coordText","parseFloat","indexOf","GoogleCrossPolylineListMVC","setMap","clear","DrawMarkers","DrawPolygons","DrawPolylines","FitBounds","nativeElement","MapTypeId","HYBRID","MarkerOriginal","MarkerChanged","controls","ControlPosition","TOP_CENTER","CurrentPoint","CurrentBound","getBounds","sw","getSouthWest","ne","getNorthEast","CoordList","polyl1","CoordList2","polyl2","LastUpdateTVFileModelComponent","contactNameService","TVFileMenuComponent","showTVFileService","LoggedInContactService","GetLoggedInContact","LoadGoogleJS","LoggedInContact","Promise","resolve","window","ev","log","gapi","node","createElement","HasInternetConnection","src","GoogleMapKeyHash","type","getElementsByTagName","appendChild","UpdateLoggedInContact","DoGoogleJS","WebPolSourceSitesService","webDrogueRunsService","KeepWebPolSourceSites","GetWebPolSourceSites","UpdateWebPolSourceSites","DoWebDrogueRuns","DataLoadedWebPolSourceSites","SampleTypeEnum","GetSampleTypeEnum","SampleTypeEnum_GetOrderedText","SampleTypeEnum_GetIDText","MWQMSiteTVItemListItemComponent","mwqmSiteModel","MWQMSiteModelList","SetStatRunsForDetail","MapSizeEnum","GetMapSizeEnum","MapSizeEnum_GetOrderedText","MapSizeEnum_GetIDText","WebAllPolSourceGroupingsService","webAllPolSourceSiteEffectTermsService","KeepWebAllPolSourceGroupings","GetWebAllPolSourceGroupings","UpdateWebAllPolSourceGroupings","DoWebAllPolSourceSiteEffectTerms","DataLoadedWebPolSourceGroupings","SortMWQMRunListService","predicateDescByService","arr","mwqmRunSorted","arr2","sortable","MWQMRunID","GetMWQMRunDateTime_LocalDigit","toLowerCase","PredicateDescBy","j","WebProvinceService","KeepWebProvince","GetWebProvince","UpdateWebProvince","DataLoadedWebProvince","TVItemModelAreaList","Municipalities","TVItemModelMunicipalityList","OpenData","SamplingPlan","ProvinceTools","PolSourceSiteSubComponentEnum","GetPolSourceSiteSubComponentEnum","PolSourceSiteSubComponentEnum_GetOrderedText","PolSourceSiteSubComponentEnum_GetIDText","MWQMRunModelSiteAndSampleModel","MWQMSiteModelAndSampleModel","FileListComponent","filePurposeEnum","ExportArcGISItemComponent","SortOrderAngularEnum","GetSortOrderAngularEnum","SortOrderAngularEnum_GetOrderedText","SortOrderAngularEnum_GetIDText","FileTypeEnum","GetFileTypeEnum","FileTypeEnum_GetOrderedText","FileTypeEnum_GetIDText","SectorTVItemListDetailComponent","LanguageEnum","GetLanguageEnum","LanguageEnum_GetOrderedText","LanguageEnum_GetIDText","MWQMRunTVItemListDetailComponent","FC","BreadCrumbComponent","BreadCrumbTVItemModelList","MikeScenarioItemComponent","FileUploadComponent","fileUploadService","files","file","FormData","append","data","inProgress","upload","UploadProgress","progress","round","loaded","total","Response","error","name","body","fileUpload","uploadFile","onchange","index","uploadFiles","click","onClick","MikeScenarioTVItemListItemComponent","MWQMSiteItemViewComponent","HomeItemComponent","webAllContactsService","loggedInContactService","AdminContactList","ContactModelList","Contact","IsAdmin","Shell","WebMWQMSitesService","KeepWebMWQMSites","GetWebMWQMSites","UpdateWebMWQMSites","DataLoadedWebMWQMSites","MWQMSiteLatestClassificationEnum","GetMWQMSiteLatestClassificationEnum","MWQMSiteLatestClassificationEnum_GetOrderedText","MWQMSiteLatestClassificationEnum_GetIDText","TypeIconService","tvType","Address","BoxModel","Email","File","LabSheetInfo","Tel","VisualPlumesScenario","isHttpResponse","isHttpProgressEvent","DownloadProgress","download","saver","source","state","content","WebSectorService","KeepWebSector","GetWebSector","UpdateWebSector","DataLoadedWebSector","TVItemModelSubsectorList","MIKEScenarios","AppComponent","topComponentEnum","DoLoggedInContact","DoWebAllContacts","MWQMSiteItemComponent","SortMWQMSiteSampleModelListService","mwqmSampleModelSorted","MWQMSample","MWQMSampleID","GetMWQMSampleDateTime_LocalDigit","analysisService","AnalysisItemComponent","StatMWQMSiteList","StatMWQMRunList","AppLanguageService","AnalysisSite","AnalysisSamples","AnalysisPeriod","AnalysisMinFC","AnalysisMaxFC","AnalysisGMean","AnalysisMedian","AnalysisP90","AnalysisPerOver43","AnalysisPerOver260","AnalysisPrecipitation","AnalysisRunDay","AnalysisStartTide","AnalysisEndTide","AnalysisInactive","AnalysisDataVisibleFecalColiform","AnalysisDataVisibleTemperature","AnalysisDataVisibleSalinity","AnalysisDataVisibleP90","AnalysisDataVisibleGeometriMean","AnalysisDataVisibleMedian","AnalysisDataVisiblePerAbove43","AnalysisDataVisiblePerAbove260","AnalysisOptionsAnalysisOptions","AnalysisOptionsStart","AnalysisOptionsEnd","AnalysisOptionsRuns","AnalysisOptionsCalculation","AnalysisOptionsStartDate","AnalysisOptionsEndDate","AnalysisOptionsPPT","AnalysisOptionsHighlightSal","AnalysisOptionsUpperLowerRainLimit","AnalysisOptionsConsideredDry","AnalysisOptionsConsideredWet","AnalysisOptionsDry","AnalysisOptionsWet","AreaShowSectors","AreaSectors","AreaShowFiles","AreaFiles","ContactNotFound","CountryShowProvinces","CountryProvinces","CountryShowFiles","CountryFiles","CountryShowOpenDataNationalTools","CountryOpenDataNational","CountryShowEmailDistributionList","CountryEmailDistributionList","CountryShowRainExceedance","CountryRainExceedance","HomeCSSPWebTools","HomeTheWebToolWillLetYou","HomeViewAndUpdateWWTPInfo","HomeMakeCalculationUsingBoxModelAndVisualPlumes","HomeSetupAndRunMIKEScenariosAndStoreInputsAndResults","HomeManageMWQMInformation","HomeToHaveAccessWebToolsInformationAndApplication","HomePleaseContactASiteAdministratorListedBelow","HomeStartUsingCSSPWebTools","HomeAzureVersion","KB","MunicipalityShowContacts","MunicipalityContacts","MunicipalityShowFiles","MunicipalityFiles","MunicipalityShowInfrastructures","MunicipalityInfrastructures","MunicipalityShowMikeScenarios","MunicipalityMikeScenarios","ProvinceShowAreas","ProvinceAreas","ProvinceShowMunicipalities","ProvinceMunicipalities","ProvinceShowFiles","ProvinceFiles","ProvinceShowOpenData","ProvinceOpenData","ProvinceShowSamplingPlan","ProvinceSamplingPlan","ProvinceShowProvinceTools","ProvinceProvinceTools","RootShowCountries","RootCountries","RootShowFiles","RootFiles","RootShowExportArcGISTools","RootExportArcGIS","Saving","SearchSearch","ShellOpenContextMenu","ShellOpenHistoryMenu","ShellReturnHome","ShellShowMap","ShellResizeMap","ShellNoInternet","SideNavMenuContextMenu","SideNavMenuShowInactiveItems","SideNavMenuInactive","SideNavMenuShowDetails","SideNavMenuDetails","SideNavMenuShowStatCount","SideNavMenuStatCount","SideNavMenuShowLastUpdate","SideNavMenuLastUpdate","SideNavMenuShowEdit","SideNavMenuEdit","SectorShowSubsectors","SectorSubsectors","SectorShowFiles","SectorFiles","SectorShowMIKEScenarios","SectorMIKEScenarios","StatSampleNumber","SubsectorShowMWQMSites","SubsectorMWQMSites","SubsectorShowAnalysis","SubsectorAnalysis","SubsectorShowMWQMRuns","SubsectorMWQMRuns","SubsectorShowPollutionSourceSites","SubsectorPollutionSourceSites","SubsectorShowFiles","SubsectorFiles","SubsectorShowSubsectorTools","SubsectorSubsectorTools","SubsectorShowLogBook","SubsectorLogBook","TVItemListDetailAreaSector","TVItemListDetailAreaSubsector","TVItemListDetailAreaMWQMSample","TVItemListDetailAreaMWQMSite","TVItemListDetailAreaMWQMRun","TVItemListDetailAreaPolSourceSite","TVItemListDetailCountryProvince","TVItemListDetailCountryMunicipality","TVItemListDetailCountryLiftStation","TVItemListDetailCountryWWTP","TVItemListDetailCountryArea","TVItemListDetailCountrySector","TVItemListDetailCountrySubsector","TVItemListDetailCountryMWQMSample","TVItemListDetailCountryMWQMSite","TVItemListDetailCountryMWQMRun","TVItemListDetailCountryPolSourceSite","TVItemListDetailCountryMikeScenario","TVItemListDetailCountryBoxModel","TVItemListDetailCountryVPScenario","TVItemListDetailMunicipalityLiftStation","TVItemListDetailMunicipalityWWTP","TVItemListDetailMunicipalityMikeScenario","TVItemListDetailMunicipalityBoxModel","TVItemListDetailMunicipalityVPScenario","TVItemListDetailMWQMRunDetailPrecipitations","TVItemListDetailMWQMRunDetailDay","TVItemListDetailMWQMSiteDetailStatistics","TVItemListDetailMWQMSiteDetailSamples","TVItemListDetailMWQMSiteDetailDataset","TVItemListDetailMWQMSiteDetailStatisticsPeriod","TVItemListDetailMWQMSiteDetailLastSampleDate","TVItemListDetailMWQMSiteDetailNumberOfSample","TVItemListDetailMWQMSiteDetailMinimumFC","TVItemListDetailMWQMSiteDetailMaximumFC","TVItemListDetailMWQMSiteDetailGeometricMean","TVItemListDetailMWQMSiteDetailMedian","TVItemListDetailMWQMSiteDetailP90","TVItemListDetailMWQMSiteDetailPerOfSampleWithFCOver43","TVItemListDetailMWQMSiteDetailPerOfSampleWithFCOver260","TVItemListDetailProvinceMunicipality","TVItemListDetailProvinceLiftStation","TVItemListDetailProvinceWWTP","TVItemListDetailProvinceArea","TVItemListDetailProvinceSector","TVItemListDetailProvinceSubsector","TVItemListDetailProvinceMWQMSample","TVItemListDetailProvinceMWQMSite","TVItemListDetailProvinceMWQMRun","TVItemListDetailProvincePolSourceSite","TVItemListDetailProvinceMikeScenario","TVItemListDetailProvinceBoxModel","TVItemListDetailProvinceVPScenario","TVItemListDetailSectorSubsector","TVItemListDetailSectorMWQMSample","TVItemListDetailSectorMWQMSite","TVItemListDetailSectorMWQMRun","TVItemListDetailSectorPolSourceSite","TVItemListDetailSectorMikeScenario","TVItemListDetailSubsectorMWQMSample","TVItemListDetailSubsectorMWQMSite","TVItemListDetailSubsectorMWQMRun","TVItemListDetailSubsectorPolSourceSite","PolSourceSiteItemEditComponent","MunicipalityItemViewComponent","WebAllHelpDocsService","webAllMunicipalitiesServices","HelpDocList","KeepWebAllHelpDocs","GetWebAllHelpDocs","UpdateWebAllHelpDocs","DoWebAllMunicipalities","DataLoadedWebAllHelpDocs","MunicipalityTVItemListDetailComponent","MunicipalityItemEditComponent","FilesSortPropEnum","GetFilesSortPropEnum","FilesSortPropEnum_GetOrderedText","FilesSortPropEnum_GetIDText","MapMenuComponent","MWQMRunTVItemListItemComponent","ShellSubComponentEnum","GetShellSubComponentEnum","ShellSubComponentEnum_GetOrderedText","ShellSubComponentEnum_GetIDText","AreaItemViewComponent","TVItemMenuComponent","AppModule","provide","useFactory","MikeScenarioItemViewComponent","AreaItemEditComponent","MWQMSiteTVItemListDetailComponent","HistoryService","CountryItemCreateComponent","fb","formCountryCreate","group","required","Create","WebAllMWQMLookupMPNsService","webAllPolSourceGroupingsService","KeepWebAllMWQMLookupMPNs","GetWebAllMWQMLookupMPNs","UpdateWebAllMWQMLookupMPNs","DoWebAllPolSourceGroupings","DataLoadedWebAllMWQMLookupMPNs","WebMunicipalityService","KeepWebMunicipality","GetWebMunicipality","UpdateWebMunicipality","DataLoadedWebMunicipality","Contacts","LogBookItemComponent","SectorItemComponent","sectorSubComponentEnum","MWQMSiteItemEditComponent","SharedModule","CountryItemModifyComponent","formCountryModify","Modify","WebAllTelsService","webAllTideLocationsServices","KeepWebAllTels","GetWebAllTels","UpdateWebAllTels","DoWebAllTideLocations","DataLoadedWebAllTels","SubsectorItemViewComponent","MunicipalitySubComponentEnum","GetMunicipalitySubComponentEnum","MunicipalitySubComponentEnum_GetOrderedText","MunicipalitySubComponentEnum_GetIDText","SearchService","valueChanges","term","GetSearchData","SearchResult","trim","ErrorComponent","WebAllAddressesService","KeepWebAllAddresses","GetWebAllAddresses","UpdateWebAllAddresses","DataLoadedWebAllAddresses","ProvinceItemViewComponent","WebDrogueRunsService","KeepWebDrogueRuns","GetWebDrogueRuns","UpdateWebDrogueRuns","DoWebMWQMSamples","DataLoadedWebDrogueRuns","WebAllProvincesService","webAllReportTypesService","KeepWebAllProvinces","GetWebAllProvinces","UpdateWebAllProvinces","DoWebAllReportTypes","DataLoadedWebAllProvinces","MWQMRunItemComponent","SubsectorTVItemListDetailComponent","FilePurposeEnum","GetFilePurposeEnum","FilePurposeEnum_GetOrderedText","FilePurposeEnum_GetIDText","InfrastructureItemComponent","AnalysisCalculationTypeEnum","GetAnalysisCalculationTypeEnum","AnalysisCalculationTypeEnum_GetOrderedText","AnalysisCalculationTypeEnum_GetIDText","SectorItemEditComponent","AppLoadedService","appLoaded","WebAllTideLocationsService","TideLocationList","KeepWebAllTideLocations","GetWebAllTideLocations","UpdateWebAllTideLocations","DataLoadedWebAllTideLocations","SubsectorToolsItemComponent","StatCountService","TVItemStatList","ChildCount","tvItemStat","FileListItemComponent","fileIconService","fileService","downloads","TVFileModel","download$","FileListItemEditComponent","RainExceedanceItemComponent","SortMWQMSiteModelListService","predicateAscByService","mwqmSiteModelSorted","PredicateAscBy","FileListItemViewComponent","WebAllPolSourceSiteEffectTermsService","webAllProvincesService","PolSourceSiteEffectTermList","KeepWebAllPolSourceSiteEffectTerms","GetWebAllPolSourceSiteEffectTerms","UpdateWebAllPolSourceSiteEffectTerms","DoWebAllProvinces","DataLoadedWebPolSourceSiteEffectTerms","CountrySubComponentEnum","GetCountrySubComponentEnum","CountrySubComponentEnum_GetOrderedText","CountrySubComponentEnum_GetIDText","MWQMSiteSubComponentEnum","GetMWQMSiteSubComponentEnum","MWQMSiteSubComponentEnum_GetOrderedText","MWQMSiteSubComponentEnum_GetIDText","EmailDistributionListItemComponent","WebSubsectorService","KeepWebSubsector","GetWebSubsector","UpdateWebSubsector","Analysis","MWQMRuns","PollutionSourceSites","SubsectorTools","LogBook","FileListItemDetailComponent","fileTypeEnum","WebAllContactsService","webAllCountriesService","KeepWebAllContacts","GetWebAllContacts","UpdateWebAllContacts","DoWebAllCountries","DataLoadedWebAllContacts","ProvinceItemEditComponent","WebAreaService","KeepWebArea","GetWebArea","UpdateWebArea","DataLoadedWebArea","TVItemModelSectorList","TypeTextService","AreaTVItemListDetailComponent","AnalysisDataVisibleComponent","formDataVisible","disabled","TVItemSortOrderService","sortOrderItem","ascDesc","MunicipalityMIKEScenarios","SectorMikeScenarios","SubsectorPolSourceSites","SortTVItemListService","breadCrumb","TVTypeOfList","AscDesc","tvItemStatMapModelSorted","ContactItemComponent","AreaSubComponentEnum","GetAreaSubComponentEnum","AreaSubComponentEnum_GetOrderedText","AreaSubComponentEnum_GetIDText","ProvinceSubComponentEnum","GetProvinceSubComponentEnum","ProvinceSubComponentEnum_GetOrderedText","ProvinceSubComponentEnum_GetIDText","TogglesService","ReloadPage","MunicipalityTVItemListItemComponent","PolSourceSiteItemComponent","ComponentButtonSelectionService","MikeScenarioTVItemListDetailComponent","WebMWQMSamplesService","sortMWQMRunListService","sortMWQMSiteModelService","sortMWQMSiteSampleModelListService","KeepWebMWQMSamples","GetWebMWQMSamples1980_2020","countR","r","UseInStat","MWQMSiteModelActiveList","SortMWQMSiteModelListByTVTextAsc","IsActive","MWQMSiteModelInactiveList","countSite","MWQMSiteTVItemID","FillMWQMSiteSampleStatForMWQMSites","FillMWQMSiteSampleStatForAnalysis","GetSalinityAverage","MWQMSiteModel","statMWQMSiteSampleList","valCount","mwqmRunModelSiteAndSampleModel","mwqmSiteModelAndSampleModelList","mwqmRunModelList","MWQMRunModelList","MWQMRunModel","mwqmSampleModelList","MWQMSampleModelList","mwqmSampleModelTempList","MWQMSiteModelAndSampleModelList","statMWQMSiteList","MWQMRunRoutineDescList","SortMWQMRunListDescByDate","countRun","IsOKRun","MWQMRunTVItemID","RainDay0","RainDay0_mm","RainDay1_mm","RainDay2_mm","RainDay3_mm","RainDay4_mm","RainDay5","RainDay5_mm","RainDay6","RainDay6_mm","RainDay7","RainDay7_mm","RainDay8","RainDay8_mm","RainDay9","RainDay9_mm","RainDay10","RainDay10_mm","RunDate","RunIndex","RunYear","RunMonth","RunDay","StartTide","Tide_Start","EndTide","Tide_End","UpdateWebMWQMSamples1980_2020","GetWebMWQMSamples2021_2060","UpdateWebMWQMSamples2021_2060","SampleTypeText","Routine","StatRuns","MWQMSiteSampleModelSortedList","SortMWQMSiteSampleModelListDescByDate","EndYear","StartYear","SampleCount","countSample","sUsed","useCount","RunDateText","found","s","SampleDateText","SampleMonth","SampleDay","IsRouting","SampleTypesText","Depth","Depth_m","FecCol_MPN_100ml","PH","Salinity_PPT","SampleDate","Temp","WaterTemp_C","Samples","skipVal","Dry","Wet","FCList","YearList","countRuns","shift","DataText","join","SampCount","PercOver43","PercOver260","MinFC","MaxFC","Median","GetMedian","P90","GetP90","GeoMean","GetGeometricMean","ColorAndLetter","GetColorAndLetter","StatEndYear","MinYear","StatStartYear","MaxYear","countStat","dataOver43","dataOver260","prod","pow","colorAndLetter","letter","hexColor","sortedData","countFC","n1","n2","size","mid","fcLogList","LN10","Average","Sum","d","SD","GetStandardDeviation","P90Log","avg","sum","sqrt","concat","FillStatMWQMRunList","DataLoadedWebMWQMSamples","PredicateAscByService","SamplingPlanItemComponent","SAVER","getSaver","TideTextEnum","GetTideTextEnum","TideTextEnum_GetOrderedText","TideTextEnum_GetIDText","AnalysisOptionsComponent","enumIDAndTextList","rangeVal","salDevVal","formStat","GetAnalysisCalculationTypeEnum_GetOrderedText","GetDryRain","GetWetRain","AnalysisItemMenuComponent","ShowData","SubsectorItemEditComponent","SideNavMenuComponent","LastUpdateTVItemModelComponent","StructureTVFileListService","TVFileModelList","tvFileModelListList","arrFile2","tvFileModelList","tvFileModelSortedList","FilePurpose","k","l","ProvinceItemComponent","provinceSubComponentEnum","ContactNameService","GetContactName","LastUpdateContactTVItemID","contactModelList","ContactTVItemID","FirstName","LastName","SearchOptionComponent","typeTextService","typeIconService","bootstrapModule","err","webpackEmptyAsyncContext","req","then","code","module","exports","id","SectorItemViewComponent"],"mappingsmBAAS,QAAAA,sBAAA,kGAAT;AAAiH,WAAjH;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,mGAAT;AAAkH,WAAlH;;AAEA;;AACJ;;;;;;AAYI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,iGAAT;AAAgH,WAAhH;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,kGAAT;AAAiH,WAAjH;;AAEA;;AACJ;;;;;;AAOI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,uGAAT;AAAsH,WAAtH;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,wGAAT;AAAuH,WAAvH;;AAEA;;AACJ;;;;;;AAOI;;AACI;;AAEJ;;;;;;AAFI;;AAAA;;;;;;AAgBZ;;;;;;;;AAEI,gLAAkD,iBAAlD,EAAkD,uKAAlD;;;;;;AAIJ;;AACI;;AAKJ;;;;;;;;;;AALuB;;AAAA,gLAAkD,iBAAlD,EAAkD,uKAAlD,EAAkD,kBAAlD,EAAkD,yJAAlD,EAAkD,iBAAlD,EAAkD,wJAAlD;;;;;;AAOvB;;;;;;;;AAEI,gLAAkD,iBAAlD,EAAkD,qKAAlD;;;;;;AAIJ;;;;;;;;AAEI,gLAAkD,iBAAlD,EAAkD,iLAAlD;;;;;;AAIJ;;;;;;;;AACI,gLAAkD,qBAAlD,EAAkD,qKAAlD;;;;;;AAIJ;;AACI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;UD9GaC,sB;AAMX,wCAAmBC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSC,mBAHT,EAISC,qBAJT,EAKSN,sBALT,EAMSO,gBANT,EAOSC,+BAPT,EAQSC,oBART,EAQqD;AAAA;;AARlC,eAAAP,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AACA,eAAAN,sBAAA,GAAAA,sBAAA;AACA,eAAAO,gBAAA,GAAAA,gBAAA;AACA,eAAAC,+BAAA,GAAAA,+BAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AAbT,eAAAC,yBAAA,GAA4B,wHAA5B;AACA,eAAAC,UAAA,GAAa,0FAAb;AACA,eAAAC,WAAA,GAAc,4FAAd;AACA,eAAAC,gBAAA,GAAmB,8GAAnB;AAUwD;;;;iBAExD,oBAAQ;AACN,iBAAKR,mBAAL,CAAyBS,cAAzB,CAAwC,KAAKZ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBArBUhB,sB,EAAsB,mJ,EAAA,qJ,EAAA,yJ,EAAA,mK,EAAA,wK,EAAA,2K,EAAA,8J,EAAA,6L,EAAA,sK;AAAA,O;;;cAAtBA,sB;AAAsB,2C;AAAA,iB;AAAA,gB;AAAA,4iB;AAAA;AAAA;ACrBnC;;;;AAGA;;;;AAIA;;AACI;AAAA,qBAAS,IAAAQ,oBAAA,uDAAT;AAAgF,aAAhF;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,sDAAT;AAA+E,aAA/E;;AAEA;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,sDAAT;AAA+E,aAA/E;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,kEAAT;AAA2F,aAA3F;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,mDAAT;AAA4E,aAA5E;;AAEA;;AACI;;AACA;;AAIJ;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,4DAAT;AAAqF,aAArF;;AAEA;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,qDAAT;AAA8E,aAA9E;;AAEA;;AACJ;;AAEA;;AAMA;;AAQA;;AAMA;;AAMA;;AAKA;;AAIA;;;;;;;;;;;;AAjIO;;AAGoB;;AAAA;;AAMvB;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAGf;;AAAA;;AAIA;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAQ9B;;AAAA;;AAFe;;AAGf;;AAAA;;AAIA;;AAAA;;AAFe;;AAGf;;AAAA;;AAIC;;AAAA;;AAKC;;AAAA;;AASD;;AAAA;;AAMA;;AAAA;;AAKW;;AAAA;;AAKV;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AChIN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaS,iB;AAEX,mCAAoBhB,eAApB,EACUE,kBADV,EACkD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACT;;;;iBAED,mDAA0Ce,kBAA1C,EAAkF;AAChF,gBAAIA,kBAAkB,KAAKC,SAA3B,EAAsC;AACpC,qBAAO,EAAP;AACD;;AAED,gBAAID,kBAAkB,CAACE,cAAnB,KAAsCD,SAA1C,EACA;AACE,qBAAO,EAAP;AACD;;AAED,mBAAO,KAAKE,mBAAL,CAAyBH,kBAAkB,CAACE,cAAnB,CAAkCE,QAAlC,EAAzB,EAAuE,IAAvE,CAAP;AACD;;;iBAED,uCAA8BC,OAA9B,EAAgD;AAC9C,gBAAIC,QAAQ,GAAWD,OAAO,CAACE,cAAR,CAAuBH,QAAvB,EAAvB;AAEA,6BAAUE,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAV,cAAsCF,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAtC,cAAkEF,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,EAAtB,CAAlE;AACD;;;iBAED,0CAAiCC,UAAjC,EAAyD;AACvD,gBAAIH,QAAQ,GAAWG,UAAU,CAACC,oBAAX,CAAgCN,QAAhC,EAAvB;AAEA,6BAAUE,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAV,cAAsCF,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAtC,cAAkEF,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,EAAtB,CAAlE;AACD;;;iBAED,2CAAkCC,UAAlC,EAA0D;AACxD,mBAAO,KAAKN,mBAAL,CAAyBM,UAAU,CAACC,oBAAX,CAAgCN,QAAhC,EAAzB,EAAqE,KAArE,CAAP;AACD;;;iBAED,sCAA6BO,WAA7B,EAAuD;AACrD,mBAAO,KAAKR,mBAAL,CAAyBQ,WAAW,CAACC,MAAZ,CAAmBC,kBAAnB,CAAsCT,QAAtC,EAAzB,EAA2E,KAA3E,CAAP;AACD;;;iBAED,sCAA6BU,WAA7B,EAAuD;AACrD,mBAAO,KAAKX,mBAAL,CAAyBW,WAAW,CAACC,MAAZ,CAAmBF,kBAAnB,CAAsCT,QAAtC,EAAzB,EAA2E,KAA3E,CAAP;AACD;;;iBAED,2BAAkBU,WAAlB,EAA4C;AAC1C,mBAAO,KAAKX,mBAAL,CAAyBW,WAAW,CAACC,MAAZ,CAAmBC,mBAAnB,CAAuCZ,QAAvC,EAAzB,EAA4E,KAA5E,CAAP;AACD;;;iBAEO,6BAAoBE,QAApB,EAAsCW,QAAtC,EAAyD;AAC/D,gBAAIC,IAAI,GAAWC,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAA3B;AACA,gBAAIY,KAAK,GAAWD,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAA5B;AACA,gBAAIa,GAAG,GAAWF,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,EAAtB,CAAD,CAA1B;;AACA,gBAAI,CAACS,QAAL,EAAe;AACb,kBAAIK,IAAI,GAAWH,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,EAAnB,EAAuB,EAAvB,CAAD,CAA3B;AACA,kBAAIe,MAAM,GAAWJ,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,EAAnB,EAAuB,EAAvB,CAAD,CAA7B;AACA,kBAAIgB,MAAM,GAAWL,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,EAAnB,EAAuB,EAAvB,CAAD,CAA7B;AACA,kBAAIiB,QAAQ,GAAWH,IAAI,GAAG,EAAP,cAAgBA,IAAhB,cAA4BA,IAA5B,CAAvB;AACA,kBAAII,UAAU,GAAWH,MAAM,GAAG,EAAT,cAAkBA,MAAlB,cAAgCA,MAAhC,CAAzB;AACA,kBAAII,UAAU,GAAWH,MAAM,GAAG,EAAT,cAAkBA,MAAlB,cAAgCA,MAAhC,CAAzB;;AACA,kBAAI,KAAKzC,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAvE,EAA2E;AACzE,iCAAUR,GAAV,cAAiB,KAAKS,YAAL,CAAkBV,KAAlB,EAAyB,KAAzB,CAAjB,cAAoDF,IAApD,cAA4DO,QAA5D,cAAwEC,UAAxE,cAAsFC,UAAtF;AACD;;AAED,+BAAU,KAAKG,YAAL,CAAkBV,KAAlB,EAAyB,KAAzB,CAAV,cAA6CC,GAA7C,eAAqDH,IAArD,cAA6DO,QAA7D,cAAyEC,UAAzE,cAAuFC,UAAvF;AACD,aAZD,MAaK;AACH,kBAAI,KAAK5C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAvE,EAA2E;AACzE,iCAAUR,GAAV,cAAiB,KAAKS,YAAL,CAAkBV,KAAlB,EAAyB,KAAzB,CAAjB,cAAoDF,IAApD;AACD;;AAED,+BAAU,KAAKY,YAAL,CAAkBV,KAAlB,EAAyB,KAAzB,CAAV,cAA6CC,GAA7C,eAAqDH,IAArD;AAED;AACF;;;iBAED,sBAAaa,KAAb,EAAoD;AAAA,gBAAxBC,OAAwB,uEAAL,KAAK;;AAClD,oBAAQD,KAAR;AACE,mBAAK,CAAL;AACE;AACE,sBAAIC,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCC,kBAApC,CAAuD,KAAKnD,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAjG,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCE,WAApC,CAAgD,KAAKpD,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1F,CAAP;AACD;;AACH,mBAAK,CAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCG,mBAApC,CAAwD,KAAKrD,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAlG,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCI,YAApC,CAAiD,KAAKtD,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3F,CAAP;AACD;;AACH,mBAAK,CAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCK,gBAApC,CAAqD,KAAKvD,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA/F,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCM,SAApC,CAA8C,KAAKxD,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAxF,CAAP;AACD;;AACH,mBAAK,CAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCO,gBAApC,CAAqD,KAAKzD,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA/F,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCQ,SAApC,CAA8C,KAAK1D,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAxF,CAAP;AACD;;AACH,mBAAK,CAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCS,cAApC,CAAmD,KAAK3D,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA7F,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCU,OAApC,CAA4C,KAAK5D,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAtF,CAAP;AACD;;AACH,mBAAK,CAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCW,eAApC,CAAoD,KAAK7D,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA9F,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCY,QAApC,CAA6C,KAAK9D,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAvF,CAAP;AACD;;AACH,mBAAK,CAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCa,eAApC,CAAoD,KAAK/D,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA9F,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCc,QAApC,CAA6C,KAAKhE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAvF,CAAP;AACD;;AACH,mBAAK,CAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCe,iBAApC,CAAsD,KAAKjE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAhG,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCgB,UAApC,CAA+C,KAAKlE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAzF,CAAP;AACD;;AACH,mBAAK,CAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCiB,oBAApC,CAAyD,KAAKnE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAnG,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCkB,aAApC,CAAkD,KAAKpE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA5F,CAAP;AACD;;AACH,mBAAK,EAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCmB,kBAApC,CAAuD,KAAKrE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAjG,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCoB,WAApC,CAAgD,KAAKtE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1F,CAAP;AACD;;AACH,mBAAK,EAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCqB,mBAApC,CAAwD,KAAKvE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAlG,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCsB,YAApC,CAAiD,KAAKxE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3F,CAAP;AACD;;AACH,mBAAK,EAAL;AACE;AACE,sBAAII,OAAJ,EAAa;AACX,2BAAO,KAAK/C,kBAAL,CAAwBgD,WAAxB,CAAoCuB,mBAApC,CAAwD,KAAKzE,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAlG,CAAP;AACD;;AACD,yBAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,CAAoCwB,YAApC,CAAiD,KAAK1E,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3F,CAAP;AACD;AApFL;AAsFD;;;;;;;yBAjKU7B,iB,EAAiB,0I,EAAA,gJ;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;;;;;;;;;;;;;ACVd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMa2D,e;AAEX,mCAAc;AAAA;AACb;;;;iBAED,qBAAY5C,WAAZ,EAAsC;AACpC,gBAAI6C,QAAQ,GAAW,EAAvB;;AACA,oBAAQ7C,WAAW,CAACC,MAAZ,CAAmB6C,QAA3B;AACE,mBAAK,kFAAaC,GAAlB;AACA,mBAAK,kFAAaC,IAAlB;AACE;AACEH,0BAAQ,GAAG,cAAX;AACD;AACD;;AACF,mBAAK,kFAAaI,IAAlB;AACA,mBAAK,kFAAaC,IAAlB;AACA,mBAAK,kFAAaC,IAAlB;AACA,mBAAK,kFAAaC,IAAlB;AACE;AACEP,0BAAQ,GAAG,iBAAX;AACD;AACD;;AACF,mBAAK,kFAAaQ,IAAlB;AACE;AACER,0BAAQ,GAAG,aAAX;AACD;AACD;;AACF,mBAAK,kFAAaS,GAAlB;AACA,mBAAK,kFAAaC,IAAlB;AACA,mBAAK,kFAAaC,GAAlB;AACA,mBAAK,kFAAaC,GAAlB;AACE;AACEZ,0BAAQ,GAAG,cAAX;AACD;AACD;;AACF,mBAAK,kFAAaa,IAAlB;AACE;AACEb,0BAAQ,GAAG,aAAX;AACD;AACD;;AACF,mBAAK,kFAAac,GAAlB;AACA,mBAAK,kFAAaC,GAAlB;AACE;AACEf,0BAAQ,GAAG,oBAAX;AACD;AACD;;AACF,mBAAK,kFAAagB,GAAlB;AACA,mBAAK,kFAAaC,GAAlB;AACA,mBAAK,kFAAaC,GAAlB;AACE;AACElB,0BAAQ,GAAG,oBAAX;AACD;AACD;;AACF,mBAAK,kFAAamB,KAAlB;AACA,mBAAK,kFAAaC,IAAlB;AACE;AACEpB,0BAAQ,GAAG,eAAX;AACD;AACD;;AACF,mBAAK,kFAAaqB,GAAlB;AACE;AACErB,0BAAQ,GAAG,aAAX;AACD;AACD;;AACF,mBAAK,kFAAasB,GAAlB;AACE;AACEtB,0BAAQ,GAAG,YAAX;AACD;AACD;;AACF,mBAAK,kFAAauB,GAAlB;AACE;AACEvB,0BAAQ,GAAG,oBAAX;AACD;AACD;;AACF;AACE;AACEA,0BAAQ,GAAG,oBAAX;AACD;AAtEL;;AAyEA,uDAAoCA,QAApC;AAED;;;;;;;yBAlFUD,e;AAAe,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYyB,mBAAZ;;AAAA,iBAAYA,mBAAZ,EAA+B;AAC3B;AACA;AACA;AACH,OAJD,EAAYA,mBAAmB,KAAnBA,mBAAmB,MAA/B;;AAMO,eAASC,sBAAT,GAA+B;AAEpC,eAAOD,mBAAP;AACD;;AAEM,eAASE,kCAAT,CAA4CtG,eAA5C,EAA4E;;;AAC/E,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAJD,MAKK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASK,6BAAT,CAAuCC,MAAvC,EAAuDhH,eAAvD,EAAuF;AAC1F,YAAIiH,mBAAJ;AACAX,0CAAkC,CAACtG,eAAD,CAAlC,CAAoDkH,OAApD,CAA4D,UAAAC,CAAC,EAAI;AAC7D,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC/CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAOR;;;;;;AAA8E,+GAAoC,aAApC,EAAoC,kBAApC;;;;;;AAE9E;;;;;;AACI;;;;;;AAOI;;AAA6B;;AAAQ;;;;;;AAAR;;AAAA;;;;;;AAJjC;;AACI;;;;AAC4D;;AAChD;;AACZ;;AACJ;;;;;;;;AAHQ;;AAAA;;AADE;;AACsD;;AAAA;;AAErD;;AAAA;;;;;;AALf;;AACI;;AAMJ;;;;;;;;AANW;;AAAA;;;;UDLEG,sC;AAYX,wDAAmBpH,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSmH,cAHT,EAISC,UAJT,EAKSC,iBALT,EAMSnH,qBANT,EAMuD;AAAA;;AANpC,eAAAJ,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAmH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAnH,qBAAA,GAAAA,qBAAA;AAZT,eAAAoH,YAAA,GAAe,8FAAf;AACA,eAAA/G,UAAA,GAAa,0FAAb;AACA,eAAAgH,4BAAA,GAA+B,sIAA/B;AAEA,eAAAtF,IAAA,GAAe,CAAf;AASC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;iBAED,uDAA8CsF,4BAA9C,EAA4G;AAC1G,mBAAO,4IAA2CA,4BAA3C,EAAyE,KAAKzH,eAA9E,CAAP;AACD;;;iBAED,0BAAiBuB,QAAjB,EAAmC;AACjC,gBAAImG,UAAU,GAAGtF,QAAQ,CAACb,QAAD,CAAzB;;AACA,gBAAImG,UAAU,IAAI,KAAKvF,IAAvB,EAA6B;AAC3B,mBAAKA,IAAL,GAAYuF,UAAZ;AACA,qBAAO,IAAP;AACD,aAHD,MAIK;AACH,qBAAO,KAAP;AACD;AACF;;;;;;;yBAxCUN,sC,EAAsC,mJ,EAAA,qJ,EAAA,yJ,EAAA,yJ,EAAA,4I,EAAA,+J,EAAA,yK;AAAA,O;;;cAAtCA,sC;AAAsC,+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,8M;AAAA;AAAA;ACrBnD;;AACI;;AACJ;;AACA;;AAAM;;AAAM;;AACZ;;AACI;;AACJ;;AACA;;AAAM;;AAAM;;AACZ;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AAEA;;AAGA;;;;;;;;AAxBI;;AAAA;;AAGE;;AAAA;;AAIA;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAGA;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAGK;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCpBxBO,sB;AACT,0CAAc;AAAA;AACb;;;;iBAED,yBAAgBC,IAAhB,EAAsB;AAClB,mBAAO,UAAUhB,CAAV,EAAaC,CAAb,EAAgB;AACnB,kBAAID,CAAC,CAACgB,IAAD,CAAD,GAAUf,CAAC,CAACe,IAAD,CAAf,EAAuB;AACnB,uBAAO,CAAP;AACH,eAFD,MAEO,IAAIhB,CAAC,CAACgB,IAAD,CAAD,GAAUf,CAAC,CAACe,IAAD,CAAf,EAAuB;AAC1B,uBAAO,CAAC,CAAR;AACH;;AACD,qBAAO,CAAP;AACH,aAPD;AAQH;;;;;;;yBAbQD,sB;AAAsB,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;ACDhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaE,wB;AAKT,0CAAoBC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIY6H,iBAJZ,EAKYC,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA6H,iBAAA,GAAAA,iBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,6BAAoBoF,OAApB,EAAsC;;;AAClC,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,wBAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwH,iBAA7C,MAA8D,IAA9D,IAA8D,aAA9D,GAA8D,MAA9D,GAA8D,GAAEC,mBAAhE,MAAmF,IAAnF,IAAmF,aAAnF,GAAmF,MAAnF,GAAmF,GAAEC,MAArF,IAA8F,CAAlG,EAAqG;AACnG,mBAAKC,qBAAL;AACD,aAFD,MAGK;AACH,mBAAKN,GAAL,GAAW,KAAKO,oBAAL,GAA4BC,SAA5B,EAAX;AACD;AACF;;;iBAEK,gCAAuB;AAAA;;AAC3B,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEN,+BAAiB,EAAE;AAArB,aAAjD;AACA,iBAAKtI,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,sGAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,+BAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAuCF,GAAvC,EAA4CG,IAA5C,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,mBAAI,CAACC,uBAAL,CAA6BD,CAA7B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,KAAI,CAACnB,OAAT,EAAkB;AACd,qBAAI,CAACuB,YAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAtC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,qBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,wBAAe;AACnB,iBAAKY,iBAAL,CAAuB0B,YAAvB,CAAoC,KAAKvB,OAAzC;AACH;;;iBAEO,iCAAwB;;;AAC5B,iBAAKoB,uBAAL,CAA6B,CAAD,WAAC,KAAKrJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwH,iBAA3E;AACAiB,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwH,iBAA5D;;AACA,gBAAI,KAAKJ,OAAT,EAAkB;AACd,mBAAKuB,YAAL;AACH;AACJ;;;iBAEO,iCAAwBJ,CAAxB,EAA8C;AAClD,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEN,+BAAiB,EAAEe;AAArB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgC4B,2BAAhC,EAAJ,EAAmE;AAC/D,qBAAK5J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQnB,wB,EAAwB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,uJ,EAAA,0K;AAAA,O;;;eAAxBA,wB;AAAwB,iBAAxBA,wBAAwB,K;AAAA,oBAFrB;;;;;;;;;;;;;;;;;ACZhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACHA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAQI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAA/H,sBAAA,gGAAT;AAA+G,WAA/G;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,iGAAT;AAAgH,WAAhH;;AAEA;;AACJ;;;;;;AAOI;;AACI;;AAEJ;;;;;;AAFI;;AAAA;;;;;;AAqBZ;;;;;;;;AACI,8KAAkD,iBAAlD,EAAkD,6MAAlD;;;;;;AAIJ;;;;;;;;AACI,8KAAkD,qBAAlD,EAAkD,qMAAlD;;;;;;AAIJ;;AACI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;UDtDa+J,oB;AAMX,sCAAmB7J,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS4J,iBAHT,EAIShK,sBAJT,EAKSO,gBALT,EAMSC,+BANT,EAOSC,oBAPT,EAOqD;AAAA;;AAPlC,eAAAP,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA4J,iBAAA,GAAAA,iBAAA;AACA,eAAAhK,sBAAA,GAAAA,sBAAA;AACA,eAAAO,gBAAA,GAAAA,gBAAA;AACA,eAAAC,+BAAA,GAAAA,+BAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AAZT,eAAAwJ,uBAAA,GAA0B,oHAA1B;AACA,eAAAtJ,UAAA,GAAa,0FAAb;AACA,eAAAC,WAAA,GAAc,4FAAd;AACA,eAAAC,gBAAA,GAAmB,8GAAnB;AAWC;;;;iBAED,oBAAQ;AACN,iBAAKmJ,iBAAL,CAAuBE,YAAvB,CAAoC,KAAKhK,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA9E,EAA+F,IAA/F;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAtBU8I,oB,EAAoB,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J,EAAA,0K,EAAA,8J,EAAA,6L,EAAA,sK;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA,iB;AAAA,gB;AAAA,ie;AAAA;AAAA;ACpBjC;;;;AAGA;;;;AAIA;;AACI;AAAA,qBAAS,IAAAtJ,oBAAA,mDAAT;AAA4E,aAA5E;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,+CAAT;AAAwE,aAAxE;;AAEA;;AACI;;AACA;;AAIJ;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,0DAAT;AAAmF,aAAnF;;AAEA;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,+DAAT;AAAwF,aAAxF;;AAEA;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,wDAAT;AAAiF,aAAjF;;AAEA;;AACJ;;AAEA;;AAKA;;AAKA;;AAIA;;AAIA;;;;;;;;;;AAxEO;;AAGoB;;AAAA;;AAMvB;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAQ9B;;AAAA;;AAFe;;AAGf;;AAAA;;AAIA;;AAAA;;AAFe;;AAGf;;AAAA;;AAIA;;AAAA;;AAFe;;AAGf;;AAAA;;AAG4B;;AAAA;;AAKhB;;AAAA;;AAKV;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACrEN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOa0J,e;AAEX,iCACUhK,gBADV,EAEUD,eAFV,EAGUkK,IAHV,EAIyBC,IAJzB,EAIoC;AAAA;;AAH1B,eAAAlK,gBAAA,GAAAA,gBAAA;AACA,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAAkK,IAAA,GAAAA,IAAA;AACe,eAAAC,IAAA,GAAAA,IAAA;AAExB;;;;iBAED,kBAASpI,WAAT,EAAiC;AAAA;;AAC/B,gBAAIkH,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD,KAAKlJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3F,0BAAmHd,WAAW,CAACF,MAAZ,CAAmBuI,QAAtI,cAAkJrI,WAAW,CAACC,MAAZ,CAAmBqI,cAArK,CAAP;AAEA,mBAAO,KAAKH,IAAL,CAAUf,GAAV,CAAcF,GAAd,EAAmB;AACxBqB,4BAAc,EAAE,IADQ;AAExBC,qBAAO,EAAE,QAFe;AAGxBC,0BAAY,EAAE;AAHU,aAAnB,EAIJpB,IAJI,CAIC,wFAAS,UAAAqB,IAAI;AAAA,qBAAI,MAAI,CAACN,IAAL,CAAUM,IAAV,EAAgB1I,WAAW,CAACC,MAAZ,CAAmBqI,cAAnC,CAAJ;AAAA,aAAb,CAJD,CAAP;AAKD;;;iBAGD,cAAKpB,GAAL,EAAkByB,QAAlB,EAAmC;AACjC,mBAAO,KAAKR,IAAL,CAAUf,GAAV,CAAcF,GAAd,EAAmB;AACxBuB,0BAAY,EAAE;AADU,aAAnB,CAAP;AAGD;;;;;;;yBAzBUP,e,EAAe,4I,EAAA,0I,EAAA,uH,EAAA,uDAMhB,6EANgB,C;AAMX,O;;;eANJA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBADF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCKbU,wB;AAIX,0CAAmB3K,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAER;;;;iBAED,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAfUD,wB,EAAwB,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAAxBA,wB;AAAwB,8C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA;AAAA;ACdrC;;AAAM;;AAAe;;;;;;;;;;;;;;;;;;;;;ACArB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYE,oBAAZ;;AAAA,iBAAYA,oBAAZ,EAAgC;AAC5B;AACA;AACA;AACH,OAJD,EAAYA,oBAAoB,KAApBA,oBAAoB,MAAhC;;AAMO,eAASC,uBAAT,GAAgC;AAErC,eAAOD,oBAAP;AACD;;AAEM,eAASE,mCAAT,CAA6C/K,eAA7C,EAA6E;;;AAChF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAJD,MAKK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASsE,8BAAT,CAAwChE,MAAxC,EAAwDhH,eAAxD,EAAwF;AAC3F,YAAIiH,mBAAJ;AACA8D,2CAAmC,CAAC/K,eAAD,CAAnC,CAAqDkH,OAArD,CAA6D,UAAAC,CAAC,EAAI;AAC9D,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC9CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmBagE,iB;AAMX,mCAAoBnD,UAApB,EACU9H,eADV,EAEUC,gBAFV,EAGUC,kBAHV,EAIUgL,qBAJV,EAKUC,0BALV,EAMU7D,UANV,EAOUU,0BAPV,EAQUoD,cARV,EAQ0C;AAAA;;;;AARtB,eAAAtD,UAAA,GAAAA,UAAA;AACV,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgL,qBAAA,GAAAA,qBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AACA,eAAA7D,UAAA,GAAAA,UAAA;AACA,eAAAU,0BAAA,GAAAA,0BAAA;AACA,eAAAoD,cAAA,GAAAA,cAAA;AAVV,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAWC;;;;iBAED,sBAAauI,QAAb,EAA+BnD,OAA/B,EAAiD;;;AAC/C,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwK,UAAjD,EAA6D;AAC3D,mBAAKC,cAAL;AACD,aAFD,MAGK;AACH,mBAAKpD,GAAL,GAAW,KAAKqD,aAAL,GAAqB7C,SAArB,EAAX;AACD;AACF;;;iBAEO,yBAAgB;AAAA;;AACtB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/C0C,wBAAU,EAAE;AADmC,aAAjD;AAGA,iBAAKtL,eAAL,CAAqB6I,cAArB,CAA8C;AAC5CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,wFAArE,CADsC;AAE5Ce,qBAAO,EAAE;AAFmC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,iCAAwI,KAAKwI,QAA7I,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAgCF,GAAhC,EAAqCG,IAArC,CACL,2DAAI,UAACC,CAAD,EAAY;AACd,oBAAI,CAACoC,gBAAL,CAAsBpC,CAAtB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,MAAI,CAACnB,OAAT,EAAkB,CAChB;AACD;AACF,aAND,CADK,EAQL,kEAAW,UAAAf,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAClC,sBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACD,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARK,CAAP;AAaD;;;iBAEO,0BAAiB;;;AACvB,iBAAKsE,gBAAL,CAAsB,CAAD,WAAC,KAAKxL,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwK,UAApE;AACA/B,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwK,UAA5D;;AACA,gBAAI,KAAKpD,OAAT,EAAkB,CAChB;AACD;AACF;;;iBAEO,0BAAiBmB,CAAjB,EAAgC;;;AAEtC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/C0C,wBAAU,EAAEjC;AADmC,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAEwK,UAA7C,MAAuD,IAAvD,IAAuD,aAAvD,GAAuD,MAAvD,GAAuD,GAAEK,WAAxF;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AAChB,kBAAI,KAAKF,0BAAL,CAAgC4D,oBAAhC,EAAJ,EAA4D;AAC1D,qBAAK5L,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACD;AACF,aAJD,MAKK;AACH,mBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,sBAAM,EAAE,EAAV;AAAcE,uBAAO,EAAE;AAAvB,eAA9C;AACD;;AAED,gBAAI,KAAKhJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC5D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgL,mBAA1C,IAAiE,wGAAwBC,SAA7F,EAAwG;AACtG,qBAAKzE,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDY,uBAD5D,GAEK,CAAC,KAAKjM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDK,WAAxD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgL,mBAA1C,IAAiE,wGAAwBK,KAA7F,EAAoG;AAClG,qBAAK7E,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDY,uBAD5D,GAEK,CAAC,KAAKjM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDK,WAAxD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgL,mBAA1C,IAAiE,wGAAwBM,gBAA7F,EAA+G;AAC7G,qBAAK9E,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDY,uBAD5D,GAEK,CAAC,KAAKjM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDK,WAAxD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgL,mBAA1C,IAAiE,wGAAwBO,qBAA7F,EAAoH;AAClH,qBAAK/E,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDY,uBAD5D,GAEK,CAAC,KAAKjM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDK,WAAxD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgL,mBAA1C,IAAiE,wGAAwBQ,cAA7F,EAA6G;AAC3G,qBAAKhF,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDY,uBAD5D,GAEK,CAAC,KAAKjM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwK,UAA5C,CAAuDK,WAAxD,CAFL;AAID;AACF;AACF;;;;;;;yBA1HUV,iB,EAAiB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,gK,EAAA,0K,EAAA,oI,EAAA,0K,EAAA,gJ;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;;;;;;;;;;;;;AClBd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAE9E;;;;;;AACI;;;;;;AAGR;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AAA6B,gGAAqB,aAArB,EAAqB,qBAArB;;;;;;;;AA5BjC;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAA5D,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAIA;;AAIA;;AAGJ;;;;;;;;;;;;AA9BqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIf;;AAAA;;AAIA;;AAAA;;AAI+B;;AAAA;;;;UDb3CkF,2B;AAOX,6CAAmBvM,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSsD,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAsD,iBAAA,GAAAA,iBAAA;AATA,eAAA4B,eAAA,GAAiC,EAAjC;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGT,eAAAjF,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAlBU+E,2B,EAA2B,mJ,EAAA,yJ,EAAA,4I,EAAA,+J;AAAA,O;;;cAA3BA,2B;AAA2B,kD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sX;AAAA;AAAA;ACfxC;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCW5BG,gB;AAIX,kCAAmB1M,eAAnB,EACUsH,UADV,EACkC;AAAA;;AADf,eAAAtH,eAAA,GAAAA,eAAA;AACT,eAAAsH,UAAA,GAAAA,UAAA;AAET;;;;iBAED,oBAAW;AACT,iBAAKA,UAAL,CAAgBqF,QAAhB,CAAyB,KAAKC,UAA9B;AACD;;;iBAED,uBAAc,CAEb;;;;;;;yBAfUF,gB,EAAgB,mJ,EAAA,4I;AAAA,O;;;cAAhBA,gB;AAAgB,qC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACX7B;;AAEA;;;;AAAc;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFd;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCWSG,6B;AAIX,+CAAmB7M,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUiC,6B,EAA6B,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAA7BA,6B;AAA6B,oD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,iK;AAAA;AAAA;ADf1C;;;;AAGA;;;;AAIA;;AAA4C;;AAAwC;;;;AAP7E;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAWaC,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHAC,iB;AACT,mCAAoB/M,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AAEnB;;;;iBAED,0BAAiB+B,WAAjB,EAAyC;AACrC,gBAAI,KAAKiL,aAAL,CAAmBjL,WAAnB,CAAJ,EAAqC;AACjC,mBAAKkL,gBAAL,CAAsBlL,WAAtB;AACH,aAFD,MAGK;AACD,mBAAKmL,aAAL,CAAmBnL,WAAnB;AACH;AACJ;;;iBAED,uBAAcA,WAAd,EAAsC;AAClC,gBAAIoL,gBAAgB,GAAkB,KAAKnN,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsM,mBAA1C,CAA8DC,MAA9D,CAAqE,UAAAC,CAAC;AAAA,qBAAIA,CAAC,IAAIvL,WAAT;AAAA,aAAtE,CAAtC;;AACA,gBAAIoL,gBAAgB,IAAIjM,SAApB,IAAiCiM,gBAAgB,CAAC3E,MAAjB,GAA0B,CAA/D,EAAkE;AAC9D,qBAAO,IAAP;AACH;;AAED,mBAAO,KAAP;AACH;;;iBAEO,uBAAczG,WAAd,EAAsC;AAC1C,gBAAIoL,gBAAgB,GAAkB,KAAKnN,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsM,mBAA1C,CAA8DC,MAA9D,CAAqE,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACtL,MAAF,CAASuL,QAAT,IAAqBxL,WAAW,CAACC,MAAZ,CAAmBuL,QAA5C;AAAA,aAAtE,CAAtC;;AACA,gBAAI,EAAEJ,gBAAgB,IAAIjM,SAApB,IAAiCiM,gBAAgB,CAAC3E,MAAjB,GAA0B,CAA7D,CAAJ,EAAqE;AACjE,mBAAKxI,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsM,mBAA1C,CAA8D5G,IAA9D,CAAmEzE,WAAnE;AACH;AACJ;;;iBAEO,0BAAiBA,WAAjB,EAAyC;AAC7C,gBAAIoL,gBAAgB,GAAkB,KAAKnN,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsM,mBAA1C,CAA8DC,MAA9D,CAAqE,UAAAC,CAAC;AAAA,qBAAIA,CAAC,IAAIvL,WAAT;AAAA,aAAtE,CAAtC;;AACA,gBAAKoL,gBAAgB,IAAIjM,SAApB,IAAiCiM,gBAAgB,CAAC3E,MAAjB,GAA0B,CAAhE,EAAoE;AAChE,kBAAIgF,sBAAsB,GAAkB,KAAKxN,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsM,mBAAtF;AACA,kBAAIK,KAAK,GAAWD,sBAAsB,CAAChF,MAA3C;;AACA,mBAAK,IAAIkF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC5B,oBAAIF,sBAAsB,CAACE,CAAD,CAAtB,KAA8B3L,WAAlC,EAA+C;AAC3CyL,wCAAsB,CAACG,MAAvB,CAA8BD,CAA9B,EAAiC,CAAjC;AACA;AACH;AACJ;;AAED,mBAAK1N,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuE,mCAAmB,EAAEI;AAAvB,eAA9C;AACH;AACJ;;;;;;;yBA5CQT,iB,EAAiB,0I;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;ACLhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAI;;AACI;;AAAM;;AAAqI;;AAC3I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,6GAAkC,aAAlC,EAAkC,kBAAlC;;;;;;AAGpB;;AACI;;AAAM;;AAAoI;;AAC1I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,4GAAiC,aAAjC,EAAiC,kBAAjC;;;;;;AAGpB;;AACI;;AAAM;;AAA6H;;AACnI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yHAA8C,aAA9C,EAA8C,kBAA9C;;;;;;AAGpB;;AACI;;AAAM;;AAA6H;;AACnI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,qGAA0B,aAA1B,EAA0B,kBAA1B;;;;;;AAGpB;;AACI;;AAAM;;AAA+H;;AACrI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,uGAA4B,aAA5B,EAA4B,kBAA5B;;;;;;AAGpB;;AACI;;AAAM;;AAAkI;;AACxI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,0GAA+B,aAA/B,EAA+B,kBAA/B;;;;;;AAGpB;;AACI;;AAAM;;AAAmI;;AACzI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,+GAAoC,aAApC,EAAoC,kBAApC;;;;;;AAGpB;;AACI;;AAAM;;AAAiI;;AACvI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yGAA8B,aAA9B,EAA8B,kBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAAgI;;AACtI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,wGAA6B,aAA7B,EAA6B,kBAA7B;;;;;;AAGpB;;AACI;;AAAM;;AAAsI;;AAC5I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,8GAAmC,aAAnC,EAAmC,kBAAnC;;;;;;AAGpB;;AACI;;AAAM;;AAAqI;;AAC3I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,8GAAkC,aAAlC,EAAkC,mBAAlC;;;;;;AAGpB;;AACI;;AAAM;;AAAiI;;AACvI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,0GAA8B,aAA9B,EAA8B,mBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAAmI;;AACzI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,sHAA0C,aAA1C,EAA0C,mBAA1C;;;;UDlDXa,iC;AAKX,mDAAmB5N,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAHT,eAAAO,UAAA,GAAa,0FAAb;AAIC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAbUmN,iC,EAAiC,mJ,EAAA,yJ;AAAA,O;;;cAAjCA,iC;AAAiC,wD;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,2D;AAAA;AAAA;ACb9C;;AACI;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AACJ;;;;AAlEW;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AC3DX;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaC,W;AAET,6BAAoB/F,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAEgD;AAAA;;AAF5B,eAAA6H,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACX;;;;iBAED,sBAAa6N,cAAb,EAAqCC,QAArC,EAAuD;AAAA;;AACnD,iBAAK/N,eAAL,CAAqB6I,cAArB,CAA8C;AAAEG,qBAAO,EAAE;AAAX,aAA9C;AACA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD,KAAKlJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3F,0BAAmHiL,cAAnH,cAAqIC,QAArI,CAAP;AACA,iBAAKjG,UAAL,CAAgBqB,GAAhB,CAA0BF,GAA1B,EAA+BG,IAA/B,CACI,2DAAI,UAACC,CAAD,EAAY;AACZ,oBAAI,CAACrJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEG,uBAAO,EAAE;AAAX,eAA9C;;AACAO,qBAAO,CAACC,KAAR,CAAcH,CAAd;AACH,aAHD,CADJ,EAKI,kEAAW,UAAAlC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,sBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEG,yBAAO,EAAE,KAAX;AAAkBU,uBAAK,EAAqBvC;AAA5C,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CALJ,EASEwB,SATF;AAUH;;;;;;;yBApBQkF,W,EAAW,uH,EAAA,0I,EAAA,4I;AAAA,O;;;eAAXA,W;AAAW,iBAAXA,WAAW,K;AAAA,oBAFR;;;;;;;;;;;;;;;;;ACThB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaG,sC;AAIX,wDAAmBhO,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;eAED,eAAc;AACZ,mBAAO,6EAAP;AACD;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAhBU8N,sC,EAAsC,mJ,EAAA,yJ;AAAA,O;;;cAAtCA,sC;AAAsC,+D;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA;AAAA;ACbnD;;AACA;;AAAM;;AAAsC;;AACxC;;AACJ;;;;;;;;;;;;;;;;;;;;;ACDA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGI;;AACI;;AACJ;;;;;;AAGI;;AACI;;AACJ;;;;;;AAFsF;;AAC/D;;AAAA;;;;UDiBlBC,e;AAkBX,iCAAmBhO,gBAAnB,EACSD,eADT,EAESE,kBAFT,EAGUgO,aAHV,EAIUC,cAJV,EAKUrE,iBALV,EAMUsE,kBANV,EAOUC,cAPV,EAQUC,gBARV,EASUnO,mBATV,EAUUoO,sBAVV,EAWUC,mBAXV,EAYUC,kBAZV,EAaUC,wBAbV,EAa8D;AAAA;;AAb3C,eAAAzO,gBAAA,GAAAA,gBAAA;AACV,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAgO,aAAA,GAAAA,aAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAArE,iBAAA,GAAAA,iBAAA;AACA,eAAAsE,kBAAA,GAAAA,kBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAnO,mBAAA,GAAAA,mBAAA;AACA,eAAAoO,sBAAA,GAAAA,sBAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAC,wBAAA,GAAAA,wBAAA;AA9BV,eAAAC,SAAA,GAAY,IAAI,0DAAJ,EAAZ;AACA,eAAAC,OAAA,GAAU,EAAV;AAEA,eAAAC,mBAAA,GAA8B,EAA9B;AA4BC;;;;iBAED,oBAAW;AACT,iBAAKC,SAAL,GAAiB,KAAKZ,aAAL,CAAmBa,SAAnB,CAA6B,KAAKJ,SAAlC,EAA6ChG,SAA7C,EAAjB;AACD;;;iBAED,mBAAUqG,YAAV,EAAoC;AAClC,mBAAO,EAAP;AACD;;;iBAED,6BAAoB;AAClB,iBAAKH,mBAAL,IAA4B,EAA5B,GAAiC,KAAKA,mBAAL,GAA2B,kBAA5D,GAAiF,KAAKA,mBAAL,GAA2B,EAA5G;AACD;;;iBAED,oBAAWI,EAAX,EAA6B;AAC3B,iBAAKD,YAAL,GAAoBC,EAApB;;AACA,gBAAIA,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWC,OAAnC,EAA4C;AAC1C,mBAAKrF,iBAAL,CAAuBE,YAAvB,CAAoCiF,EAAE,CAACpN,MAAH,CAAUwJ,QAA9C,EAAwD,IAAxD;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBD,OAA3C;AAAoDpO,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAA/E,eAA9C;AACD,aAHD,MAIK,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWG,IAAnC,EAAyC;AAC5C,mBAAKhB,cAAL,CAAoBiB,SAApB,CAA8BL,EAAE,CAACpN,MAAH,CAAUwJ,QAAxC,EAAkD,IAAlD;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBC,IAA3C;AAAiDtO,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAA5E,eAA9C;AACD,aAHI,MAIA,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWK,YAAnC,EAAiD;AACpD,mBAAKhB,sBAAL,CAA4BiB,iBAA5B,CAA8CP,EAAE,CAACpN,MAAH,CAAUwJ,QAAxD,EAAkE,IAAlE;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBG,YAA3C;AAAyDxO,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAApF,eAA9C;AACD,aAHI,MAIA,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWO,OAAnC,EAA4C;AAC/C,mBAAKhB,kBAAL,CAAwBiB,aAAxB,CAAsCT,EAAE,CAACpN,MAAH,CAAUwJ,QAAhD,EAA0D,IAA1D;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBK,OAA3C;AAAoD1O,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAA/E,eAA9C;AACD,aAHI,MAIA,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWS,QAAnC,EAA6C;AAChD,mBAAKnB,mBAAL,CAAyBoB,cAAzB,CAAwCX,EAAE,CAACpN,MAAH,CAAUwJ,QAAlD,EAA4D,IAA5D;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBO,QAA3C;AAAqD5O,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAAhF,eAA9C;AACD,aAHI,MAIA,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWW,aAAnC,EAAkD;AACrD,mBAAKnB,wBAAL,CAA8BoB,mBAA9B,CAAkDb,EAAE,CAACpN,MAAH,CAAUwJ,QAA5D,EAAsE,IAAtE;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBS,aAA3C;AAA0D9O,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAArF,eAA9C;AACD,aAHI,MAIA,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWa,QAAnC,EAA6C;AAChD,mBAAK3B,kBAAL,CAAwB4B,aAAxB,CAAsCf,EAAE,CAACpN,MAAH,CAAUwJ,QAAhD,EAA0D,IAA1D;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBW,QAA3C;AAAqDhP,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAAhF,eAA9C;AACD,aAHI,MAIA,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWe,IAAnC,EAAyC;AAC5C,mBAAK9B,cAAL,CAAoB+B,SAApB,CAA8B,IAA9B;AACA,mBAAKlQ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBa,IAA3C;AAAiDlP,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAA5E,eAA9C;AACD,aAHI,MAIA,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWiB,MAAnC,EAA2C;AAC9C,mBAAK7B,gBAAL,CAAsB8B,WAAtB,CAAkCnB,EAAE,CAACpN,MAAH,CAAUwJ,QAA5C,EAAsD,IAAtD;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBe,MAA3C;AAAmDpP,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAA9E,eAA9C;AACD,aAHI,MAIA,IAAI4D,EAAE,CAACpN,MAAH,CAAUqN,MAAV,IAAoB,8EAAWmB,SAAnC,EAA8C;AACjD,mBAAKlQ,mBAAL,CAAyBS,cAAzB,CAAwCqO,EAAE,CAACpN,MAAH,CAAUwJ,QAAlD,EAA4D,IAA5D;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBiB,SAA3C;AAAsDtP,+BAAe,EAAEkO,EAAE,CAACpN,MAAH,CAAUwJ;AAAjF,eAA9C;AACD,aAHI,MAIA;AACHiF,mBAAK,WAAI,8EAAWrB,EAAE,CAACpN,MAAH,CAAUqN,MAArB,CAAJ,4EAAL;AACD;AACF;;;iBAED,uBAAc;AACZ,iBAAKJ,SAAL,GAAiB,KAAKA,SAAL,CAAe1G,WAAf,EAAjB,GAAgD,IAAhD;AACA,iBAAKmI,UAAL,GAAkB,KAAKA,UAAL,CAAgBnI,WAAhB,EAAlB,GAAkD,IAAlD;AACA,iBAAKoI,aAAL,GAAqB,KAAKA,aAAL,CAAmBpI,WAAnB,EAArB,GAAwD,IAAxD;AACA,iBAAKqI,cAAL,GAAsB,KAAKA,cAAL,CAAoBrI,WAApB,EAAtB,GAA0D,IAA1D;AACA,iBAAKsI,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BtI,WAA1B,EAA5B,GAAsE,IAAtE;AACA,iBAAKuI,UAAL,GAAkB,KAAKA,UAAL,CAAgBvI,WAAhB,EAAlB,GAAkD,IAAlD;AACA,iBAAKwI,YAAL,GAAoB,KAAKA,YAAL,CAAkBxI,WAAlB,EAApB,GAAsD,IAAtD;AACA,iBAAKyI,eAAL,GAAuB,KAAKA,eAAL,CAAqBzI,WAArB,EAAvB,GAA4D,IAA5D;AACA,iBAAK0I,kBAAL,GAA0B,KAAKA,kBAAL,CAAwB1I,WAAxB,EAA1B,GAAkE,IAAlE;AACA,iBAAK2I,cAAL,GAAsB,KAAKA,cAAL,CAAoB3I,WAApB,EAAtB,GAA0D,IAA1D;AACA,iBAAK4I,aAAL,GAAqB,KAAKA,aAAL,CAAmB5I,WAAnB,EAArB,GAAwD,IAAxD;AACA,iBAAK6I,mBAAL,GAA2B,KAAKA,mBAAL,CAAyB7I,WAAzB,EAA3B,GAAoE,IAApE;AACD;;;;;;;yBA1GU6F,e,EAAe,qJ,EAAA,mJ,EAAA,yJ,EAAA,sJ,EAAA,yJ,EAAA,+J,EAAA,kK,EAAA,0J,EAAA,8J,EAAA,oK,EAAA,yK,EAAA,qK,EAAA,mK,EAAA,gL;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,iB;AAAA,gB;AAAA,2W;AAAA;AAAA;AC5B5B;;AACI;;AAAO;AAAA,qBAAS,IAAAiD,iBAAA,EAAT;AAA4B,aAA5B,EAA6B,MAA7B,EAA6B;AAAA,qBAAS,IAAAA,iBAAA,EAAT;AAA4B,aAAzD;;AAAP;;AAGA;;AAAoB;;AAAM;;AAC1B;;;;AAGA;;AAAgD;AAAA,qBAAkB,IAAAC,UAAA,qBAAlB;AAAiD,aAAjD;;AAE5C;;;;AAGJ;;AACJ;;;;;;AAdgB;;AAER;;AAAA;;AAC6B,mGAAyB,iBAAzB,EAAyB,GAAzB;;AAE1B;;AAAA;;AAIH;;AAAA;;AAC+B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACTvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAE9E;;;;;;AACI;;;;;;AAGR;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AAA+B,gGAAqB,aAArB,EAAqB,qBAArB;;;;;;;;AA5BnC;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAA9J,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAIA;;AAIA;;AAEJ;;;;;;;;;;;;AA7BqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIb;;AAAA;;AAIA;;AAAA;;AAI+B;;AAAA;;;;UDb7C+J,6B;AAOX,+CAAmBpR,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSsD,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAsD,iBAAA,GAAAA,iBAAA;AATA,eAAA4B,eAAA,GAAiC,EAAjC;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGT,eAAAjF,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAlBU4J,6B,EAA6B,mJ,EAAA,yJ,EAAA,4I,EAAA,+J;AAAA,O;;;cAA7BA,6B;AAA6B,oD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sX;AAAA;AAAA;ACf1C;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;ACEzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAiBaC,kB;AAMT,oCAAoBvJ,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYoR,0BAJZ,EAKY5C,wBALZ,EAMY1G,0BANZ,EAOYoD,cAPZ,EAO4C;AAAA;;;;AAPxB,eAAAtD,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAoR,0BAAA,GAAAA,0BAAA;AACA,eAAA5C,wBAAA,GAAAA,wBAAA;AACA,eAAA1G,0BAAA,GAAAA,0BAAA;AACA,eAAAoD,cAAA,GAAAA,cAAA;AATZ,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAUC;;;;iBAED,uBAAcuI,QAAd,EAAgCnD,OAAhC,EAAkD;;;AAC9C,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEyQ,WAAjD,EAA8D;AAC1D,mBAAKC,eAAL;AACH,aAFD,MAGK;AACD,mBAAKrJ,GAAL,GAAW,KAAKsJ,cAAL,GAAsB9I,SAAtB,EAAX;AACH;AACJ;;;iBAEO,0BAAiB;AAAA;;AACrB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C2I,yBAAW,EAAE;AADgC,aAAjD;AAGA,iBAAKvR,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,0FAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,kCAAyI,KAAKwI,QAA9I,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAiCF,GAAjC,EAAsCG,IAAtC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,oBAAI,CAACqI,iBAAL,CAAuBrI,CAAvB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,MAAI,CAACnB,OAAT,EAAkB;AACd,sBAAI,CAAC4H,mBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA3I,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,sBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,+BAAsB;AAC1B,iBAAKuH,wBAAL,CAA8BoB,mBAA9B,CAAkD,KAAKzE,QAAvD,EAAiE,KAAKnD,OAAtE;AACH;;;iBAEO,2BAAkB;;;AACtB,iBAAKwJ,iBAAL,CAAuB,CAAD,WAAC,KAAKzR,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIyQ,WAArE;AACAhI,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIyQ,WAA5D;;AACA,gBAAI,KAAKrJ,OAAT,EAAkB;AACd,mBAAK4H,mBAAL;AACH;AACJ;;;iBAEO,2BAAkBzG,CAAlB,EAAkC;;;AACtC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C2I,yBAAW,EAAElI;AADgC,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAEyQ,WAA7C,MAAwD,IAAxD,IAAwD,aAAxD,GAAwD,MAAxD,GAAwD,GAAE5F,WAAzF;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2J,sBAAhC,EAAJ,EAA8D;AAC1D,qBAAK3R,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgC4J,qBAAhC,EAAJ,EAA6D;AACzD,qBAAK5R,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBApFQqI,kB,EAAkB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,uK,EAAA,uK,EAAA,0K,EAAA,gJ;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFf;;;;;;;;;;;;;;;;;ACjBhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYQ,sBAAZ;;AAAA,iBAAYA,sBAAZ,EAAkC;AAC9B;AACA;AACA;AACA;AACA;AACH,OAND,EAAYA,sBAAsB,KAAtBA,sBAAsB,MAAlC;;AAQO,eAASC,yBAAT,GAAkC;AAEvC,eAAOD,sBAAP;AACD;;AAEM,eAASE,qCAAT,CAA+C/R,eAA/C,EAA+E;;;AAClF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAND,MAOK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASsL,gCAAT,CAA0ChL,MAA1C,EAA0DhH,eAA1D,EAA0F;AAC7F,YAAIiH,mBAAJ;AACA8K,6CAAqC,CAAC/R,eAAD,CAArC,CAAuDkH,OAAvD,CAA+D,UAAAC,CAAC,EAAI;AAChE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;ACrDD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAuBagL,e;AAGX,mCAAc;AAAA;;AAFd,eAAApR,SAAA,GAAuC,IAAI,oDAAJ,CAAwC,EAAxC,CAAvC;AAGE,eAAKgI,cAAL,CAA8B;AAC5B;AACAG,mBAAO,EAAE,IAFmB;AAG5BU,iBAAK,EAAE,IAHqB;AAI5BZ,kBAAM,EAAE,IAJoB;AAM5B;AACAoJ,mBAAO,EAAE,EAPmB;AAS5B;AACAC,yBAAa,EAAE,IAVa;AAY5B;AACAC,6BAAiB,EAAE,EAbS;AAe5B;AACAC,+BAAmB,EAAE,EAhBO;AAkB5B;AACAjF,+BAAmB,EAAE,EAnBO;AAqB5B;AACAkF,4BAAgB,EAAE,IAtBU;AAuB5BC,0BAAc,EAAE,IAvBY;AAwB5BC,wBAAY,EAAE,EAxBc;AAyB5BC,4BAAgB,EAAE,IAzBU;AA0B5BC,gCAAoB,EAAE,KA1BM;AA2B5BC,mCAAuB,EAAE,0GAA4BC,GA3BzB;AA4B5BC,2CAA+B,EAAE,CA5BL;AA6B5BC,8BAAkB,EAAE,CA7BQ;AA8B5BC,4BAAgB,EAAE,CA9BU;AA+B5BC,0BAAc,EAAE,CA/BY;AAgC5BC,0BAAc,EAAE,CAhCY;AAiC5BC,0BAAc,EAAE,EAjCY;AAkC5BC,0BAAc,EAAE,EAlCY;AAmC5BC,0BAAc,EAAE,EAnCY;AAoC5BC,0BAAc,EAAE,EApCY;AAqC5BC,0BAAc,EAAE,EArCY;AAsC5BC,0BAAc,EAAE,EAtCY;AAuC5BC,iCAAqB,EAAE,IAvCK;AAwC5BC,mCAAuB,EAAE,KAxCG;AAyC5BC,kCAAsB,EAAE,KAzCI;AA0C5BC,kCAAsB,EAAE,KA1CI;AA2C5BC,sCAA0B,EAAE,KA3CA;AA4C5BC,qCAAyB,EAAE,KA5CC;AA6C5BC,wCAA4B,EAAE,KA7CF;AA8C5BC,yCAA6B,EAAE,KA9CH;AAgD5B;AACAC,wBAAY,EAAE,2FAAiBC,IAjDH;AAkD5B7E,6BAAiB,EAAE,qGAAsBa,IAlDb;AAmD5BiE,4BAAgB,EAAE,mGAAqBC,SAnDX;AAoD5BrI,+BAAmB,EAAE,wGAAwBC,SApDjB;AAqD5BqI,gCAAoB,EAAE,2GAAyBC,KArDnB;AAsD5BC,4BAAgB,EAAE,kGAAqBC,OAtDX;AAuD5BC,8BAAkB,EAAE,uGAAuBC,UAvDf;AAwD5BC,iCAAqB,EAAE,6GAA0BC,SAxDrB;AAyD5BC,oCAAwB,EAAE,kHAA6BC,eAzD3B;AA0D5BC,gCAAoB,EAAE,0GAAyBC,WA1DnB;AA2D5BC,+BAAmB,EAAE,wGAAwBD,WA3DjB;AA4D5BE,qCAAyB,EAAE,qHAA8BF,WA5D7B;AA6D5BhU,2BAAe,EAAE,CA7DW;AA8D5BmU,0BAAc,EAAE,CA9DY;AA+D5BrS,oBAAQ,EAAE,kFAAasS,EA/DK;AAgE5BjM,sBAAU,EAAE,EAhEgB;AAiE5BkM,yBAAa,EAAE,KAjEa;AAkE5BC,4BAAgB,EAAE,KAlEU;AAmE5BC,6BAAiB,EAAE,KAnES;AAoE5BC,wBAAY,EAAE,KApEc;AAqE5BC,uBAAW,EAAE,KArEe;AAsE5BC,uBAAW,EAAE,KAtEe;AAwE5B;AACAC,sBAAU,EAAE,IAzEgB;AA0E5BC,0BAAc,EAAE,KA1EY;AA2E5BC,0BAAc,EAAE,KA3EY;AA4E5BC,8BAAkB,EAAE,IA5EQ;AA6E5BC,4BAAgB,EAAE,IA7EU;AA8E5BC,0BAAc,EAAE,CA9EY;AA+E5BC,2BAAe,EAAE,CA/EW;AAgF5BC,uBAAW,EAAE,EAhFe;AAkF5BC,mBAAO,EAAE,gFAAYC,MAlFO;AAoF5BC,mCAAuB,EAAE,CACvB,EADuB,EAEvB,gDAFuB,EAGvB,gDAHuB,EAIvB,gDAJuB,EAKvB,gDALuB,EAMvB,gDANuB,CApFG;AA6F5BC,8BAAkB,EAAE,SA7FQ;AA8F5BC,qCAAyB,EAAE,SA9FC;AA+F5BC,iCAAqB,EAAE,SA/FK;AAgG5BC,gCAAoB,EAAE,SAhGM;AAiG5BC,yCAA6B,EAAE,SAjGH;AAkG5BC,wCAA4B,EAAE,SAlGF;AAmG5BC,oCAAwB,EAAE,SAnGE;AAoG5BC,qCAAyB,EAAE,SApGC;AAqG5BC,sCAA0B,EAAE,SArGA;AAsG5BC,kCAAsB,EAAE,SAtGI;AAuG5BC,mDAAuC,EAAE,SAvGb;AAwG5BC,sDAA0C,EAAE,SAxGhB;AAyG5BC,sCAA0B,EAAE,SAzGA;AA0G5BC,oCAAwB,EAAE,SA1GE;AA2G5BC,4CAAgC,EAAE,SA3GN;AA4G5BC,2CAA+B,EAAE,SA5GL;AA6G5BC,+CAAmC,EAAE,SA7GT;AA8G5BC,sCAA0B,EAAE,SA9GA;AA+G5BC,iCAAqB,EAAE,SA/GK;AAgH5BC,kCAAsB,EAAE,SAhHI;AAiH5BC,gCAAoB,EAAE,SAjHM;AAkH5BC,sCAA0B,EAAE,SAlHA;AAmH5BC,6CAAiC,EAAE,SAnHP;AAoH5BC,iCAAqB,EAAE,SApHK;AAqH5BC,gCAAoB,EAAE,SArHM;AAsH5BC,uCAA2B,EAAE,SAtHD;AAuH5BC,kCAAsB,EAAE,SAvHI;AAwH5BC,gCAAoB,EAAE,SAxHM;AAyH5BC,8CAAkC,EAAE,SAzHR;AA0H5BC,mCAAuB,EAAE,SA1HG;AA2H5BC,kCAAsB,EAAE,SA3HI;AA4H5BC,kDAAsC,EAAE,SA5HZ;AA6H5BC,qCAAyB,EAAE,SA7HC;AA+H5BC,uCAA2B,EAAE,SA/HD;AAgI5BC,oDAAwC,EAAE,SAhId;AAiI5BC,sDAA0C,EAAE,SAjIhB;AAkI5BC,yCAA6B,EAAE,SAlIH;AAmI5BC,yCAA6B,EAAE,SAnIH;AAqI5BC,+DAAmD,EAAE,SArIzB;AAsI5BC,kEAAsD,EAAE,SAtI5B;AAuI5BC,8DAAkD,EAAE,SAvIxB;AAwI5BC,2DAA+C,EAAE,SAxIrB;AAyI5BC,uDAA2C,EAAE,SAzIjB;AA2I5BC,+BAAmB,EAAE,SA3IO;AA4I5BC,kCAAsB,EAAE,SA5II;AA6I5BC,mCAAuB,EAAE,SA7IG;AA8I5BC,iCAAqB,EAAE,SA9IK;AA+I5BC,oCAAwB,EAAE,SA/IE;AAiJ5BC,gBAAI,EAAE,EAjJsB;AAkJ5BC,kBAAM;AAAE;AAAgC;AAAEC,iBAAG,EAAE,UAAP;AAAmBC,iBAAG,EAAE,CAAC;AAAzB,aAlJZ;AAmJ5B5K,mBAAO;AAAE;AAA8B;AACrC6K,yBAAW,EAAE,IADwB;AAErCC,yBAAW,EAAE,IAFwB;AAGrCC,oCAAsB,EAAE,KAHa;AAIrCC,uBAAS,EAAE;AAJ0B,aAnJX;AAyJ5BC,uBAAW,EAAE,EAzJe;AA2J5B;AACA;AACAC,qBAAS,EAAE,KA7JiB;AA8J5BC,sBAAU,EAAE,KA9JgB;AA+J5BlO,0BAAc,EAAE,KA/JY;AAiK5B;AACAmO,gCAAoB,EAAE,gFAAYC,SAlKN;AAmK5BC,+BAAmB,EAAE,4FAAkBnM,QAnKX;AAoK5BoM,8BAAkB,EAAE,gFAAYF,SApKJ;AAqK5BG,qCAAyB,EAAE,gFAAYH,SArKX;AAsK5BI,kCAAsB,EAAE,4FAAkBtM,QAtKd;AAuK5BuM,iCAAqB,EAAE,gFAAYL,SAvKP;AAwK5BM,yCAA6B,EAAE,gFAAYN,SAxKf;AAyK5BO,uCAA2B,EAAE,4FAAkBzM,QAzKnB;AA0K5B0M,sCAA0B,EAAE,gFAAYR,SA1KZ;AA2K5BS,gDAAoC,EAAE,gFAAYT,SA3KtB;AA4K5BU,8CAAkC,EAAE,gFAAYV,SA5KpB;AA6K5BW,kCAAsB,EAAE,4FAAkB7M,QA7Kd;AA8K5B8M,iCAAqB,EAAE,gFAAYZ,SA9KP;AA+K5Ba,mCAAuB,EAAE,4FAAkB/M,QA/Kf;AAgL5BgN,kCAAsB,EAAE,gFAAYd,SAhLR;AAiL5Be,wCAA4B,EAAE,4FAAkBjN,QAjLpB;AAkL5BkN,uCAA2B,EAAE,gFAAYhB,SAlLb;AAmL5BiB,kCAAsB,EAAE,gFAAYjB,SAnLR;AAoL5BkB,mCAAuB,EAAE,4FAAkBpN,QApLf;AAqL5BqN,kCAAsB,EAAE,gFAAYnB,SArLR;AAsL5BoB,2CAA+B,EAAE,gFAAYpB,SAtLjB;AAuL5BqB,kCAAsB,EAAE,gFAAYrB,SAvLR;AAwL5BsB,+BAAmB,EAAE,4FAAkBxN,QAxLX;AAyL5ByN,8BAAkB,EAAE,gFAAYvB,SAzLJ;AA0L5BwB,iCAAqB,EAAE,4FAAkB1N,QA1Lb;AA2L5B2N,gCAAoB,EAAE,gFAAYzB,SA3LN;AA4L5B0B,wCAA4B,EAAE,gFAAY1B,SA5Ld;AA6L5B2B,qCAAyB,EAAE,gFAAY3B,SA7LX;AA8L5B4B,oCAAwB,EAAE,4FAAkB9N,QA9LhB;AA+L5B+N,mCAAuB,EAAE,gFAAY7B,SA/LT;AAgM5B8B,sCAA0B,EAAE,gFAAYC,UAhMZ;AAiM5BC,uCAA2B,EAAE,gFAAYhC,SAjMb;AAkM5BiC,4CAAgC,EAAE,gFAAYjC;AAlMlB,WAA9B;AAqMD;;;;iBAED,wBAAekC,QAAf,EAAmC;AACjC,iBAAKtb,SAAL,CAAeub,IAAf,CAAoB,gCAAe,KAAKvb,SAAL,CAAeC,QAAf,EAAf,GAA6Cqb,QAA7C,CAApB;AACD;;;;;;;yBA7MUlK,e;AAAe,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;ACrBd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaoK,e;AAEX,iCAAoBrc,eAApB,EACUI,qBADV,EACsD;AAAA;;AADlC,eAAAJ,eAAA,GAAAA,eAAA;AACV,eAAAI,qBAAA,GAAAA,qBAAA;AACN;;;;iBAGJ,0BAAiBkc,WAAjB,EAAyC;AACvC,gBAAIA,WAAW,CAACC,QAAZ,IAAwB,KAAKvc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsS,cAAtE,EAAsF;AACpF,qBAAO,iBAAP;AACD;;AACD,gBAAKkJ,WAAW,CAACC,QAAZ,GAAuBD,WAAW,CAACE,QAApC,IAAiD,KAAKxc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuS,cAA/F,EAA+G;AAC7G,qBAAO,iBAAP;AACD;;AACD,gBAAKiJ,WAAW,CAACC,QAAZ,GAAuBD,WAAW,CAACE,QAAnC,GAA8CF,WAAW,CAACG,QAA3D,IAAwE,KAAKzc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwS,cAAtH,EAAsI;AACpI,qBAAO,iBAAP;AACD;;AACD,gBAAKgJ,WAAW,CAACC,QAAZ,GAAuBD,WAAW,CAACE,QAAnC,GAA8CF,WAAW,CAACG,QAA1D,GAAqEH,WAAW,CAACI,QAAlF,IAA+F,KAAK1c,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyS,cAA7I,EAA6J;AAC3J,qBAAO,iBAAP;AACD;;AAED,mBAAO,EAAP;AACD;;;iBAED,8BAAqBoJ,YAArB,EAAiDC,QAAjD,EAAiE;;;AAC/D,gBAAIC,SAAS,GAAWC,IAAI,CAACC,GAAL,CAAS,OAAAJ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,GAAY,MAAZ,GAAAA,YAAY,CAAEK,sBAAd,CAAqCJ,QAArC,OAA6C,IAA7C,IAA6C,aAA7C,GAA6C,MAA7C,GAA6C,GAAGK,GAAhD,IAAsDN,YAAY,CAACO,eAA5E,IAA+F,KAAKld,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+R,+BAAzI,GAA2K,iBAA3K,GAA+L,EAAvN;AAEA,mBAAOgK,SAAP;AACD;;;iBAED,kCAAyBpV,4BAAzB,EAAuF;AACrF,oBAAQA,4BAAR;AACE,mBAAK,0HAAiC0V,QAAtC;AACE,uBAAO,KAAKnd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,GAAxE,GAA8E,GAArF;;AACF,mBAAK,0HAAiCsa,qBAAtC;AACE,uBAAO,KAAKpd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,0HAAiCua,uBAAtC;AACE,uBAAO,KAAKrd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,0HAAiCwa,UAAtC;AACE,uBAAO,KAAKtd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,GAAxE,GAA8E,GAArF;;AACF,mBAAK,0HAAiCya,UAAtC;AACE,uBAAO,KAAKvd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,GAAxE,GAA8E,GAArF;;AACF,mBAAK,0HAAiC0a,YAAtC;AACE,uBAAO,KAAKxd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,GAAxE,GAA8E,IAArF;;AACF;AACE,uBAAO,KAAK9C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,EAAxE,GAA6E,EAApF;AAdJ;AAgBD;;;iBAED,gCAAuB2E,4BAAvB,EAAqF;AACnF,oBAAQA,4BAAR;AACE,mBAAK,0HAAiC0V,QAAtC;AACE,uBAAO,SAAP;;AACF,mBAAK,0HAAiCC,qBAAtC;AACE,uBAAO,SAAP;;AACF,mBAAK,0HAAiCC,uBAAtC;AACE,uBAAO,OAAP;;AACF,mBAAK,0HAAiCC,UAAtC;AACE,uBAAO,SAAP;;AACF,mBAAK,0HAAiCC,UAAtC;AACE,uBAAO,OAAP;;AACF,mBAAK,0HAAiCC,YAAtC;AACE,uBAAO,SAAP;;AACF;AACE,uBAAO,SAAP;AAdJ;AAgBD;;;iBAED,4BAAmBC,YAAnB,EAA6C;AAC3C,oBAAQA,YAAR;AACE,mBAAK,kFAAaC,OAAlB;AACE,uBAAO,KAAK1d,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,kFAAa6a,cAAlB;AACE,uBAAO,KAAK3d,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,kFAAa8a,aAAlB;AACE,uBAAO,KAAK5d,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,kFAAa+a,OAAlB;AACE,uBAAO,KAAK7d,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,kFAAagb,cAAlB;AACE,uBAAO,KAAK9d,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,kFAAaib,aAAlB;AACE,uBAAO,KAAK/d,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,kFAAakb,QAAlB;AACE,uBAAO,KAAKhe,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,kFAAamb,eAAlB;AACE,uBAAO,KAAKje,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF,mBAAK,kFAAaob,cAAlB;AACE,uBAAO,KAAKle,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA1C,IAAsD,kFAAaC,EAAnE,GAAwE,IAAxE,GAA+E,IAAtF;;AACF;AACE,uBAAO,EAAP;AApBJ;AAsBD;;;iBAED,8BAAqBqb,cAArB,EAAkD;AAChDA,0BAAc,CAACC,cAAf,GAAgC,CAACD,cAAc,CAACC,cAAhD;AACA,iBAAKhe,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,kCAAsB;AACpB,iBAAKre,eAAL,CAAqB6I,cAArB,CAA8C;AAAE4J,8BAAgB,EAAE,CAAC,KAAKzS,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C2R,gBAA/D;AAAiFzJ,qBAAO,EAAE;AAA1F,aAA9C;AACD;;;iBAED,sCAA0B;AACxB,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAE6J,kCAAoB,EAAE,CAAC,KAAK1S,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4R,oBAAnE;AAAyF1J,qBAAO,EAAE;AAAlG,aAA9C;AACD;;;iBAED,uCAA2B;AACzB,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAE2K,mCAAqB,EAAE,CAAC,KAAKxT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0S,qBAApE;AAA2FxK,qBAAO,EAAE;AAApG,aAA9C;AACD;;;iBAED,yCAA6B;AAC3B,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAE4K,qCAAuB,EAAE,CAAC,KAAKzT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C2S,uBAAtE;AAA+FzK,qBAAO,EAAE;AAAxG,aAA9C;AACD;;;iBAED,wCAA4B;AAC1B,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAE6K,oCAAsB,EAAE,CAAC,KAAK1T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4S,sBAArE;AAA6F1K,qBAAO,EAAE;AAAtG,aAA9C;AACD;;;iBAED,wCAA4B;AAC1B,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAE8K,oCAAsB,EAAE,CAAC,KAAK3T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6S,sBAArE;AAA6F3K,qBAAO,EAAE;AAAtG,aAA9C;AACD;;;iBAED,4CAAgC;AAC9B,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAE+K,wCAA0B,EAAE,CAAC,KAAK5T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8S,0BAAzE;AAAqG5K,qBAAO,EAAE;AAA9G,aAA9C;AACD;;;iBAED,2CAA+B;AAC7B,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEgL,uCAAyB,EAAE,CAAC,KAAK7T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+S,yBAAxE;AAAmG7K,qBAAO,EAAE;AAA5G,aAA9C;AACD;;;iBAED,8CAAkC;AAChC,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEiL,0CAA4B,EAAE,CAAC,KAAK9T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgT,4BAA3E;AAAyG9K,qBAAO,EAAE;AAAlH,aAA9C;AACD;;;iBAED,+CAAmC;AACjC,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEkL,2CAA6B,EAAE,CAAC,KAAK/T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CiT,6BAA5E;AAA2G/K,qBAAO,EAAE;AAApH,aAA9C;AACD;;;iBAGD,sBAAU;AACR,gBAAIsV,eAAe,GAAa,EAAhC;;AAEA,iBAAK,IAAI5Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B4Q,6BAAe,CAAC9X,IAAhB,CAAqBkH,CAArB;AACD;;AAEC,mBAAO4Q,eAAP;AACH;;;iBAED,sBAAU;AACR,gBAAIC,eAAe,GAAa,EAAhC;;AAEA,iBAAK,IAAI7Q,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EACA;AACE6Q,6BAAe,CAAC/X,IAAhB,CAAqBkH,CAArB;AACD;;AAED,mBAAO6Q,eAAP;AACD;;;iBAED,kDAAyCC,2BAAzC,EAAmG;AACjG,mBAAO,kIAAsCA,2BAAtC,EAAmE,KAAKxe,eAAxE,CAAP;AACD;;;iBAED,yDAA6C;AAC3C,mBAAO,uIAA2C,KAAKA,eAAhD,CAAP;AACD;;;iBAED,qBAAYye,gBAAZ,EAA2C;AACzC,iBAAKze,eAAL,CAAqB6I,cAArB,CAA8C;AAAEyJ,8BAAgB,EAAEmM;AAApB,aAA9C;AACA,iBAAKre,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,mBAAUF,cAAV,EAAuC;AACrC,iBAAKne,eAAL,CAAqB6I,cAArB,CAA8C;AAAE0J,4BAAc,EAAE4L;AAAlB,aAA9C;AACA,iBAAK/d,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,iBAAQK,IAAR,EAAsB;AACpB,iBAAK1e,eAAL,CAAqB6I,cAArB,CAA8C;AAAE2J,0BAAY,EAAEkM;AAAhB,aAA9C;AACA,iBAAKte,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,4BAAmBM,mBAAnB,EAAqE;AACnE,iBAAK3e,eAAL,CAAqB6I,cAArB,CAA8C;AAAE8J,qCAAuB,EAAEgM;AAA3B,aAA9C;AACA,iBAAKve,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,oCAA2BO,GAA3B,EAAwC;AACtC,iBAAK5e,eAAL,CAAqB6I,cAArB,CAA8C;AAAEgK,6CAA+B,EAAE+L;AAAnC,aAA9C;AACA,iBAAKxe,qBAAL,CAA2Bie,oBAA3B;AACD,W,CAED;AACA;AACA;AAEA;AACA;AACA;;;;iBAEA,mBAAUQ,MAAV,EAA0B;AACxB,iBAAK7e,eAAL,CAAqB6I,cAArB,CAA8C;AAAEmK,4BAAc,EAAE6L;AAAlB,aAA9C;AACA,iBAAKze,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,mBAAUS,MAAV,EAA0B;AACxB,iBAAK1e,qBAAL,CAA2Bie,oBAA3B;AACA,iBAAKre,eAAL,CAAqB6I,cAArB,CAA8C;AAAEoK,4BAAc,EAAE6L;AAAlB,aAA9C;AACD;;;iBAED,mBAAUC,MAAV,EAA0B;AACxB,iBAAK3e,qBAAL,CAA2Bie,oBAA3B;AACA,iBAAKre,eAAL,CAAqB6I,cAArB,CAA8C;AAAEqK,4BAAc,EAAE6L;AAAlB,aAA9C;AACD;;;iBAED,mBAAUC,MAAV,EAA0B;AACxB,iBAAK5e,qBAAL,CAA2Bie,oBAA3B;AACA,iBAAKre,eAAL,CAAqB6I,cAArB,CAA8C;AAAEsK,4BAAc,EAAE6L;AAAlB,aAA9C;AACD;;;iBAED,mBAAUC,MAAV,EAA0B;AACxB,iBAAKjf,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuK,4BAAc,EAAE6L;AAAlB,aAA9C;AACA,iBAAK7e,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,mBAAUa,MAAV,EAA0B;AACxB,iBAAKlf,eAAL,CAAqB6I,cAArB,CAA8C;AAAEwK,4BAAc,EAAE6L;AAAlB,aAA9C;AACA,iBAAK9e,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,mBAAUc,MAAV,EAA0B;AACxB,iBAAKnf,eAAL,CAAqB6I,cAArB,CAA8C;AAAEyK,4BAAc,EAAE6L;AAAlB,aAA9C;AACA,iBAAK/e,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,mBAAUe,MAAV,EAA0B;AACxB,iBAAKpf,eAAL,CAAqB6I,cAArB,CAA8C;AAAE0K,4BAAc,EAAE6L;AAAlB,aAA9C;AACA,iBAAKhf,qBAAL,CAA2Bie,oBAA3B;AACD;;;;;;;yBA/OUhC,e,EAAe,0I,EAAA,+J;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbd;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSgD,8B;AAIX,gDAAmBrf,eAAnB,EACSE,kBADT,EAEUwO,wBAFV,EAE8D;AAAA;;AAF3C,eAAA1O,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAwO,wBAAA,GAAAA,wBAAA;AAAuD;;;;iBAEjE,oBAAQ;AACN,iBAAKA,wBAAL,CAA8BoB,mBAA9B,CAAkD,KAAK9P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5F,EAA6G,IAA7G;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbUse,8B,EAA8B,mJ,EAAA,yJ,EAAA,+K;AAAA,O;;;cAA9BA,8B;AAA8B,sD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,8J;AAAA;AAAA;ADb3C;;;;AAGA;;;;AAIA;;AAAyC;;AAA0C;;;;AAP5E;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEF3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAQI;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,OAAAvf,sBAAA,2FAAT;AAA4G,WAA5G;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,8FAAT;AAA6G,WAA7G;;AAEA;;AACJ;;;;;;AAQI;;AACI;;AAEJ;;;;;;;;AAFI;;AAAA;;;;;;AAWZ;;;;;;;;AACI,8KAAkD,iBAAlD,EAAkD,qKAAlD;;;;;;AAIJ;;;;;;;;AACI,8KAAkD,qBAAlD,EAAkD,8JAAlD;;;;;;AAIJ;;AACI;;AACJ;;;;UDrCawf,iB;AAMX,mCAAmBtf,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSiO,cAHT,EAISrO,sBAJT,EAKSO,gBALT,EAMSC,+BANT,EAOSC,oBAPT,EAOqD;AAAA;;AAPlC,eAAAP,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAiO,cAAA,GAAAA,cAAA;AACA,eAAArO,sBAAA,GAAAA,sBAAA;AACA,eAAAO,gBAAA,GAAAA,gBAAA;AACA,eAAAC,+BAAA,GAAAA,+BAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AAZT,eAAAgf,oBAAA,GAAuB,8GAAvB;AACA,eAAA9e,UAAA,GAAa,0FAAb;AACA,eAAAC,WAAA,GAAc,4FAAd;AACA,eAAAC,gBAAA,GAAmB,8GAAnB;AAUC;;;;iBAED,oBAAQ;AACN,iBAAKwN,cAAL,CAAoB+B,SAApB,CAA8B,IAA9B;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBArBUoP,iB,EAAiB,mJ,EAAA,qJ,EAAA,yJ,EAAA,yJ,EAAA,0K,EAAA,8J,EAAA,6L,EAAA,sK;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,iB;AAAA,gB;AAAA,ie;AAAA;AAAA;ACpB9B;;;;AAGA;;;;AAIA;;AACI;AAAA,qBAAS,IAAA/e,oBAAA,6CAAT;AAAsE,aAAtE;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AAEA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,yCAAT;AAAkE,aAAlE;;AAEA;;AACI;;AACA;;AAIJ;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,gDAAT;AAAyE,aAAzE;;AAEA;;AACJ;;AAEA;;AAKA;;AAKA;;;;;;;;AAvDO;;AAGoB;;AAAA;;AAMvB;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAOL;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAQ9B;;AAAA;;AAFe;;AAGf;;AAAA;;AAG2B;;AAAA;;AAKf;;AAAA;;AAKV;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDN;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSif,6B;AAEX,+CAAmBxf,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATUsf,6B,EAA6B,mJ,EAAA,yJ;AAAA,O;;;cAA7BA,6B;AAA6B,oD;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADV1C;;;;AAGA;;;;AAIA;;AAAG;;AAAoC;;;;AAPhC;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEF3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAE9E;;;;;;AACI;;;;;;AAeA;;AACI;;AACI;;AACI;;AAAU;;AAAI;;AACd;;AACJ;;AACJ;;AACA;;AAGJ;;;;;;;;AAH6B;;AAAA,yGAAkC,UAAlC,EAAkC,gBAAlC;;;;;;AAI7B;;AACI;;AACI;;AACI;;AAAU;;AAAG;;AACb;;AACJ;;AACJ;;AACA;;AAGJ;;;;;;;;AAH6B;;AAAA,yGAAkC,UAAlC,EAAkC,gBAAlC;;;;;;AA9BrC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAU;;AAAO;;AACjB;;AACJ;;AACJ;;AACA;;AAEJ;;AACA;;AAWA;;AAWJ;;AACJ;;;;;;;;AA1BmC;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAGL;;AAAA;;AAWA;;AAAA;;;;;;AAc9B;;;;;;;;AAAgC,gGAAqB,aAArB,EAAqB,qBAArB;;;;;;;;AAzDpC;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAAnY,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAqCA;;AAEJ;;;;;;;;;;;;AA1DqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIrB;;AAAA;;AAqCwC;;AAAA;;;;UD1C9CoY,8B;AAOX,gDAAmBzf,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSsD,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAsD,iBAAA,GAAAA,iBAAA;AATA,eAAA4B,eAAA,GAAiC,EAAjC;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGT,eAAAjF,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAlBUiY,8B,EAA8B,mJ,EAAA,yJ,EAAA,4I,EAAA,+J;AAAA,O;;;cAA9BA,8B;AAA8B,qD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,0V;AAAA;AAAA;ACf3C;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;ACAzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAUaC,iB;;;;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAQI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AASJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AASJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAA5f,sBAAA,yGAAT;AAAwH,WAAxH;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,0GAAT;AAAyH,WAAzH;;AAEA;;AACJ;;;;;;AAOI;;AACI;;AAEJ;;;;;;AAFI;;AAAA;;;;;;AAMZ;;AACI;;AACJ;;;;;;AAEA;;;;;;;;AAEI,8KAAkD,iBAAlD,EAAkD,6KAAlD;;;;;;AAIJ;;;;;;;;AAEI,gLAAkD,qBAAlD,EAAkD,wKAAlD;;;;;;AAIJ;;AACI;;AACJ;;;;UDzDa6f,yB;AAMX,2CAAmB3f,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSqO,sBAHT,EAISzO,sBAJT,EAKSO,gBALT,EAMSC,+BANT,EAOSC,oBAPT,EAOqD;AAAA;;AAPlC,eAAAP,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAqO,sBAAA,GAAAA,sBAAA;AACA,eAAAzO,sBAAA,GAAAA,sBAAA;AACA,eAAAO,gBAAA,GAAAA,gBAAA;AACA,eAAAC,+BAAA,GAAAA,+BAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AAZT,eAAAqf,4BAAA,GAA+B,8HAA/B;AACA,eAAAnf,UAAA,GAAa,0FAAb;AACA,eAAAC,WAAA,GAAc,4FAAd;AACA,eAAAC,gBAAA,GAAmB,8GAAnB;AASwD;;;;iBAExD,oBAAQ;AACN,iBAAK4N,sBAAL,CAA4BiB,iBAA5B,CAA8C,KAAKxP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAxF,EAAyG,IAAzG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBApBU4e,yB,EAAyB,mJ,EAAA,qJ,EAAA,yJ,EAAA,wK,EAAA,0K,EAAA,8J,EAAA,6L,EAAA,sK;AAAA,O;;;cAAzBA,yB;AAAyB,8C;AAAA,iB;AAAA,gB;AAAA,ie;AAAA;AAAA;ACpBtC;;;;AAGA;;;;AAIA;;AACI;AAAA,qBAAS,IAAApf,oBAAA,mEAAT;AAA4F,aAA5F;;AAEA;;AACI;;AACA;;AAGJ;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,4DAAT;AAAqF,aAArF;;AAEA;;AACI;;AACA;;AAGJ;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,iEAAT;AAA0F,aAA1F;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,yDAAT;AAAkF,aAAlF;;AAEA;;AACI;;AACA;;AAIJ;;AACJ;;AAEA;;AAIA;;AAMA;;AAMA;;;;;;;;;AA3EO;;AAGoB;;AAAA;;AAMvB;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAO9B;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAO9B;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAO5B;;AAAA;;AAKD;;AAAA;;AAMA;;AAAA;;AAKC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCrEOsf,0B;AAEX,4CAAoB5f,gBAApB,EAAwD;AAAA;;AAApC,eAAAA,gBAAA,GAAAA,gBAAA;AACnB;;;;iBAED,qCAAyB;;;AACvB,gBAAI6f,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEif,eAA7C,MAAiE7e,SAAjE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEif,eAAzD,EAA0EvX,MAA1E,KAAqF,CAArF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEif,eAAF,CAAkBG,WAA7D,MAA6EF,MAFpF,EAE6F;AAC3FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,oCAAwB;;;AACtB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEqf,cAA7C,MAAgEjf,SAAhE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEqf,cAAzD,EAAyE3X,MAAzE,KAAoF,CAApF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEqf,cAAF,CAAiBD,WAA5D,MAA4EF,MAFnF,EAE4F;AAC1FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,qCAAyB;;;AACvB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEsf,eAA7C,MAAiElf,SAAjE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEsf,eAAzD,EAA0E5X,MAA1E,KAAqF,CAArF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEsf,eAAF,CAAkBF,WAA7D,MAA6EF,MAFpF,EAE6F;AAC3FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,kCAAsB;;;AACpB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEuf,YAA7C,MAA8Dnf,SAA9D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEuf,YAAzD,EAAuE7X,MAAvE,KAAkF,CAAlF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEuf,YAAF,CAAeH,WAA1D,MAA0EF,MAFjF,EAE0F;AACxFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,oCAAwB;;;AACtB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwf,cAA7C,MAAgEpf,SAAhE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwf,cAAzD,EAAyE9X,MAAzE,KAAoF,CAApF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwf,cAAF,CAAiBJ,WAA5D,MAA4EF,MAFnF,EAE4F;AAC1FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,0CAA8B;;;AAC5B,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEyf,oBAA7C,MAAsErf,SAAtE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEyf,oBAAzD,EAA+E/X,MAA/E,KAA0F,CAA1F,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEyf,oBAAF,CAAuBL,WAAlE,MAAkFF,MAFzF,EAEkG;AAChGF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,0CAA8B;;;AAC5B,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE0f,oBAA7C,MAAsEtf,SAAtE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE0f,oBAAzD,EAA+EhY,MAA/E,KAA0F,CAA1F,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE0f,oBAAF,CAAuBN,WAAlE,MAAkFF,MAFzF,EAEkG;AAChGF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,2CAA+B;;;AAC7B,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE2f,wBAA7C,MAA0Evf,SAA1E,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE2f,wBAAzD,EAAmFjY,MAAnF,KAA8F,CAA9F,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE2f,wBAAF,CAA2BP,WAAtE,MAAsFF,MAF7F,EAEsG;AACpGF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,iDAAqC;;;AACnC,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4f,8BAA7C,MAAgFxf,SAAhF,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4f,8BAAzD,EAAyFlY,MAAzF,KAAoG,CAApG,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4f,8BAAF,CAAiCR,WAA5E,MAA4FF,MAFnG,EAE4G;AAC1GF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,qCAAyB;;;AACvB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE6f,eAA7C,MAAiEzf,SAAjE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE6f,eAAzD,EAA0EnY,MAA1E,KAAqF,CAArF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE6f,eAAF,CAAkBT,WAA7D,MAA6EF,MAFpF,EAE6F;AAC3FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,uCAA2B;;;AACzB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwH,iBAA7C,MAAmEpH,SAAnE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwH,iBAAzD,EAA4EE,MAA5E,KAAuF,CAAvF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwH,iBAAF,CAAoB4X,WAA/D,MAA+EF,MAFtF,EAE+F;AAC7FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,gCAAoB;;;AAClB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE8f,UAA7C,MAA4D1f,SAA5D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE8f,UAAzD,EAAqEpY,MAArE,KAAgF,CAAhF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE8f,UAAF,CAAaV,WAAxD,MAAwEF,MAF/E,EAEwF;AACtFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,yCAA6B;;;AAC3B,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE+f,mBAA7C,MAAqE3f,SAArE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE+f,mBAAzD,EAA8ErY,MAA9E,KAAyF,CAAzF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE+f,mBAAF,CAAsBX,WAAjE,MAAiFF,MAFxF,EAEiG;AAC/FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,6BAAiB;;;AACf,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEggB,OAA7C,MAAyD5f,SAAzD,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEggB,OAAzD,EAAkEtY,MAAlE,KAA6E,CAA7E,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEggB,OAAF,CAAUZ,WAArD,MAAqEF,MAF5E,EAEqF;AACnFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,qCAAyB;;;AACvB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEigB,eAA7C,MAAiE7f,SAAjE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEigB,eAAzD,EAA0EvY,MAA1E,KAAqF,CAArF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEigB,eAAF,CAAkBb,WAA7D,MAA6EF,MAFpF,EAE6F;AAC3FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,gCAAoB;;;AAClB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwK,UAA7C,MAA4DpK,SAA5D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwK,UAAzD,EAAqE9C,MAArE,KAAgF,CAAhF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwK,UAAF,CAAa4U,WAAxD,MAAwEF,MAF/E,EAEwF;AACtFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,mCAAuB;;;AACrB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEkgB,aAA7C,MAA+D9f,SAA/D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEkgB,aAAzD,EAAwExY,MAAxE,KAAmF,CAAnF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEkgB,aAAF,CAAgBd,WAA3D,MAA2EF,MAFlF,EAE2F;AACzFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,iCAAqB;;;AACnB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwf,cAA7C,MAAgEpf,SAAhE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwf,cAAzD,EAAyE9X,MAAzE,KAAoF,CAApF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwf,cAAF,CAAiBJ,WAA5D,MAA4EF,MAFnF,EAE4F;AAC1FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,yCAA6B;;;AAC3B,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEmgB,mBAA7C,MAAqE/f,SAArE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEmgB,mBAAzD,EAA8EzY,MAA9E,KAAyF,CAAzF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEmgB,mBAAF,CAAsBf,WAAjE,MAAiFF,MAFxF,EAEiG;AAC/FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,kCAAsB;;;AACpB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEogB,YAA7C,MAA8DhgB,SAA9D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEogB,YAAzD,EAAuE1Y,MAAvE,KAAkF,CAAlF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEogB,YAAF,CAAehB,WAA1D,MAA0EF,MAFjF,EAE0F;AACxFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,sCAA0B;;;AACxB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEqgB,gBAA7C,MAAkEjgB,SAAlE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEqgB,gBAAzD,EAA2E3Y,MAA3E,KAAsF,CAAtF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEqgB,gBAAF,CAAmBjB,WAA9D,MAA8EF,MAFrF,EAE8F;AAC5FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,qCAAyB;;;AACvB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEsgB,eAA7C,MAAiElgB,SAAjE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEsgB,eAAzD,EAA0E5Y,MAA1E,KAAqF,CAArF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEsgB,eAAF,CAAkBlB,WAA7D,MAA6EF,MAFpF,EAE6F;AAC3FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,iCAAqB;;;AACnB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEyQ,WAA7C,MAA6DrQ,SAA7D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEyQ,WAAzD,EAAsE/I,MAAtE,KAAiF,CAAjF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEyQ,WAAF,CAAc2O,WAAzD,MAAyEF,MAFhF,EAEyF;AACvFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,oCAAwB;AACtB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,KAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CugB,cAA5C,KAA+DngB,SAA/D,IACE8e,MAAM,CAACC,IAAP,CAAY,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CugB,cAAxD,EAAwE7Y,MAAxE,KAAmF,CAAnF,IACC,KAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CugB,cAA5C,CAA2DnB,WAA3D,KAA2EF,MAFlF,EAE2F;AACzFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,kCAAsB;;;AACpB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwgB,YAA7C,MAA8DpgB,SAA9D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwgB,YAAzD,EAAuE9Y,MAAvE,KAAkF,CAAlF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwgB,YAAF,CAAepB,WAA1D,MAA0EF,MAFjF,EAE0F;AACxFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,uCAA2B;;;AACzB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4e,iBAA7C,MAAmExe,SAAnE,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4e,iBAAzD,EAA4ElX,MAA5E,KAAuF,CAAvF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4e,iBAAF,CAAoBQ,WAA/D,MAA+EF,MAFtF,EAE+F;AAC7FF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAGD,iCAAqB;;;AACnB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEgM,WAA7C,MAA6D5L,SAA7D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEgM,WAAzD,EAAsEtE,MAAtE,KAAiF,CAAjF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEgM,WAAF,CAAcoT,WAAzD,MAAyEF,MAFhF,EAEyF;AACvFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,6BAAiB;;;AACf,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEygB,OAA7C,MAAyDrgB,SAAzD,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEygB,OAAzD,EAAkE/Y,MAAlE,KAA6E,CAA7E,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEygB,OAAF,CAAUrB,WAArD,MAAqEF,MAF5E,EAEqF;AACnFF,qBAAO,GAAG,KAAV;AACD,aANc,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,mBAAOA,OAAP;AACD;;;iBAED,+BAAmB;;;AACjB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE0gB,SAA7C,MAA2DtgB,SAA3D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE0gB,SAAzD,EAAoEhZ,MAApE,KAA+E,CAA/E,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE0gB,SAAF,CAAYtB,WAAvD,MAAuEF,MAF9E,EAEuF;AACrFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;iBAED,kCAAsB;;;AACpB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE2gB,YAA7C,MAA8DvgB,SAA9D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE2gB,YAAzD,EAAuEjZ,MAAvE,KAAkF,CAAlF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE2gB,YAAF,CAAevB,WAA1D,MAA0EF,MAFjF,EAE0F;AACxFF,qBAAO,GAAG,KAAV;AACD,aANmB,CAOpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,mBAAOA,OAAP;AACD;;;iBAED,kCAAsB;;;AACpB,gBAAIA,OAAO,GAAY,IAAvB;;AACA,gBAAI,YAAK7f,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4gB,YAA7C,MAA8DxgB,SAA9D,IACE8e,MAAM,CAACC,IAAP,CAAY,CAAD,KAAC,KAAKhgB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4gB,YAAzD,EAAuElZ,MAAvE,KAAkF,CAAlF,IACC,YAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4gB,YAAF,CAAexB,WAA1D,MAA0EF,MAFjF,EAE0F;AACxFF,qBAAO,GAAG,KAAV;AACD;;AAED,mBAAOA,OAAP;AACD;;;;;;;yBA/ZUD,0B,EAA0B,4H;AAAA,O;;;eAA1BA,0B;AAA0B,iBAA1BA,0BAA0B,K;AAAA,oBAFzB;;;;;;;;;;;;;;;;;ACJd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAY8B,sBAAZ;;AAAA,iBAAYA,sBAAZ,EAAkC;AAC9B;AACA;AACA;AACH,OAJD,EAAYA,sBAAsB,KAAtBA,sBAAsB,MAAlC;;AAMO,eAASC,yBAAT,GAAkC;AAEvC,eAAOD,sBAAP;AACD;;AAEM,eAASE,qCAAT,CAA+C7hB,eAA/C,EAA+E;;;AAClF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAJD,MAKK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASob,gCAAT,CAA0C9a,MAA1C,EAA0DhH,eAA1D,EAA0F;AAC7F,YAAIiH,mBAAJ;AACA4a,6CAAqC,CAAC7hB,eAAD,CAArC,CAAuDkH,OAAvD,CAA+D,UAAAC,CAAC,EAAI;AAChE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC/CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAE9E;;;;;;AACI;;;;;;AAGR;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AAAkC,gGAAqB,aAArB,EAAqB,qBAArB;;;;;;;;AA5BtC;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAAI,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAIA;;AAIA;;AAEJ;;;;;;;;;;;;AA7BqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIV;;AAAA;;AAIA;;AAAA;;AAI+B;;AAAA;;;;UDbhD0a,gC;AAOX,kDAAmB/hB,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSsD,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAsD,iBAAA,GAAAA,iBAAA;AATA,eAAA4B,eAAA,GAAiC,EAAjC;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGT,eAAAjF,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAlBUua,gC,EAAgC,mJ,EAAA,yJ,EAAA,4I,EAAA,+J;AAAA,O;;;cAAhCA,gC;AAAgC,uD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sX;AAAA;AAAA;ACf7C;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;ACAzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,yBAAZ;;AAAA,iBAAYA,yBAAZ,EAAqC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OARD,EAAYA,yBAAyB,KAAzBA,yBAAyB,MAArC;;AAUO,eAASC,4BAAT,GAAqC;AAE1C,eAAOD,yBAAP;AACD;;AAEM,eAASE,wCAAT,CAAkDliB,eAAlD,EAAkF;;;AACrF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SARD,MASK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASyb,mCAAT,CAA6Cnb,MAA7C,EAA6DhH,eAA7D,EAA6F;AAChG,YAAIiH,mBAAJ;AACAib,gDAAwC,CAACliB,eAAD,CAAxC,CAA0DkH,OAA1D,CAAkE,UAAAC,CAAC,EAAI;AACnE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5DD;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSmb,4B;AAEX,8CAAmBpiB,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATUkiB,4B,EAA4B,mJ,EAAA,yJ;AAAA,O;;;cAA5BA,4B;AAA4B,kD;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVzC;;;;AAGA;;;;AAIA;;AAAG;;AAAkC;;;;AAP9B;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEC3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaC,iB;AAIX,mCAAoBpiB,gBAApB,EACUD,eADV,EAEU8H,UAFV,EAEkC;AAAA;;AAFd,eAAA7H,gBAAA,GAAAA,gBAAA;AACV,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAA8H,UAAA,GAAAA,UAAA;AAJV,eAAAN,YAAA,GAAe,8FAAf;AAIqC;;;;iBAE9B,gBAAO8a,QAAP,EAAiB;AACrB,gBAAMrZ,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD,KAAK1B,YAAL,CAAkB,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA5D,CAAjD,eAAT;AAED,mBAAO,KAAKiF,UAAL,CAAgBya,IAAhB,CAA0BtZ,GAA1B,EAA+BqZ,QAA/B,EAAyC;AAC9ChY,4BAAc,EAAE,IAD8B;AAE9CC,qBAAO,EAAE;AAFqC,aAAzC,CAAP;AAID;;;;;;;yBAfU8X,iB,EAAiB,4I,EAAA,0I,EAAA,uH;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAHhB;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaG,mB;AAEX,qCAAoBxiB,eAApB,EACUC,gBADV,EAEUwiB,gBAFV,EAE8C;AAAA;;AAF1B,eAAAziB,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAwiB,gBAAA,GAAAA,gBAAA;AACT;;;;iBAED,uBAAcC,iBAAd,EAAgD;AAAA;;;;AAC9C,gBAAIC,YAAY,GAA2B,EAA3C;;AAD8C,uDAGfD,iBAHe;AAAA;;AAAA;AAG9C,kEAAkD;AAAA,oBAAzCE,kBAAyC;;AAAA,4DACvBA,kBAAkB,CAACC,gBADI;AAAA;;AAAA;AAChD,yEAA8D;AAAA,wBAArDC,YAAqD;;AAC5D,wBAAI,OAAAA,YAAY,CAACC,OAAb,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEC,eAAtB,KAAyC,gGAAoBC,QAAjE,EAA2E;AAEzE,0BAAIC,UAAU,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,QAAhB,EAAjB;;AAFyE,kEAGvDP,YAAY,CAACQ,gBAH0C;AAAA;;AAAA;AAGzE,+EAAiD;AAAA,8BAAxCC,KAAwC;AAC/CL,oCAAU,CAAC1c,IAAX,CAAgB,IAAI2c,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuBD,KAAK,CAACE,GAA7B,EAAkCF,KAAK,CAACG,GAAxC,CAAhB;AACD;AALwE;AAAA;AAAA;AAAA;AAAA;;AAOzE,0BAAIC,WAAW,GAAW,KAAKlB,gBAAL,CAAsBmB,mBAAtB,CAA0Cd,YAAY,CAACC,OAAb,CAAqB7T,MAA/D,EAAuE4T,YAAY,CAACC,OAAb,CAAqB7T,MAA5F,CAA1B;AAEA,0BAAIN,OAAO,GAAgC;AACzCiV,4BAAI,EAAEX,UADmC;AAEzCS,mCAAW,EAAEA,WAF4B;AAGzCG,qCAAa,EAAE,GAH0B;AAIzCC,oCAAY,EAAE,CAJ2B;AAKzCC,2BAAG,EAAE,KAAK/jB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB;AALR,uBAA3C;AAQAtB,kCAAY,CAACnc,IAAb,CAAkB,IAAI2c,MAAM,CAACC,IAAP,CAAYH,QAAhB,CAAyBrU,OAAzB,CAAlB;AAEAuU,4BAAM,CAACC,IAAP,CAAYc,KAAZ,CAAkBC,WAAlB,CAA8BxB,YAAY,CAACA,YAAY,CAACna,MAAb,GAAsB,CAAvB,CAA1C,EAAqE,WAArE,EAAkF,UAAC4b,GAAD,EAAiC;AACjH,4BAAI,CAAC,MAAI,CAACpkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8U,cAA/C,EAA+D;AAC1CyO,kCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmDH,GAAG,CAACI,MAAJ,CAAWjL,GAAX,GAAiBlY,QAAjB,GAA4BI,SAA5B,CAAsC,CAAtC,EAAyC,CAAzC,IACpE,GADoE,GAC9D2iB,GAAG,CAACI,MAAJ,CAAWhL,GAAX,GAAiBnY,QAAjB,GAA4BI,SAA5B,CAAsC,CAAtC,EAAyC,CAAzC,CADW;AAEpB,yBAHD,MAII;AACiB4iB,kCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmD,MAAI,CAACvkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D0D,GAA7D,GAAmEkL,OAAnE,CAA2E,CAA3E,IACtE,GADsE,GAChE,MAAI,CAACzkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D2D,GAA7D,GAAmEiL,OAAnE,CAA2E,CAA3E,CADa;AAEpB;AACF,uBATD;AAWD;AACF;AAjC+C;AAAA;AAAA;AAAA;AAAA;;AAiC/C;AACF;AArC6C;AAAA;AAAA;AAAA;AAAA;;AAuC9C,iBAAKxkB,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE8b,mCAAqB,EAAE,IAAIvB,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA+CV,YAA/C;AAAzB,aAAjD;AACD;;;;;;;yBA/CUH,mB,EAAmB,0I,EAAA,4I,EAAA,gJ;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFlB;;;;;;;;;;;;;;;;;ACRd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUamC,kB;AAEX,oCAAoB3kB,eAApB,EACUC,gBADV,EAEUwiB,gBAFV,EAE8C;AAAA;;AAF1B,eAAAziB,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAwiB,gBAAA,GAAAA,gBAAA;AACT;;;;iBAED,sBAAamC,sBAAb,EAAoD;AAAA;;;;AAClD,gBAAIC,WAAW,GAA0B,EAAzC;;AADkD,wDAGnBD,sBAHmB;AAAA;;AAAA;AAGlD,qEAAuD;AAAA,oBAA9ChC,kBAA8C;;AAAA,4DAC5BA,kBAAkB,CAACC,gBADS;AAAA;;AAAA;AACrD,yEAA8D;AAAA,wBAArDC,YAAqD;;AAC5D,wBAAI,OAAAA,YAAY,CAACC,OAAb,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEC,eAAtB,KAAyC,gGAAoB8B,OAAjE,EAA0E;AAExE,0BAAI5B,UAAU,GAAG,IAAIC,MAAM,CAACC,IAAP,CAAYC,QAAhB,EAAjB;;AAFwE,kEAGtDP,YAAY,CAACQ,gBAHyC;AAAA;;AAAA;AAGxE,+EAAiD;AAAA,8BAAxCC,KAAwC;AAC/CL,oCAAU,CAAC1c,IAAX,CAAgB,IAAI2c,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuBD,KAAK,CAACE,GAA7B,EAAkCF,KAAK,CAACG,GAAxC,CAAhB;AACD;AALuE;AAAA;AAAA;AAAA;AAAA;;AAOxE,0BAAIC,WAAW,GAAW,KAAKlB,gBAAL,CAAsBsC,kBAAtB,CAAyCjC,YAAY,CAACC,OAAb,CAAqB7T,MAA9D,CAA1B;AACA,0BAAI8V,SAAS,GAAW,KAAKvC,gBAAL,CAAsBsC,kBAAtB,CAAyCjC,YAAY,CAACC,OAAb,CAAqB7T,MAA9D,CAAxB;AAEA,0BAAIN,OAAO,GAA+B;AACxCqW,6BAAK,EAAE/B,UADiC;AAExCS,mCAAW,EAAEA,WAF2B;AAGxCG,qCAAa,EAAE,GAHyB;AAIxCC,oCAAY,EAAE,CAJ0B;AAKxCiB,iCAAS,EAAEA,SAL6B;AAMxCE,mCAAW,EAAE,GAN2B;AAOxClB,2BAAG,EAAE,KAAK/jB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB;AAPT,uBAA1C;AAUAY,iCAAW,CAACre,IAAZ,CAAiB,IAAI2c,MAAM,CAACC,IAAP,CAAY0B,OAAhB,CAAwBlW,OAAxB,CAAjB;AAEAuU,4BAAM,CAACC,IAAP,CAAYc,KAAZ,CAAkBC,WAAlB,CAA8BU,WAAW,CAACA,WAAW,CAACrc,MAAZ,GAAqB,CAAtB,CAAzC,EAAmE,WAAnE,EAAgF,UAAC4b,GAAD,EAAiC;AAC/G,4BAAI,CAAC,MAAI,CAACpkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8U,cAA/C,EAA+D;AAC1CyO,kCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmDH,GAAG,CAACI,MAAJ,CAAWjL,GAAX,GAAiBlY,QAAjB,GAA4BI,SAA5B,CAAsC,CAAtC,EAAyC,CAAzC,IACpE,GADoE,GAC9D2iB,GAAG,CAACI,MAAJ,CAAWhL,GAAX,GAAiBnY,QAAjB,GAA4BI,SAA5B,CAAsC,CAAtC,EAAyC,CAAzC,CADW;AAEpB,yBAHD,MAII;AACiB4iB,kCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmD,MAAI,CAACvkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D0D,GAA7D,GAAmEkL,OAAnE,CAA2E,CAA3E,IACtE,GADsE,GAChE,MAAI,CAACzkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D2D,GAA7D,GAAmEiL,OAAnE,CAA2E,CAA3E,CADa;AAEpB;AACF,uBATD;AAWD;AACF;AApCoD;AAAA;AAAA;AAAA;AAAA;;AAoCpD;AACF;AAxCiD;AAAA;AAAA;AAAA;AAAA;;AA0ClD,iBAAKxkB,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEuc,kCAAoB,EAAE,IAAIhC,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA8CwB,WAA9C;AAAxB,aAAjD;AACD;;;;;;;yBAlDUF,kB,EAAkB,0I,EAAA,4I,EAAA,gJ;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGDS,kB;AAIX,oCAAmBplB,eAAnB,EACSK,gBADT,EAC6C;AAAA;;AAD1B,eAAAL,eAAA,GAAAA,eAAA;AACV,eAAAK,gBAAA,GAAAA,gBAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAZU+kB,kB,EAAkB,mJ,EAAA,6J;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,mC;AAAA;AAAA;ACZ/B;;AAAyB;;AAAgF;;;;AAAhF;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSC,wB;AAIX,0CAAmBrlB,eAAnB,EACSE,kBADT,EAEUuO,kBAFV,EAEkD;AAAA;;AAF/B,eAAAzO,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAuO,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAErD,oBAAQ;AACN,iBAAKA,kBAAL,CAAwBiB,aAAxB,CAAsC,KAAK1P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbUskB,wB,EAAwB,mJ,EAAA,yJ,EAAA,kK;AAAA,O;;;cAAxBA,wB;AAAwB,+C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,wJ;AAAA;AAAA;ADbrC;;;;AAGA;;;;AAIA;;AAAmC;;AAA8B;;;;AAP1D;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,WAAZ;;AAAA,iBAAYA,WAAZ,EAAuB;AACnB;AACA;AACH,OAHD,EAAYA,WAAW,KAAXA,WAAW,MAAvB;;AAKO,eAASC,cAAT,GAAuB;AAE5B,eAAOD,WAAP;AACD;;AAEM,eAASE,0BAAT,CAAoCxlB,eAApC,EAAoE;;;AACvE,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAHD,MAIK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAAS+e,qBAAT,CAA+Bze,MAA/B,EAA+ChH,eAA/C,EAA+E;AAClF,YAAIiH,mBAAJ;AACAue,kCAA0B,CAACxlB,eAAD,CAA1B,CAA4CkH,OAA5C,CAAoD,UAAAC,CAAC,EAAI;AACrD,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC3CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaye,sB;AAKT,wCAAoB5d,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYylB,mBAJZ,EAKY3d,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAylB,mBAAA,GAAAA,mBAAA;AACA,eAAA3d,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,2BAAkBoF,OAAlB,EAAoC;;;AAChC,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEsf,eAAjD,EAAkE;AAChE,mBAAKwF,mBAAL;AACD,aAFD,MAGK;AACH,mBAAKzd,GAAL,GAAW,KAAK0d,kBAAL,GAA0Bld,SAA1B,EAAX;AACD;AACF;;;iBAEK,8BAAqB;AAAA;;AACzB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEwX,6BAAe,EAAE;AAAnB,aAAjD;AACA,iBAAKpgB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,kGAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,6BAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAqCF,GAArC,EAA0CG,IAA1C,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,oBAAI,CAACyc,qBAAL,CAA2Bzc,CAA3B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,MAAI,CAACnB,OAAT,EAAkB;AACd,sBAAI,CAAC6d,cAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA5e,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,sBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,0BAAiB;AACrB,iBAAKwe,mBAAL,CAAyBI,cAAzB,CAAwC,KAAK7d,OAA7C;AACH;;;iBAEO,+BAAsB;;;AAC1B,iBAAK4d,qBAAL,CAA2B,CAAD,WAAC,KAAK7lB,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIsf,eAAzE;AACA7W,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIsf,eAA5D;;AACA,gBAAI,KAAKlY,OAAT,EAAkB;AACd,mBAAK6d,cAAL;AACH;AACJ;;;iBAEO,+BAAsB1c,CAAtB,EAA0C;AAC9C,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEwX,6BAAe,EAAE/W;AAAnB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCge,yBAAhC,EAAJ,EAAiE;AAC7D,qBAAKhmB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQ0c,sB,EAAsB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,2J,EAAA,0K;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;ACdhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAQaO,gB;AACX,kCAAoBjmB,eAApB,EACUC,gBADV,EAC8C;AAAA;;AAD1B,eAAAD,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACT;;;;iBAED,qBAAY;AACV,gBAAIimB,MAAM,GAAG,IAAI/C,MAAM,CAACC,IAAP,CAAY+C,YAAhB,EAAb;AACA,gBAAIC,oBAAoB,GAA6C,KAAKnmB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CulB,mBAAjH;AACA,gBAAI7d,MAAM,GAAW4d,oBAAoB,CAACE,SAArB,EAArB;;AACA,iBAAK,IAAI5Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlF,MAApB,EAA4BkF,CAAC,EAA7B,EAAiC;AAC/B,kBAAI6Y,MAAM,GAAuBH,oBAAoB,CAACI,KAArB,CAA2B9Y,CAA3B,CAAjC;AAEAwY,oBAAM,CAACO,MAAP,CAAcF,MAAM,CAACG,WAAP,EAAd;AACD;;AAED,gBAAIC,qBAAqB,GAA8C,KAAK1mB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CqkB,oBAAnH;AACA3c,kBAAM,GAAGme,qBAAqB,CAACL,SAAtB,EAAT;;AACA,iBAAK,IAAI5Y,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGlF,MAApB,EAA4BkF,EAAC,EAA7B,EAAiC;AAE/BiZ,mCAAqB,CAACH,KAAtB,CAA4B9Y,EAA5B,EAA+BkZ,OAA/B,GAAyC1f,OAAzC,CAAiD,UAAC2c,IAAD,EAAU;AACzDqC,sBAAM,CAACO,MAAP,CAAc5C,IAAd;AACD,eAFD;AAGD;;AAED,gBAAIgD,sBAAsB,GAA+C,KAAK5mB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C4jB,qBAArH;AACAlc,kBAAM,GAAGqe,sBAAsB,CAACP,SAAvB,EAAT;;AACA,iBAAK,IAAI5Y,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGlF,MAApB,EAA4BkF,GAAC,EAA7B,EAAiC;AAE/BmZ,oCAAsB,CAACL,KAAvB,CAA6B9Y,GAA7B,EAAgCkZ,OAAhC,GAA0C1f,OAA1C,CAAkD,UAAC2c,IAAD,EAAU;AAC1DqC,sBAAM,CAACO,MAAP,CAAc5C,IAAd;AACD,eAFD;AAGD;;AAED,iBAAK5jB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB,GAA5C,CAAgD6C,SAAhD,CAA0DZ,MAA1D;AACD;;;iBAED,2BAAkBa,cAAlB,EAAwD;AAEtD,oBAAQA,cAAR;AACE,mBAAK,sGAAuB5J,QAA5B;AAAsC,uBAAO,KAAKnd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwX,2BAAjD;;AACtC,mBAAK,sGAAuB8E,qBAA5B;AAAmD,uBAAO,KAAKpd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyX,wCAAjD;;AACnD,mBAAK,sGAAuB8E,uBAA5B;AAAqD,uBAAO,KAAKrd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0X,0CAAjD;;AACrD,mBAAK,sGAAuB8E,UAA5B;AAAwC,uBAAO,KAAKtd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C2X,6BAAjD;;AACxC,mBAAK,sGAAuB8E,UAA5B;AAAwC,uBAAO,KAAKvd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4X,6BAAjD;AAL1C;AAOD;;;iBAED,2BAAkBxJ,MAAlB,EAAoC;AAElC,oBAAQA,MAAR;AACE,mBAAK,8EAAWG,IAAhB;AAAsB,uBAAO,KAAKrP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuV,kBAAjD;;AACtB,mBAAK,8EAAW2Q,WAAhB;AAA6B,uBAAO,KAAKhnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwV,yBAAjD;;AAC7B,mBAAK,8EAAWnH,OAAhB;AAAyB,uBAAO,KAAKnP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyV,qBAAjD;;AACzB,mBAAK,8EAAW0Q,MAAhB;AAAwB,uBAAO,KAAKjnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0V,oBAAjD;;AACxB,mBAAK,8EAAW0Q,eAAhB;AAAiC,uBAAO,KAAKlnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C2V,6BAAjD;;AACjC,mBAAK,8EAAW0Q,cAAhB;AAAgC,uBAAO,KAAKnnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4V,4BAAjD;;AAChC,mBAAK,8EAAW0Q,UAAhB;AAA4B,uBAAO,KAAKpnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6V,wBAAjD;;AAC5B,mBAAK,8EAAW0Q,WAAhB;AAA6B,uBAAO,KAAKrnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8V,yBAAjD;;AAC7B,mBAAK,8EAAW0Q,YAAhB;AAA8B,uBAAO,KAAKtnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+V,0BAAjD;;AAC9B,mBAAK,8EAAW0Q,QAAhB;AAA0B,uBAAO,KAAKvnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgW,sBAAjD;;AAC1B,mBAAK,8EAAW0Q,yBAAhB;AAA2C,uBAAO,KAAKxnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CiW,uCAAjD;;AAC3C,mBAAK,8EAAW0Q,4BAAhB;AAA8C,uBAAO,KAAKznB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkW,0CAAjD;;AAC9C,mBAAK,8EAAW0Q,YAAhB;AAA8B,uBAAO,KAAK1nB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CmW,0BAAjD;;AAC9B,mBAAK,8EAAW0Q,UAAhB;AAA4B,uBAAO,KAAK3nB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoW,wBAAjD;;AAC5B,mBAAK,8EAAW0Q,kBAAhB;AAAoC,uBAAO,KAAK5nB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CqW,gCAAjD;;AACpC,mBAAK,8EAAW0Q,iBAAhB;AAAmC,uBAAO,KAAK7nB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsW,+BAAjD;;AACnC,mBAAK,8EAAW0Q,qBAAhB;AAAuC,uBAAO,KAAK9nB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuW,mCAAjD;;AACvC,mBAAK,8EAAW9H,YAAhB;AAA8B,uBAAO,KAAKvP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwW,0BAAjD;;AAC9B,mBAAK,8EAAW7H,OAAhB;AAAyB,uBAAO,KAAKzP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyW,qBAAjD;;AACzB,mBAAK,8EAAW5H,QAAhB;AAA0B,uBAAO,KAAK3P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0W,sBAAjD;;AAC1B,mBAAK,8EAAWuQ,MAAhB;AAAwB,uBAAO,KAAK/nB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C2W,oBAAjD;;AACxB,mBAAK,8EAAWuQ,YAAhB;AAA8B,uBAAO,KAAKhoB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4W,0BAAjD;;AAC9B,mBAAK,8EAAWuQ,mBAAhB;AAAqC,uBAAO,KAAKjoB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6W,iCAAjD;;AACrC,mBAAK,8EAAWuQ,OAAhB;AAAyB,uBAAO,KAAKloB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8W,qBAAjD;;AACzB,mBAAK,8EAAWuQ,MAAhB;AAAwB,uBAAO,KAAKnoB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+W,oBAAjD;;AACxB,mBAAK,8EAAWhI,aAAhB;AAA+B,uBAAO,KAAK7P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgX,2BAAjD;;AAC/B,mBAAK,8EAAW/H,QAAhB;AAA0B,uBAAO,KAAK/P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CiX,sBAAjD;;AAC1B,mBAAK,8EAAW5H,MAAhB;AAAwB,uBAAO,KAAKnQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkX,oBAAjD;;AACxB,mBAAK,8EAAWoQ,oBAAhB;AAAsC,uBAAO,KAAKpoB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CmX,kCAAjD;;AACtC,mBAAK,8EAAW5H,SAAhB;AAA2B,uBAAO,KAAKrQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoX,uBAAjD;;AAC3B,mBAAK,8EAAWmQ,QAAhB;AAA0B,uBAAO,KAAKroB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CqX,sBAAjD;;AAC1B,mBAAK,8EAAWmQ,wBAAhB;AAA0C,uBAAO,KAAKtoB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsX,sCAAjD;;AAC1C,mBAAK,8EAAWmQ,WAAhB;AAA6B,uBAAO,KAAKvoB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuX,yBAAjD;AAjC/B;AAmCD;;;iBAED,6BAAoBmQ,UAApB,EAA4CC,QAA5C,EAAgE;AAE9D,gBAAID,UAAU,IAAI,8EAAWlB,YAAzB,IAAyCmB,QAAQ,IAAI,8EAAWP,OAApE,EAA6E;AAC3E,qBAAO,KAAKloB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6X,mDAAjD;AACD,aAFD,MAGK,IAAI6P,UAAU,IAAI,8EAAWnB,WAAzB,IAAwCoB,QAAQ,IAAI,8EAAWpB,WAAnE,EAAgF;AACnF,qBAAO,KAAKrnB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8X,sDAAjD;AACD,aAFI,MAGA,IAAI4P,UAAU,IAAI,8EAAWnB,WAAzB,IAAwCoB,QAAQ,IAAI,8EAAWP,OAAnE,EAA4E;AAC/E,qBAAO,KAAKloB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+X,kDAAjD;AACD,aAFI,MAGA,IAAI2P,UAAU,IAAI,8EAAWnB,WAAzB,IAAwCoB,QAAQ,IAAI,8EAAWH,wBAAnE,EAA6F;AAChG,qBAAO,KAAKtoB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgY,+CAAjD;AACD,aAFI,MAGA,IAAI0P,UAAU,IAAI,8EAAWF,wBAAzB,IAAqDG,QAAQ,IAAI,8EAAWP,OAAhF,EAAyF;AAC5F,qBAAO,KAAKloB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CiY,2CAAjD;AACD,aAFI,MAGA;AACH,qBAAO,KAAK/Y,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4nB,gBAAjD;AACD;AACF;;;iBAED,4BAAmBxZ,MAAnB,EAAqC;AACnC,oBAAQA,MAAR;AACE,mBAAK,8EAAWG,IAAhB;AAAsB,uBAAO,KAAKrP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkY,mBAAjD;;AACtB,mBAAK,8EAAW7J,OAAhB;AAAyB,uBAAO,KAAKnP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CmY,sBAAjD;;AACzB,mBAAK,8EAAWlJ,QAAhB;AAA0B,uBAAO,KAAK/P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoY,uBAAjD;;AAC1B,mBAAK,8EAAW/I,MAAhB;AAAwB,uBAAO,KAAKnQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CqY,qBAAjD;;AACxB,mBAAK,8EAAW9I,SAAhB;AAA2B,uBAAO,KAAKrQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsY,wBAAjD;AAL7B;AAOD;;;;;;;yBApHU6M,gB,EAAgB,0I,EAAA,4I;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAea0C,2B;AAKT,6CAAoB7gB,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIY0oB,2BAJZ,EAKY5gB,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0oB,2BAAA,GAAAA,2BAAA;AACA,eAAA5gB,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,gCAAuBoF,OAAvB,EAAyC;;;AACrC,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEyf,oBAAjD,EAAuE;AACrE,mBAAKsI,wBAAL;AACD,aAFD,MAGK;AACH,mBAAK1gB,GAAL,GAAW,KAAK2gB,uBAAL,GAA+BngB,SAA/B,EAAX;AACD;AACF;;;iBAEK,mCAA0B;AAAA;;AAC9B,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE2X,kCAAoB,EAAE;AAAxB,aAAjD;AACA,iBAAKvgB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,4GAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,kCAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAA0CF,GAA1C,EAA+CG,IAA/C,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,oBAAI,CAAC0f,0BAAL,CAAgC1f,CAAhC;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,MAAI,CAACnB,OAAT,EAAkB;AACd,sBAAI,CAAC8gB,sBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA7hB,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,sBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,kCAAyB;AAC7B,iBAAKyhB,2BAAL,CAAiCI,sBAAjC,CAAwD,KAAK9gB,OAA7D;AACH;;;iBAEO,oCAA2B;;;AAC/B,iBAAK6gB,0BAAL,CAAgC,CAAD,WAAC,KAAK9oB,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIyf,oBAA9E;AACAhX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIyf,oBAA5D;;AACA,gBAAI,KAAKrY,OAAT,EAAkB;AACd,mBAAK8gB,sBAAL;AACH;AACJ;;;iBAEO,oCAA2B3f,CAA3B,EAAoD;AACxD,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE2X,kCAAoB,EAAElX;AAAxB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCihB,8BAAhC,EAAJ,EAAsE;AAClE,qBAAKjpB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQ2f,2B,EAA2B,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,6K,EAAA,0K;AAAA,O;;;eAA3BA,2B;AAA2B,iBAA3BA,2BAA2B,K;AAAA,oBAFxB;;;;;;;;;;;;;;;;;ACdhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAI;;AACI;;AAAM;;AAAgI;;AACtI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yGAA8B,aAA9B,EAA8B,kBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAAoI;;AAC1I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,6GAAkC,aAAlC,EAAkC,kBAAlC;;;;;;AAGpB;;AACI;;AAAM;;AAAmI;;AACzI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,4GAAiC,aAAjC,EAAiC,kBAAjC;;;;;;AAGpB;;AACI;;AAAM;;AAA4H;;AAClI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yHAA8C,aAA9C,EAA8C,kBAA9C;;;;;;AAGpB;;AACI;;AAAM;;AAA4H;;AAClI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,qGAA0B,aAA1B,EAA0B,kBAA1B;;;;;;AAGpB;;AACI;;AAAM;;AAA8H;;AACpI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,uGAA4B,aAA5B,EAA4B,kBAA5B;;;;;;AAGpB;;AACI;;AAAM;;AAAiI;;AACvI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,0GAA+B,aAA/B,EAA+B,kBAA/B;;;;;;AAGpB;;AACI;;AAAM;;AAAkI;;AACxI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,+GAAoC,aAApC,EAAoC,kBAApC;;;;;;AAGpB;;AACI;;AAAM;;AAAgI;;AACtI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yGAA8B,aAA9B,EAA8B,kBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAA+H;;AACrI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,wGAA6B,aAA7B,EAA6B,kBAA7B;;;;;;AAGpB;;AACI;;AAAM;;AAAqI;;AAC3I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,+GAAmC,aAAnC,EAAmC,mBAAnC;;;;;;AAGpB;;AACI;;AAAM;;AAAoI;;AAC1I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,8GAAkC,aAAlC,EAAkC,mBAAlC;;;;;;AAGpB;;AACI;;AAAM;;AAAgI;;AACtI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,0GAA8B,aAA9B,EAA8B,mBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAAkI;;AACxI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,sHAA0C,aAA1C,EAA0C,mBAA1C;;;;UDvDXO,gC;AAIX,kDAAmBlpB,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;eAED,eAAc;AACZ,mBAAO,6EAAP;AACD;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAhBUgpB,gC,EAAgC,mJ,EAAA,yJ;AAAA,O;;;cAAhCA,gC;AAAgC,uD;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,2D;AAAA;AAAA;ACb7C;;AACI;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AACJ;;;;AAvEW;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AClEX;AAAA;;;AAAA;AAAA;AAAA,S,CAAA;AACA;AACA;;;AAEO,UAAMC,WAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACdaC,c;;;;;yBAAAA,c;AAAc,O;;;cAAdA;;;kBA7CT,4D,EACA,qE,EACA,iE,EACA,+D,EACA,sE,EACA,qE,EACA,oF,EACA,sE,EACA,mF,EACA,wE,EACA,sF,EACA,qE,EACA,6E,EACA,uE,EACA,iF,EACA,yE,EACA,2E,EACA,+E,EACA,8E,EACA,qE,EACA,uE,EACA,qE,EACA,qE,EACA,2E,EACA,+E,EACA,oF,EACA,4F,EACA,uE,EACA,uE,EACA,yE,EACA,2E,EACA,yE,EACA,oF,EACA,8E,EACA,qE,EACA,2E,EACA,uE,EACA,qE,EACA,2E,EACA,2E,EACA,qE,EACA,iE,EACA,uE;;;;6HAGSA,c,EAAc;AAAA,oBA7CvB,4DA6CuB,EA5CvB,qEA4CuB,EA3CvB,iEA2CuB,EA1CvB,+DA0CuB,EAzCvB,sEAyCuB,EAxCvB,qEAwCuB,EAvCvB,oFAuCuB,EAtCvB,sEAsCuB,EArCvB,mFAqCuB,EApCvB,wEAoCuB,EAnCvB,sFAmCuB,EAlCvB,qEAkCuB,EAjCvB,6EAiCuB,EAhCvB,uEAgCuB,EA/BvB,iFA+BuB,EA9BvB,yEA8BuB,EA7BvB,2EA6BuB,EA5BvB,+EA4BuB,EA3BvB,8EA2BuB,EA1BvB,qEA0BuB,EAzBvB,uEAyBuB,EAxBvB,qEAwBuB,EAvBvB,qEAuBuB,EAtBvB,2EAsBuB,EArBvB,+EAqBuB,EApBvB,oFAoBuB,EAnBvB,4FAmBuB,EAlBvB,uEAkBuB,EAjBvB,uEAiBuB,EAhBvB,yEAgBuB,EAfvB,2EAeuB,EAdvB,yEAcuB,EAbvB,oFAauB,EAZvB,8EAYuB,EAXvB,qEAWuB,EAVvB,2EAUuB,EATvB,uEASuB,EARvB,qEAQuB,EAPvB,2EAOuB,EANvB,2EAMuB,EALvB,qEAKuB,EAJvB,iEAIuB,EAHvB,uEAGuB;AAAA,S;AAHR,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC7DNC,oB;AAEX,sCAAoBtpB,eAApB,EACUmO,cADV,EAEUrE,iBAFV,EAGUyE,sBAHV,EAIUE,kBAJV,EAKUD,mBALV,EAMUE,wBANV,EAOUN,kBAPV,EAQUC,cARV,EASUC,gBATV,EAUUnO,mBAVV,EAUoD;AAAA;;AAVhC,eAAAH,eAAA,GAAAA,eAAA;AACV,eAAAmO,cAAA,GAAAA,cAAA;AACA,eAAArE,iBAAA,GAAAA,iBAAA;AACA,eAAAyE,sBAAA,GAAAA,sBAAA;AACA,eAAAE,kBAAA,GAAAA,kBAAA;AACA,eAAAD,mBAAA,GAAAA,mBAAA;AACA,eAAAE,wBAAA,GAAAA,wBAAA;AACA,eAAAN,kBAAA,GAAAA,kBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAnO,mBAAA,GAAAA,mBAAA;AACT;;;;iBAED,kBAASopB,gBAAT,EAAiD;AAC/C,iBAAKvpB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEyL,8BAAgB,EAAEiV;AAApB,aAA9C;AACA,iBAAKlb,cAAL,CAAoBiB,SAApB,CAA8B,KAAKtP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAxE,EAAyF,IAAzF;AACD;;;iBAED,qBAAYyoB,mBAAZ,EAA0D;AACxD,iBAAKxpB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEiD,iCAAmB,EAAE0d;AAAvB,aAA9C;AACA,iBAAK1f,iBAAL,CAAuBE,YAAvB,CAAoC,KAAKhK,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA9E,EAA+F,IAA/F;AACD;;;iBAED,0BAAiB0oB,wBAAjB,EAAyE;AACvE,iBAAKzpB,eAAL,CAAqB6I,cAArB,CAA8C;AAAE+L,sCAAwB,EAAE6U;AAA5B,aAA9C;AACA,iBAAKlb,sBAAL,CAA4BiB,iBAA5B,CAA8C,KAAKxP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAxF,EAAyG,IAAzG;AACD;;;iBAED,qBAAY2oB,mBAAZ,EAA0D;AACxD,iBAAK1pB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEmM,iCAAmB,EAAE0U;AAAvB,aAA9C;AACA,iBAAKjb,kBAAL,CAAwBiB,aAAxB,CAAsC,KAAK1P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACD;;;iBAED,sBAAa4oB,oBAAb,EAA6D;AAC3D,iBAAK3pB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEiM,kCAAoB,EAAE6U;AAAxB,aAA9C;AACA,iBAAKnb,mBAAL,CAAyBoB,cAAzB,CAAwC,KAAK5P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACD;;;iBAED,+BAAsB6oB,yBAAtB,EAAgF;AAC9E,iBAAK5pB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEoM,uCAAyB,EAAE2U;AAA7B,aAA9C;AACA,iBAAKlb,wBAAL,CAA8BoB,mBAA9B,CAAkD,KAAK9P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5F,EAA6G,IAA7G;AACD;;;iBAED,sBAAa8oB,oBAAb,EAA6D;AAC3D,iBAAK7pB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuL,kCAAoB,EAAEyV;AAAxB,aAA9C;AACA,iBAAKzb,kBAAL,CAAwB4B,aAAxB,CAAsC,KAAKhQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACD;;;iBAED,kBAAS+oB,gBAAT,EAAiD;AAC/C,iBAAK9pB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEqL,8BAAgB,EAAE4V;AAApB,aAA9C;AACA,iBAAK3b,cAAL,CAAoB+B,SAApB,CAA8B,IAA9B;AACD;;;iBAED,oBAAW6Z,kBAAX,EAAuD;AACrD,iBAAK/pB,eAAL,CAAqB6I,cAArB,CAA8C;AAAE2L,gCAAkB,EAAEuV;AAAtB,aAA9C;AACA,iBAAKzb,gBAAL,CAAsB8B,WAAtB,CAAkC,KAAKpQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5E,EAA6F,IAA7F;AACD;;;iBAED,uBAAcipB,qBAAd,EAAgE;AAC9D,iBAAKhqB,eAAL,CAAqB6I,cAArB,CAA8C;AAAE6L,mCAAqB,EAAEsV;AAAzB,aAA9C;AACA,iBAAK7pB,mBAAL,CAAyBS,cAAzB,CAAwC,KAAKZ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACD;;;;;;;yBA/DUuoB,oB,EAAoB,0I,EAAA,gJ,EAAA,sJ,EAAA,+J,EAAA,yJ,EAAA,2J,EAAA,sK,EAAA,wJ,EAAA,gJ,EAAA,qJ,EAAA,2J;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;ACvBd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoBaW,c;AAKT,gCAAoBniB,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYgL,qBAJZ,EAKYC,0BALZ,EAMY7D,UANZ,EAOY4iB,sBAPZ,EAQYliB,0BARZ,EASYoD,cATZ,EAS4C;AAAA;;;;AATxB,eAAAtD,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgL,qBAAA,GAAAA,qBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AACA,eAAA7D,UAAA,GAAAA,UAAA;AACA,eAAA4iB,sBAAA,GAAAA,sBAAA;AACA,eAAAliB,0BAAA,GAAAA,0BAAA;AACA,eAAAoD,cAAA,GAAAA,cAAA;AAXZ,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAYC;;;;iBAED,mBAAUoF,OAAV,EAA4B;;;AACxB,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEygB,OAAjD,EAA0D;AACtD,mBAAK4I,WAAL;AACH,aAFD,MAGK;AACD,mBAAKhiB,GAAL,GAAW,KAAKiiB,UAAL,GAAkBzhB,SAAlB,EAAX;AACH;AACJ;;;iBAEO,sBAAa;AAAA;;AACjB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE2Y,qBAAO,EAAE;AAAX,aAAjD;AACA,iBAAKvhB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAK,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAL,gBAAoE,kFAApE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,qBAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAA6BF,GAA7B,EAAkCG,IAAlC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACghB,aAAL,CAAmBhhB,CAAnB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAACoiB,iBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAnjB,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,6BAAoB;AACxB,iBAAK+iB,sBAAL,CAA4BI,iBAA5B,CAA8C,KAAKpiB,OAAnD;AACH;;;iBAEO,uBAAc;;;AAClB,iBAAKmiB,aAAL,CAAmB,CAAD,WAAC,KAAKpqB,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIygB,OAAjE;AACAhY,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIygB,OAA5D;;AACA,gBAAI,KAAKrZ,OAAT,EAAkB;AACd,mBAAKoiB,iBAAL;AACH;AACJ;;;iBAEO,uBAAcjhB,CAAd,EAA0B;;;AAC9B,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C2Y,qBAAO,EAAElY;AADoC,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAEygB,OAA7C,MAAoD,IAApD,IAAoD,aAApD,GAAoD,MAApD,GAAoD,GAAE5V,WAArF;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,mBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,sBAAM,EAAE,EAAV;AAAcE,uBAAO,EAAE;AAAvB,eAA9C;AACH;;AAED,gBAAI,KAAKhJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC1D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoT,gBAA1C,IAA8D,kGAAqBC,SAAvF,EAAkG;AAC9F,qBAAK7M,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACO,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CygB,OAA5C,CAAoDgJ,sBAD3D,GAEO,CAAC,KAAKtqB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CygB,OAA5C,CAAoD5V,WAArD,CAFP;AAIH;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoT,gBAA1C,IAA8D,kGAAqB/H,KAAvF,EAA8F;AAC1F,qBAAK7E,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACO,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CygB,OAA5C,CAAoDgJ,sBAD3D,GAEO,CAAC,KAAKtqB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CygB,OAA5C,CAAoD5V,WAArD,CAFP;AAIH;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoT,gBAA1C,IAA8D,kGAAqBsW,YAAvF,EAAqG;AACjG,qBAAKljB,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACO,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CygB,OAA5C,CAAoDgJ,sBAD3D,GAEO,CAAC,KAAKtqB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CygB,OAA5C,CAAoD5V,WAArD,CAFP;AAIH;AACJ;AACJ;;;;;;;yBA1GQse,c,EAAc,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,gK,EAAA,0K,EAAA,oI,EAAA,kK,EAAA,0K,EAAA,gJ;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFX;;;;;;;;;;;;;;;;;ACpBhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYQ,UAAZ;;AAAA,iBAAYA,UAAZ,EAAsB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAvFD,EAAYA,UAAU,KAAVA,UAAU,MAAtB;;AAyFO,eAASC,aAAT,GAAsB;AAE3B,eAAOD,UAAP;AACD;;AAEM,eAASE,yBAAT,CAAmC3qB,eAAnC,EAAmE;;;AACtE,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH,SAvFD,MAwFK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASkkB,oBAAT,CAA8B5jB,MAA9B,EAA8ChH,eAA9C,EAA8E;AACjF,YAAIiH,mBAAJ;AACA0jB,iCAAyB,CAAC3qB,eAAD,CAAzB,CAA2CkH,OAA3C,CAAmD,UAAAC,CAAC,EAAI;AACpD,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;ACxSD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUa4jB,c;AAEX,gCAAoB7qB,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AACnB;;;;iBAED,oBAAW4B,WAAX,EAAqC;AACnC,iBAAK5B,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,+BAAiB,EAAE,KAAK0b,UAAL,CAAgBlpB,WAAW,CAACC,MAA5B,CAArB;AAA0Dd,6BAAe,EAAEa,WAAW,CAACC,MAAZ,CAAmBwJ;AAA9F,aAA9C;AACD;;;iBAED,oBAAW0f,MAAX,EAAyB;AACvB,oBAAoBA,MAAM,CAAC7b,MAA3B;AACE,mBAAK,8EAAWG,IAAhB;AACE;AACE,yBAAO,oGAAsBA,IAA7B;AACD;;AACH,mBAAK,8EAAWF,OAAhB;AACE;AACE,yBAAO,oGAAsBA,OAA7B;AACD;;AACH,mBAAK,8EAAWI,YAAhB;AACE;AACE,yBAAO,oGAAsBA,YAA7B;AACD;;AACH,mBAAK,8EAAWE,OAAhB;AACE;AACE,yBAAO,oGAAsBA,OAA7B;AACD;;AACH,mBAAK,8EAAWE,QAAhB;AACE;AACE,yBAAO,oGAAsBA,QAA7B;AACD;;AACH,mBAAK,8EAAWE,aAAhB;AACE;AACE,yBAAO,oGAAsBA,aAA7B;AACD;;AACH,mBAAK,8EAAWE,QAAhB;AACE;AACE,yBAAO,oGAAsBA,QAA7B;AACD;;AACH,mBAAK,8EAAWE,IAAhB;AACE;AACE,yBAAO,oGAAsBA,IAA7B;AACD;;AACH,mBAAK,8EAAWE,MAAhB;AACE;AACE,yBAAO,oGAAsBA,MAA7B;AACD;;AACH,mBAAK,8EAAWE,SAAhB;AACE;AACE,yBAAO,oGAAsBA,SAA7B;AACD;;AACH;AACE;AACE,yBAAO,oGAAsBJ,IAA7B;AACD;AA5CL;AA8CD;;;;;;;yBAxDU4a,c,EAAc,0I;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;;;;;;;;;;;;;ACTd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASanK,8B;;;;;;;;;;;;;;;;;;;ACRb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAE9E;;;;;;AACI;;;;;;AAGR;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AAAiC,gGAAqB,aAArB,EAAqB,qBAArB;;;;;;;;AA5BrC;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAArZ,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAIA;;AAIA;;AAEJ;;;;;;;;;;;;AA7BqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIX;;AAAA;;AAIA;;AAAA;;AAI+B;;AAAA;;;;UDb/C2jB,+B;AAOX,iDAAmBhrB,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSsD,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAsD,iBAAA,GAAAA,iBAAA;AATA,eAAA4B,eAAA,GAAiC,EAAjC;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGT,eAAAjF,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAlBUwjB,+B,EAA+B,mJ,EAAA,yJ,EAAA,4I,EAAA,+J;AAAA,O;;;cAA/BA,+B;AAA+B,sD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sX;AAAA;AAAA;ACf5C;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;ACEzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaC,mB;AAKT,qCAAoBnjB,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYgrB,sBAJZ,EAKYljB,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgrB,sBAAA,GAAAA,sBAAA;AACA,eAAAljB,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,wBAAeoF,OAAf,EAAiC;;;AAC7B,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEuf,YAAjD,EAA+D;AAC7D,mBAAK8K,gBAAL;AACD,aAFD,MAGK;AACH,mBAAKhjB,GAAL,GAAW,KAAKijB,eAAL,GAAuBziB,SAAvB,EAAX;AACD;AACF;;;iBAEK,2BAAkB;AAAA;;AACtB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEyX,0BAAY,EAAE;AAAhB,aAAjD;AACA,iBAAKrgB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,4FAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,0BAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAkCF,GAAlC,EAAuCG,IAAvC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACgiB,kBAAL,CAAwBhiB,CAAxB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAACojB,gBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAnkB,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,4BAAmB;AACvB,iBAAK+jB,sBAAL,CAA4BI,gBAA5B,CAA6C,KAAKpjB,OAAlD;AACH;;;iBAEO,4BAAmB;;;AACvB,iBAAKmjB,kBAAL,CAAwB,CAAD,WAAC,KAAKprB,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIuf,YAAtE;AACA9W,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwf,cAA5D;;AACA,gBAAI,KAAKpY,OAAT,EAAkB;AACd,mBAAKojB,gBAAL;AACH;AACJ;;;iBAEO,4BAAmBjiB,CAAnB,EAAoC;AACxC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEyX,0BAAY,EAAEhX;AAAhB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCujB,sBAAhC,EAAJ,EAA8D;AAC1D,qBAAKvrB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQiiB,mB,EAAmB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,gK,EAAA,0K;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFhB;;;;;;;;;;;;;;;;;ACdhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAQI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,OAAAnrB,sBAAA,yFAAT;AAA0G,WAA1G;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,4FAAT;AAA2G,WAA3G;;AAEA;;AACJ;;;;;;AAOI;;AACI;;AAEJ;;;;;;AAFI;;AAAA;;;;;;AAMZ;;;;;;;;AACI,8KAAkD,iBAAlD,EAAkD,qMAAlD;;;;;;AAIJ;;;;;;;;AACI,8KAAkD,qBAAlD,EAAkD,+LAAlD;;;;UDzBS0rB,iB;AAMX,mCAAmBxrB,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSmO,cAHT,EAISvO,sBAJT,EAKSO,gBALT,EAMSC,+BANT,EAOSC,oBAPT,EAOqD;AAAA;;AAPlC,eAAAP,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAmO,cAAA,GAAAA,cAAA;AACA,eAAAvO,sBAAA,GAAAA,sBAAA;AACA,eAAAO,gBAAA,GAAAA,gBAAA;AACA,eAAAC,+BAAA,GAAAA,+BAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AAZT,eAAAkrB,oBAAA,GAAuB,8GAAvB;AACA,eAAAhrB,UAAA,GAAa,0FAAb;AACA,eAAAC,WAAA,GAAc,4FAAd;AACA,eAAAC,gBAAA,GAAmB,8GAAnB;AASwD;;;;iBAExD,oBAAQ;AACN,iBAAK0N,cAAL,CAAoBiB,SAApB,CAA8B,KAAKtP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAxE,EAAyF,IAAzF;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBApBUyqB,iB,EAAiB,mJ,EAAA,qJ,EAAA,yJ,EAAA,yJ,EAAA,0K,EAAA,8J,EAAA,6L,EAAA,sK;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,iB;AAAA,gB;AAAA,ie;AAAA;AAAA;ACpB9B;;;;AAGA;;;;AAIA;;AACI;AAAA,qBAAS,IAAAjrB,oBAAA,2CAAT;AAAoE,aAApE;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,yCAAT;AAAkE,aAAlE;;AAEA;;AACI;;AACA;;AAIJ;;AACJ;;AAEA;;AAKA;;;;;;;AA5CO;;AAGoB;;AAAA;;AAMvB;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAOJ;;AAAA;;AAKd;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC5ChB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYmrB,uBAAZ;;AAAA,iBAAYA,uBAAZ,EAAmC;AAC/B;AACA;AACH,OAHD,EAAYA,uBAAuB,KAAvBA,uBAAuB,MAAnC;;AAKO,eAASC,0BAAT,GAAmC;AAExC,eAAOD,uBAAP;AACD;;AAEM,eAASE,sCAAT,CAAgD5rB,eAAhD,EAAgF;;;AACnF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAHD,MAIK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASmlB,iCAAT,CAA2C7kB,MAA3C,EAA2DhH,eAA3D,EAA2F;AAC9F,YAAIiH,mBAAJ;AACA2kB,8CAAsC,CAAC5rB,eAAD,CAAtC,CAAwDkH,OAAxD,CAAgE,UAAAC,CAAC,EAAI;AACjE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC7CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASaoZ,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSyL,qB;AAEX,uCAAmB9rB,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATU4rB,qB,EAAqB,mJ,EAAA,yJ;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVlC;;;;AAGA;;;;AAIA;;AAAG;;AAA2B;;;;AAPvB;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AED3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACOgB;;AACI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAkBZ;;AACI;;AACI;;AAEI;;AAAU;;AAClB;;AACJ;;;;;;AAHY;;AAAA;;;;;;;;AASZ;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AAAO;;;;;;;;AAClD;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAuC;;AAAQ;;;;;;AAM/C;;AAGI;;AAAU;;AAAS;;AACvB;;;;;;;;;;AAHI;;AAC4D;;;;;;;;AAPpE;;AACI;;AAAmB;AAAA;;AAAA;;AAAA,mBAAS,QAAAC,cAAA,YAAT;AAAmC,WAAnC;;AAEf;;AAAU;;AAAG;;AACjB;;AACA;;AAKA;;AACI;;AAAI;;AAAoB;;AACxB;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAI;;AACjD;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAI;;AACjD;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAI;;AACjD;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAI;;AACjD;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAyC;;AAAI;;AACrD;;AACJ;;;;;;;;AArBQ;;AAAA;;AAKC;;AAAA;;AAKqB;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;;;;;AAYlC;;AAEI;;AACJ;;;;;;;;AAHqG,wGAA6B,QAA7B,EAA6B,6IAA7B;;AAEnF;;AAAA;;;;;;AAElB;;;;;;AAOI;;;;;;AAEA;;;;;;AAGA;;;;;;AAGA;;;;;;AAEA;;;;;;AAGA;;;;;;AAGA;;;;UDxEKC,kB;AAOX,oCAAmBhsB,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS6rB,cAHT,EAIUE,KAJV,EAKU9d,cALV,EAMUrE,iBANV,EAOUsE,kBAPV,EAQUC,cARV,EASUC,gBATV,EAUUnO,mBAVV,EAWUoO,sBAXV,EAYUC,mBAZV,EAaUC,kBAbV,EAcUC,wBAdV,EAc4D;AAAA;;AAdzC,eAAA1O,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA6rB,cAAA,GAAAA,cAAA;AACC,eAAAE,KAAA,GAAAA,KAAA;AACA,eAAA9d,cAAA,GAAAA,cAAA;AACA,eAAArE,iBAAA,GAAAA,iBAAA;AACA,eAAAsE,kBAAA,GAAAA,kBAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAnO,mBAAA,GAAAA,mBAAA;AACA,eAAAoO,sBAAA,GAAAA,sBAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAC,wBAAA,GAAAA,wBAAA;AAlBV,eAAAlH,YAAA,GAAe,8FAAf;AACA,eAAA0kB,qBAAA,GAAwB,gHAAxB;AACA,eAAAC,WAAA,GAAc,4FAAd;AAiBO;;;;iBAGP,oBAAQ;;;AACN,iBAAKF,KAAL,CAAWG,QAAX,CAAoB,KAAKlsB,kBAAL,CAAwBgD,WAAxB,CAAoCmpB,oBAApC,CAAyD,CAAD,KAAC,KAAKrsB,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,GAAa+B,QAApG,CAApB;AACD;;;iBAED,uBAAW;AACT,iBAAKypB,UAAL,GAAkB,KAAKA,UAAL,CAAgBlkB,WAAhB,EAAlB,GAAkD,IAAlD;AACD;;;iBAED,oBAAWwa,kBAAX,EAA4C;AAC1C,gBAAIA,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWG,IAAnD,EAAyD;AACvD,mBAAKhB,cAAL,CAAoBiB,SAApB,CAA8BsT,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAAxD,EAAkE,IAAlE;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBC,IAA3C;AAAiDtO,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAA5F,eAA9C;AACD,aAHD,MAIK,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWC,OAAnD,EAA4D;AAC/D,mBAAKrF,iBAAL,CAAuBE,YAAvB,CAAoC4Y,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAA9D,EAAwE,IAAxE;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBD,OAA3C;AAAoDpO,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAA/F,eAA9C;AACD,aAHI,MAIA,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWK,YAAnD,EAAiE;AACpE,mBAAKhB,sBAAL,CAA4BiB,iBAA5B,CAA8CoT,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAAxE,EAAkF,IAAlF;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBG,YAA3C;AAAyDxO,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAApG,eAA9C;AACD,aAHI,MAIA,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWO,OAAnD,EAA4D;AAC/D,mBAAKhB,kBAAL,CAAwBiB,aAAxB,CAAsCkT,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAAhE,EAA0E,IAA1E;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBK,OAA3C;AAAoD1O,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAA/F,eAA9C;AACD,aAHI,MAIA,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWS,QAAnD,EAA6D;AAChE,mBAAKnB,mBAAL,CAAyBoB,cAAzB,CAAwCgT,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAAlE,EAA4E,IAA5E;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBO,QAA3C;AAAqD5O,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAAhG,eAA9C;AACD,aAHI,MAIA,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWW,aAAnD,EAAkE;AACrE,mBAAKnB,wBAAL,CAA8BoB,mBAA9B,CAAkD8S,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAA5E,EAAsF,IAAtF;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBS,aAA3C;AAA0D9O,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAArG,eAA9C;AACD,aAHI,MAIA,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWa,QAAnD,EAA6D;AAChE,mBAAK3B,kBAAL,CAAwB4B,aAAxB,CAAsC4S,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAAhE,EAA0E,IAA1E;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBW,QAA3C;AAAqDhP,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAAhG,eAA9C;AACD,aAHI,MAIA,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWe,IAAnD,EAAyD;AAC5D,mBAAK9B,cAAL,CAAoB+B,SAApB,CAA8B,IAA9B;AACA,mBAAKlQ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBa,IAA3C;AAAiDlP,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAA5F,eAA9C;AACD,aAHI,MAIA,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWiB,MAAnD,EAA2D;AAC9D,mBAAK7B,gBAAL,CAAsB8B,WAAtB,CAAkCwS,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAA5D,EAAsE,IAAtE;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBe,MAA3C;AAAmDpP,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAA9F,eAA9C;AACD,aAHI,MAIA,IAAIuX,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAA1B,IAAoC,8EAAWmB,SAAnD,EAA8D;AACjE,mBAAKlQ,mBAAL,CAAyBS,cAAzB,CAAwCgiB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ,QAAlE,EAA4E,IAA5E;AACA,mBAAKrL,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuG,iCAAiB,EAAE,oGAAsBiB,SAA3C;AAAsDtP,+BAAe,EAAE6hB,kBAAkB,CAAC/gB,MAAnB,CAA0BwJ;AAAjG,eAA9C;AACD,aAHI,MAIA;AACHiF,mBAAK,WAAI,8EAAWsS,kBAAkB,CAAC/gB,MAAnB,CAA0BqN,MAArC,CAAJ,4EAAL;AACD;AACF;;;iBAED,gBAAO;AACL,iBAAKlP,eAAL,CAAqB6I,cAArB,CAA8C;AAAEmL,0BAAY,EAAE,0FAAiBC;AAAjC,aAA9C;AACD;;;iBAED,qBAAYsY,QAAZ,EAAoC;AAClC,iBAAKvsB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEhG,sBAAQ,EAAE0pB;AAAZ,aAA9C;AACD;;;iBAED,oBAAWC,OAAX,EAAiC;AAAA;;AAC/B,gBAAIhX,WAAW,GAAY,CAAE,KAAKxV,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0U,WAAvE;AACA,iBAAKxV,eAAL,CAAqB6I,cAArB,CAA8C;AAAEqN,qBAAO,EAAEsW,OAAX;AAAoBhX,yBAAW,EAAEA;AAAjC,aAA9C;;AACA,gBAAI,CAAC,KAAK8W,UAAV,EAAsB;AACpB,mBAAKA,UAAL,GAAkB,mDAAM,GAAN,EAAW,GAAX,EAAgBljB,IAAhB,CAChB,2DAAI;AAAA,uBAAM,OAAI,CAACpJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEqN,yBAAO,EAAEsW,OAAX;AAAoBhX,6BAAW,EAAE,CAACA;AAAlC,iBAA9C,CAAN;AAAA,eAAJ,CADgB,EAEhB7M,SAFgB,EAAlB;AAGD,aAJD,MAKK;AACH,mBAAK2jB,UAAL,CAAgBlkB,WAAhB;AACA,mBAAKkkB,UAAL,GAAkB,mDAAM,GAAN,EAAW,GAAX,EAAgBljB,IAAhB,CAChB,2DAAI;AAAA,uBAAM,OAAI,CAACpJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEqN,yBAAO,EAAEsW,OAAX;AAAoBhX,6BAAW,EAAE,CAACA;AAAlC,iBAA9C,CAAN;AAAA,eAAJ,CADgB,EAEhB7M,SAFgB,EAAlB;AAGD;AACF;;;iBAED,wBAAe6jB,OAAf,EAAqC;AACnC,gBAAI,KAAKxsB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoV,OAA1C,IAAqDsW,OAAzD,EAAkE;AAChE,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,2BAAe;;;AACb,mBAAO,gFAAY,CAAD,WAAC,KAAKxsB,eAAL,CAAqBa,SAAtB,MAA+B,IAA/B,IAA+B,aAA/B,GAA+B,MAA/B,GAA+B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAIoV,OAAxD,CAAP;AACD;;;;;;;yBAlHU8V,kB,EAAkB,mJ,EAAA,qJ,EAAA,0J,EAAA,yJ,EAAA,iI,EAAA,0J,EAAA,gK,EAAA,kK,EAAA,0J,EAAA,8J,EAAA,oK,EAAA,yK,EAAA,qK,EAAA,mK,EAAA,gL;AAAA,O;;;cAAlBA,kB;AAAkB,uC;AAAA,iB;AAAA,gB;AAAA,y1B;AAAA;AAAA;AChC/B;;AACI;;AACI;;AAGI;;AAAU;;AAAO;;AACrB;;AACA;;AACI;;AACI;;AAIJ;;AACJ;;AAEA;;AAAQ;AAAA,qBAAS,IAAAD,cAAA,aAAT;AAAoC,aAApC;;AAEJ;;AAAU;;AAAI;;AAClB;;AACA;;AAAmB;AAAA,qBAAS,IAAA9X,IAAA,EAAT;AAAe,aAAf;;AAEf;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAQA;;AACI;;AAAU;;AAAc;;AAE5B;;AACA;;AAEA;;AAEA;;AAwBJ;;AACJ;;AAEA;;AACI;;AAEI;;AACJ;;AACA;;AAIA;;;;AAGA;;;;AACA;;AAEA;;AACI;;AAEA;;AAGA;;AAGA;;AAEA;;AAGA;;AAGA;;AAGJ;;AAGA;;AACI;;AACJ;;AACJ;;;;;;;;;;;;;;AA9GY;;AAAA;;AACA;;AAK8C;;AAAA;;AAQ9C;;AAAA;;AAIA;;AAAA;;AACA;;AAAA;;AAOW;;AAAA;;AAYK;;AAAA;;AAEA;;AAAA;;AAEL;;AAAA;;AA4B4B;;AAAA;;AAEzB;;AAAA;;AAER;;AAAA;;AAIP;;AAAA;;AAGI;;AAAA;;AACM;;AAAA;;AAGG;;AAAA;;AAGX;;AAAA;;AAGA;;AAAA;;AAEW;;AAAA;;AAGX;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjGAwY,iB;AACT,mCAAoBzsB,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AAEnB;;;;iBAED,0BAAiB4B,WAAjB,EAAyC;AACrC,gBAAI,KAAK8qB,aAAL,CAAmB9qB,WAAnB,CAAJ,EAAqC;AACjC,mBAAK+qB,gBAAL,CAAsB/qB,WAAtB;AACH,aAFD,MAGK;AACD,mBAAKgrB,aAAL,CAAmBhrB,WAAnB;AACH;AACJ;;;iBAED,uBAAcA,WAAd,EAAsC;AAClC,gBAAIirB,gBAAgB,GAAkB,KAAK7sB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuR,mBAA1C,CAA8DhF,MAA9D,CAAqE,UAAAC,CAAC;AAAA,qBAAIA,CAAC,IAAI1L,WAAT;AAAA,aAAtE,CAAtC;;AACA,gBAAIirB,gBAAgB,IAAI3rB,SAApB,IAAiC2rB,gBAAgB,CAACrkB,MAAjB,GAA0B,CAA/D,EAAkE;AAC9D,qBAAO,IAAP;AACH;;AAED,mBAAO,KAAP;AACH;;;iBAEO,uBAAc5G,WAAd,EAAsC;AAC1C,gBAAIirB,gBAAgB,GAAkB,KAAK7sB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuR,mBAA1C,CAA8DhF,MAA9D,CAAqE,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACzL,MAAF,CAASwJ,QAAT,IAAqBzJ,WAAW,CAACC,MAAZ,CAAmBwJ,QAA5C;AAAA,aAAtE,CAAtC;;AACA,gBAAI,EAAEwhB,gBAAgB,IAAI3rB,SAApB,IAAiC2rB,gBAAgB,CAACrkB,MAAjB,GAA0B,CAA7D,CAAJ,EAAqE;AACjE,mBAAKxI,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuR,mBAA1C,CAA8D7L,IAA9D,CAAmE5E,WAAnE;AACH;AACJ;;;iBAEO,0BAAiBA,WAAjB,EAAyC;AAC7C,gBAAIirB,gBAAgB,GAAkB,KAAK7sB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuR,mBAA1C,CAA8DhF,MAA9D,CAAqE,UAAAC,CAAC;AAAA,qBAAIA,CAAC,IAAI1L,WAAT;AAAA,aAAtE,CAAtC;;AACA,gBAAKirB,gBAAgB,IAAI3rB,SAApB,IAAiC2rB,gBAAgB,CAACrkB,MAAjB,GAA0B,CAAhE,EAAoE;AAChE,kBAAIskB,sBAAsB,GAAkB,KAAK9sB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuR,mBAAtF;AACA,kBAAI5E,KAAK,GAAWqf,sBAAsB,CAACtkB,MAA3C;;AACA,mBAAK,IAAIkF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC5B,oBAAIof,sBAAsB,CAACpf,CAAD,CAAtB,KAA8B9L,WAAlC,EAA+C;AAC3CkrB,wCAAsB,CAACnf,MAAvB,CAA8BD,CAA9B,EAAiC,CAAjC;AACA;AACH;AACJ;;AAED,mBAAK1N,eAAL,CAAqB6I,cAArB,CAA8C;AAAEwJ,mCAAmB,EAAEya;AAAvB,eAA9C;AACH;AACJ;;;;;;;yBA5CQL,iB,EAAiB,0I;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;ACNhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYM,gBAAZ;;AAAA,iBAAYA,gBAAZ,EAA4B;AACxB;AACA;AACH,OAHD,EAAYA,gBAAgB,KAAhBA,gBAAgB,MAA5B;;AAKO,eAASC,mBAAT,GAA4B;AAEjC,eAAOD,gBAAP;AACD;;AAEM,eAASE,+BAAT,CAAyCjtB,eAAzC,EAAyE;;;AAC5E,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAHD,MAIK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASwmB,0BAAT,CAAoClmB,MAApC,EAAoDhH,eAApD,EAAoF;AACvF,YAAIiH,mBAAJ;AACAgmB,uCAA+B,CAACjtB,eAAD,CAA/B,CAAiDkH,OAAjD,CAAyD,UAAAC,CAAC,EAAI;AAC1D,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC5CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAE9E;;;;;;AACI;;;;;;AAGR;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AAAwC,gGAAqB,aAArB,EAAqB,qBAArB;;;;;;;;AA5B5C;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAAI,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAIA;;AAIA;;AAGJ;;;;;;;;;;;;AA9BqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIJ;;AAAA;;AAIA;;AAAA;;AAI+B;;AAAA;;;;UDbtD8lB,oC;AAOX,sDAAmBntB,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSsD,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAsD,iBAAA,GAAAA,iBAAA;AATA,eAAA4B,eAAA,GAAiC,EAAjC;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGT,eAAAjF,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAlBU2lB,oC,EAAoC,mJ,EAAA,yJ,EAAA,4I,EAAA,+J;AAAA,O;;;cAApCA,oC;AAAoC,6D;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sX;AAAA;AAAA;ACfjD;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;ACAzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAUa5b,W;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCCA6b,e;AAGX,iCAAmBptB,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAHT,eAAAmtB,IAAA,GAAe,IAAIC,IAAJ,GAAWC,WAAX,EAAf;AAIC;;;;iBAED,oBAAQ,CACR;;;iBAEA,uBAAW,CACV;;;;;;;yBAXUH,e,EAAe,mJ,EAAA,yJ;AAAA,O;;;cAAfA,e;AAAe,mC;AAAA,gB;AAAA,e;AAAA;AAAA;ACX5B;;AAAM;;AACF;;;;AADE;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAN;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSI,wB;AAIX,0CAAmBxtB,eAAnB,EACSE,kBADT,EAEUuO,kBAFV,EAEkD;AAAA;;AAF/B,eAAAzO,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAuO,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAErD,oBAAQ;AACN,iBAAKA,kBAAL,CAAwBiB,aAAxB,CAAsC,KAAK1P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbUysB,wB,EAAwB,mJ,EAAA,yJ,EAAA,kK;AAAA,O;;;cAAxBA,wB;AAAwB,+C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6J;AAAA;AAAA;ADbrC;;;;AAGA;;;;AAIA;;AAAwC;;AAA8B;;;;AAP/D;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEF3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaC,iB;AAIX,mCAAoBztB,eAApB,EACUC,gBADV,EAEUwiB,gBAFV,EAE8C;AAAA;;AAF1B,eAAAziB,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAwiB,gBAAA,GAAAA,gBAAA;AACT;;;;iBAED,qBAAYmC,sBAAZ,EAAmD;AAAA;;;;AACjD,iBAAKA,sBAAL,GAA8BA,sBAA9B;AAEA,gBAAIZ,GAAG,GAAoB,KAAK/jB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB,GAAvE;AAEA,gBAAIyJ,UAAU,GAAyB,EAAvC;AAEA,gBAAIjgB,KAAK,GAAW,CAApB;;AAPiD,wDAQlBmX,sBARkB;AAAA;;AAAA;AAQjD,qEAAuD;AAAA,oBAA9ChC,kBAA8C;;AAAA,4DAC5BA,kBAAkB,CAACC,gBADS;AAAA;;AAAA;AAAA;AAAA,wBAC5CC,YAD4C;;AAEnD,wBAAI,OAAAA,YAAY,CAACC,OAAb,MAAoB,IAApB,IAAoB,aAApB,GAAoB,MAApB,GAAoB,GAAEC,eAAtB,KAAyC,gGAAoB2K,KAAjE,EAAwE;AACtE,0BAAIC,IAAI,GAAuB,IAAIzK,MAAM,CAACC,IAAP,CAAYyK,MAAhB,EAA/B;AAEApgB,2BAAK,IAAI,CAAT;AAEA,0BAAIqgB,QAAQ,GAA8B;AAAEvU,2BAAG,EAAEuJ,YAAY,CAACQ,gBAAb,CAA8B,CAA9B,EAAiCG,GAAxC;AAA6CjK,2BAAG,EAAEsJ,YAAY,CAACQ,gBAAb,CAA8B,CAA9B,EAAiCI;AAAnF,uBAA1C;AACA,0BAAIqK,KAAK,GAA4B;AAAEC,6BAAK,EAAE,QAAT;AAAmBC,kCAAU,EAAE,MAA/B;AAAuCC,4BAAI,EAAEzgB,KAAK,CAACpM,QAAN;AAA7C,uBAArC;;AACA,0BAAI4qB,KAAK,GAAGrJ,kBAAkB,CAACuL,kBAAnB,CAAsC,OAAI,CAACnuB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAhF,EAA0FurB,MAAtG;;AACA,0BAAIC,IAAI,GAAGzL,kBAAkB,CAACuL,kBAAnB,CAAsC,OAAI,CAACnuB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAhF,EAA0FurB,MAArG;;AACA,0BAAIvK,IAAI,GAAW,OAAI,CAAC7jB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsV,uBAA1C,CAAkE,CAAlE,CAAnB,CATsE,CASmB;;;AACzF,0BAAIuN,WAAW,GAAW,OAAI,CAAClB,gBAAL,CAAsB6L,iBAAtB,CAAwCxL,YAAY,CAACC,OAAb,CAAqB7T,MAA7D,CAA1B;;AACA,0BAAI8V,SAAS,GAAW,OAAI,CAACvC,gBAAL,CAAsB6L,iBAAtB,CAAwCxL,YAAY,CAACC,OAAb,CAAqB7T,MAA7D,CAAxB;;AAEA,0BAAI6e,KAAK,CAACG,IAAV,EAAgB;AACd,4BAAIH,KAAK,CAACG,IAAN,CAAW1lB,MAAX,GAAoB,CAAxB,EAA2B;AACzBqb,8BAAI,GAAG,OAAI,CAAC7jB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsV,uBAA1C,CAAkE2X,KAAK,CAACG,IAAN,CAAW1lB,MAA7E,CAAP;AACD;AACF,uBAjBqE,CAmBtE;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,0BAAIoG,OAAO,GAA8B;AACvCkf,gCAAQ,EAAEA,QAD6B;AAEvCC,6BAAK,EAAEA,KAFgC;AAGvC9B,6BAAK,EAAEA,KAHgC;AAIvCsC,4BAAI,EAAE;AACJ1K,8BAAI,EAAEA,IADF;AAEJF,qCAAW,EAAEA,WAFT;AAGJG,uCAAa,EAAE,CAHX;AAIJC,sCAAY,EAAE,CAJV;AAKJiB,mCAAS,EAAEA,SALP;AAMJE,qCAAW,EAAE,GANT;AAOJsJ,kCAAQ,EAAE,CAPN;AAQJC,+BAAK,EAAE,GARH;AASJC,qCAAW,EAAE,IAAIvL,MAAM,CAACC,IAAP,CAAYuK,KAAhB,CAAsB,CAAtB,EAAyB,CAAC,EAA1B;AATT,yBAJiC;AAevC3J,2BAAG,EAAEA,GAfkC;AAgBvC2K,iCAAS,EAAE,OAAI,CAAC3uB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6U,cAhBd;AAiBvCiZ,8BAAM,EAAE9L,YAAY,CAACC,OAAb,CAAqB8L;AAjBU,uBAAzC;AAoBAjB,0BAAI,GAAG,IAAIzK,MAAM,CAACC,IAAP,CAAYyK,MAAhB,CAAuBjf,OAAvB,CAAP;;AAEA,0BAAI,OAAI,CAAC5O,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6U,cAA9C,EAA8D;AAC5DwN,8BAAM,CAACC,IAAP,CAAYc,KAAZ,CAAkBC,WAAlB,CAA8ByJ,IAA9B,EAAoC,WAApC,EAAiD,UAACxJ,GAAD,EAAiC;AAChF,8BAAI,CAAC,OAAI,CAACpkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8U,cAA/C,EAA+D;AAC1CyO,oCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmDH,GAAG,CAACI,MAAJ,CAAWjL,GAAX,GAAiBlY,QAAjB,GAA4BI,SAA5B,CAAsC,CAAtC,EAAyC,CAAzC,IACpE,GADoE,GAC9D2iB,GAAG,CAACI,MAAJ,CAAWhL,GAAX,GAAiBnY,QAAjB,GAA4BI,SAA5B,CAAsC,CAAtC,EAAyC,CAAzC,CADW;AAEpB,2BAHD,MAII;AACiB4iB,oCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmD,OAAI,CAACvkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D0D,GAA7D,GAAmEkL,OAAnE,CAA2E,CAA3E,IACtE,GADsE,GAChE,OAAI,CAACzkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D2D,GAA7D,GAAmEiL,OAAnE,CAA2E,CAA3E,CADa;AAEpB;AACF,yBATD;AAWAtB,8BAAM,CAACC,IAAP,CAAYc,KAAZ,CAAkBC,WAAlB,CAA8ByJ,IAA9B,EAAoC,WAApC,EAAiD,YAAM;AACrD,iCAAI,CAAC5tB,eAAL,CAAqB6I,cAArB,CAA8C;AAC5CkN,0CAAc,EAAE+M,YAAY,CAACC,OAAb,CAAqB1X,QADO;AAE5C2K,2CAAe,EAAE8M,YAAY,CAACC,OAAb,CAAqB8L,SAFM;AAG5ChZ,8CAAkB,EAAE,OAAI,CAACiZ,eAAL,CAAqBhM,YAArB,CAHwB;AAI5ClN,0CAAc,EAAE,IAJ4B;AAK5CK,uCAAW,EAAE2X,IAAI,CAACmB,QAAL,GAAgBb;AALe,2BAA9C;;AAOmB7J,kCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmD,OAAI,CAACvkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D0D,GAA7D,GAAmEkL,OAAnE,CAA2E,CAA3E,IACpE,GADoE,GAC9D,OAAI,CAACzkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D2D,GAA7D,GAAmEiL,OAAnE,CAA2E,CAA3E,CADW;AAEpB,yBAVD;AAWAtB,8BAAM,CAACC,IAAP,CAAYc,KAAZ,CAAkBC,WAAlB,CAA8ByJ,IAA9B,EAAoC,MAApC,EAA4C,YAAM;AAC7BvJ,kCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmDqJ,IAAI,CAAClH,WAAL,GAAmBnN,GAAnB,GAAyBkL,OAAzB,CAAiC,CAAjC,IACpE,GADoE,GAC9DmJ,IAAI,CAAClH,WAAL,GAAmBlN,GAAnB,GAAyBiL,OAAzB,CAAiC,CAAjC,CADW;AAEpB,yBAHD;AAIAtB,8BAAM,CAACC,IAAP,CAAYc,KAAZ,CAAkBC,WAAlB,CAA8ByJ,IAA9B,EAAoC,SAApC,EAA+C,YAAM;AACnD,iCAAI,CAAC5tB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEiN,4CAAgB,EAAE8X,IAAI,CAAClH,WAAL;AAApB,2BAA9C;;AACmBrC,kCAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmDqJ,IAAI,CAAClH,WAAL,GAAmBnN,GAAnB,GAAyBkL,OAAzB,CAAiC,CAAjC,IACpE,GADoE,GAC9DmJ,IAAI,CAAClH,WAAL,GAAmBlN,GAAnB,GAAyBiL,OAAzB,CAAiC,CAAjC,CADW;AAEpB,yBAJD;AAKD;;AACDiJ,gCAAU,CAAClnB,IAAX,CAAgBonB,IAAhB;AAED;AAxFkD;;AACrD,yEAA8D;AAAA;AAwF7D;AAzFoD;AAAA;AAAA;AAAA;AAAA;;AAyFpD;AACF;AAlGgD;AAAA;AAAA;AAAA;AAAA;;AAoGjD,iBAAK3tB,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEyd,iCAAmB,EAAE,IAAIlD,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA6CqK,UAA7C;AAAvB,aAAjD;AACD;;;iBAED,yBAAgB5K,YAAhB,EAA0C;AACxC,mBAAO,IAAIK,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuBV,YAAY,CAACQ,gBAAb,CAA8B,CAA9B,EAAiCG,GAAxD,EAA6DX,YAAY,CAACQ,gBAAb,CAA8B,CAA9B,EAAiCI,GAA9F,CAAP;AACD;;;;;;;yBAlHU+J,iB,EAAiB,0I,EAAA,4I,EAAA,gJ;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFhB;;;;;;;;;;;;;;;;;ACZd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeauB,U;AAGX,4BAAoBhvB,eAApB,EACUC,gBADV,EAEUgvB,iBAFV,EAGUC,kBAHV,EAIUC,mBAJV,EAKU1M,gBALV,EAK8C;AAAA;;AAL1B,eAAAziB,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAgvB,iBAAA,GAAAA,iBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAA1M,gBAAA,GAAAA,gBAAA;AACT;;;;iBAED,gCAAoB;;;AAElB,gBAAI2M,SAAS,GAA8B/K,QAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAArF;AACA,gBAAIhL,GAAG,GAAW8V,UAAU,CAACD,SAAS,CAAC3tB,SAAV,CAAoB,CAApB,EAAuB2tB,SAAS,CAACE,OAAV,CAAkB,GAAlB,CAAvB,CAAD,CAA5B;AACA,gBAAI9V,GAAG,GAAW6V,UAAU,CAACD,SAAS,CAAC3tB,SAAV,CAAoB2tB,SAAS,CAACE,OAAV,CAAkB,GAAlB,CAApB,CAAD,CAA5B;AACAhf,iBAAK,WAAK,WAAKtQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,QAAyC,IAAzC,IAAyC,aAAzC,GAAyC,MAAzC,GAAyC,GAAEiV,cAAhD,kBAAwE,WAAK/V,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,QAAyC,IAAzC,IAAyC,aAAzC,GAAyC,MAAzC,GAAyC,GAAEkV,eAAnH,kBAA4IuD,GAA5I,cAAqJC,GAArJ,EAAL;AAEA,iBAAKxZ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEoN,yBAAW,EAAE,EAAf;AAAmBL,4BAAc,EAAE,KAAnC;AAA0CI,6BAAe,EAAE,CAA3D;AAA8DH,gCAAkB,EAAE,IAAlF;AAAwFC,8BAAgB,EAAE;AAA1G,aAA9C;AACD;;;iBAED,oBAAW;;;AACT,gBAAItN,MAAM,eAAW,KAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAX,MAAsD,IAAtD,IAAsD,aAAtD,GAAsD,MAAtD,GAAsD,GAAEyuB,0BAAxD,MAAkF,IAAlF,IAAkF,aAAlF,GAAkF,MAAlF,GAAkF,GAAEjJ,SAAF,EAA5F;;AACA,iBAAK,IAAI5Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlF,MAApB,EAA4BkF,CAAC,EAA7B,EAAiC;AAC/B,mBAAKzN,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CyuB,0BAA5C,CAAuE/I,KAAvE,CAA6E9Y,CAA7E,EAAgF8hB,MAAhF,CAAuF,IAAvF;AACD;;AAEDhnB,kBAAM,GAAG,CAAH,WAAG,KAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAH,MAA8C,IAA9C,IAA8C,aAA9C,GAA8C,MAA9C,GAA8C,GAAEulB,mBAA7C,MAAgE,IAAhE,IAAgE,aAAhE,GAAgE,MAAhE,GAAgE,GAAEC,SAAF,EAAzE;;AACA,iBAAK,IAAI5Y,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGlF,MAApB,EAA4BkF,GAAC,EAA7B,EAAiC;AAC/B,mBAAKzN,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CulB,mBAA5C,CAAgEG,KAAhE,CAAsE9Y,GAAtE,EAAyE8hB,MAAzE,CAAgF,IAAhF;AACD;;AAEDhnB,kBAAM,GAAG,CAAH,WAAG,KAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAH,MAA8C,IAA9C,IAA8C,aAA9C,GAA8C,MAA9C,GAA8C,GAAEqkB,oBAA7C,MAAiE,IAAjE,IAAiE,aAAjE,GAAiE,MAAjE,GAAiE,GAAEmB,SAAF,EAA1E;;AACA,iBAAK,IAAI5Y,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGlF,MAApB,EAA4BkF,GAAC,EAA7B,EAAiC;AAC/B,mBAAKzN,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CqkB,oBAA5C,CAAiEqB,KAAjE,CAAuE9Y,GAAvE,EAA0E8hB,MAA1E,CAAiF,IAAjF;AACD;;AAEDhnB,kBAAM,GAAG,CAAH,WAAG,KAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAH,MAA8C,IAA9C,IAA8C,aAA9C,GAA8C,MAA9C,GAA8C,GAAE4jB,qBAA7C,MAAkE,IAAlE,IAAkE,aAAlE,GAAkE,MAAlE,GAAkE,GAAE4B,SAAF,EAA3E;;AACA,iBAAK,IAAI5Y,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGlF,MAApB,EAA4BkF,GAAC,EAA7B,EAAiC;AAC/B,mBAAKzN,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C4jB,qBAA5C,CAAkE8B,KAAlE,CAAwE9Y,GAAxE,EAA2E8hB,MAA3E,CAAkF,IAAlF;AACD;;AAED,6BAAKvvB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEulB,mBAA7C,MAAgE,IAAhE,IAAgE,aAAhE,GAAgE,MAAhE,GAAgE,GAAEoJ,KAAF,EAAhE;AACA,6BAAKxvB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEqkB,oBAA7C,MAAiE,IAAjE,IAAiE,aAAjE,GAAiE,MAAjE,GAAiE,GAAEsK,KAAF,EAAjE;AACA,6BAAKxvB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4jB,qBAA7C,MAAkE,IAAlE,IAAkE,aAAlE,GAAkE,MAAlE,GAAkE,GAAE+K,KAAF,EAAlE;AAEA,iBAAKxvB,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/Cyd,iCAAmB,EAAE,IAAIlD,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA6C,EAA7C,CAD0B;AAE/C8B,kCAAoB,EAAE,IAAIhC,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA8C,EAA9C,CAFyB;AAG/CqB,mCAAqB,EAAE,IAAIvB,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA+C,EAA/C;AAHwB,aAAjD;AAKD;;;iBAED,qBAAYuB,sBAAZ,EAAmD;AACjD,iBAAKqK,iBAAL,CAAuBS,WAAvB,CAAmC9K,sBAAnC;AACA,iBAAKsK,kBAAL,CAAwBS,YAAxB,CAAqC/K,sBAArC;AACA,iBAAKuK,mBAAL,CAAyBS,aAAzB,CAAuChL,sBAAvC;AACA,iBAAKnC,gBAAL,CAAsBoN,SAAtB;AACD;;;iBAED,kBAASjjB,UAAT,EAA0B;AAAA;;AACxB,iBAAK3M,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/Cqb,iBAAG,EAAE,IAAId,MAAM,CAACC,IAAP,CAAYa,GAAhB,CACHrX,UAAU,CAACkjB,aADR,EAEH;AACExW,sBAAM,EAAE,IAAI6J,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuB,SAAvB,EAAkC,CAAC,SAAnC,CADV;AAEEnK,oBAAI,EAAE,EAFR;AAGEO,yBAAS,EAAEuJ,MAAM,CAACC,IAAP,CAAY2M,SAAZ,CAAsBC;AAHnC,eAFG,CAD0C;AAS/CT,wCAA0B,EAAE,IAAIpM,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA+C,EAA/C,CATmB;AAU/CgD,iCAAmB,EAAE,IAAIlD,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA6C,EAA7C,CAV0B;AAW/C8B,kCAAoB,EAAE,IAAIhC,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA8C,EAA9C,CAXyB;AAY/CqB,mCAAqB,EAAE,IAAIvB,MAAM,CAACC,IAAP,CAAYC,QAAhB,CAA+C,EAA/C,CAZwB;AAa/C4M,4BAAc,EAAE,IAb+B;AAc/CC,2BAAa,EAAE;AAdgC,aAAjD;AAiBA,iBAAKjwB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB,GAA5C,CAAgDkM,QAAhD,CAAyDhN,MAAM,CAACC,IAAP,CAAYgN,eAAZ,CAA4BC,UAArF,EAAiG7pB,IAAjG,CAAsG6d,QAAQ,CAACC,cAAT,CAAwB,gBAAxB,CAAtG;AAEAnB,kBAAM,CAACC,IAAP,CAAYc,KAAZ,CAAkBC,WAAlB,CAA8B,KAAKlkB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB,GAA1E,EAA+E,WAA/E,EAA4F,UAACG,GAAD,EAAiC;AAC3H,kBAAI,CAAC,OAAI,CAACpkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8U,cAA/C,EAA+D;AAC1CyO,wBAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmDH,GAAG,CAACI,MAAJ,CAAWjL,GAAX,GAAiBlY,QAAjB,GAA4BI,SAA5B,CAAsC,CAAtC,EAAyC,CAAzC,IACpE,GADoE,GAC9D2iB,GAAG,CAACI,MAAJ,CAAWhL,GAAX,GAAiBnY,QAAjB,GAA4BI,SAA5B,CAAsC,CAAtC,EAAyC,CAAzC,CADW;AAEpB,eAHD,MAII;AACiB4iB,wBAAQ,CAACC,cAAT,CAAwB,eAAxB,EAA0CC,KAA1C,GAAmD,OAAI,CAACvkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D0D,GAA7D,GAAmEkL,OAAnE,CAA2E,CAA3E,IACtE,GADsE,GAChE,OAAI,CAACzkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+U,kBAA1C,CAA6D2D,GAA7D,GAAmEiL,OAAnE,CAA2E,CAA3E,CADa;AAEpB;AACF,aATD;AAaD;;;iBAED,kBAAS7B,kBAAT,EAA0CsB,KAA1C,EAAwD;AACtD,gBAAI1b,MAAM,GAAW,KAAKvI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CyuB,0BAA5C,CAAuEjJ,SAAvE,EAArB;;AACA,iBAAK,IAAI5Y,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGlF,MAApB,EAA4BkF,CAAC,EAA7B,EAAiC;AAC/B,mBAAKzN,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CyuB,0BAA5C,CAAuE/I,KAAvE,CAA6E9Y,CAA7E,EAAgF8hB,MAAhF,CAAuF,IAAvF;AACD;;AAED,gBAAIc,YAAJ;AAEA9nB,kBAAM,GAAGoa,kBAAkB,CAACC,gBAAnB,CAAoCra,MAA7C;;AACA,iBAAK,IAAIkF,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAGlF,MAApB,EAA4BkF,GAAC,EAA7B,EAAiC;AAC/B,kBAAIkV,kBAAkB,CAACC,gBAAnB,CAAoCnV,GAApC,EAAuCqV,OAAvC,CAA+CC,eAA/C,IAAkE,gGAAoB2K,KAA1F,EAAiG;AAC/F2C,4BAAY,GAAG,IAAInN,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuBZ,kBAAkB,CAACC,gBAAnB,CAAoCnV,GAApC,EAAuC4V,gBAAvC,CAAwD,CAAxD,EAA2DG,GAAlF,EAAuFb,kBAAkB,CAACC,gBAAnB,CAAoCnV,GAApC,EAAuC4V,gBAAvC,CAAwD,CAAxD,EAA2DI,GAAlJ,CAAf;AACA;AACD;AACF;;AAED,gBAAI6M,YAAY,GAA6B,KAAKtwB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB,GAA5C,CAAgDuM,SAAhD,EAA7C;AACA,gBAAIC,EAAE,GAAGF,YAAY,CAACG,YAAb,EAAT;AACA,gBAAIC,EAAE,GAAGJ,YAAY,CAACK,YAAb,EAAT;AAEA,gBAAIC,SAAS,GAAG,EAAhB;AACAA,qBAAS,CAACrqB,IAAV,CAAe,IAAI2c,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuBiN,EAAE,CAAClX,GAAH,EAAvB,EAAiCkX,EAAE,CAACjX,GAAH,EAAjC,CAAf;AACAqX,qBAAS,CAACrqB,IAAV,CAAe,IAAI2c,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuB8M,YAAY,CAAC/W,GAAb,EAAvB,EAA2C+W,YAAY,CAAC9W,GAAb,EAA3C,CAAf;AACAqX,qBAAS,CAACrqB,IAAV,CAAe,IAAI2c,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuBiN,EAAE,CAAClX,GAAH,EAAvB,EAAiCoX,EAAE,CAACnX,GAAH,EAAjC,CAAf;AACA,gBAAIsX,MAAM,GAAyB,IAAI3N,MAAM,CAACC,IAAP,CAAYH,QAAhB,CAAyB;AAC1DY,kBAAI,EAAEgN,SADoD;AAE1DlN,yBAAW,EAAE,MAF6C;AAG1DG,2BAAa,EAAE,GAH2C;AAI1DC,0BAAY,EAAE,CAJ4C;AAK1DC,iBAAG,EAAE,KAAK/jB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB,GALS;AAM1D2K,oBAAM,EAAE;AANkD,aAAzB,CAAnC;AASA,iBAAK3uB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CyuB,0BAA5C,CAAuE/oB,IAAvE,CAA4EsqB,MAA5E;AACA,gBAAIC,UAAU,GAAG,EAAjB;AACAA,sBAAU,CAACvqB,IAAX,CAAgB,IAAI2c,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuBmN,EAAE,CAACpX,GAAH,EAAvB,EAAiCkX,EAAE,CAACjX,GAAH,EAAjC,CAAhB;AACAuX,sBAAU,CAACvqB,IAAX,CAAgB,IAAI2c,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuB8M,YAAY,CAAC/W,GAAb,EAAvB,EAA2C+W,YAAY,CAAC9W,GAAb,EAA3C,CAAhB;AACAuX,sBAAU,CAACvqB,IAAX,CAAgB,IAAI2c,MAAM,CAACC,IAAP,CAAYI,MAAhB,CAAuBmN,EAAE,CAACpX,GAAH,EAAvB,EAAiCoX,EAAE,CAACnX,GAAH,EAAjC,CAAhB;AACA,gBAAIwX,MAAM,GAAyB,IAAI7N,MAAM,CAACC,IAAP,CAAYH,QAAhB,CAAyB;AAC1DY,kBAAI,EAAEkN,UADoD;AAE1DpN,yBAAW,EAAE,MAF6C;AAG1DG,2BAAa,EAAE,GAH2C;AAI1DC,0BAAY,EAAE,CAJ4C;AAK1DC,iBAAG,EAAE,KAAK/jB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CmjB,GALS;AAM1D2K,oBAAM,EAAE;AANkD,aAAzB,CAAnC;AASA,iBAAK3uB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CyuB,0BAA5C,CAAuE/oB,IAAvE,CAA4EwqB,MAA5E;AACD;;;;;;;yBA/IUhC,U,EAAU,0I,EAAA,4I,EAAA,kJ,EAAA,oJ,EAAA,sJ,EAAA,4H;AAAA,O;;;eAAVA,U;AAAU,iBAAVA,UAAU,K;AAAA,oBAFT;;;;;;;;;;;;;;;;;ACdd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAcavN,Y;;;;;;;;;;;;;;;;;;;ACbb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWawP,8B;AAKX,gDAAmBjxB,eAAnB,EACSkxB,kBADT,EACiD;AAAA;;AAD9B,eAAAlxB,eAAA,GAAAA,eAAA;AACV,eAAAkxB,kBAAA,GAAAA,kBAAA;AAHT,eAAA1pB,YAAA,GAAe,8FAAf;AAIC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAbUypB,8B,EAA8B,mJ,EAAA,iK;AAAA,O;;;cAA9BA,8B;AAA8B,sD;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,oC;AAAA;AAAA;ACZ3C;;AACI;;AACJ;;;;AADI;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCYSE,mB;AAIX,qCAAmBnxB,eAAnB,EACSC,gBADT,EAESmxB,iBAFT,EAE+C;AAAA;;AAF5B,eAAApxB,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAmxB,iBAAA,GAAAA,iBAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAdUD,mB,EAAmB,mJ,EAAA,qJ,EAAA,+J;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,yG;AAAA;AAAA;ACbhC;;AACI;AAAA,qBAAS,IAAAC,iBAAA,kCAAT;AAAwD,aAAxD;;AACA;;AAAU;;AAAS;;AACvB;;;;AAHmB;;;;;;;;;;;;;;;;;;;;;;ACEnB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaC,sB;AAMT,wCAAoBvpB,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAEgD;AAAA;;AAF5B,eAAA6H,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AAJZ,eAAAuH,YAAA,GAAe,8FAAf;AAKC;;;;iBAED,6BAAoB;AAChB,iBAAKW,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;AACA,iBAAKD,GAAL,GAAW,KAAKmpB,kBAAL,GAA0B3oB,SAA1B,EAAX;AACH;;;iBAED,sBAAa;;;AACT,gBAAI,CAAJ,KAAI,KAAK3I,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,QAAyC,IAAzC,IAAyC,aAAzC,GAAyC,MAAzC,GAAyC,GAAE+K,cAA/C,EAA+D,CAC3D;AACH,aAFD,MAGK;AACD,mBAAK0lB,YAAL;AACH;AACJ;;;iBAEO,wBAAe;AAAA;;;;AACnB,gBAAI,CAAC,KAAK1lB,cAAV,EAA0B;AAAE;AAExB,kBAAI,CAAJ,WAAI,KAAK5L,gBAAL,CAAsBoI,UAA1B,MAAoC,IAApC,IAAoC,aAApC,GAAoC,MAApC,GAAoC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI0wB,eAAlD,EAAmE;AAC/D,qBAAK3lB,cAAL,GAAsB,IAAI4lB,OAAJ,CAAY,UAACC,OAAD,EAAa;;;AAC3CC,wBAAM,CAAC,gBAAD,CAAN,GAA2B,UAACC,EAAD,EAAQ;AAC/BroB,2BAAO,CAACsoB,GAAR,CAAY,aAAZ;AACAH,2BAAO,CAACC,MAAM,CAACG,IAAR,CAAP;AACH,mBAHD;;AAIAvoB,yBAAO,CAACsoB,GAAR,CAAY,WAAZ;AACA,sBAAME,IAAI,GAAG1N,QAAQ,CAAC2N,aAAT,CAAuB,QAAvB,CAAb;;AACA,sBAAI,CAAJ,iBAAI,OAAI,CAAC/xB,gBAAL,CAAsBoI,UAA1B,MAAoC,IAApC,IAAoC,aAApC,GAAoC,MAApC,GAAoC,GAAEvH,QAAF,EAApC,MAA8C,IAA9C,IAA8C,aAA9C,GAA8C,MAA9C,GAA8C,GAAI0wB,eAA9C,MAA6D,IAA7D,IAA6D,aAA7D,GAA6D,MAA7D,GAA6D,GAAES,qBAAnE,EAA0F;AACtFF,wBAAI,CAACG,GAAL,yDAA0D,yBAAI,CAACjyB,gBAAL,CAAsBoI,UAAtB,MAAgC,IAAhC,IAAgC,aAAhC,GAAgC,MAAhC,GAAgC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI0wB,eAA9C,MAA6D,IAA7D,IAA6D,aAA7D,GAA6D,MAA7D,GAA6D,GAAEW,gBAAzH;AACH,mBAFD,MAGK;AACDJ,wBAAI,CAACG,GAAL,aAAc,OAAI,CAACjyB,gBAAL,CAAsBiJ,UAApC,SAAiD,OAAI,CAAC1B,YAAL,CAAkB,OAAI,CAACxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA5D,CAAjD;AACH;;AACDkvB,sBAAI,CAACK,IAAL,GAAY,iBAAZ;AACA/N,0BAAQ,CAACgO,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,WAAzC,CAAqDP,IAArD;;AACA,yBAAI,CAAC/xB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEgD,kCAAc,EAAE;AAAlB,mBAA9C;AACH,iBAhBqB,CAAtB;AAiBH;AACJ;;AAED,mBAAO,KAAKA,cAAZ;AACH;;;iBAEO,8BAAqB;AAAA;;AACzB,gBAAIrE,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE4oB,6BAAe,EAAE;AAAnB,aAAjD;AACA,iBAAKxxB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEG,qBAAO,EAAE;AAAX,aAA9C;AACA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,wBAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAA6BF,GAA7B,EAAkCG,IAAlC,CACH,2DAAI,UAACC,CAAD,EAAY;;;AACZ,qBAAI,CAACkpB,qBAAL,CAA2BlpB,CAA3B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,CAAJ,iBAAI,OAAI,CAACpJ,gBAAL,CAAsBoI,UAA1B,MAAoC,IAApC,IAAoC,aAApC,GAAoC,MAApC,GAAoC,GAAEvH,QAAF,EAApC,MAA8C,IAA9C,IAA8C,aAA9C,GAA8C,MAA9C,GAA8C,GAAI0wB,eAA9C,MAA6D,IAA7D,IAA6D,aAA7D,GAA6D,MAA7D,GAA6D,GAAES,qBAAnE,EAA0F;AACtF,uBAAI,CAACO,UAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAArrB,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEG,yBAAO,EAAE,KAAX;AAAkBU,uBAAK,EAAqBvC;AAA5C,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,+BAAsBkC,CAAtB,EAAkC;AACtC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE4oB,6BAAe,EAAEnoB;AAAnB,aAAjD;AACA,iBAAKrJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEG,qBAAO,EAAE;AAAX,aAA9C;AACH;;;;;;;yBA3EQqoB,sB,EAAsB,uH,EAAA,0I,EAAA,4I;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;ACZhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaoB,wB;AAMT,0CAAoB3qB,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYwyB,oBAJZ,EAKY1qB,0BALZ,EAMYoD,cANZ,EAM4C;AAAA;;;;AANxB,eAAAtD,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAwyB,oBAAA,GAAAA,oBAAA;AACA,eAAA1qB,0BAAA,GAAAA,0BAAA;AACA,eAAAoD,cAAA,GAAAA,cAAA;AARZ,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AASC;;;;iBAED,6BAAoBuI,QAApB,EAAsCnD,OAAtC,EAAwD;;;AACpD,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4e,iBAAjD,EAAoE;AAClE,mBAAKiT,qBAAL;AACD,aAFD,MAGK;AACH,mBAAKxqB,GAAL,GAAW,KAAKyqB,oBAAL,GAA4BjqB,SAA5B,EAAX;AACD;AACF;;;iBAEK,gCAAuB;AAAA;;AAC3B,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C8W,+BAAiB,EAAE;AAD0B,aAAjD;AAGA,iBAAK1f,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,sGAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,wCAA+I,KAAKwI,QAApJ,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAuCF,GAAvC,EAA4CG,IAA5C,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACwpB,uBAAL,CAA6BxpB,CAA7B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAAC4qB,eAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA3rB,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,2BAAkB;AACtB,iBAAKurB,oBAAL,CAA0BI,eAA1B,CAA0C,KAAKznB,QAA/C,EAAyD,KAAKnD,OAA9D;AACH;;;iBAEO,iCAAwB;;;AAC5B,iBAAK2qB,uBAAL,CAA6B,CAAD,WAAC,KAAK5yB,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI4e,iBAA3E;AACAnW,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI4e,iBAA5D;;AACA,gBAAI,KAAKxX,OAAT,EAAkB;AACd,mBAAK4qB,eAAL;AACH;AACJ;;;iBAEO,iCAAwBzpB,CAAxB,EAA8C;;;AAClD,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C8W,+BAAiB,EAAErW;AAD0B,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAE4e,iBAA7C,MAA8D,IAA9D,IAA8D,aAA9D,GAA8D,MAA9D,GAA8D,GAAE/T,WAA/F;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2J,sBAAhC,EAAJ,EAA8D;AAC1D,qBAAK3R,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgC+qB,2BAAhC,EAAJ,EAAmE;AAC/D,qBAAK/yB,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBAnFQypB,wB,EAAwB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,6J,EAAA,0K,EAAA,gJ;AAAA,O;;;eAAxBA,wB;AAAwB,iBAAxBA,wBAAwB,K;AAAA,oBAFrB;;;;;;;;;;;;;;;;;AChBhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYO,cAAZ;;AAAA,iBAAYA,cAAZ,EAA0B;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAdD,EAAYA,cAAc,KAAdA,cAAc,MAA1B;;AAgBO,eAASC,iBAAT,GAA0B;AAE/B,eAAOD,cAAP;AACD;;AAEM,eAASE,6BAAT,CAAuClzB,eAAvC,EAAuE;;;AAC1E,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACH,SAdD,MAeK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,GAAV;AAAeC,oBAAQ,EAAE;AAAzB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASysB,wBAAT,CAAkCnsB,MAAlC,EAAkDhH,eAAlD,EAAkF;AACrF,YAAIiH,mBAAJ;AACAisB,qCAA6B,CAAClzB,eAAD,CAA7B,CAA+CkH,OAA/C,CAAuD,UAAAC,CAAC,EAAI;AACxD,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC7ED;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;AC6CI;;;;;;;;AACI,kGAA2B,UAA3B,EAA2B,eAA3B;;;;;;AAGJ;;;;;;;;AACI,kGAA2B,UAA3B,EAA2B,eAA3B;;;;;;AAGJ;;;;;;;;AACI,kGAA2B,UAA3B,EAA2B,eAA3B,EAA2B,cAA3B,EAA2B,8DAA3B;;;;;;AAjBR;;AACI;;AAGA;;AAIA;;AAIA;;AAIA;;AAIJ;;;;;;;;;;;AAnBqB;;AAAA,kGAA2B,UAA3B,EAA2B,eAA3B;;AAGuB;;AAAA,kGAA2B,OAA3B,EAA2B,QAA3B,EAA2B,UAA3B,EAA2B,eAA3B,EAA2B,cAA3B,EAA2B,8DAA3B;;AAId;;AAAA;;AAIA;;AAAA;;AAIS;;AAAA;;;;UD/B1BmsB,+B;AAWX,iDAAmBpzB,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSmH,cAHT,EAISC,UAJT,EAKSC,iBALT,EAMSnH,qBANT,EAOSwK,iBAPT,EAO+C;AAAA;;AAP5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAmH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAC,iBAAA,GAAAA,iBAAA;AACA,eAAAnH,qBAAA,GAAAA,qBAAA;AACA,eAAAwK,iBAAA,GAAAA,iBAAA;AAjBA,eAAA4B,eAAA,GAAiC,EAAjC;AAEA,eAAAC,YAAA,GAAwB,KAAxB;AAET,eAAAjF,YAAA,GAAe,8FAAf;AACA,eAAA/G,UAAA,GAAa,0FAAb;AAGA,eAAA0B,IAAA,GAAe,CAAf;AAUC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;iBAED,8BAAqBuc,IAArB,EAAmC;AACjC,iBAAK1e,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuJ,+BAAiB,EAAEsM,IAArB;AAA2B1V,qBAAO,EAAE;AAApC,aAA9C;AACA,iBAAK5I,qBAAL,CAA2Bie,oBAA3B;AAEA,gBAAIgV,aAAa,GAAoB,KAAKpzB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwgB,YAA5C,CAAyDgS,iBAA9F;;AAEA,gBAAI,KAAKtzB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC5D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0BC,SAAjG,EAA4G;AAC1G,qBAAKrN,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAA4B,CAC1B;AACA;AAF0B,iBAA5B;AAID;AACF;AAEF;;;;;;;yBA3CUmnB,+B,EAA+B,mJ,EAAA,qJ,EAAA,yJ,EAAA,yJ,EAAA,4I,EAAA,+J,EAAA,yK,EAAA,gK;AAAA,O;;;cAA/BA,+B;AAA+B,uD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,iT;AAAA;AAAA;ACvB5C;;AACI;;AAAM;;AAEO;;AAEb;;AACI;;AAAmB;AAAA,qBAAS,IAAAG,oBAAA,CAAqB,EAArB,CAAT;AAAiC,aAAjC;;AAEf;;AACJ;;AACA;;AAAmB;AAAA,qBAAS,IAAAA,oBAAA,CAAqB,EAArB,CAAT;AAAiC,aAAjC;;AAEf;;AACJ;;AACA;;AAAmB;AAAA,qBAAS,IAAAA,oBAAA,CAAqB,EAArB,CAAT;AAAiC,aAAjC;;AAEf;;AACJ;;AACA;;AAAmB;AAAA,qBAAS,IAAAA,oBAAA,CAAqB,EAArB,CAAT;AAAiC,aAAjC;;AAEf;;AACJ;;AACA;;AAAmB;AAAA,qBAAS,IAAAA,oBAAA,CAAqB,EAArB,CAAT;AAAiC,aAAjC;;AAEf;;AACJ;;AACA;;AAAmB;AAAA,qBAAS,IAAAA,oBAAA,CAAqB,EAArB,CAAT;AAAiC,aAAjC;;AAEf;;AACJ;;AACA;;AAAmB;AAAA,qBAAS,IAAAA,oBAAA,CAAqB,EAArB,CAAT;AAAiC,aAAjC;;AAEf;;AACJ;;AACJ;;AACA;;AACJ;;AAEA;;;;AArCU;;AAAA;;AAME;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAOsB;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACtClC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,WAAZ;;AAAA,iBAAYA,WAAZ,EAAuB;AACnB;AACA;AACA;AACA;AACA;AACH,OAND,EAAYA,WAAW,KAAXA,WAAW,MAAvB;;AAQO,eAASC,cAAT,GAAuB;AAE5B,eAAOD,WAAP;AACD;;AAEM,eAASE,0BAAT,CAAoC1zB,eAApC,EAAoE;;;AACvE,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAND,MAOK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASitB,qBAAT,CAA+B3sB,MAA/B,EAA+ChH,eAA/C,EAA+E;AAClF,YAAIiH,mBAAJ;AACAysB,kCAA0B,CAAC1zB,eAAD,CAA1B,CAA4CkH,OAA5C,CAAoD,UAAAC,CAAC,EAAI;AACrD,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;ACpDD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAea2sB,+B;AAKT,iDAAoB9rB,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIY2zB,qCAJZ,EAKY7rB,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA2zB,qCAAA,GAAAA,qCAAA;AACA,eAAA7rB,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,oCAA2BoF,OAA3B,EAA6C;;;AACzC,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE2f,wBAAjD,EAA2E;AACvE,mBAAKqT,4BAAL;AACH,aAFD,MAGK;AACD,mBAAK3rB,GAAL,GAAW,KAAK4rB,2BAAL,GAAmCprB,SAAnC,EAAX;AACH;AACJ;;;iBAEO,uCAA8B;AAAA;;AAClC,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE6X,sCAAwB,EAAE;AAA5B,aAAjD;AACA,iBAAKzgB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,oHAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,sCAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAA8CF,GAA9C,EAAmDG,IAAnD,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAAC2qB,8BAAL,CAAoC3qB,CAApC;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAAC+rB,gCAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA9sB,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,4CAAmC;AACvC,iBAAK0sB,qCAAL,CAA2CI,gCAA3C,CAA4E,KAAK/rB,OAAjF;AACH;;;iBAEO,wCAA+B;;;AACnC,iBAAK8rB,8BAAL,CAAoC,CAAD,WAAC,KAAK/zB,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI2f,wBAAlF;AACAlX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI2f,wBAA5D;;AACA,gBAAI,KAAKvY,OAAT,EAAkB;AACd,mBAAK+rB,gCAAL;AACH;AACJ;;;iBAEO,wCAA+B5qB,CAA/B,EAA4D;AAChE,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE6X,sCAAwB,EAAEpX;AAA5B,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCksB,+BAAhC,EAAJ,EAAuE;AACnE,qBAAKl0B,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQ4qB,+B,EAA+B,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,mM,EAAA,0K;AAAA,O;;;eAA/BA,+B;AAA+B,iBAA/BA,+BAA+B,K;AAAA,oBAF5B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCNHO,sB;AACT,wCAAoBC,sBAApB,EACY7sB,iBADZ,EACkD;AAAA;;AAD9B,eAAA6sB,sBAAA,GAAAA,sBAAA;AACR,eAAA7sB,iBAAA,GAAAA,iBAAA;AACX;;;;iBAED,mCAA0B8sB,GAA1B,EAA6C;AACzC,gBAAI,CAACA,GAAD,IAAQA,GAAG,CAAC7rB,MAAJ,IAAc,CAA1B,EAA6B,OAAO6rB,GAAP;AAE7B,gBAAIC,aAAa,GAAmB,EAApC;AACA,gBAAIC,IAAI,GAA2B,EAAnC;AACA,gBAAIC,QAAQ,GAA2B,EAAvC;;AAEA,iBAAK,IAAI9mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2mB,GAAG,CAAC7rB,MAAxB,EAAgCkF,CAAC,EAAjC,EAAqC;AACjC8mB,sBAAQ,CAAChuB,IAAT,CAAoC;AAChC6E,wBAAQ,EAAEgpB,GAAG,CAAC3mB,CAAD,CAAH,CAAO+B,OAAP,CAAeglB,SADO;AAEhCrG,sBAAM,EAAE,UAAI,KAAK7mB,iBAAL,CAAuBmtB,6BAAvB,CAAqDL,GAAG,CAAC3mB,CAAD,CAAH,CAAO+B,OAA5D,CAAJ,EAA2EklB,WAA3E;AAFwB,eAApC;AAIH;;AAEDJ,gBAAI,GAAGC,QAAQ,CAAC7tB,IAAT,CAAc,KAAKytB,sBAAL,CAA4BQ,eAA5B,CAA4C,QAA5C,CAAd,CAAP;;AAEA,iBAAK,IAAIlnB,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG8mB,QAAQ,CAAChsB,MAA7B,EAAqCkF,GAAC,EAAtC,EAA0C;AACtC,mBAAK,IAAImnB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAAC7rB,MAAxB,EAAgCqsB,CAAC,EAAjC,EAAqC;AACjC,oBAAIN,IAAI,CAAC7mB,GAAD,CAAJ,CAAQrC,QAAR,IAAoBgpB,GAAG,CAACQ,CAAD,CAAH,CAAOplB,OAAP,CAAeglB,SAAvC,EAAkD;AAC9CH,+BAAa,CAAC9tB,IAAd,CAAmB6tB,GAAG,CAACQ,CAAD,CAAtB;AACA;AACH;AACJ;AACJ;;AAED,mBAAOP,aAAP;AACH;;;;;;;yBA/BQH,sB,EAAsB,iK,EAAA,8H;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;ACLhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAmBaW,kB;AAMX,oCAAoBhtB,UAApB,EACU9H,eADV,EAEUC,gBAFV,EAGUC,kBAHV,EAIUgL,qBAJV,EAKUC,0BALV,EAMU7D,UANV,EAOUU,0BAPV,EAQUoD,cARV,EAQ0C;AAAA;;;;AARtB,eAAAtD,UAAA,GAAAA,UAAA;AACV,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgL,qBAAA,GAAAA,qBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AACA,eAAA7D,UAAA,GAAAA,UAAA;AACA,eAAAU,0BAAA,GAAAA,0BAAA;AACA,eAAAoD,cAAA,GAAAA,cAAA;AAVV,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAWC;;;;iBAED,uBAAcuI,QAAd,EAAgCnD,OAAhC,EAAkD;;;AAChD,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEgM,WAAjD,EAA8D;AAC5D,mBAAKioB,eAAL;AACD,aAFD,MAGK;AACH,mBAAK5sB,GAAL,GAAW,KAAK6sB,cAAL,GAAsBrsB,SAAtB,EAAX;AACD;AACF;;;iBAEO,0BAAiB;AAAA;;AACvB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/CkE,yBAAW,EAAE;AADkC,aAAjD;AAGA,iBAAK9M,eAAL,CAAqB6I,cAArB,CAA8C;AAC5CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,0FAArE,CADsC;AAE5Ce,qBAAO,EAAE;AAFmC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,kCAAyI,KAAKwI,QAA9I,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAiCF,GAAjC,EAAsCG,IAAtC,CACL,2DAAI,UAACC,CAAD,EAAY;AACd,qBAAI,CAAC4rB,iBAAL,CAAuB5rB,CAAvB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB,CAChB;AACD;AACF,aAND,CADK,EAQL,kEAAW,UAAAf,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAClC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACD,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARK,CAAP;AAaD;;;iBAEO,2BAAkB;;;AACxB,iBAAK8tB,iBAAL,CAAuB,CAAD,WAAC,KAAKh1B,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIgM,WAArE;AACAvD,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIgM,WAA5D;;AACA,gBAAI,KAAK5E,OAAT,EAAkB,CAChB;AACD;AACF;;;iBAEO,2BAAkBmB,CAAlB,EAAkC;;;AACxC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/CkE,yBAAW,EAAEzD;AADkC,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAEgM,WAA7C,MAAwD,IAAxD,IAAwD,aAAxD,GAAwD,MAAxD,GAAwD,GAAEnB,WAAzF;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AAChB,kBAAI,KAAKF,0BAAL,CAAgCktB,qBAAhC,EAAJ,EAA6D;AAC3D,qBAAKl1B,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACD;AACF,aAJD,MAKK;AACH,mBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,sBAAM,EAAE,EAAV;AAAcE,uBAAO,EAAE;AAAvB,eAA9C;AACD;;AAED,gBAAI,KAAKhJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC5D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsT,oBAA1C,IAAkE,0GAAyBC,KAA/F,EAAsG;AACpG,qBAAK/M,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDqoB,mBAD7D,GAEK,CAAC,KAAKl1B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDnB,WAAzD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsT,oBAA1C,IAAkE,0GAAyBghB,cAA/F,EAA+G;AAC7G,qBAAK9tB,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDuoB,2BAD7D,GAEK,CAAC,KAAKp1B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDnB,WAAzD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsT,oBAA1C,IAAkE,0GAAyBjI,KAA/F,EAAsG;AACpG,qBAAK7E,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDqoB,mBAD7D,GAEK,CAAC,KAAKl1B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDnB,WAAzD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsT,oBAA1C,IAAkE,0GAAyBkhB,QAA/F,EAAyG;AACvG,qBAAKhuB,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDqoB,mBAD7D,GAEK,CAAC,KAAKl1B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDnB,WAAzD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsT,oBAA1C,IAAkE,0GAAyBmhB,YAA/F,EAA6G;AAC3G,qBAAKjuB,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDqoB,mBAD7D,GAEK,CAAC,KAAKl1B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDnB,WAAzD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsT,oBAA1C,IAAkE,0GAAyBohB,aAA/F,EAA8G;AAC5G,qBAAKluB,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDqoB,mBAD7D,GAEK,CAAC,KAAKl1B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CgM,WAA5C,CAAwDnB,WAAzD,CAFL;AAID;AACF;AACF;;;;;;;yBAjIUmpB,kB,EAAkB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,gK,EAAA,0K,EAAA,oI,EAAA,0K,EAAA,gJ;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;;;;;;;;;;;;;ACnBd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAUavT,O;;;;;;;;;;;;;;;;;;;ACVb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYkU,6BAAZ;;AAAA,iBAAYA,6BAAZ,EAAyC;AACrC;AACA;AACH,OAHD,EAAYA,6BAA6B,KAA7BA,6BAA6B,MAAzC;;AAKO,eAASC,gCAAT,GAAyC;AAE9C,eAAOD,6BAAP;AACD;;AAEM,eAASE,4CAAT,CAAsD31B,eAAtD,EAAsF;;;AACzF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAHD,MAIK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASkvB,uCAAT,CAAiD5uB,MAAjD,EAAiEhH,eAAjE,EAAiG;AACpG,YAAIiH,mBAAJ;AACA0uB,oDAA4C,CAAC31B,eAAD,CAA5C,CAA8DkH,OAA9D,CAAsE,UAAAC,CAAC,EAAI;AACvE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC7CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASa4Z,mB;;;;;;;;;;;;;;;;;;;ACLb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAAagV,8B;;;;UAKAC,2B;;;;;;;;;;;;;;;;;;;ACRb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACGQ;;AAAwC;;AAAkE;;;;;;;;AAAlE;;AAAA;;;;;;AAD5C;;AACI;;AACA;;AACJ;;;;;;;;;AAF8B;;AAAA;;AACN;;AAAA,sFAAiB,UAAjB,EAAiB,eAAjB,EAAiB,aAAjB,EAAiB,cAAjB;;;;;;AAH5B;;AACI;;AAIJ;;;;;;AAJsC;;AAAA;;;;UDSzBC,iB;AAIX,mCAAmB/1B,eAAnB,EAAqD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AAClB;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;iBAED,sCAA6Bg2B,eAA7B,EAAoD;AAClD,mBAAO,0GAA0BA,eAA1B,EAA2C,KAAKh2B,eAAhD,CAAP;AACD;;;;;;;yBAfU+1B,iB,EAAiB,mJ;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6J;AAAA;AAAA;ACZ9B;;AAEA;;;;;;AAFiB;;AAEgB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFjC;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSE,yB;AAEX,2CAAmBj2B,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CAEP;;;iBAED,uBAAW,CAEV;;;;;;;yBAXU+1B,yB,EAAyB,mJ,EAAA,yJ;AAAA,O;;;cAAzBA,yB;AAAyB,gD;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVtC;;;;AAGA;;;;AAIA;;AAAG;;AAAoC;;;;AAPhC;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,oBAAZ;;AAAA,iBAAYA,oBAAZ,EAAgC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAZD,EAAYA,oBAAoB,KAApBA,oBAAoB,MAAhC;;AAcO,eAASC,uBAAT,GAAgC;AAErC,eAAOD,oBAAP;AACD;;AAEM,eAASE,mCAAT,CAA6Cp2B,eAA7C,EAA6E;;;AAChF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH,SAZD,MAaK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAAS2vB,8BAAT,CAAwCrvB,MAAxC,EAAwDhH,eAAxD,EAAwF;AAC3F,YAAIiH,mBAAJ;AACAmvB,2CAAmC,CAACp2B,eAAD,CAAnC,CAAqDkH,OAArD,CAA6D,UAAAC,CAAC,EAAI;AAC9D,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;ACxED;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYqvB,YAAZ;;AAAA,iBAAYA,YAAZ,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAvBD,EAAYA,YAAY,KAAZA,YAAY,MAAxB;;AAyBO,eAASC,eAAT,GAAwB;AAE7B,eAAOD,YAAP;AACD;;AAEM,eAASE,2BAAT,CAAqCx2B,eAArC,EAAqE;;;AACxE,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH,SAvBD,MAwBK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAAS+vB,sBAAT,CAAgCzvB,MAAhC,EAAgDhH,eAAhD,EAAgF;AACnF,YAAIiH,mBAAJ;AACAuvB,mCAA2B,CAACx2B,eAAD,CAA3B,CAA6CkH,OAA7C,CAAqD,UAAAC,CAAC,EAAI;AACtD,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;ACxGD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAI;;AACI;;AAAM;;AAAgI;;AACtI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,0GAA+B,aAA/B,EAA+B,kBAA/B;;;;;;AAGpB;;AACI;;AAAM;;AAAiI;;AACvI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,+GAAoC,aAApC,EAAoC,kBAApC;;;;;;AAGpB;;AACI;;AAAM;;AAA+H;;AACrI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yGAA8B,aAA9B,EAA8B,kBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAA8H;;AACpI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,wGAA6B,aAA7B,EAA6B,kBAA7B;;;;;;AAGpB;;AACI;;AAAM;;AAAoI;;AAC1I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,8GAAmC,aAAnC,EAAmC,kBAAnC;;;;UDVXyvB,+B;AAIX,iDAAmB12B,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;eAED,eAAc;AACZ,mBAAO,6EAAP;AACD;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAhBUw2B,+B,EAA+B,mJ,EAAA,yJ;AAAA,O;;;cAA/BA,+B;AAA+B,sD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,2D;AAAA;AAAA;ACb5C;;AACI;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AACJ;;;;AA1BW;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACrBX;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAUA,UAAYC,YAAZ;;AAAA,iBAAYA,YAAZ,EAAwB;AACpB;AACA;AACA;AACA;AACH,OALD,EAAYA,YAAY,KAAZA,YAAY,MAAxB;;AAOO,eAASC,eAAT,GAAwB;AAE7B,eAAOD,YAAP;AACD;;AAEM,eAASE,2BAAT,CAAqC72B,eAArC,EAAqE;;;AACxE,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD8zB,YAAY,CAAC7zB,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SALD,MAMK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASowB,sBAAT,CAAgC9vB,MAAhC,EAAgDhH,eAAhD,EAAgF;AACnF,YAAIiH,mBAAJ;AACA4vB,mCAA2B,CAAC72B,eAAD,CAA3B,CAA6CkH,OAA7C,CAAqD,UAAAC,CAAC,EAAI;AACtD,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACGO;;AACI;;AACI;;AAGJ;;AACJ;;;;;;;;;;AALU;;AAAA;;AACF;;AAAA;;;;;;AAvDhB;;AACI;;AAAQ;;AAED;;AACP;;AAAO;;AAGP;;AACA;;AACI;;AAAK;;AAAQ;;;;AACP;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAM;;AAAQ;;;;AACR;;AAAS;;AACnB;;AACA;;AACI;;AAAO;;AAAQ;;;;AACT;;AAAS;;AACnB;;AACA;;AACI;;AAQJ;;AACA;;AACJ;;;;;;;;;AA9DY;;AAAA;;AAGD;;AAAA;;AAKU;;AAAA;;AAIC;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAIC;;AAAA;;AAI+B;;AAAA;;;;UCxCzC8vB,gC;AAKX,kDAAmB/2B,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;iBAGD,6BAAoB82B,EAApB,EAA8B;AAE5B,gBAAIA,EAAE,IAAI,GAAV,EACA;AACE,qBAAO,SAAP;AACD;;AACD,gBAAIA,EAAE,IAAI,EAAV,EACA;AACE,qBAAO,QAAP;AACD;;AACD,gBAAIA,EAAE,GAAG,EAAT,EACA;AACE,qBAAO,YAAP;AACD;AAGF;;;;;;;yBAhCUD,gC,EAAgC,mJ,EAAA,yJ;AAAA,O;;;cAAhCA,gC;AAAgC,wD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sD;AAAA;AAAA;ADb7C;;;;AAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEIL;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;;;AATlF;;AAEI;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,OAAA1vB,cAAA,kCAAT;AAAsD,WAAtD;;AACA;;AACI;;AAGA;;AACJ;;AACA;;AAEJ;;;;;;;;;;;AAVI;;AAEM;;AAAA;;AACK;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;;;UCGR4vB,mB;AAGX,qCAAmBj3B,eAAnB,EACSC,gBADT,EAESoH,cAFT,EAEyC;AAAA;;AAFtB,eAAArH,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAoH,cAAA,GAAAA,cAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;iBAED,gBAAOqG,CAAP,EAAkB;AAChB,gBAAI,KAAKzN,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4Co2B,yBAA5C,CAAsE1uB,MAAtE,GAA+E,CAA/E,IAAoFkF,CAAxF,EAA2F;AACzF,qBAAO,IAAP;AACD,aAFD,MAGK;AACH,qBAAO,KAAP;AACD;AACF;;;;;;;yBAtBUupB,mB,EAAmB,mJ,EAAA,qJ,EAAA,yJ;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,iO;AAAA;AAAA;ADZhC;;;;;;AAAkD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEAlD;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSE,yB;AAEX,2CAAmBn3B,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATUi3B,yB,EAAyB,mJ,EAAA,yJ;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVtC;;;;AAGA;;;;AAIA;;AAAG;;AAAmC;;;;AAP/B;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACyBY;;AACI;;AACA;;AAGJ;;;;;;AAJsB;;AAAA;;;;UDVrBC,mB;AAKb;AACA;AAEE,qCAAmBn3B,gBAAnB,EACSD,eADT,EAEE;AACOq3B,yBAHT,EAG6C;AAAA;;AAH1B,eAAAp3B,gBAAA,GAAAA,gBAAA;AACV,eAAAD,eAAA,GAAAA,eAAA;AAEA,eAAAq3B,iBAAA,GAAAA,iBAAA;AATT,eAAAC,KAAA,GAAQ,EAAR,CAS6C,CAE3C;AACA;AACA;AACA;AACD;;;;iBAED,oBAAW,CAAG;;;iBAEd,uBAAc,CAAG,C,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;iBAEA,oBAAWC,IAAX,EAAiB;AACf,gBAAMjV,QAAQ,GAAG,IAAIkV,QAAJ,EAAjB;AACAlV,oBAAQ,CAACmV,MAAT,CAAgB,MAAhB,EAAwBF,IAAI,CAACG,IAA7B;AACAH,gBAAI,CAACI,UAAL,GAAkB,IAAlB;AACA,iBAAKN,iBAAL,CAAuBO,MAAvB,CAA8BtV,QAA9B,EAAwClZ,IAAxC,CACE,2DAAI,UAAA8a,KAAK,EAAI;AACX,sBAAQA,KAAK,CAACkO,IAAd;AACE,qBAAK,mEAAcyF,cAAnB;AACEN,sBAAI,CAACO,QAAL,GAAgBhb,IAAI,CAACib,KAAL,CAAW7T,KAAK,CAAC8T,MAAN,GAAe,GAAf,GAAqB9T,KAAK,CAAC+T,KAAtC,CAAhB;AACA;;AACF,qBAAK,mEAAcC,QAAnB;AACE,yBAAOhU,KAAP;AALJ;AAOD,aARD,CADF,EAUE,kEAAW,UAACiU,KAAD,EAA8B;AACvCZ,kBAAI,CAACI,UAAL,GAAkB,KAAlB;AACA,qBAAO,0DAAMJ,IAAI,CAACG,IAAL,CAAUU,IAAhB,qBAAP;AACD,aAHD,CAVF,EAaMzvB,SAbN,CAagB,UAACub,KAAD,EAAgB;AAC5B,kBAAI,OAAQA,KAAR,KAAmB,QAAvB,EAAiC;AAC/B3a,uBAAO,CAACsoB,GAAR,CAAY3N,KAAK,CAACmU,IAAlB;AACD;AACF,aAjBH;AAkBD;;;iBAEO,uBAAc;AAAA;;AACpB,iBAAKC,UAAL,CAAgBxI,aAAhB,CAA8BvL,KAA9B,GAAsC,EAAtC;AACA,iBAAK+S,KAAL,CAAWpwB,OAAX,CAAmB,UAAAqwB,IAAI,EAAI;AACzB,qBAAI,CAACv3B,eAAL,CAAqB6I,cAArB,CAA+C;AAAEG,uBAAO,EAAE;AAAX,eAA/C;;AACA,qBAAI,CAACuvB,UAAL,CAAgBhB,IAAhB;AACD,aAHD;AAIA,iBAAKv3B,eAAL,CAAqB6I,cAArB,CAA+C;AAAEG,qBAAO,EAAE;AAAX,aAA/C;AACD;;;iBAED,mBAAU;AAAA;;AACR,gBAAMsvB,UAAU,GAAG,KAAKA,UAAL,CAAgBxI,aAAnC;;AAAkDwI,sBAAU,CAACE,QAAX,GAAsB,YAAM;AAC5E,mBAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGH,UAAU,CAAChB,KAAX,CAAiB9uB,MAA7C,EAAqDiwB,KAAK,EAA1D,EAA8D;AAC5D,oBAAMlB,IAAI,GAAGe,UAAU,CAAChB,KAAX,CAAiBmB,KAAjB,CAAb;;AACA,uBAAI,CAACnB,KAAL,CAAW9wB,IAAX,CAAgB;AAAEkxB,sBAAI,EAAEH,IAAR;AAAcI,4BAAU,EAAE,KAA1B;AAAiCG,0BAAQ,EAAE;AAA3C,iBAAhB;AACD;;AACD,qBAAI,CAACY,WAAL;;AACA,qBAAI,CAAC14B,eAAL,CAAqB6I,cAArB,CAA+C;AAAEG,uBAAO,EAAE;AAAX,eAA/C;AACD,aAPiD;;AAQlDsvB,sBAAU,CAACK,KAAX;AACD;;;;;;;yBApGUvB,mB,EAAmB,qJ,EAAA,mJ,EAAA,+J;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACMhC;;AAAoD;;AAChD;;AACI;;AACI;;AAMJ;;AACJ;;AACA;;AACI;;AAAgC;AAAA,qBAAS,IAAAwB,OAAA,EAAT;AAAkB,aAAlB;;AAC5B;;AAAU;;AAAW;;AACrB;;AACJ;;AACJ;;AACJ;;AAAW;;AAA8H;;;;AAdxG;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACxBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAE9E;;;;;;AACI;;;;;;AAGR;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AAAsC,gGAAqB,aAArB,EAAqB,qBAArB;;;;;;;;AA5B1C;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAAvxB,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAIA;;AAIA;;AAGJ;;;;;;;;;;;;AA9BqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIN;;AAAA;;AAIA;;AAAA;;AAI+B;;AAAA;;;;UDbpDwxB,mC;AAOX,qDAAmB74B,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSsD,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAsD,iBAAA,GAAAA,iBAAA;AATA,eAAA4B,eAAA,GAAiC,EAAjC;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGT,eAAAjF,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAlBUqxB,mC,EAAmC,mJ,EAAA,yJ,EAAA,4I,EAAA,+J;AAAA,O;;;cAAnCA,mC;AAAmC,2D;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sX;AAAA;AAAA;ACfhD;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;ACAzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASajY,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSkY,yB;AAIX,2CAAmB94B,eAAnB,EACSE,kBADT,EAEUsO,mBAFV,EAEoD;AAAA;;AAFjC,eAAAxO,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAsO,mBAAA,GAAAA,mBAAA;AAA6C;;;;iBAEvD,oBAAQ;AACN,iBAAKA,mBAAL,CAAyBoB,cAAzB,CAAwC,KAAK5P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbU+3B,yB,EAAyB,mJ,EAAA,yJ,EAAA,oK;AAAA,O;;;cAAzBA,yB;AAAyB,gD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6J;AAAA;AAAA;ADbtC;;;;AAGA;;;;AAIA;;AAAwC;;AAAoC;;;;AAPrE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEF3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAGJ;;AACI;;AACI;;AACJ;;AACJ;;;;;;AAiCgB;;AACI;;AAAwB;;AAAkD;;AAAgC;;AAC9G;;;;;;AAD+B;;AAAA;;AAA+C;;AAAA;;;;;;AAuC9E;;AACI;;AAAwB;;AAAkD;;AAAgC;;AAC9G;;;;;;AAD+B;;AAAA;;AAA+C;;AAAA;;;;;;;;AAxE9F;;AACI;;AACI;;AACI;;AACI;;AACI;;AAAmB;;AACuD;;AAE9E;;AACJ;;AACA;;AAAK;;AACL;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AAAG;;AAEH;;AACA;;AAAG;;AAAM;;AACT;;AACI;;AAGJ;;AACA;;AAAG;;AAAM;;AACT;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAoB;;AACI;;AAAU;;AAAU;;AAChD;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAmB;;AACuD;;AAC9E;;AACJ;;AACA;;AAAK;;AACL;;AACA;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AAAG;;AAEH;;AACA;;AAAG;;AAAM;;AACT;;AACI;;AAGJ;;AACA;;AAAG;;AAAM;;AACT;;AACI;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AAAmB;;AACK;;AAAU;;AAAU;;AAChD;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;AA/EuC;;AAAA;;AAKtB;;AAAA;;AAIG;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGL;;AAAA;;AAKyB;;AAAA;;AAOA;;AAAA;;AAQD;;AAAA;;AAItB;;AAAA;;AAIG;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGL;;AAAA;;AAKyB;;AAAA;;AAOD;;AAAA;;;;UD1E1BC,iB;AAKX,mCAAmB94B,gBAAnB,EACSD,eADT,EAESE,kBAFT,EAGS84B,qBAHT,EAISC,sBAJT,EAIuD;AAAA;;AAJpC,eAAAh5B,gBAAA,GAAAA,gBAAA;AACV,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAAE,kBAAA,GAAAA,kBAAA;AACA,eAAA84B,qBAAA,GAAAA,qBAAA;AACA,eAAAC,sBAAA,GAAAA,sBAAA;AART,eAAAzxB,YAAA,GAAe,8FAAf;AAEA,eAAA0xB,gBAAA,GAAmC,EAAnC;AAOO;;;;iBAEP,oBAAQ;;;AACN,iBAAKA,gBAAL,GAAwB,CAAH,WAAG,KAAKj5B,gBAAL,CAAsBoI,UAAzB,MAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIqf,cAAJ,CAAmBgZ,gBAAnB,CAAoC9rB,MAApC,CAA2C,UAACC,CAAD,EAAO;AAAE,qBAAOA,CAAC,CAAC8rB,OAAF,CAAUC,OAAV,IAAqB,IAA5B;AAAkC,aAAtF,CAAlE;AACD;;;iBAED,uBAAc,CACb;;;iBAED,mBAAU;AACR,iBAAKr5B,eAAL,CAAqB6I,cAArB,CAA8C;AAAEhG,sBAAQ,EAAE,kFAAasS,EAAzB;AAA6BnB,0BAAY,EAAE,0FAAiBslB,KAA5D;AAAmEtwB,qBAAO,EAAE;AAA5E,aAA9C;AACD;;;iBAED,kBAAS;AACP,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEhG,sBAAQ,EAAE,kFAAaC,EAAzB;AAA6BkR,0BAAY,EAAE,0FAAiBslB,KAA5D;AAAmEtwB,qBAAO,EAAE;AAA5E,aAA9C;AACD;;;;;;;yBAzBU+vB,iB,EAAiB,qJ,EAAA,mJ,EAAA,yJ,EAAA,wK,EAAA,0K;AAAA,O;;;cAAjBA,iB;AAAiB,sC;AAAA,gB;AAAA,gB;AAAA,0O;AAAA;AAAA;ACjB9B;;;;AAGA;;;;AAIA;;;;AAMA;;;;;;AAbO;;AAGoB;;AAAA;;AAIrB;;AAAA;;AAMA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACXN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaQ,mB;AAMT,qCAAoBzxB,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYuO,kBAJZ,EAKYzG,0BALZ,EAMYoD,cANZ,EAM4C;AAAA;;;;AANxB,eAAAtD,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAuO,kBAAA,GAAAA,kBAAA;AACA,eAAAzG,0BAAA,GAAAA,0BAAA;AACA,eAAAoD,cAAA,GAAAA,cAAA;AARZ,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AASC;;;;iBAED,wBAAeuI,QAAf,EAAiCnD,OAAjC,EAAmD;;;AAC/C,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwgB,YAAjD,EAA+D;AAC3D,mBAAKkY,gBAAL;AACH,aAFD,MAGK;AACD,mBAAKrxB,GAAL,GAAW,KAAKsxB,eAAL,GAAuB9wB,SAAvB,EAAX;AACH;AACJ;;;iBAEO,2BAAkB;AAAA;;AACtB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C0Y,0BAAY,EAAE;AAD+B,aAAjD;AAGA,iBAAKthB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,4FAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,mCAA0I,KAAKwI,QAA/I,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAkCF,GAAlC,EAAuCG,IAAvC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACqwB,kBAAL,CAAwBrwB,CAAxB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAACwH,aAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAvI,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,IAAvB;AAA6BU,uBAAK,EAAqBvC;AAAvD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,yBAAgB;AACpB,iBAAKsH,kBAAL,CAAwBiB,aAAxB,CAAsC,KAAKrE,QAA3C,EAAqD,KAAKnD,OAA1D;AACH;;;iBAEO,4BAAmB;;;AACvB,iBAAKwxB,kBAAL,CAAwB,CAAD,WAAC,KAAKz5B,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwgB,YAAtE;AACA/X,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwgB,YAA5D;;AACA,gBAAI,KAAKpZ,OAAT,EAAkB;AACd,mBAAKwH,aAAL;AACH;AACJ;;;iBAEO,4BAAmBrG,CAAnB,EAAoC;;;AACxC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C0Y,0BAAY,EAAEjY;AAD+B,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAEwgB,YAA7C,MAAyD,IAAzD,IAAyD,aAAzD,GAAyD,MAAzD,GAAyD,GAAE3V,WAA1F;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2J,sBAAhC,EAAJ,EAA8D;AAC1D,qBAAK3R,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgC2xB,sBAAhC,EAAJ,EAA8D;AAC1D,qBAAK35B,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBAnFQuwB,mB,EAAmB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,yJ,EAAA,0K,EAAA,gJ;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFhB;;;;;;;;;;;;;;;;;AChBhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAaanY,e;;;;;;;;;;;;;;;;;;;ACbb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYwY,gCAAZ;;AAAA,iBAAYA,gCAAZ,EAA4C;AACxC;AACA;AACA;AACA;AACA;AACA;AACH,OAPD,EAAYA,gCAAgC,KAAhCA,gCAAgC,MAA5C;;AASO,eAASC,mCAAT,GAA4C;AAEjD,eAAOD,gCAAP;AACD;;AAEM,eAASE,+CAAT,CAAyD95B,eAAzD,EAAyF;;;AAC5F,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAPD,MAQK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASqzB,0CAAT,CAAoD/yB,MAApD,EAAoEhH,eAApE,EAAoG;AACvG,YAAIiH,mBAAJ;AACA6yB,uDAA+C,CAAC95B,eAAD,CAA/C,CAAiEkH,OAAjE,CAAyE,UAAAC,CAAC,EAAI;AAC1E,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;ACzDD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASamZ,e;;;;;;;;;;;;;;;;;;;ACRb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMa4Z,e;AAEX,iCAAoBh6B,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AACnB;;;;iBAED,qBAAYi6B,MAAZ,EAA4B;AAC1B,oBAAoBA,MAApB;AACE,mBAAK,8EAAWC,OAAhB;AACE;AACE,yBAAO,WAAP;AACD;;AACH,mBAAK,8EAAW7qB,IAAhB;AACE;AACE,yBAAO,SAAP;AACD;;AACH,mBAAK,8EAAW8qB,QAAhB;AACE;AACE,yBAAO,OAAP;AACD;;AACH,mBAAK,8EAAWnT,WAAhB;AACE;AACE,yBAAO,MAAP;AACD;;AACH,mBAAK,8EAAWoS,OAAhB;AACE;AACE,yBAAO,SAAP;AACD;;AACH,mBAAK,8EAAWjqB,OAAhB;AACE;AACE,yBAAO,OAAP;AACD;;AACH,mBAAK,8EAAWirB,KAAhB;AACE;AACE,yBAAO,OAAP;AACD;;AACH,mBAAK,8EAAWC,IAAhB;AACE;AACE,yBAAO,aAAP;AACD;;AACH,mBAAK,8EAAWnT,eAAhB;AACE;AACE,yBAAO,MAAP;AACD;;AACH,mBAAK,8EAAWC,cAAhB;AACE;AACE,yBAAO,SAAP;AACD;;AACH,mBAAK,8EAAWmT,YAAhB;AACE;AACE,yBAAO,OAAP;AACD;;AACH,mBAAK,8EAAW7qB,OAAhB;AACE;AACE,yBAAO,gBAAP;AACD;;AACH,mBAAK,8EAAWE,QAAhB;AACE;AACE,yBAAO,cAAP;AACD;;AACH,mBAAK,8EAAW+X,YAAhB;AACE;AACE,yBAAO,aAAP;AACD;;AACH,mBAAK,8EAAWC,UAAhB;AACE;AACE,yBAAO,QAAP;AACD;;AACH,mBAAK,8EAAWpY,YAAhB;AACE;AACE,yBAAO,eAAP;AACD;;AACH,mBAAK,8EAAWM,aAAhB;AACE;AACE,yBAAO,MAAP;AACD;;AACH,mBAAK,8EAAWE,QAAhB;AACE;AACE,yBAAO,QAAP;AACD;;AACH,mBAAK,8EAAWE,IAAhB;AACE;AACE,yBAAO,MAAP;AACD;;AACH,mBAAK,8EAAWslB,YAAhB;AACE;AACE,yBAAO,QAAP;AACD;;AACH,mBAAK,8EAAWplB,MAAhB;AACE;AACE,yBAAO,UAAP;AACD;;AACH,mBAAK,8EAAWE,SAAhB;AACE;AACE,yBAAO,mBAAP;AACD;;AACH,mBAAK,8EAAWkqB,GAAhB;AACE;AACE,yBAAO,eAAP;AACD;;AACH,mBAAK,8EAAWlS,QAAhB;AACE;AACE,yBAAO,MAAP;AACD;;AACH,mBAAK,8EAAWmS,oBAAhB;AACE;AACE,yBAAO,SAAP;AACD;;AACH;AACE;AACE,yBAAO,MAAP;AACD;AAxGL;AA0GD;;;;;;;yBAhHUR,e,EAAe,0I;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASE,eAASS,cAAT,CAA2BvW,KAA3B,EAA8C;AAC5C,eAAOA,KAAK,CAACkO,IAAN,KAAe,mEAAc8F,QAApC;AACD;;AAED,eAASwC,mBAAT,CACExW,KADF,EAC2B;AAEzB,eACEA,KAAK,CAACkO,IAAN,KAAe,mEAAcuI,gBAA7B,IACAzW,KAAK,CAACkO,IAAN,KAAe,mEAAcyF,cAF/B;AAID;;AAQM,eAAS+C,QAAT,CACLC,KADK,EACoB;AAEzB,eAAO,UAACC,MAAD;AAAA,iBACLA,MAAM,CAAC1xB,IAAP,CACE,4DACE,UAACwxB,QAAD,EAAqB1W,KAArB,EAAyC;AACvC,gBAAIwW,mBAAmB,CAACxW,KAAD,CAAvB,EAAgC;AAC9B,qBAAO;AACL4T,wBAAQ,EAAE5T,KAAK,CAAC+T,KAAN,GACNnb,IAAI,CAACib,KAAL,CAAY,MAAM7T,KAAK,CAAC8T,MAAb,GAAuB9T,KAAK,CAAC+T,KAAxC,CADM,GAEN2C,QAAQ,CAAC9C,QAHR;AAILiD,qBAAK,EAAE,aAJF;AAKLC,uBAAO,EAAE;AALJ,eAAP;AAOD;;AACD,gBAAIP,cAAc,CAACvW,KAAD,CAAlB,EAA2B;AACzB,kBAAI2W,KAAJ,EAAW;AACTA,qBAAK,CAAC3W,KAAK,CAACmU,IAAP,CAAL;AACD;;AACD,qBAAO;AACLP,wBAAQ,EAAE,GADL;AAELiD,qBAAK,EAAE,MAFF;AAGLC,uBAAO,EAAE9W,KAAK,CAACmU;AAHV,eAAP;AAKD;;AACD,mBAAOuC,QAAP;AACD,WAtBH,EAuBE;AAAEG,iBAAK,EAAE,SAAT;AAAoBjD,oBAAQ,EAAE,CAA9B;AAAiCkD,mBAAO,EAAE;AAA1C,WAvBF,CADF,EA0BE,4EAAqB,UAACp0B,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,CAACm0B,KAAF,KAAYl0B,CAAC,CAACk0B,KAAd,IAC1Bn0B,CAAC,CAACkxB,QAAF,KAAejxB,CAAC,CAACixB,QADS,IAE1BlxB,CAAC,CAACo0B,OAAF,KAAcn0B,CAAC,CAACm0B,OAFA;AAAA,WAArB,CA1BF,CADK;AAAA,SAAP;AAgCD;;;;;;;;;;;;;;;;;AC7DH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoBaC,gB;AAMX,kCAAoBnzB,UAApB,EACU9H,eADV,EAEUC,gBAFV,EAGUC,kBAHV,EAIUgL,qBAJV,EAKUC,0BALV,EAMU7D,UANV,EAOUU,0BAPV,EAQUoD,cARV,EAQ0C;AAAA;;;;AARtB,eAAAtD,UAAA,GAAAA,UAAA;AACV,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgL,qBAAA,GAAAA,qBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AACA,eAAA7D,UAAA,GAAAA,UAAA;AACA,eAAAU,0BAAA,GAAAA,0BAAA;AACA,eAAAoD,cAAA,GAAAA,cAAA;AAVV,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAWC;;;;iBAED,qBAAYuI,QAAZ,EAA8BnD,OAA9B,EAAgD;;;AAC9C,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE0gB,SAAjD,EAA4D;AAC1D,mBAAK0Z,aAAL;AACD,aAFD,MAGK;AACH,mBAAK/yB,GAAL,GAAW,KAAKgzB,YAAL,GAAoBxyB,SAApB,EAAX;AACD;AACF;;;iBAEO,wBAAe;AAAA;;AACrB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/C4Y,uBAAS,EAAE;AADoC,aAAjD;AAGA,iBAAKxhB,eAAL,CAAqB6I,cAArB,CAA8C;AAC5CC,oBAAM,YAAK,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAL,gBAAoE,sFAApE,CADsC;AAE5Ce,qBAAO,EAAE;AAFmC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,gCAAuI,KAAKwI,QAA5I,OAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAA+BF,GAA/B,EAAoCG,IAApC,CACL,2DAAI,UAACC,CAAD,EAAY;AACd,qBAAI,CAAC+xB,eAAL,CAAqB/xB,CAArB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB,CAChB;AACD;AACF,aAND,CADK,EAQL,kEAAW,UAAAf,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAClC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACD,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARK,CAAP;AAaD;;;iBAEO,yBAAgB;;;AACtB,iBAAKi0B,eAAL,CAAqB,CAAD,WAAC,KAAKn7B,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI0gB,SAAnE;AACAjY,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI0gB,SAA5D;;AACA,gBAAI,KAAKtZ,OAAT,EAAkB,CAChB;AACD;AACF;;;iBAEO,yBAAgBmB,CAAhB,EAA8B;;;AACpC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/C4Y,uBAAS,EAAEnY;AADoC,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAE0gB,SAA7C,MAAsD,IAAtD,IAAsD,aAAtD,GAAsD,MAAtD,GAAsD,GAAE7V,WAAvF;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AAChB,kBAAI,KAAKF,0BAAL,CAAgCqzB,mBAAhC,EAAJ,EAA2D;AACzD,qBAAKr7B,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACD;AACF,aAJD,MAKK;AACH,mBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,sBAAM,EAAE,EAAV;AAAcE,uBAAO,EAAE;AAAvB,eAA9C;AACD;;AAED,gBAAI,KAAKhJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC5D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0T,kBAA1C,IAAgE,sGAAuBC,UAA3F,EAAuG;AACrG,qBAAKnN,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C0gB,SAA5C,CAAsD8Z,wBAD3D,GAEK,CAAC,KAAKr7B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C0gB,SAA5C,CAAsD7V,WAAvD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0T,kBAA1C,IAAgE,sGAAuB+mB,aAA3F,EAA0G;AACxG,qBAAKj0B,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C0gB,SAA5C,CAAsD8Z,wBAD3D,GAEK,CAAC,KAAKr7B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C0gB,SAA5C,CAAsD7V,WAAvD,CAFL;AAID;AACF;AACF;;;;;;;yBAjGUsvB,gB,EAAgB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,gK,EAAA,0K,EAAA,oI,EAAA,0K,EAAA,gJ;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;;;;;;;;;;;;;AClBd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACFA;;;;;;AAGA;;;;;;AACA;;;;UDUaO,Y;AAGX,8BACSv7B,gBADT,EAESD,eAFT,EAGSg5B,qBAHT,EAISC,sBAJT,EAIyD;AAAA;;AAHhD,eAAAh5B,gBAAA,GAAAA,gBAAA;AACA,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAAg5B,qBAAA,GAAAA,qBAAA;AACA,eAAAC,sBAAA,GAAAA,sBAAA;AANT,eAAAwC,gBAAA,GAAmB,sGAAnB;AAOC;;;;iBAED,oBAAW;AACT,iBAAKxC,sBAAL,CAA4ByC,iBAA5B;AACA,iBAAK1C,qBAAL,CAA2B2C,gBAA3B,CAA4C,KAA5C;AACD;;;iBAED,uBAAc,CACb;;;;;;;yBAhBUH,Y,EAAY,qJ,EAAA,mJ,EAAA,wK,EAAA,0K;AAAA,O;;;cAAZA,Y;AAAY,iC;AAAA,gB;AAAA,e;AAAA,6B;AAAA;AAAA;ACdzB;;;;AAGA;;;;AACA;;;;;;;;;AAJO;;AAGS;;AAAA;;AACC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACJjB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASa/a,wB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTb;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSmb,qB;AAIX,uCAAmB57B,eAAnB,EACSE,kBADT,EAEUsO,mBAFV,EAEoD;AAAA;;AAFjC,eAAAxO,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAsO,mBAAA,GAAAA,mBAAA;AAA6C;;;;iBAEvD,oBAAQ;AACN,iBAAKA,mBAAL,CAAyBoB,cAAzB,CAAwC,KAAK5P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbU66B,qB,EAAqB,mJ,EAAA,yJ,EAAA,oK;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,yJ;AAAA;AAAA;ADblC;;;;AAGA;;;;AAIA;;AAAoC;;AAA+B;;;;AAP5D;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEMdC,kC;AACT,oDAAoBzH,sBAApB,EACY7sB,iBADZ,EACkD;AAAA;;AAD9B,eAAA6sB,sBAAA,GAAAA,sBAAA;AACR,eAAA7sB,iBAAA,GAAAA,iBAAA;AACX;;;;iBAED,+CAAsC8sB,GAAtC,EAA4D;AACxD,gBAAI,CAACA,GAAD,IAAQA,GAAG,CAAC7rB,MAAJ,IAAc,CAA1B,EAA6B,OAAO6rB,GAAP;AAE7B,gBAAIyH,qBAAqB,GAAsB,EAA/C;AACA,gBAAIvH,IAAI,GAA2B,EAAnC;AACA,gBAAIC,QAAQ,GAA2B,EAAvC;;AAEA,iBAAK,IAAI9mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2mB,GAAG,CAAC7rB,MAAxB,EAAgCkF,CAAC,EAAjC,EAAqC;AACjC8mB,sBAAQ,CAAChuB,IAAT,CAAoC;AAChC6E,wBAAQ,EAAEgpB,GAAG,CAAC3mB,CAAD,CAAH,CAAOquB,UAAP,CAAkBC,YADI;AAEhC5N,sBAAM,EAAG,UAAI,KAAK7mB,iBAAL,CAAuB00B,gCAAvB,CAAwD5H,GAAG,CAAC3mB,CAAD,CAAH,CAAOquB,UAA/D,CAAJ,EAAiFpH,WAAjF;AAFuB,eAApC;AAIH;;AAEDJ,gBAAI,GAAGC,QAAQ,CAAC7tB,IAAT,CAAc,KAAKytB,sBAAL,CAA4BQ,eAA5B,CAA4C,QAA5C,CAAd,CAAP;;AAEA,iBAAK,IAAIlnB,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG8mB,QAAQ,CAAChsB,MAA7B,EAAqCkF,GAAC,EAAtC,EAA0C;AACtC,mBAAK,IAAImnB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAAC7rB,MAAxB,EAAgCqsB,CAAC,EAAjC,EAAqC;AACjC,oBAAIN,IAAI,CAAC7mB,GAAD,CAAJ,CAAQrC,QAAR,IAAoBgpB,GAAG,CAACQ,CAAD,CAAH,CAAOkH,UAAP,CAAkBC,YAA1C,EAAwD;AACpDF,uCAAqB,CAACt1B,IAAtB,CAA2B6tB,GAAG,CAACQ,CAAD,CAA9B;AACA;AACH;AACJ;AACJ;;AAED,mBAAOiH,qBAAP;AACH;;;;;;;yBA/BQD,kC,EAAkC,iK,EAAA,8H;AAAA,O;;;eAAlCA,kC;AAAkC,iBAAlCA,kCAAkC,K;AAAA,oBAF/B;;;;;;;;;;;;;;;;;ACNhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDA;;AACI;;AACJ;;;;;;;;AAYY;;AACI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAAK,eAAA,sCAAT;AAA0D,WAA1D;;AAEJ;;AAAM;;AAAyB;;AAAO;;AACtC;;AAAM;;AAAgE;;AAAO;;AAC7E;;AAAM;;AAAwB;;AAClC;;AACJ;;;;;;;;AALQ;;AAAA;;AACM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AAuCN;;AACI;;AAEA;;AAAM;;AAAa;;AACvB;;;;;;;;;;;AAH4B;;AAAA,kJAAyC,UAAzC,EAAyC,gBAAzC;;AAElB;;AAAA;;;;;;AA2CN;;AAA+B;;AAAI;;;;;;AAG/B;;AAA+B;;AAAG;;;;;;AADtC;;AAA6E;;AACzE;;AACA;;;;AACJ;;;;;;;;;;;;;;AAFW;;AAAA;;AACP;;AAAA;;;;;;AAGA;;AAA+B;;AAAG;;;;;;AADtC;;AAA4E;;AACxE;;AACA;;AACI;;;;AACJ;;AACJ;;;;;;;;;;;;;;;;AAJW;;AAAA;;AACD;;AAAA;;AACF;;AAAA;;;;;;AAIJ;;AAA+B;;AAAK;;;;;;AADxC;;AAA4E;;AACxE;;AACA;;AAEI;;;;AACJ;;AACJ;;;;;;;;;;;;;;AALW;;AAAA;;AAEH;;AAAA;;AACA;;AAAA;;;;;;AAIJ;;AAA+B;;AAAI;;;;;;AADvC;;AAAgF;;AAC5E;;AACA;;AAEI;;;;AAEJ;;AACJ;;;;;;;;;;;;;;AANW;;AAAA;;AAEH;;AAAA;;AACA;;AAAA;;;;;;AAKJ;;AAA+B;;AAAK;;;;;;AADxC;;AAA+E;;AAC3E;;AACA;;AAEI;;;;AAEJ;;AACJ;;;;;;;;;;;;;;AANW;;AAAA;;AAEH;;AAAA;;AACA;;AAAA;;;;;;AAKJ;;AAA+B;;AAAM;;;;;;AADzC;;AAAkF;;AAC9E;;AACA;;AAEI;;;;AAEJ;;AACJ;;;;;;;;;;;;;;AANW;;AAAA;;AAEH;;AAAA;;AACA;;AAAA;;;;;;AAKJ;;AAAgC;;AAAK;;;;;;AADzC;;AAAmF;;AAC/E;;AACA;;AAEI;;;;AAEJ;;AACJ;;;;;;;;;;;;;;AANW;;AAAA;;AAEH;;AAAA;;AACA;;AAAA;;;;;;AAnDhB;;AACI;;AAGI;;AACA;;AACA;;AAIA;;AAMA;;AAOA;;AAQA;;AAQA;;AAQA;;AAQJ;;AACJ;;;;;;;;;;;;;;;;;;;;;;AAtDQ;;AAAA;;AAEO;;AAAA;;AACP;;AAAA;;AACO;;AAAA;;AAIA;;AAAA;;AAMA;;AAAA;;AAOA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;;;;;AA3FnB;;AACI;;AACI;;AAKA;;AACI;;AAEA;;AAC6H;;AAAY;;AAC7I;;AACJ;;AACA;;AAAyB;;AAAwD;;AACjF;;AACI;;AAEJ;;AACA;;AAAyB;;AAAoD;;AAC7E;;AAAyB;;AAAoD;;AAC7E;;AAEI;;;;AACJ;;AACA;;AAEI;;;;AACJ;;AACA;;AAEI;;;;AACJ;;AACA;;AAEI;;;;AACJ;;AACA;;AAEI;;;;AACJ;;AACA;;AAEI;;AAAiF;;AACrF;;AAyDJ;;;;;;;;;;AAnGe;;AAAA;;AAMH;;AAAA;;AAGI;;AAAA;;AAGa;;AAAA;;AAErB;;AAAA;;AAGqB;;AAAA;;AACA;;AAAA;;AACrB;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AACkC;;AAAA;;;;;;AA7C9C;;AACI;;AAsGJ;;;;;;AAtGS;;AAAA;;;;;;AAuHL;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;;;AAFI;;AACA;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;;;AAFI;;AACA;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;;;AAFI;;AACA;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;;;AAFI;;AACA;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AAOJ;;AACI;;;;AACJ;;;;;;AADI;;AAAA;;;;;;AASJ;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AASJ;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAGR;;AACI;;AACI;;AAAI;;AACE;;AACV;;AACA;;AAEJ;;;;;;;;AALY;;AAAA;;AAGJ;;AAAA;;;;;;;;AAMI;;AACI;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAA50B,UAAA,iFAAT;AAA+D,WAA/D;;AAAiE;;AAAK;;;;;;AA0CtE;;AAA6E;;AACzE;;;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAEJ;;AAA4E;;AACxE;;;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAEJ;;AAA4E;;AACxE;;AAEI;;;;AACJ;;AACJ;;;;;;;;AAHQ;;AAAA;;AACA;;AAAA;;;;;;AAGR;;AAAgF;;AAC5E;;AAEI;;;;AAEJ;;AACJ;;;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;;;;;AAIR;;AAA+E;;AAC3E;;AAEI;;;;AAEJ;;AACJ;;;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;;;;;AAIR;;AAAkF;;AAC9E;;AAEI;;;;AAEJ;;AACJ;;;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;;;;;AAIR;;AAAmF;;AAC/E;;AAEI;;;;AAEJ;;AACJ;;;;;;;;AAJQ;;AAAA;;AACA;;AAAA;;;;;;AAzChB;;AACI;;AAGI;;AACA;;AAGA;;AAGA;;AAMA;;AAOA;;AAOA;;AAOA;;AAOJ;;AACJ;;;;;;;;;;;;;;;;;;AA5CQ;;AAAA;;AAEA;;AAAA;;AACO;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAMA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;AAOA;;AAAA;;;;;;AA9EnB;;AACI;;AACI;;AAGA;;AAEA;;AAC6H;;AAAY;;AAC7I;;AACA;;AAAyB;;AAAwD;;AACjF;;AACI;;AAEJ;;AACA;;AAAyB;;AAAoD;;AAC7E;;AAAyB;;AAAoD;;AAC7E;;AAEI;;;;AACJ;;AACA;;AAEI;;;;AACJ;;AACA;;AAEI;;;;AACJ;;AACA;;AAEI;;;;AACJ;;AACA;;AAEI;;;;AACJ;;AACA;;AAEI;;AAAiF;;AACrF;;AA+CJ;;;;;;;;;;AArFmB;;AAAA;;AAGX;;AAAA;;AAGI;;AAAA;;AAEiB;;AAAA;;AAErB;;AAAA;;AAGqB;;AAAA;;AACA;;AAAA;;AACrB;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AACkC;;AAAA;;;;;;AAzC9C;;AACI;;AAwFJ;;;;;;AAxFS;;AAAA;;;;UDxQJ60B,qB;AAWX,uCAAmBn8B,eAAnB,EACSC,gBADT,EAES8rB,cAFT,EAGS7rB,kBAHT,EAISI,+BAJT,EAKSiH,iBALT,EAMSD,UANT,EAOUlH,qBAPV,EAQS87B,eART,EAQ2C;AAAA;;AARxB,eAAAl8B,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAA8rB,cAAA,GAAAA,cAAA;AACA,eAAA7rB,kBAAA,GAAAA,kBAAA;AACA,eAAAI,+BAAA,GAAAA,+BAAA;AACA,eAAAiH,iBAAA,GAAAA,iBAAA;AACA,eAAAD,UAAA,GAAAA,UAAA;AACC,eAAAlH,qBAAA,GAAAA,qBAAA;AACD,eAAA87B,eAAA,GAAAA,eAAA;AAlBA,eAAA1vB,eAAA,GAAiC,EAAjC;AAEA,eAAA4vB,gBAAA,GAAmC,EAAnC;AACA,eAAAC,eAAA,GAAiC,EAAjC;AAET,eAAA70B,YAAA,GAAe,8FAAf;AACA,eAAA/G,UAAA,GAAa,0FAAb;AACA,eAAA+d,2BAAA,GAA8B,4HAA9B;AAW8C;;;;iBAE9C,oBAAQ;AACN,iBAAK+N,QAAL,GAAwB,KAAKvsB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAlE;AACA,iBAAKzC,qBAAL,CAA2Bie,oBAA3B;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBA3BU8d,qB,EAAqB,mJ,EAAA,qJ,EAAA,wJ,EAAA,yJ,EAAA,4L,EAAA,+J,EAAA,6I,EAAA,yK,EAAA,2J;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,kB;AAAA,gB;AAAA,uxB;AAAA;AAAA;ACxBlC;;;;AAIA;;AAKA;;AACI;;AACI;;AACI;;AAEA;;AAQJ;;AACJ;;AACA;;AACI;;AACI;;AAAqC;;AAC8D;;AACnG;;AAAqC;;AACiE;;AACtG;;AAAqC;;AACgE;;AACrG;;AAAqC;;AAC+D;;AACpG;;AAAqC;;AAC+D;;AACpG;;AAAqC;;AAC+D;;AACpG;;AAAqC;;AACgE;;AACrG;;AAAqC;;AAC6D;;AAClG;;AAAqC;;AAErC;;AACA;;AAAqC;;AAErC;;AACA;;AAAqC;;AAAM;;AAC3C;;AACI;;AAEJ;;AACJ;;AAEA;;AAwGA;;AACI;;AAAqC;;AAAM;;AAC3C;;AAAgB;;AAER;;AACZ;;AACA;;AACI;;AAEJ;;AACA;;AACI;;AACI;;AAAQ;;AAED;;AACX;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAU;;AACtB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAW;;AACvB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAW;;AACvB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAW;;AACvB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAI;;AAChB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAI;;AAChB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAI;;AAChB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAI;;AAChB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAI;;AAChB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAAK;;AACjB;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAEF;;AACV;;AACA;;AAGJ;;AACA;;AACI;;AACI;;AAAQ;;AAEF;;AACV;;AACA;;AAGJ;;AACA;;AAQA;;AA0FJ;;AACJ;;;;;;;;;;;;;;;;;;;;;;AA1XO;;AAIe;;AAAA,0KAAkD,iBAAlD,EAAkD,yJAAlD,EAAkD,kBAAlD,EAAkD,iJAAlD,EAAkD,iBAAlD,EAAkD,gJAAlD;;AAUuC;;AAAA;;AAYZ;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAEA;;AAAA;;AAGA;;AAAA;;AAIE;;AAAA;;AACR;;AAAA;;AAKI;;AAAA;;AA0GnB;;AAAA;;AAUJ;;AAAA;;AAIkC;;AAAA;;AAQoD;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQpD;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAQA;;AAAA;;AAMlC;;AAAA;;AAIkC;;AAAA;;AAMlC;;AAAA;;AAI+C;;AAAA;;AAI1D;;AAAA;;AAQkC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC7R/C;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAKaG,kB;AAIX,sCAAc;AAAA;;AAFd,eAAA90B,YAAA,GAAe,uFAAf;AAGC;;;;eAED,eAAe;AACb,mBAAO;AACL+0B,0BAAY,EAAE,CAAC,MAAD,EAAS,MAAT,CADT;AAELC,6BAAe,EAAE,CAAC,SAAD,EAAY,cAAZ,CAFZ;AAGLC,4BAAc,EAAE,CAAC,QAAD,EAAW,SAAX,CAHX;AAILC,2BAAa,EAAE,CAAC,QAAD,EAAW,QAAX,CAJV;AAKLC,2BAAa,EAAE,CAAC,QAAD,EAAW,QAAX,CALV;AAMLC,2BAAa,EAAE,CAAC,WAAD,EAAc,cAAd,CANV;AAOLC,4BAAc,EAAE,CAAC,QAAD,EAAW,UAAX,CAPX;AAQLC,yBAAW,EAAE,CAAC,KAAD,EAAQ,KAAR,CARR;AASLC,+BAAiB,EAAE,CAAC,QAAD,EAAW,QAAX,CATd;AAULC,gCAAkB,EAAE,CAAC,SAAD,EAAY,SAAZ,CAVf;AAWLC,mCAAqB,EAAE,CAAC,eAAD,EAAkB,eAAlB,CAXlB;AAYLC,4BAAc,EAAE,CAAC,SAAD,EAAY,SAAZ,CAZX;AAaLC,+BAAiB,EAAE,CAAC,YAAD,EAAe,gBAAf,CAbd;AAcLC,6BAAe,EAAE,CAAC,UAAD,EAAa,cAAb,CAdZ;AAeLC,8BAAgB,EAAE,CAAC,UAAD,EAAa,SAAb,CAfb;AAiBLC,8CAAgC,EAAE,CAAC,yBAAD,EAA4B,4BAA5B,CAjB7B;AAkBLC,4CAA8B,EAAE,CAAC,iBAAD,EAAoB,iBAApB,CAlB3B;AAmBLC,yCAA2B,EAAE,CAAC,gBAAD,EAAmB,gBAAnB,CAnBxB;AAoBLC,oCAAsB,EAAE,CAAC,KAAD,EAAQ,KAAR,CApBnB;AAqBLC,6CAA+B,EAAE,CAAC,gBAAD,EAAmB,qBAAnB,CArB5B;AAsBLC,uCAAyB,EAAE,CAAC,QAAD,EAAW,SAAX,CAtBtB;AAuBLC,2CAA6B,EAAE,CAAC,QAAD,EAAW,QAAX,CAvB1B;AAwBLC,4CAA8B,EAAE,CAAC,SAAD,EAAY,SAAZ,CAxB3B;AA0BLC,4CAA8B,EAAE,CAAC,kBAAD,EAAqB,qBAArB,CA1B3B;AA2BLC,kCAAoB,EAAE,CAAC,OAAD,EAAU,OAAV,CA3BjB;AA4BLC,gCAAkB,EAAE,CAAC,KAAD,EAAQ,KAAR,CA5Bf;AA6BLC,iCAAmB,EAAE,CAAC,MAAD,EAAS,UAAT,CA7BhB;AA8BLC,wCAA0B,EAAE,CAAC,aAAD,EAAgB,QAAhB,CA9BvB;AA+BLC,sCAAwB,EAAE,CAAC,YAAD,EAAe,eAAf,CA/BrB;AAgCLC,oCAAsB,EAAE,CAAC,UAAD,EAAa,aAAb,CAhCnB;AAiCLC,gCAAkB,EAAE,CAAC,KAAD,EAAQ,KAAR,CAjCf;AAkCLC,yCAA2B,EAAE,CAAC,2CAAD,EAA8C,yDAA9C,CAlCxB;AAmCLC,gDAAkC,EAAE,CAAC,kDAAD,EAAqD,2EAArD,CAnC/B;AAoCLC,0CAA4B,EAAE,CAAC,gBAAD,EAAmB,eAAnB,CApCzB;AAqCLC,0CAA4B,EAAE,CAAC,gBAAD,EAAmB,iBAAnB,CArCzB;AAsCLC,gCAAkB,EAAE,CAAC,KAAD,EAAQ,KAAR,CAtCf;AAuCLC,gCAAkB,EAAE,CAAC,KAAD,EAAQ,OAAR,CAvCf;AAyCLC,6BAAe,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CAzCZ;AA0CLC,yBAAW,EAAE,CAAC,SAAD,EAAY,UAAZ,CA1CR;AA2CLC,2BAAa,EAAE,CAAC,YAAD,EAAe,kBAAf,CA3CV;AA4CLC,uBAAS,EAAE,CAAC,OAAD,EAAU,UAAV,CA5CN;AA8CLC,6BAAe,EAAE,CAAC,mBAAD,EAAsB,oBAAtB,CA9CZ;AAgDLC,kCAAoB,EAAE,CAAC,gBAAD,EAAmB,mBAAnB,CAhDjB;AAiDLC,8BAAgB,EAAE,CAAC,WAAD,EAAc,WAAd,CAjDb;AAkDLC,8BAAgB,EAAE,CAAC,YAAD,EAAe,kBAAf,CAlDb;AAmDLC,0BAAY,EAAE,CAAC,OAAD,EAAU,UAAV,CAnDT;AAoDLC,8CAAgC,EAAE,CAAC,+BAAD,EAAkC,4CAAlC,CApD7B;AAqDLC,qCAAuB,EAAE,CAAC,oBAAD,EAAuB,6BAAvB,CArDpB;AAsDLC,8CAAgC,EAAE,CAAC,8BAAD,EAAiC,6CAAjC,CAtD7B;AAuDLC,0CAA4B,EAAE,CAAC,yBAAD,EAA4B,qCAA5B,CAvDzB;AAwDLC,uCAAyB,EAAE,CAAC,sBAAD,EAAyB,2BAAzB,CAxDtB;AAyDLC,mCAAqB,EAAE,CAAC,iBAAD,EAAoB,mBAApB,CAzDlB;AA2DLt8B,yBAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,CA3DR;AA4DLE,0BAAY,EAAE,CAAC,UAAD,EAAa,SAAb,CA5DT;AA6DLE,uBAAS,EAAE,CAAC,OAAD,EAAU,MAAV,CA7DN;AA8DLE,uBAAS,EAAE,CAAC,OAAD,EAAU,OAAV,CA9DN;AA+DLE,qBAAO,EAAE,CAAC,KAAD,EAAQ,KAAR,CA/DJ;AAgELE,sBAAQ,EAAE,CAAC,MAAD,EAAS,MAAT,CAhEL;AAiELE,sBAAQ,EAAE,CAAC,MAAD,EAAS,SAAT,CAjEL;AAkELE,wBAAU,EAAE,CAAC,QAAD,EAAW,MAAX,CAlEP;AAmELE,2BAAa,EAAE,CAAC,WAAD,EAAc,WAAd,CAnEV;AAoELE,yBAAW,EAAE,CAAC,SAAD,EAAY,SAAZ,CApER;AAqELE,0BAAY,EAAE,CAAC,UAAD,EAAa,UAAb,CArET;AAsELE,0BAAY,EAAE,CAAC,UAAD,EAAa,UAAb,CAtET;AAwELvB,gCAAkB,EAAE,CAAC,KAAD,EAAQ,KAAR,CAxEf;AAyELE,iCAAmB,EAAE,CAAC,KAAD,EAAQ,KAAR,CAzEhB;AA0ELE,8BAAgB,EAAE,CAAC,KAAD,EAAQ,KAAR,CA1Eb;AA2ELE,8BAAgB,EAAE,CAAC,KAAD,EAAQ,KAAR,CA3Eb;AA4ELE,4BAAc,EAAE,CAAC,KAAD,EAAQ,KAAR,CA5EX;AA6ELE,6BAAe,EAAE,CAAC,KAAD,EAAQ,MAAR,CA7EZ;AA8ELE,6BAAe,EAAE,CAAC,KAAD,EAAQ,KAAR,CA9EZ;AA+ELE,+BAAiB,EAAE,CAAC,KAAD,EAAQ,MAAR,CA/Ed;AAgFLE,kCAAoB,EAAE,CAAC,KAAD,EAAQ,KAAR,CAhFjB;AAiFLE,gCAAkB,EAAE,CAAC,KAAD,EAAQ,KAAR,CAjFf;AAkFLE,iCAAmB,EAAE,CAAC,KAAD,EAAQ,KAAR,CAlFhB;AAmFLE,iCAAmB,EAAE,CAAC,KAAD,EAAQ,KAAR,CAnFhB;AAqFLk7B,8BAAgB,EAAE,CAAC,gBAAD,EAAmB,mBAAnB,CArFb;AAsFLC,sCAAwB,EAAE,CAAC,6BAAD,EAAgC,0CAAhC,CAtFrB;AAuFLC,uCAAyB,EAAE,CAAC,qFAAD,EAAwF,6GAAxF,CAvFtB;AAwFLC,6DAA+C,EAAE,CAAC,qDAAD,EAAwD,4DAAxD,CAxF5C;AAyFLC,kEAAoD,EAAE,CAAC,2DAAD,EAA8D,mFAA9D,CAzFjD;AA0FLC,uCAAyB,EAAE,CAAC,mDAAD,EAAsD,qEAAtD,CA1FtB;AA2FLC,+DAAiD,EAAE,CAAC,2DAAD,EAA8D,mEAA9D,CA3F9C;AA4FLC,4DAA8C,EAAE,CAAC,kDAAD,EAAqD,wDAArD,CA5F3C;AA6FLC,wCAA0B,EAAE,CAAC,4BAAD,EAA+B,+BAA/B,CA7FvB;AA8FLC,8BAAgB,EAAE,CAAC,iBAAD,EAAoB,iBAApB,CA9Fb;AAgGLC,gBAAE,EAAE,CAAC,IAAD,EAAO,IAAP,CAhGC;AAkGLt3B,qBAAO,EAAE,CAAC,SAAD,EAAY,gBAAZ,CAlGJ;AAoGL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEAu3B,sCAAwB,EAAE,CAAC,eAAD,EAAkB,kBAAlB,CAxIrB;AAyILC,kCAAoB,EAAE,CAAC,UAAD,EAAa,UAAb,CAzIjB;AA0ILC,mCAAqB,EAAE,CAAC,YAAD,EAAe,kBAAf,CA1IlB;AA2ILC,+BAAiB,EAAE,CAAC,OAAD,EAAU,UAAV,CA3Id;AA4ILC,6CAA+B,EAAE,CAAC,sBAAD,EAAyB,yBAAzB,CA5I5B;AA6ILC,yCAA2B,EAAE,CAAC,iBAAD,EAAoB,iBAApB,CA7IxB;AA8ILC,2CAA6B,EAAE,CAAC,oBAAD,EAAuB,+BAAvB,CA9I1B;AA+ILC,uCAAyB,EAAE,CAAC,gBAAD,EAAmB,mBAAnB,CA/ItB;AAiJLC,+BAAiB,EAAE,CAAC,YAAD,EAAe,eAAf,CAjJd;AAkJLC,2BAAa,EAAE,CAAC,OAAD,EAAU,SAAV,CAlJV;AAmJLC,wCAA0B,EAAE,CAAC,qBAAD,EAAwB,uBAAxB,CAnJvB;AAoJLC,oCAAsB,EAAE,CAAC,gBAAD,EAAmB,eAAnB,CApJnB;AAqJLC,+BAAiB,EAAE,CAAC,YAAD,EAAe,kBAAf,CArJd;AAsJLC,2BAAa,EAAE,CAAC,OAAD,EAAU,UAAV,CAtJV;AAuJLC,kCAAoB,EAAE,CAAC,gBAAD,EAAmB,0BAAnB,CAvJjB;AAwJLC,8BAAgB,EAAE,CAAC,WAAD,EAAc,kBAAd,CAxJb;AAyJLC,sCAAwB,EAAE,CAAC,oBAAD,EAAuB,iCAAvB,CAzJrB;AA0JLC,kCAAoB,EAAE,CAAC,eAAD,EAAkB,yBAAlB,CA1JjB;AA2JLC,uCAAyB,EAAE,CAAC,qBAAD,EAAwB,8BAAxB,CA3JtB;AA4JLC,mCAAqB,EAAE,CAAC,gBAAD,EAAmB,sBAAnB,CA5JlB;AA8JLC,+BAAiB,EAAE,CAAC,gBAAD,EAAmB,cAAnB,CA9Jd;AA+JLC,2BAAa,EAAE,CAAC,WAAD,EAAc,MAAd,CA/JV;AAgKLC,2BAAa,EAAE,CAAC,YAAD,EAAe,kBAAf,CAhKV;AAiKLC,uBAAS,EAAE,CAAC,OAAD,EAAU,UAAV,CAjKN;AAkKLC,uCAAyB,EAAE,CAAC,2BAAD,EAA8B,yCAA9B,CAlKtB;AAmKLC,8BAAgB,EAAE,CAAC,gBAAD,EAAmB,qBAAnB,CAnKb;AAqKLC,oBAAM,EAAE,CAAC,QAAD,EAAW,YAAX,CArKH;AAuKLC,0BAAY,EAAE,CAAC,QAAD,EAAW,YAAX,CAvKT;AAyKL5V,kCAAoB,EAAE,CAAC,gBAAD,EAAmB,mBAAnB,CAzKjB;AA0KL6V,kCAAoB,EAAE,CAAC,mBAAD,EAAsB,2BAAtB,CA1KjB;AA2KLC,kCAAoB,EAAE,CAAC,mBAAD,EAAsB,2BAAtB,CA3KjB;AA4KLC,6BAAe,EAAE,CAAC,aAAD,EAAgB,6BAAhB,CA5KZ;AA6KLC,0BAAY,EAAE,CAAC,UAAD,EAAa,eAAb,CA7KT;AA8KLC,4BAAc,EAAE,CAAC,YAAD,EAAe,yBAAf,CA9KX;AA+KLC,6BAAe,EAAE,CAAC,aAAD,EAAgB,iBAAhB,CA/KZ;AAiLLC,oCAAsB,EAAE,CAAC,cAAD,EAAiB,iBAAjB,CAjLnB;AAkLLC,0CAA4B,EAAE,CAAC,qBAAD,EAAwB,wBAAxB,CAlLzB;AAmLLC,iCAAmB,EAAE,CAAC,UAAD,EAAa,SAAb,CAnLhB;AAoLLC,oCAAsB,EAAE,CAAC,cAAD,EAAiB,iBAAjB,CApLnB;AAqLLC,gCAAkB,EAAE,CAAC,SAAD,EAAY,SAAZ,CArLf;AAsLLC,sCAAwB,EAAE,CAAC,iBAAD,EAAoB,qBAApB,CAtLrB;AAuLLC,kCAAoB,EAAE,CAAC,YAAD,EAAe,aAAf,CAvLjB;AAwLLC,uCAAyB,EAAE,CAAC,kBAAD,EAAqB,8BAArB,CAxLtB;AAyLLC,mCAAqB,EAAE,CAAC,aAAD,EAAgB,sBAAhB,CAzLlB;AA0LLC,iCAAmB,EAAE,CAAC,WAAD,EAAc,kBAAd,CA1LhB;AA2LLC,6BAAe,EAAE,CAAC,MAAD,EAAS,UAAT,CA3LZ;AA6LLC,kCAAoB,EAAE,CAAC,iBAAD,EAAoB,uBAApB,CA7LjB;AA8LLC,8BAAgB,EAAE,CAAC,YAAD,EAAe,eAAf,CA9Lb;AA+LLC,6BAAe,EAAE,CAAC,YAAD,EAAe,kBAAf,CA/LZ;AAgMLC,yBAAW,EAAE,CAAC,OAAD,EAAU,UAAV,CAhMR;AAiMLC,qCAAuB,EAAE,CAAC,qBAAD,EAAwB,wBAAxB,CAjMpB;AAkMLC,iCAAmB,EAAE,CAAC,gBAAD,EAAmB,gBAAnB,CAlMhB;AAoMLC,8BAAgB,EAAE,CAAC,oBAAD,EAAuB,iCAAvB,CApMb;AAsMLC,oCAAsB,EAAE,CAAC,iBAAD,EAAoB,qBAApB,CAtMnB;AAuMLC,gCAAkB,EAAE,CAAC,YAAD,EAAe,aAAf,CAvMf;AAwMLC,mCAAqB,EAAE,CAAC,eAAD,EAAkB,iBAAlB,CAxMlB;AAyMLC,+BAAiB,EAAE,CAAC,UAAD,EAAa,SAAb,CAzMd;AA0MLC,mCAAqB,EAAE,CAAC,gBAAD,EAAmB,wBAAnB,CA1MlB;AA2MLC,+BAAiB,EAAE,CAAC,WAAD,EAAc,gBAAd,CA3Md;AA4MLC,+CAAiC,EAAE,CAAC,6BAAD,EAAgC,wCAAhC,CA5M9B;AA6MLC,2CAA6B,EAAE,CAAC,wBAAD,EAA2B,+BAA3B,CA7M1B;AA8MLC,gCAAkB,EAAE,CAAC,YAAD,EAAe,kBAAf,CA9Mf;AA+MLC,4BAAc,EAAE,CAAC,OAAD,EAAU,UAAV,CA/MX;AAgNLC,yCAA2B,EAAE,CAAC,sBAAD,EAAyB,iCAAzB,CAhNxB;AAiNLC,qCAAuB,EAAE,CAAC,iBAAD,EAAoB,yBAApB,CAjNpB;AAkNLC,kCAAoB,EAAE,CAAC,eAAD,EAAkB,yBAAlB,CAlNjB;AAmNLC,8BAAgB,EAAE,CAAC,UAAD,EAAa,iBAAb,CAnNb;AAqNLC,wCAA0B,EAAE,CAAC,QAAD,EAAW,SAAX,CArNvB;AAsNLC,2CAA6B,EAAE,CAAC,WAAD,EAAc,cAAd,CAtN1B;AAuNLC,4CAA8B,EAAE,CAAC,aAAD,EAAgB,cAAhB,CAvN3B;AAwNLC,0CAA4B,EAAE,CAAC,WAAD,EAAc,aAAd,CAxNzB;AAyNLC,yCAA2B,EAAE,CAAC,UAAD,EAAa,UAAb,CAzNxB;AA0NLC,+CAAiC,EAAE,CAAC,uBAAD,EAA0B,6BAA1B,CA1N9B;AA4NLC,6CAA+B,EAAE,CAAC,UAAD,EAAa,UAAb,CA5N5B;AA6NLC,iDAAmC,EAAE,CAAC,cAAD,EAAiB,cAAjB,CA7NhC;AA8NLC,gDAAkC,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CA9N/B;AA+NLC,yCAA2B,EAAE,CAAC,MAAD,EAAS,MAAT,CA/NxB;AAgOLC,yCAA2B,EAAE,CAAC,MAAD,EAAS,QAAT,CAhOxB;AAiOLC,2CAA6B,EAAE,CAAC,QAAD,EAAW,SAAX,CAjO1B;AAkOLC,8CAAgC,EAAE,CAAC,WAAD,EAAc,cAAd,CAlO7B;AAmOLC,+CAAiC,EAAE,CAAC,aAAD,EAAgB,cAAhB,CAnO9B;AAoOLC,6CAA+B,EAAE,CAAC,WAAD,EAAc,aAAd,CApO5B;AAqOLC,4CAA8B,EAAE,CAAC,UAAD,EAAa,UAAb,CArO3B;AAsOLC,kDAAoC,EAAE,CAAC,uBAAD,EAA0B,6BAA1B,CAtOjC;AAuOLC,iDAAmC,EAAE,CAAC,eAAD,EAAkB,kBAAlB,CAvOhC;AAwOLC,6CAA+B,EAAE,CAAC,oBAAD,EAAuB,mBAAvB,CAxO5B;AAyOLC,+CAAiC,EAAE,CAAC,aAAD,EAAgB,kBAAhB,CAzO9B;AA2OLC,qDAAuC,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CA3OpC;AA4OLC,8CAAgC,EAAE,CAAC,MAAD,EAAS,MAAT,CA5O7B;AA6OLC,sDAAwC,EAAE,CAAC,eAAD,EAAkB,kBAAlB,CA7OrC;AA8OLC,kDAAoC,EAAE,CAAC,oBAAD,EAAuB,mBAAvB,CA9OjC;AA+OLC,oDAAsC,EAAE,CAAC,aAAD,EAAgB,kBAAhB,CA/OnC;AAiPLC,yDAA2C,EAAE,CAAC,gBAAD,EAAmB,gBAAnB,CAjPxC;AAkPLC,8CAAgC,EAAE,CAAC,KAAD,EAAQ,MAAR,CAlP7B;AAoPLC,sDAAwC,EAAE,CAAC,YAAD,EAAe,cAAf,CApPrC;AAqPLC,mDAAqC,EAAE,CAAC,SAAD,EAAY,cAAZ,CArPlC;AAsPLC,mDAAqC,EAAE,CAAC,SAAD,EAAY,qBAAZ,CAtPlC;AAuPLC,4DAA8C,EAAE,CAAC,mBAAD,EAAsB,0BAAtB,CAvP3C;AAwPLC,0DAA4C,EAAE,CAAC,kBAAD,EAAqB,6BAArB,CAxPzC;AAyPLC,0DAA4C,EAAE,CAAC,sCAAD,EAAyC,uDAAzC,CAzPzC;AA0PLC,qDAAuC,EAAE,CAAC,YAAD,EAAe,YAAf,CA1PpC;AA2PLC,qDAAuC,EAAE,CAAC,YAAD,EAAe,YAAf,CA3PpC;AA4PLC,yDAA2C,EAAE,CAAC,gBAAD,EAAmB,qBAAnB,CA5PxC;AA6PLC,kDAAoC,EAAE,CAAC,QAAD,EAAW,SAAX,CA7PjC;AA8PLC,+CAAiC,EAAE,CAAC,KAAD,EAAQ,KAAR,CA9P9B;AA+PLC,mEAAqD,EAAE,CAAC,mCAAD,EAAsC,gDAAtC,CA/PlD;AAgQLC,oEAAsD,EAAE,CAAC,oCAAD,EAAuC,iDAAvC,CAhQnD;AAmQLC,kDAAoC,EAAE,CAAC,cAAD,EAAiB,cAAjB,CAnQjC;AAoQLC,iDAAmC,EAAE,CAAC,cAAD,EAAiB,kBAAjB,CApQhC;AAqQLC,0CAA4B,EAAE,CAAC,MAAD,EAAS,MAAT,CArQzB;AAsQLC,0CAA4B,EAAE,CAAC,MAAD,EAAS,QAAT,CAtQzB;AAuQLC,4CAA8B,EAAE,CAAC,QAAD,EAAW,SAAX,CAvQ3B;AAwQLC,+CAAiC,EAAE,CAAC,WAAD,EAAc,cAAd,CAxQ9B;AAyQLC,gDAAkC,EAAE,CAAC,aAAD,EAAgB,cAAhB,CAzQ/B;AA0QLC,8CAAgC,EAAE,CAAC,WAAD,EAAc,aAAd,CA1Q7B;AA2QLC,6CAA+B,EAAE,CAAC,UAAD,EAAa,UAAb,CA3Q5B;AA4QLC,mDAAqC,EAAE,CAAC,uBAAD,EAA0B,6BAA1B,CA5QlC;AA6QLC,kDAAoC,EAAE,CAAC,eAAD,EAAkB,kBAAlB,CA7QjC;AA8QLC,8CAAgC,EAAE,CAAC,oBAAD,EAAuB,mBAAvB,CA9Q7B;AA+QLC,gDAAkC,EAAE,CAAC,aAAD,EAAgB,kBAAhB,CA/Q/B;AAiRLC,6CAA+B,EAAE,CAAC,WAAD,EAAc,cAAd,CAjR5B;AAkRLC,8CAAgC,EAAE,CAAC,aAAD,EAAgB,cAAhB,CAlR7B;AAmRLC,4CAA8B,EAAE,CAAC,WAAD,EAAc,aAAd,CAnR3B;AAoRLC,2CAA6B,EAAE,CAAC,UAAD,EAAa,UAAb,CApR1B;AAqRLC,iDAAmC,EAAE,CAAC,uBAAD,EAA0B,6BAA1B,CArRhC;AAsRLC,gDAAkC,EAAE,CAAC,eAAD,EAAkB,kBAAlB,CAtR/B;AAwRLC,iDAAmC,EAAE,CAAC,aAAD,EAAgB,cAAhB,CAxRhC;AAyRLC,+CAAiC,EAAE,CAAC,WAAD,EAAc,aAAd,CAzR9B;AA0RLC,8CAAgC,EAAE,CAAC,UAAD,EAAa,UAAb,CA1R7B;AA2RLC,oDAAsC,EAAE,CAAC,uBAAD,EAA0B,6BAA1B;AA3RnC,aAAP;AA+RD;;;;;;;yBAvSUhM,kB;AAAkB,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLd;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSiM,8B;AAIX,gDAAmBvoC,eAAnB,EACSE,kBADT,EAEUwO,wBAFV,EAE8D;AAAA;;AAF3C,eAAA1O,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAwO,wBAAA,GAAAA,wBAAA;AAAuD;;;;iBAEjE,oBAAQ;AACN,iBAAKA,wBAAL,CAA8BoB,mBAA9B,CAAkD,KAAK9P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5F,EAA6G,IAA7G;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbUwnC,8B,EAA8B,mJ,EAAA,yJ,EAAA,+K;AAAA,O;;;cAA9BA,8B;AAA8B,sD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,wJ;AAAA;AAAA;ADb3C;;;;AAGA;;;;AAIA;;AAAmC;;AAA0C;;;;AAPtE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEH3B;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSC,6B;AAIX,+CAAmBxoC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbU49B,6B,EAA6B,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAA7BA,6B;AAA6B,mD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,2J;AAAA;AAAA;ADd1C;;;;AAGA;;;;AAIA;;AAAsC;;AAAuC;;;;AAPtE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AED3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaC,qB;AAKT,uCAAoB3gC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYwoC,4BAJZ,EAKY1gC,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAwoC,4BAAA,GAAAA,4BAAA;AACA,eAAA1gC,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,0BAAiBoF,OAAjB,EAAmC;;;AAC/B,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,wBAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEwf,cAA7C,MAA2D,IAA3D,IAA2D,aAA3D,GAA2D,MAA3D,GAA2D,GAAEqoB,WAA7D,MAAwE,IAAxE,IAAwE,aAAxE,GAAwE,MAAxE,GAAwE,GAAEngC,MAA1E,IAAmF,CAAvF,EAA0F;AACxF,mBAAKogC,kBAAL;AACD,aAFD,MAGK;AACH,mBAAKzgC,GAAL,GAAW,KAAK0gC,iBAAL,GAAyBlgC,SAAzB,EAAX;AACD;AACF;;;iBAEK,6BAAoB;AAAA;;AACxB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE0X,4BAAc,EAAE;AAAlB,aAAjD;AACA,iBAAKtgB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,gGAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,gCAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAoCF,GAApC,EAAyCG,IAAzC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACy/B,oBAAL,CAA0Bz/B,CAA1B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAAC6gC,sBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA5hC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,kCAAyB;AAC7B,iBAAKuhC,4BAAL,CAAkCK,sBAAlC,CAAyD,KAAK7gC,OAA9D;AACH;;;iBAEO,8BAAqB;;;AACzB,iBAAK4gC,oBAAL,CAA0B,CAAD,WAAC,KAAK7oC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwf,cAAxE;AACA/W,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwf,cAA5D;;AACA,gBAAI,KAAKpY,OAAT,EAAkB;AACd,mBAAK6gC,sBAAL;AACH;AACJ;;;iBAEO,8BAAqB1/B,CAArB,EAAwC;AAC5C,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE0X,4BAAc,EAAEjX;AAAlB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCghC,wBAAhC,EAAJ,EAAgE;AAC5D,qBAAKhpC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQy/B,qB,EAAqB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,2K,EAAA,0K;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFlB;;;;;;;;;;;;;;;;;ACdhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAI;;AACI;;AAAM;;AAAmI;;AACzI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,4GAAiC,aAAjC,EAAiC,kBAAjC;;;;;;AAGpB;;AACI;;AAAM;;AAA4H;;AAClI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yHAA8C,aAA9C,EAA8C,kBAA9C;;;;;;AAGpB;;AACI;;AAAM;;AAAoI;;AAC1I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,6GAAkC,aAAlC,EAAkC,kBAAlC;;;;;;AAGpB;;AACI;;AAAM;;AAAgI;;AACtI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yGAA8B,aAA9B,EAA8B,kBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAAkI;;AACxI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,qHAA0C,aAA1C,EAA0C,kBAA1C;;;;UDVXQ,qC;AAIX,uDAAmBjpC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;eAED,eAAc;AACZ,mBAAO,6EAAP;AACD;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAhBU+oC,qC,EAAqC,mJ,EAAA,yJ;AAAA,O;;;cAArCA,qC;AAAqC,4D;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,2D;AAAA;AAAA;ACblD;;AACI;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AACJ;;;;AA1BW;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBX;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSC,6B;AAIX,+CAAmBlpC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUs+B,6B,EAA6B,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAA7BA,6B;AAA6B,mD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,8J;AAAA;AAAA;ADd1C;;;;AAGA;;;;AAIA;;AAAyC;;AAAuC;;;;AAPzE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASa5gC,iB;;;;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAY6gC,iBAAZ;;AAAA,iBAAYA,iBAAZ,EAA6B;AACzB;AACA;AACA;AACA;AACH,OALD,EAAYA,iBAAiB,KAAjBA,iBAAiB,MAA7B;;AAOO,eAASC,oBAAT,GAA6B;AAElC,eAAOD,iBAAP;AACD;;AAEM,eAASE,gCAAT,CAA0CrpC,eAA1C,EAA0E;;;AAC7E,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SALD,MAMK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAAS4iC,2BAAT,CAAqCtiC,MAArC,EAAqDhH,eAArD,EAAqF;AACxF,YAAIiH,mBAAJ;AACAoiC,wCAAgC,CAACrpC,eAAD,CAAhC,CAAkDkH,OAAlD,CAA0D,UAAAC,CAAC,EAAI;AAC3D,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AClDD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACUQ;;AAAkG;AAAA;;AAAA;;AAAA,mBAAS,OAAAK,UAAA,uBAAT;AAA0C,WAA1C;;AAC9F;;AAA+B;;AAAI;;AACnC;;AAAM;;AAAU;;AACpB;;;;;;AAEA;;AACI;;AACA;;AAAM;;AAAwD;;AAClE;;;;;;AADU;;AAAA;;;;UDJLiiC,gB;AAKX,kCAAmBvpC,eAAnB,EACS+rB,cADT,EAES9rB,gBAFT,EAGSqH,UAHT,EAGiC;AAAA;;AAHd,eAAAtH,eAAA,GAAAA,eAAA;AACV,eAAA+rB,cAAA,GAAAA,cAAA;AACA,eAAA9rB,gBAAA,GAAAA,gBAAA;AACA,eAAAqH,UAAA,GAAAA,UAAA;AALT,eAAAE,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAfU+hC,gB,EAAgB,mJ,EAAA,wJ,EAAA,qJ,EAAA,4I;AAAA,O;;;cAAhBA,gB;AAAgB,qC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,6a;AAAA;AAAA;ACd7B;;AACI;;AACI;;AAAgF;AAAA,qBAAS,IAAAxd,cAAA,4BAAT;AAA+C,aAA/C;;AAC5E;;AAAU;;AAAI;;AACd;;AAAM;;AAAU;;AACpB;;AACA;;AAAM;;AAAY;;AAClB;;AACI;;AACJ;;AACA;;AAAM;;AACN;;AAIA;;AAAM;;AAAY;;AAClB;;AAIJ;;AACJ;;;;AAnBgB;;AAAA;;AASgC;;AAAA;;AAKb;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACfnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAAkD,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAElD;;;;;;AACI;;;;;;AAGR;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AAAiC,gGAAqB,aAArB,EAAqB,qBAArB,EAAqB,gCAArB,EAAqB,sFAArB;;;;;;;;AA5BrC;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAA1kB,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAIA;;AAIA;;AAIJ;;;;;;;;AA/BqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIX;;AAAA;;AAIA;;AAAA;;AAI+B;;AAAA;;;;UDZ/CmiC,8B;AAOX,gDAAmBxpC,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSlH,qBAHT,EAISwK,iBAJT,EAI+C;AAAA;;AAJ5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAlH,qBAAA,GAAAA,qBAAA;AACA,eAAAwK,iBAAA,GAAAA,iBAAA;AAVA,eAAA4B,eAAA,GAAiC,EAAjC;AAEA,eAAAC,YAAA,GAAwB,KAAxB;AAET,eAAAjF,YAAA,GAAe,8FAAf;AAOC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAnBUgiC,8B,EAA8B,mJ,EAAA,yJ,EAAA,4I,EAAA,wK,EAAA,+J;AAAA,O;;;cAA9BA,8B;AAA8B,sD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,0b;AAAA;AAAA;AChB3C;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;ACAzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,qBAAZ;;AAAA,iBAAYA,qBAAZ,EAAiC;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAZD,EAAYA,qBAAqB,KAArBA,qBAAqB,MAAjC;;AAcO,eAASC,wBAAT,GAAiC;AAEtC,eAAOD,qBAAP;AACD;;AAEM,eAASE,oCAAT,CAA8C3pC,eAA9C,EAA8E;;;AACjF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH,SAZD,MAaK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASkjC,+BAAT,CAAyC5iC,MAAzC,EAAyDhH,eAAzD,EAAyF;AAC5F,YAAIiH,mBAAJ;AACA0iC,4CAAoC,CAAC3pC,eAAD,CAApC,CAAsDkH,OAAtD,CAA8D,UAAAC,CAAC,EAAI;AAC/D,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxED;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUS4iC,qB;AAIX,uCAAmB7pC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUi/B,qB,EAAqB,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,wJ;AAAA;AAAA;ADdlC;;;;AAGA;;;;AAIA;;AAAmC;;AAA+B;;;;AAP3D;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEC3B;;AAAmB;AAAA;;AAAA;;AAAA,mBAAS,OAAAviC,UAAA,qCAAT;AAAiD,WAAjD;;AAEf;;AAAU;;AAAK;;AACnB;;;;UCOawiC,mB;AAIX,qCAAmB9pC,eAAnB,EACSC,gBADT,EAES2K,iBAFT,EAGStD,UAHT,EAGiC;AAAA;;AAHd,eAAAtH,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAA2K,iBAAA,GAAAA,iBAAA;AACA,eAAAtD,UAAA,GAAAA,UAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAfUwiC,mB,EAAmB,mJ,EAAA,qJ,EAAA,+J,EAAA,4I;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,8O;AAAA;AAAA;ADdhC;;AACI;AAAA,qBAAS,IAAAl/B,iBAAA,kCAAT;AAAwD,aAAxD;;AACA;;AAAU;;AAAS;;AACvB;;AACA;;;;;;AAJmB;;AAKd;;AAAA;;;;;;;;;;;;;;;;;;;;;;AELL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAwBam/B,S;;;;;yBAAAA,S;AAAS,O;;;cAATA,S;AAAS,oBAFR,kEAEQ;;;mBAHT,CAAC;AAACC,iBAAO,EAAE,6EAAV;AAAiBC,oBAAU,EAAE;AAA7B,SAAD,C;AAAwC,kBAP1C,CACP,uEADO,EAEP,4FAFO,EAGP,qEAHO,EAIP,kEAJO,CAO0C;;;;4HAGxCF,S,EAAS;AAAA,yBAZlB,kEAYkB;AAZN,oBAGZ,uEAHY,EAIZ,4FAJY,EAKZ,qEALY,EAMZ,kEANY;AAYM,S;AANN,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCWSG,6B;AAIX,+CAAmBlqC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUs/B,6B,EAA6B,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAA7BA,6B;AAA6B,oD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6J;AAAA;AAAA;ADf1C;;;;AAGA;;;;AAIA;;AAAwC;;AAAwC;;;;AAPzE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEH3B;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSC,qB;AAIX,uCAAmBnqC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUu/B,qB,EAAqB,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAArBA,qB;AAAqB,2C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6J;AAAA;AAAA;ADdlC;;;;AAGA;;;;AAIA;;AAAwC;;AAA+B;;;;AAPhE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEH3B;;AACI;;AAAQ;;AAED;;AACP;;AAEI;;AAAQ;;AAAsD;;AAAS;;AAGvE;;AAAQ;;AAC8C;;AAAS;;AAG/D;;AAAQ;;AACkD;;AAAS;;AAGnE;;AACA;;AACJ;;AAAS;;AAIR;;AAAQ;;AAAwD;;AAAS;;AAGtE;;AAAQ;;AAAoD;;AAAS;;AAGrE;;AAAQ;;AAAoD;;AAAS;;AAIxE;;AAAQ;;;;AAAuE;;AAAS;;AAGrF;;AAAQ;;;;AAAsE;;AAAS;;AAG1F;;AAAQ;;;;AAAmE;;AAAS;;AAIpF;;AAAQ;;;;AAA2E;;AAAS;;AAI5F;;AAAQ;;;;AAA4E;;AAAS;;AAC9F;;AACJ;;;;;;;;;;;;;;;;;;;;AAhDY;;AAAA;;AAGR;;AAAA;;AAEY;;AAAA;;AAA+D;;AAAA;;AAG/D;;AAAA;;AACuD;;AAAA;;AAGvD;;AAAA;;AAC2D;;AAAA;;AAInE;;AAAA;;AACK;;AAAA;;AAIA;;AAAA;;AAAiE;;AAAA;;AAG9D;;AAAA;;AAA6D;;AAAA;;AAG7D;;AAAA;;AAA6D;;AAAA;;AAIhE;;AAAA;;AAAgF;;AAAA;;AAG7E;;AAAA;;AAA+E;;AAAA;;AAGlF;;AAAA;;AAA4E;;AAAA;;AAI5E;;AAAA;;AAAoF;;AAAA;;AAIpF;;AAAA;;;;UChCAC,iC;AAKX,mDAAmBpqC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSqH,iBAHT,EAG+C;AAAA;;AAH5B,eAAAvH,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAqH,iBAAA,GAAAA,iBAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAfU6iC,iC,EAAiC,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAAjCA,iC;AAAiC,yD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6B;AAAA;AAAA;ADf9C;;;;AAAa;;;;;;;;;;;;;;;;;;;;;;;AEAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASajqB,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCDAkqB,c;AACT,gCAAoBrqC,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AAEnB;;;;iBAED,oBAAW4B,WAAX,EAAmC;AAC/B,gBAAIirB,gBAAgB,GAAkB,KAAK7sB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoR,OAA1C,CAAkD7E,MAAlD,CAAyD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACzL,MAAF,CAASwJ,QAAT,IAAqBzJ,WAAW,CAACC,MAAZ,CAAmBwJ,QAA5C;AAAA,aAA1D,CAAtC;;AACA,gBAAI,EAAEwhB,gBAAgB,IAAI3rB,SAApB,IAAiC2rB,gBAAgB,CAACrkB,MAAjB,GAA0B,CAA7D,CAAJ,EACA;AACI,mBAAKxI,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoR,OAA1C,CAAkD1L,IAAlD,CAAuD5E,WAAvD;AACH;AACJ;;;iBAED,uBAAcA,WAAd,EAAsC;AAClC,gBAAIirB,gBAAgB,GAAkB,KAAK7sB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoR,OAA1C,CAAkD7E,MAAlD,CAAyD,UAAAC,CAAC;AAAA,qBAAIA,CAAC,IAAI1L,WAAT;AAAA,aAA1D,CAAtC;;AACA,gBAAI,EAAEirB,gBAAgB,IAAI3rB,SAApB,IAAiC2rB,gBAAgB,CAACrkB,MAAjB,GAA0B,CAA7D,CAAJ,EACA;AACI,kBAAI0J,OAAO,GAAkB,KAAKlS,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoR,OAAvE;AACA,kBAAIzE,KAAK,GAAWyE,OAAO,CAAC1J,MAA5B;;AACA,mBAAI,IAAIkF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGD,KAAnB,EAA0BC,CAAC,EAA3B,EACA;AACI,oBAAIwE,OAAO,CAACxE,CAAD,CAAP,KAAe9L,WAAnB,EACA;AACIsQ,yBAAO,CAACvE,MAAR,CAAeD,CAAf,EAAkB,CAAlB;AACA;AACH;AACJ;;AAED,mBAAK1N,eAAL,CAAqB6I,cAArB,CAA+C;AAAEqJ,uBAAO,EAAEA;AAAX,eAA/C;AACH;AACJ;;;;;;;yBA9BQm4B,c,EAAc,0I;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFX;;;;;;;;;;;;;;;;;ACDhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDQ;;AAA8C;;AAAQ;;;;UDUjDC,0B;AAQX,4CAAmBtqC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGUqqC,EAHV,EAG2B;AAAA;;AAHR,eAAAvqC,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACC,eAAAqqC,EAAA,GAAAA,EAAA;AAET;;;;eAPD,eAAQ;AAAE,mBAAO,KAAKC,iBAAL,CAAuBra,QAA9B;AAAyC;;;iBASnD,oBAAQ;AACN,iBAAKqa,iBAAL,GAAyB,KAAKD,EAAL,CAAQE,KAAR,CAAc;AACrCrc,oBAAM,EAAE,CAAC,EAAD,EACR,CACE,0DAAWsc,QADb,CADQ;AAD6B,aAAd,CAAzB;AAOD;;;iBAED,uBAAW,CACV;;;iBAED,kBAAM;AAEJnhC,mBAAO,CAACC,KAAR,CAAc,KAAKghC,iBAAL,CAAuBjmB,KAArC;AACAhb,mBAAO,CAACC,KAAR,CAAc,KAAKmC,WAAnB;AACD;;;;;;;yBAhCU2+B,0B,EAA0B,mJ,EAAA,qJ,EAAA,yJ,EAAA,2H;AAAA,O;;;cAA1BA,0B;AAA0B,gD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,+J;AAAA;AAAA;ACdvC;;AAAsC;AAAA,qBAAY,IAAAK,MAAA,EAAZ;AAAoB,aAApB;;AAClC;;AACI;;AAAW;;AAAgB;;AAC3B;;AACA;;AACJ;;AACA;;AAAuE;;AAAM;;AACjF;;;;AAPM;;AAIc;;AAAA;;AAEiB;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACJrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaC,2B;AAKT,6CAAoB9iC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIY2qC,+BAJZ,EAKY7iC,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA2qC,+BAAA,GAAAA,+BAAA;AACA,eAAA7iC,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,gCAAuBoF,OAAvB,EAAyC;;;AACrC,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE0f,oBAAjD,EAAuE;AACrE,mBAAKsqB,wBAAL;AACD,aAFD,MAGK;AACH,mBAAK3iC,GAAL,GAAW,KAAK4iC,uBAAL,GAA+BpiC,SAA/B,EAAX;AACD;AACF;;;iBAEK,mCAA0B;AAAA;;AAC9B,iBAAK1I,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE4X,kCAAoB,EAAE;AAAxB,aAAjD;AACA,iBAAKxgB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,4GAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD,KAAKlJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3F,kCAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAA0CF,GAA1C,EAA+CG,IAA/C,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAAC2hC,0BAAL,CAAgC3hC,CAAhC;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAAC+iC,0BAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA9jC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAED,sCAA6B;AACzB,iBAAK0jC,+BAAL,CAAqCI,0BAArC,CAAgE,KAAK/iC,OAArE;AACH;;;iBAEO,oCAA2B;;;AAC/B,iBAAK8iC,0BAAL,CAAgC,CAAD,WAAC,KAAK/qC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI0f,oBAA9E;AACAjX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI0f,oBAA5D;;AACA,gBAAI,KAAKtY,OAAT,EAAkB;AACd,mBAAK+iC,0BAAL;AACH;AACJ;;;iBAEO,oCAA2B5hC,CAA3B,EAAoD;AACxD,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE4X,kCAAoB,EAAEnX;AAAxB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCkjC,8BAAhC,EAAJ,EAAsE;AAClE,qBAAKlrC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBAzEQ4hC,2B,EAA2B,uH,EAAA,0I,EAAA,4I,EAAA,gI,EAAA,6J,EAAA,0J;AAAA,O;;;eAA3BA,2B;AAA2B,iBAA3BA,2BAA2B,K;AAAA,oBAFxB;;;;;;;;;;;;;;;;;ACbhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAkBaO,sB;AAMT,wCAAoBrjC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYgL,qBAJZ,EAKYC,0BALZ,EAMY7D,UANZ,EAOYU,0BAPZ,EAOoE;AAAA;;;;AAPhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgL,qBAAA,GAAAA,qBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AACA,eAAA7D,UAAA,GAAAA,UAAA;AACA,eAAAU,0BAAA,GAAAA,0BAAA;AATZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAUC;;;;iBAED,2BAAkBuI,QAAlB,EAAoCnD,OAApC,EAAsD;;;AAClD,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEsgB,eAAjD,EAAkE;AAC9D,mBAAKgqB,mBAAL;AACH,aAFD,MAGK;AACD,mBAAKjjC,GAAL,GAAW,KAAKkjC,kBAAL,GAA0B1iC,SAA1B,EAAX;AACH;AACJ;;;iBAEO,8BAAqB;AAAA;;AACzB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7CwY,6BAAe,EAAE;AAD4B,aAAjD;AAGA,iBAAKphB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,kGAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,sCAA6I,KAAKwI,QAAlJ,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAqCF,GAArC,EAA0CG,IAA1C,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACiiC,qBAAL,CAA2BjiC,CAA3B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB,CACd;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAf,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,+BAAsB;;;AAC1B,iBAAKmkC,qBAAL,CAA2B,CAAD,WAAC,KAAKrrC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIsgB,eAAzE;AACA7X,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIsgB,eAA5D;;AACA,gBAAI,KAAKlZ,OAAT,EAAkB,CACd;AACH;AACJ;;;iBAEO,+BAAsBmB,CAAtB,EAA0C;AAC9C,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7CwY,6BAAe,EAAE/X;AAD4B,aAAjD;;AAIA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgCujC,yBAAhC,EAAJ,EAAiE;AAC7D,qBAAKvrC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,mBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,sBAAM,EAAE,EAAV;AAAcE,uBAAO,EAAE;AAAvB,eAA9C;AACH;;AAED,gBAAI,KAAKhJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC1D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8T,wBAA1C,IAAsE,kHAA6BC,eAAvG,EAAwH;AACpH,qBAAKvN,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAA4B,CACxB;AACA;AAFwB,iBAA5B;AAIH;;AAED,kBAAI,KAAKjM,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8T,wBAA1C,IAAsE,kHAA6B42B,QAAvG,EAAiH;AAC7G,qBAAKlkC,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAA4B,CACxB;AACA;AAFwB,iBAA5B;AAIH;;AAED,kBAAI,KAAKjM,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8T,wBAA1C,IAAsE,kHAA6B2mB,aAAvG,EAAsH;AAClH,qBAAKj0B,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAA4B,CACxB;AACA;AAFwB,iBAA5B;AAIH;;AAED,kBAAI,KAAKjM,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8T,wBAA1C,IAAsE,kHAA6BzI,KAAvG,EAA8G;AAC1G,qBAAK7E,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAA4B,CACxB;AACA;AAFwB,iBAA5B;AAIH;AACJ;AACJ;;;;;;;yBA9GQk/B,sB,EAAsB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,gK,EAAA,0K,EAAA,oI,EAAA,0K;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSM,oB;AAEX,sCAAmBzrC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATUurC,oB,EAAoB,mJ,EAAA,yJ;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVjC;;;;AAGA;;;;AAIA;;AAAG;;AAA0B;;;;AAPtB;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEF3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;;;AAQI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAA3rC,sBAAA,gGAAT;AAA+G,WAA/G;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,iGAAT;AAAgH,WAAhH;;AAEA;;AACJ;;;;;;AAOI;;AACI;;AAEJ;;;;;;AAFI;;AAAA;;;;;;AAUJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,mGAAT;AAAkH,WAAlH;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,oGAAT;AAAmH,WAAnH;;AAEA;;AACJ;;;;;;AAGJ;;;;;;;;AACI,8KAAkD,iBAAlD,EAAkD,yKAAlD;;;;;;AAIJ;;;;;;;;AACI,gLAAkD,qBAAlD,EAAkD,kKAAlD;;;;UD7CS4rC,mB;AAMX,qCAAmB1rC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSoO,gBAHT,EAISxO,sBAJT,EAKSO,gBALT,EAMSC,+BANT,EAOSC,oBAPT,EAOqD;AAAA;;AAPlC,eAAAP,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAoO,gBAAA,GAAAA,gBAAA;AACA,eAAAxO,sBAAA,GAAAA,sBAAA;AACA,eAAAO,gBAAA,GAAAA,gBAAA;AACA,eAAAC,+BAAA,GAAAA,+BAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AAZT,eAAAorC,sBAAA,GAAyB,kHAAzB;AACA,eAAAlrC,UAAA,GAAa,0FAAb;AACA,eAAAC,WAAA,GAAc,4FAAd;AACA,eAAAC,gBAAA,GAAmB,8GAAnB;AASwD;;;;iBAExD,oBAAQ;AACN,iBAAK2N,gBAAL,CAAsB8B,WAAtB,CAAkC,KAAKpQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5E,EAA6F,IAA7F;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBApBU2qC,mB,EAAmB,mJ,EAAA,qJ,EAAA,yJ,EAAA,6J,EAAA,0K,EAAA,8J,EAAA,6L,EAAA,sK;AAAA,O;;;cAAnBA,mB;AAAmB,wC;AAAA,iB;AAAA,gB;AAAA,ie;AAAA;AAAA;ACpBhC;;;;AAGA;;;;AAIA;;AACI;AAAA,qBAAS,IAAAnrC,oBAAA,kDAAT;AAA2E,aAA3E;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACA;AAAA,qBAAS,IAAAA,oBAAA,6CAAT;AAAsE,aAAtE;;AAEI;;AACI;;AACA;;AAIJ;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,qDAAT;AAA8E,aAA9E;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AAEA;;AAKA;;;;;;;AAhEO;;AAGoB;;AAAA;;AAMvB;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAQ9B;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAKwB;;AAAA;;AAKjB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChEhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSqrC,yB;AAIX,2CAAmB5rC,eAAnB,EACSE,kBADT,EAEUsO,mBAFV,EAEoD;AAAA;;AAFjC,eAAAxO,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAsO,mBAAA,GAAAA,mBAAA;AAA6C;;;;iBAEvD,oBAAQ;AACN,iBAAKA,mBAAL,CAAyBoB,cAAzB,CAAwC,KAAK5P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbU6qC,yB,EAAyB,mJ,EAAA,yJ,EAAA,oK;AAAA,O;;;cAAzBA,yB;AAAyB,gD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,uJ;AAAA;AAAA;ADbtC;;;;AAGA;;;;AAIA;;AAAkC;;AAAoC;;;;AAP/D;;AAGooSaC,Y;;;;;yBAAAA,Y;AAAY,O;;;cAAZA;;;kBAzGF,CACP,4DADO,EAEP,0DAFO,EAGP,qEAHO,EAIP,0EAJO,EAKP,kEALO,C,EAQP,4D,EACA,0D,EACA,qE,EACA,0E,EACA,kE;;;;6HA6FSA,Y,EAAY;AAAA,yBAnMrB,wIAmMqB,EAlMrB,iHAkMqB,EAjMrB,+HAiMqB,EAhMrB,0HAgMqB,EA/LrB,iGA+LqB,EA9LrB,+GA8LqB,EA7LrB,+GA6LqB,EA5LrB,gJA4LqB,EA3LrB,mIA2LqB,EA1LrB,gHA0LqB,EAzLrB,6GAyLqB,EAxLrB,6GAwLqB,EAvLrB,iIAuLqB,EAtLrB,iIAsLqB,EArLrB,2HAqLqB,EApLrB,qJAoLqB,EAnLrB,+IAmLqB,EAlLrB,2KAkLqB,EAjLrB,+FAiLqB,EAhLrB,uIAgLqB,EA/KrB,wGA+KqB,EA9KrB,sHA8KqB,EA7KrB,0IA6KqB,EA5KrB,8HA4KqB,EA3KrB,8HA2KqB,EA1KrB,8GA0KqB,EAzKrB,mGAyKqB,EAxKrB,iGAwKqB,EAvKrB,yIAuKqB,EAtKrB,6IAsKqB,EArKrB,6IAqKqB,EApKrB,gHAoKqB,EAnKrB,oGAmKqB,EAlKrB,6FAkKqB,EAjKrB,oIAiKqB,EAhKrB,kJAgKqB,EA/JrB,kJA+JqB,EA9JrB,4KA8JqB,EA7JrB,sKA6JqB,EA5JrB,iIA4JqB,EA3JrB,+IA2JqB,EA1JrB,+IA0JqB,EAzJrB,yKAyJqB,EAxJrB,mKAwJqB,EAvJrB,gHAuJqB,EAtJrB,8HAsJqB,EArJrB,8HAqJqB,EApJrB,wJAoJqB,EAnJrB,kJAmJqB,EAlJrB,oHAkJqB,EAjJrB,kIAiJqB,EAhJrB,kIAgJqB,EA/IrB,4JA+IqB,EA9IrB,sJA8IqB,EA7IrB,6KA6IqB,EA5IrB,oHA4IqB,EA3IrB,uJA2IqB,EA1IrB,2IA0IqB,EAzIrB,yJAyIqB,EAxIrB,yJAwIqB,EAvIrB,mLAuIqB,EAtIrB,6KAsIqB,EArIrB,iHAqIqB,EApIrB,+HAoIqB,EAnIrB,+HAmIqB,EAlIrB,yJAkIqB,EAjIrB,mJAiIqB,EAhIrB,gJAgIqB,EA/HrB,4IA+HqB,EA9HrB,iGA8HqB,EA7HrB,oIA6HqB,EA5HrB,mGA4HqB,EA3HrB,uHA2HqB,EA1HrB,yGA0HqB,EAzHrB,uHAyHqB,EAxHrB,uHAwHqB,EAvHrB,iJAuHqB,EAtHrB,2IAsHqB,EArHrB,qGAqHqB,EApHrB,qHAoHqB,EAnHrB,8GAmHqB,EAlHrB,qHAkHqB,EAjHrB,mIAiHqB,EAhHrB,mIAgHqB,EA/GrB,6JA+GqB,EA9GrB,uJA8GqB,EA7GrB,4IA6GqB,EA5GrB,0GA4GqB,EA3GrB,0GA2GqB;AA3GF,oBAGnB,4DAHmB,EAInB,0DAJmB,EAKnB,qEALmB,EAMnB,0EANmB,EAOnB,kEAPmB,CA2GE;AApGF,oBAGnB,4DAHmB,EAInB,0DAJmB,EAKnB,qEALmB,EAMnB,0EANmB,EAOnB,kEAPmB,EASnB,wIATmB,EAUnB,iHAVmB,EAWnB,+HAXmB,EAYnB,0HAZmB,EAanB,iGAbmB,EAcnB,+GAdmB,EAenB,+GAfmB,EAgBnB,gJAhBmB,EAiBnB,mIAjBmB,EAkBnB,gHAlBmB,EAmBnB,6GAnBmB,EAoBnB,6GApBmB,EAqBnB,iIArBmB,EAsBnB,iIAtBmB,EAuBnB,2HAvBmB,EAwBnB,qJAxBmB,EAyBnB,+IAzBmB,EA0BnB,2KA1BmB,EA2BnB,+FA3BmB,EA4BnB,uIA5BmB,EA6BnB,wGA7BmB,EA8BnB,sHA9BmB,EA+BnB,0IA/BmB,EAgCnB,8HAhCmB,EAiCnB,8HAjCmB,EAkCnB,8GAlCmB,EAmCnB,mGAnCmB,EAoCnB,iGApCmB,EAqCnB,yIArCmB,EAsCnB,6IAtCmB,EAuCnB,6IAvCmB,EAwCnB,gHAxCmB,EAyCnB,oGAzCmB,EA0CnB,6FA1CmB,EA2CnB,oIA3CmB,EA4CnB,kJA5CmB,EA6CnB,kJA7CmB,EA8CnB,4KA9CmB,EA+CnB,sKA/CmB,EAgDnB,iIAhDmB,EAiDnB,+IAjDmB,EAkDnB,+IAlDmB,EAmDnB,yKAnDmB,EAoDnB,mKApDmB,EAqDnB,gHArDmB,EAsDnB,8HAtDmB,EAuDnB,8HAvDmB,EAwDnB,wJAxDmB,EAyDnB,kJAzDmB,EA0DnB,oHA1DmB,EA2DnB,kIA3DmB,EA4DnB,kIA5DmB,EA6DnB,4JA7DmB,EA8DnB,sJA9DmB,EA+DnB,6KA/DmB,EAgEnB,oHAhEmB,EAiEnB,uJAjEmB,EAkEnB,2IAlEmB,EAmEnB,yJAnEmB,EAoEnB,yJApEmB,EAqEnB,mLArEmB,EAsEnB,6KAtEmB,EAuEnB,iHAvEmB,EAwEnB,+HAxEmB,EAyEnB,+HAzEmB,EA0EnB,yJA1EmB,EA2EnB,mJA3EmB,EA4EnB,gJA5EmB,EA6EnB,4IA7EmB,EA8EnB,iGA9EmB,EA+EnB,oIA/EmB,EAgFnB,mGAhFmB,EAiFnB,uHAjFmB,EAkFnB,yGAlFmB,EAmFnB,uHAnFmB,EAoFnB,uHApFmB,EAqFnB,iJArFmB,EAsFnB,2IAtFmB,EAuFnB,qGAvFmB,EAwFnB,qHAxFmB,EAyFnB,8GAzFmB,EA0FnB,qHA1FmB,EA2FnB,mIA3FmB,EA4FnB,mIA5FmB,EA6FnB,6JA7FmB,EA8FnB,uJA9FmB,EA+FnB,4IA/FmB,EAgGnB,0GAhGmB,EAiGnB,0GAjGmB;AAoGE,S;AAHF,O;;;;;;;;;;;;;;;;;AC5RvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDQ;;AAA8C;;AAAQ;;;;UDUjDC,0B;AAQX,4CAAmB9rC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGUqqC,EAHV,EAG2B;AAAA;;AAHR,eAAAvqC,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACC,eAAAqqC,EAAA,GAAAA,EAAA;AAET;;;;eAPD,eAAQ;AAAE,mBAAO,KAAKwB,iBAAL,CAAuB5b,QAA9B;AAAyC;;;iBASnD,oBAAQ;AACN,iBAAK4b,iBAAL,GAAyB,KAAKxB,EAAL,CAAQE,KAAR,CAAc;AACrCrc,oBAAM,EAAE,CAAC,KAAKziB,WAAL,CAAiBwiB,kBAAjB,CAA4C,KAAKnuB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAtF,EAAgGurB,MAAjG,EACR,CACE,0DAAWsc,QADb,CADQ;AAD6B,aAAd,CAAzB;AAOD;;;iBAED,uBAAW,CACV;;;iBAED,kBAAS;AACPnhC,mBAAO,CAACC,KAAR,CAAc,KAAKuiC,iBAAL,CAAuBxnB,KAArC;AACAhb,mBAAO,CAACC,KAAR,CAAc,KAAKmC,WAAnB;AACD;;;;;;;yBA/BUmgC,0B,EAA0B,mJ,EAAA,qJ,EAAA,yJ,EAAA,2H;AAAA,O;;;cAA1BA,0B;AAA0B,gD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,+J;AAAA;AAAA;ACdvC;;AAAsC;AAAA,qBAAY,IAAAE,MAAA,EAAZ;AAAoB,aAApB;;AAClC;;AACI;;AAAW;;AAAY;;AACvB;;AACA;;AACJ;;AACA;;AAAuE;;AAAM;;AACjF;;;;AAPM;;AAIc;;AAAA;;AAEiB;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACJrC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaC,iB;AAKT,mCAAoBnkC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYgsC,2BAJZ,EAKYlkC,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgsC,2BAAA,GAAAA,2BAAA;AACA,eAAAlkC,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,sBAAaoF,OAAb,EAA+B;;;AAC3B,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE8f,UAAjD,EAA6D;AAC3D,mBAAKurB,cAAL;AACD,aAFD,MAGK;AACH,mBAAKhkC,GAAL,GAAW,KAAKikC,aAAL,GAAqBzjC,SAArB,EAAX;AACD;AACF;;;iBAEK,yBAAgB;AAAA;;AACpB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEgY,wBAAU,EAAE;AAAd,aAAjD;AACA,iBAAK5gB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,wFAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,wBAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAgCF,GAAhC,EAAqCG,IAArC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACgjC,gBAAL,CAAsBhjC,CAAtB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAACokC,qBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAnlC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,iCAAwB;AAC5B,iBAAK+kC,2BAAL,CAAiCI,qBAAjC,CAAuD,KAAKpkC,OAA5D;AACH;;;iBAEO,0BAAiB;;;AACrB,iBAAKmkC,gBAAL,CAAsB,CAAD,WAAC,KAAKpsC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI8f,UAApE;AACArX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIwf,cAA5D;;AACA,gBAAI,KAAKpY,OAAT,EAAkB;AACd,mBAAKokC,qBAAL;AACH;AACJ;;;iBAEO,0BAAiBjjC,CAAjB,EAAgC;AACpC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEgY,wBAAU,EAAEvX;AAAd,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCukC,oBAAhC,EAAJ,EAA4D;AACxD,qBAAKvsC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQijC,iB,EAAiB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,0K,EAAA,0K;AAAA,O;;;eAAjBA,iB;AAAiB,iBAAjBA,iBAAiB,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSO,0B;AAIX,4CAAmBxsC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbU4hC,0B,EAA0B,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAA1BA,0B;AAA0B,gD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,gK;AAAA;AAAA;ADdvC;;;;AAGA;;;;AAIA;;AAA2C;;AAAoC;;;;AAPxE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASajsB,oB;;;;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYksB,4BAAZ;;AAAA,iBAAYA,4BAAZ,EAAwC;AACpC;AACA;AACA;AACA;AACH,OALD,EAAYA,4BAA4B,KAA5BA,4BAA4B,MAAxC;;AAOO,eAASC,+BAAT,GAAwC;AAE7C,eAAOD,4BAAP;AACD;;AAEM,eAASE,2CAAT,CAAqD3sC,eAArD,EAAqF;;;AACxF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SALD,MAMK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASkmC,sCAAT,CAAgD5lC,MAAhD,EAAgEhH,eAAhE,EAAgG;AACnG,YAAIiH,mBAAJ;AACA0lC,mDAA2C,CAAC3sC,eAAD,CAA3C,CAA6DkH,OAA7D,CAAqE,UAAAC,CAAC,EAAI;AACtE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC/CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAWa4lC,a;AAET,+BAAoB/kC,UAApB,EACY7H,gBADZ,EAEYD,eAFZ,EAE8C;AAAA;;AAF1B,eAAA8H,UAAA,GAAAA,UAAA;AACR,eAAA7H,gBAAA,GAAAA,gBAAA;AACA,eAAAD,eAAA,GAAAA,eAAA;AACX;;;;iBAED,mBAAU2O,SAAV,EAAkC;AAAA;;AAC9B,mBAAOA,SAAS,CAACm+B,YAAV,CAAuB1jC,IAAvB,CACH,iEAAU,EAAV,CADG,EAEH,oEAAa,GAAb,CAFG,EAGH,6EAHG,EAIH,2DAAI,UAAA2jC,IAAI,EAAI;AACR,qBAAI,CAACC,aAAL,CAAmBD,IAAnB;AACH,aAFD,CAJG,CAAP;AAOH;;;iBAEO,uBAAcA,IAAd,EAA4B;AAAA;;AAChC,iBAAK9sC,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEqkC,0BAAY,EAAE;AAAhB,aAAjD;AACA,iBAAKjtC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEsJ,2BAAa,EAAE;AAAjB,aAA9C;AACA46B,gBAAI,GAAG,CAAC,KAAKA,IAAN,EAAYG,IAAZ,EAAP;;AACA,gBAAI,CAACH,IAAL,EAAW;AACP,8DAAG,EAAH,EAAO3jC,IAAP,CACI,2DAAI,YAAM;AACN,uBAAI,CAACpJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEsJ,+BAAa,EAAE;AAAjB,iBAA9C;;AACA5I,uBAAO,CAACC,KAAR,CAAc,qBAAd;AACH,eAHD,CADJ,EAKEb,SALF;AAMH,aAPD,MAQK;AACD,mBAAKb,UAAL,CAAgBqB,GAAhB,WAAqC,KAAKlJ,gBAAL,CAAsBiJ,UAA3D,SAAwE,KAAKlJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAlH,wBAAwIkqC,IAAxI,SAAkJ3jC,IAAlJ,CACI,2DAAI,UAACC,CAAD,EAAY;AACZ,uBAAI,CAACpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEqkC,8BAAY,EAAE5jC;AAAhB,iBAAjD;;AACA,uBAAI,CAACrJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEsJ,+BAAa,EAAE;AAAjB,iBAA9C;;AACA5I,uBAAO,CAACC,KAAR,CAAcH,CAAd;AACH,eAJD,CADJ,EAMI,kEAAW,UAAAlC,CAAC;AAAA,uBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,yBAAI,CAAClH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEqkC,gCAAY,EAAE;AAAhB,mBAAjD;;AACA,yBAAI,CAACjtC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEsJ,iCAAa,EAAE,KAAjB;AAAwBzI,yBAAK,EAAqBvC;AAAlD,mBAA9C;;AACAoC,yBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,iBAJ0B,CAAX,CAAJ;AAAA,eAAZ,CANJ,EAWEwB,SAXF;AAYH;AACJ;;;;;;;yBA3CQkkC,a,EAAa,uH,EAAA,4H,EAAA,0I;AAAA,O;;;eAAbA,a;AAAa,iBAAbA,aAAa,K;AAAA,oBAFV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbhB;;AACI;;AACA;;AAAmB;AAAA;;AAAA;;AAAA;AAAA;;AAA8B;;AAAC;;AACtD;;;;;;AAFI;;AAAA;;;;UCUSM,c;AAGX,gCAAoBntC,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AACnB;;;;iBAED,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;iBAED,6BAAoB;AAClB,iBAAKA,eAAL,CAAqB6I,cAArB,CAA8C;AAAEa,mBAAK,EAAE;AAAT,aAA9C;AACD;;;;;;;yBAdUyjC,c,EAAc,mJ;AAAA,O;;;cAAdA,c;AAAc,kC;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6F;AAAA;AAAA;ADX3B;;;;AAAkB;;;;;;;;;;;;;;;;;;;;;;AEElB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaC,sB;AAKT,wCAAoBtlC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIY84B,qBAJZ,EAKYhxB,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA84B,qBAAA,GAAAA,qBAAA;AACA,eAAAhxB,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,2BAAkBoF,OAAlB,EAAoC;;;AAChC,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEif,eAAjD,EAAkE;AAChE,mBAAKstB,mBAAL;AACD,aAFD,MAGK;AACH,mBAAKllC,GAAL,GAAW,KAAKmlC,kBAAL,GAA0B3kC,SAA1B,EAAX;AACD;AACF;;;iBAEK,8BAAqB;AAAA;;AACzB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEmX,6BAAe,EAAE;AAAnB,aAAjD;AACA,iBAAK/f,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,kGAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,6BAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAqCF,GAArC,EAA0CG,IAA1C,CACH,2DAAI,UAACC,CAAD,EAAwB;AACxB,qBAAI,CAACkkC,qBAAL,CAA2BlkC,CAA3B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAACyzB,gBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAx0B,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,4BAAmB;AACvB,iBAAK6xB,qBAAL,CAA2B2C,gBAA3B,CAA4C,KAAKzzB,OAAjD;AACH;;;iBAEO,+BAAsB;;;AAC1B,iBAAKqlC,qBAAL,CAA2B,CAAD,WAAC,KAAKttC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIif,eAAzE;AACAxW,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIif,eAA5D;;AACA,gBAAI,KAAK7X,OAAT,EAAkB;AACd,mBAAKyzB,gBAAL;AACH;AACJ;;;iBAEO,+BAAsBtyB,CAAtB,EAA0C;AAC9C,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEmX,6BAAe,EAAE1W;AAAnB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCwlC,yBAAhC,EAAJ,EAAiE;AAC7D,qBAAKxtC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AAEJ;AACJ;;;;;;;yBA3EQokC,sB,EAAsB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,+J,EAAA,0K;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSK,yB;AAIX,2CAAmBztC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbU6iC,yB,EAAyB,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,iK;AAAA;AAAA;ADdtC;;;;AAGA;;;;AAIA;;AAA4C;;AAAmC;;;;AAPxE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AED3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaC,oB;AAMT,sCAAoB5lC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYE,qBAJZ,EAKY4H,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAE,qBAAA,GAAAA,qBAAA;AACA,eAAA4H,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,yBAAgBuI,QAAhB,EAAkCnD,OAAlC,EAAoD;;;AAChD,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEkgB,aAAjD,EAAgE;AAC5D,mBAAK2sB,iBAAL;AACH,aAFD,MAGK;AACD,mBAAKxlC,GAAL,GAAW,KAAKylC,gBAAL,GAAwBjlC,SAAxB,EAAX;AACH;AACJ;;;iBAEO,4BAAmB;AAAA;;AACvB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEoY,2BAAa,EAAE;AAAjB,aAAjD;AACA,iBAAKhhB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,8FAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,oCAA2I,KAAKwI,QAAhJ,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAmCF,GAAnC,EAAwCG,IAAxC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACwkC,mBAAL,CAAyBxkC,CAAzB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAAC4lC,gBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA3mC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,4BAAmB;AACvB,iBAAK/G,qBAAL,CAA2B0tC,gBAA3B,CAA4C,KAAKziC,QAAjD,EAA2D,IAA3D;AACH;;;iBAEO,6BAAoB;;;AACxB,iBAAKwiC,mBAAL,CAAyB,CAAD,WAAC,KAAK5tC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIkgB,aAAvE;AACAzX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIkgB,aAA5D;;AACA,gBAAI,KAAK9Y,OAAT,EAAkB;AACd,mBAAK4lC,gBAAL;AACH;AACJ;;;iBAEO,6BAAoBzkC,CAApB,EAAsC;AAC1C,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEoY,2BAAa,EAAE3X;AAAjB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2J,sBAAhC,EAAJ,EAA8D;AAC1D,qBAAK3R,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgC+lC,uBAAhC,EAAJ,EAA+D;AAC3D,qBAAK/tC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA5EQ0kC,oB,EAAoB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,uI,EAAA,0K;AAAA,O;;;eAApBA,oB;AAAoB,iBAApBA,oBAAoB,K;AAAA,oBAFjB;;;;;;;;;;;;;;;;;ACfhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASa3tB,e;;;;;;;;;;;;;;;;;;;ACPb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaiuB,sB;AAKT,wCAAoBlmC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIY+tC,wBAJZ,EAKYjmC,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA+tC,wBAAA,GAAAA,wBAAA;AACA,eAAAjmC,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,2BAAkBoF,OAAlB,EAAoC;;;AAChC,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE6f,eAAjD,EAAkE;AAChE,mBAAKutB,mBAAL;AACD,aAFD,MAGK;AACH,mBAAK/lC,GAAL,GAAW,KAAKgmC,kBAAL,GAA0BxlC,SAA1B,EAAX;AACD;AACF;;;iBAEK,8BAAqB;AAAA;;AACzB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE+X,6BAAe,EAAE;AAAnB,aAAjD;AACA,iBAAK3gB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,kGAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,6BAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAqCF,GAArC,EAA0CG,IAA1C,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAAC+kC,qBAAL,CAA2B/kC,CAA3B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAACmmC,mBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAlnC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,+BAAsB;AAC1B,iBAAK8mC,wBAAL,CAA8BI,mBAA9B,CAAkD,KAAKnmC,OAAvD;AACH;;;iBAEO,+BAAsB;;;AAC1B,iBAAKkmC,qBAAL,CAA2B,CAAD,WAAC,KAAKnuC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI6f,eAAzE;AACApX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI6f,eAA5D;;AACA,gBAAI,KAAKzY,OAAT,EAAkB;AACd,mBAAKmmC,mBAAL;AACH;AACJ;;;iBAEO,+BAAsBhlC,CAAtB,EAA0C;AAC9C,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE+X,6BAAe,EAAEtX;AAAnB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCsmC,yBAAhC,EAAJ,EAAiE;AAC7D,qBAAKtuC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQglC,sB,EAAsB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,sK,EAAA,0K;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSO,oB;AAIX,sCAAmBvuC,eAAnB,EACSE,kBADT,EAEUuO,kBAFV,EAEkD;AAAA;;AAF/B,eAAAzO,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAuO,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAErD,oBAAQ;AACN,iBAAKA,kBAAL,CAAwBiB,aAAxB,CAAsC,KAAK1P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbUwtC,oB,EAAoB,mJ,EAAA,yJ,EAAA,kK;AAAA,O;;;cAApBA,oB;AAAoB,0C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADbjC;;;;AAGA;;;;AAIA;;AAAG;;AAA8B;;;;AAP1B;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEF3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAI;;AACI;;AAAM;;AAAoI;;AAC1I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,+GAAoC,aAApC,EAAoC,kBAApC;;;;;;AAGpB;;AACI;;AAAM;;AAAkI;;AACxI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yGAA8B,aAA9B,EAA8B,kBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAAiI;;AACvI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,wGAA6B,aAA7B,EAA6B,kBAA7B;;;;;;AAGpB;;AACI;;AAAM;;AAAuI;;AAC7I;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,8GAAmC,aAAnC,EAAmC,kBAAnC;;;;UDLXC,kC;AAIX,oDAAmBxuC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;eAED,eAAc;AACZ,mBAAO,6EAAP;AACD;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAhBUsuC,kC,EAAkC,mJ,EAAA,yJ;AAAA,O;;;cAAlCA,kC;AAAkC,yD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,2D;AAAA;AAAA;ACb/C;;AACI;;AAKA;;AAKA;;AAKA;;AAKA;;AACJ;;;;AArBW;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;;;;;;;;;;;;;;AChBX;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,eAAZ;;AAAA,iBAAYA,eAAZ,EAA2B;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAfD,EAAYA,eAAe,KAAfA,eAAe,MAA3B;;AAiBO,eAASC,kBAAT,GAA2B;AAEhC,eAAOD,eAAP;AACD;;AAEM,eAASE,8BAAT,CAAwC3uC,eAAxC,EAAwE;;;AAC3E,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH,SAfD,MAgBK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,EAAV;AAAcC,oBAAQ,EAAE;AAAxB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASkoC,yBAAT,CAAmC5nC,MAAnC,EAAmDhH,eAAnD,EAAmF;AACtF,YAAIiH,mBAAJ;AACA0nC,sCAA8B,CAAC3uC,eAAD,CAA9B,CAAgDkH,OAAhD,CAAwD,UAAAC,CAAC,EAAI;AACzD,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFD;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMS4nC,2B;AAEX,6CAAmB7uC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATU2uC,2B,EAA2B,mJ,EAAA,yJ;AAAA,O;;;cAA3BA,2B;AAA2B,gD;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVxC;;;;AAGA;;;;AAIA;;AAAG;;AAAoC;;;;AAPhC;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,2BAAZ;;AAAA,iBAAYA,2BAAZ,EAAuC;AACnC;AACA;AACA;AACH,OAJD,EAAYA,2BAA2B,KAA3BA,2BAA2B,MAAvC;;AAMO,eAASC,8BAAT,GAAuC;AAE5C,eAAOD,2BAAP;AACD;;AAEM,eAASE,0CAAT,CAAoDhvC,eAApD,EAAoF;;;AACvF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAJD,MAKK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASuoC,qCAAT,CAA+CjoC,MAA/C,EAA+DhH,eAA/D,EAA+F;AAClG,YAAIiH,mBAAJ;AACA+nC,kDAA0C,CAAChvC,eAAD,CAA1C,CAA4DkH,OAA5D,CAAoE,UAAAC,CAAC,EAAI;AACrE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDD;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSioC,uB;AAIX,yCAAmBlvC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUskC,uB,EAAuB,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAAvBA,uB;AAAuB,6C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,+J;AAAA;AAAA;ADdpC;;;;AAGA;;;;AAIA;;AAA0C;;AAAiC;;;;AAPpE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AED3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAOaC,gB;AAGX;AAEA,kCAAmBrnC,UAAnB,EACS9H,eADT,EAC2C;AAAA;;AADxB,eAAA8H,UAAA,GAAAA,UAAA;AACV,eAAA9H,eAAA,GAAAA,eAAA;AALT,eAAAqI,UAAA,GAAyC,IAAI,oDAAJ,CAA0C,EAA1C,CAAzC;AACA,eAAAa,UAAA,GAAa,6BAAb;AAKC;;;;iBAED,yBAAgBkmC,SAAhB,EAAsC;AACpC,iBAAK/mC,UAAL,CAAgB+T,IAAhB,CAAqB,gCAAgB,KAAK/T,UAAL,CAAgBvH,QAAhB,EAAhB,GAA+CsuC,SAA/C,CAArB;AACD;;;;;;;yBAXUD,gB,EAAgB,uH,EAAA,0I;AAAA,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaE,0B;AAKT,4CAAoBvnC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIY8H,0BAJZ,EAIoE;AAAA;;;;AAJhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA8H,0BAAA,GAAAA,0BAAA;AANZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAOC;;;;iBAED,+BAAsBoF,OAAtB,EAAwC;;;AACpC,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,wBAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE+f,mBAA7C,MAAgE,IAAhE,IAAgE,aAAhE,GAAgE,MAAhE,GAAgE,GAAEyuB,gBAAlE,MAAkF,IAAlF,IAAkF,aAAlF,GAAkF,MAAlF,GAAkF,GAAE9mC,MAApF,IAA6F,CAAjG,EAAoG;AAChG,mBAAK+mC,uBAAL;AACH,aAFD,MAGK;AACD,mBAAKpnC,GAAL,GAAW,KAAKqnC,sBAAL,GAA8B7mC,SAA9B,EAAX;AACH;AACJ;;;iBAEO,kCAAyB;AAAA;;AAC7B,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEiY,iCAAmB,EAAE;AAAvB,aAAjD;AACA,iBAAK7gB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,0GAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,iCAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAyCF,GAAzC,EAA8CG,IAA9C,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAAComC,yBAAL,CAA+BpmC,CAA/B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB,CACd;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAf,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,mCAA0B;;;AAC9B,iBAAKsoC,yBAAL,CAA+B,CAAD,WAAC,KAAKxvC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI+f,mBAA7E;AACAtX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI+f,mBAA5D;;AACA,gBAAI,KAAK3Y,OAAT,EAAkB,CACd;AACH;AACJ;;;iBAEO,mCAA0BmB,CAA1B,EAAkD;AACtD,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEiY,iCAAmB,EAAExX;AAAvB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgC0nC,6BAAhC,EAAJ,EAAqE;AACjE,qBAAK1vC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBArEQqmC,0B,EAA0B,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,yK;AAAA,O;;;eAA1BA,0B;AAA0B,iBAA1BA,0BAA0B,K;AAAA,oBAFvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSM,2B;AAEX,6CAAmB3vC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATUyvC,2B,EAA2B,mJ,EAAA,yJ;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVxC;;;;AAGA;;;;AAIA;;AAAG;;AAAiC;;;;AAP7B;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEIdC,gB;AAEX,oCAAc;AAAA;AACb;;;;iBAED,sBAAahtB,kBAAb,EAA8CqX,MAA9C,EAAiE;AAC/D,gBAAIxsB,KAAK,GAAG,CAAZ;;AACA,gBAAImV,kBAAJ,EAAwB;AACtB,kBAAIqX,MAAM,IAAI,IAAd,EAAoB;AAClBrX,kCAAkB,CAACitB,cAAnB,CAAkCxiC,MAAlC,CAAyC,UAACC,CAAD,EAAO;AAAEG,uBAAK,IAAIH,CAAC,CAACwiC,UAAX;AAAuB,iBAAzE;AACD,eAFD,MAGK;AACH,oBAAIC,UAAU,GAAGntB,kBAAkB,CAACitB,cAAnB,CAAkCxiC,MAAlC,CAAyC,UAACC,CAAD,EAAO;AAAE,yBAAOA,CAAC,CAAC4B,MAAF,IAAY+qB,MAAnB;AAA2B,iBAA7E,CAAjB;;AACA,oBAAI8V,UAAU,CAACvnC,MAAX,GAAoB,CAAxB,EAA2B;AACzBiF,uBAAK,GAAGsiC,UAAU,CAAC,CAAD,CAAV,CAAcD,UAAtB;AACD;AACF;AACF;;AAED,mBAAOriC,KAAK,CAACpM,QAAN,EAAP;AACD;;;;;;;yBApBUuuC,gB;AAAgB,O;;;eAAhBA,gB;AAAgB,iBAAhBA,gBAAgB,K;AAAA,oBAFf;;;;;;;;;;;;;;;;;ACLd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACYY;;;;;;AACI;;;;;;AAGZ;;AACI;;AAEJ;;;;;;AAFsB;;AAAA,sIAA+D,OAA/D,EAA+D,oBAA/D;;;;;;AAOtB;;;;;;AAAuD,sGAA2B,UAA3B,EAA2B,eAA3B;;;;;;AAIvD;;;;;;AAAsD,sGAA2B,UAA3B,EAA2B,eAA3B;;;;;;AAL1D;;AACI;;AAIA;;AAEJ;;;;;;AAN8B;;AAAA;;AAIA;;AAAA;;;;;;AAI9B;;;;;;AAA2B,gGAAqB,aAArB,EAAqB,kBAArB;;;;UDXdI,qB;AAQX,uCAAmBhwC,eAAnB,EACSuH,iBADT,EAESrH,kBAFT,EAGS+vC,eAHT,EAISC,WAJT,EAKUC,SALV,EAMS/e,iBANT,EAO4B/M,QAP5B,EAOgD;AAAA;;AAP7B,eAAArkB,eAAA,GAAAA,eAAA;AACV,eAAAuH,iBAAA,GAAAA,iBAAA;AACA,eAAArH,kBAAA,GAAAA,kBAAA;AACA,eAAA+vC,eAAA,GAAAA,eAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACC,eAAAC,SAAA,GAAAA,SAAA;AACD,eAAA/e,iBAAA,GAAAA,iBAAA;AACmB,eAAA/M,QAAA,GAAAA,QAAA;AAdnB,eAAA+rB,WAAA,GAA2B,IAA3B;AAIT,eAAA5oC,YAAA,GAAe,8FAAf;AAWC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;iBAED,sBAAazF,WAAb,EAAuC;AACrCuO,iBAAK,CAAC,2BAAD,CAAL;AACD;;;iBAED,kBAASvO,WAAT,EAAmC;AACjC,iBAAKsuC,SAAL,GAAiB,KAAKF,SAAL,CAAevV,QAAf,CAAwB74B,WAAxB,CAAjB;AACD;;;;;;;yBA9BUiuC,qB,EAAqB,mJ,EAAA,+J,EAAA,yJ,EAAA,2J,EAAA,kJ,EAAA,+J,EAAA,+J,EAAA,gEAetB,wDAfsB,C;AAed,O;;;cAfPA,qB;AAAqB,2C;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,uV;AAAA;AAAA;ACrBlC;;AACI;;AACI;;AAGA;;AAAmB;AAAA,qBAAS,IAAApV,QAAA,iBAAT;AAA8B,aAA9B;;AACf;;AACA;;AAAM;;AAAY;;AAClB;;AAAM;;AAAsD;;AAC5D;;AAAM;;AAAuC;;AAC7C;;AAAM;;AAA0F;;AAChG;;AAAM;;AAAsD;;AAC5D;;AAEJ;;AACJ;;AACA;;;;AAKJ;;AAEA;;AASA;;;;;;AA9ByB;;AAAA,qGAA2B,UAA3B,EAA2B,YAA3B;;AAIR;;AAAA;;AAEC;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAC0B;;AAAA;;AAIxB;;AAAA;;AAOL;;AAAA;;AASmC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/B9C;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCOK0V,yB;AAKX,2CAAmBtwC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAbUowC,yB,EAAyB,mJ,EAAA,yJ;AAAA,O;;;cAAzBA,yB;AAAyB,gD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,iK;AAAA;AAAA;ADZtC;;AACI;;;;AAGA;;;;AAIA;;AAA4C;;AAA+B;;AAC/E;;;;AARW;;AAAA;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEJ/B;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSC,2B;AAEX,6CAAmBvwC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATUqwC,2B,EAA2B,mJ,EAAA,yJ;AAAA,O;;;cAA3BA,2B;AAA2B,iD;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVxC;;;;AAGA;;;;AAIA;;AAAG;;AAAqC;;;;AAPjC;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAUa/uB,S;;;;;;;;;;;;;;;;;;;ACVb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASalB,c;;;;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASaE,oB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAgwB,4B;AACT,8CAAoBC,qBAApB,EACYzwC,eADZ,EAC8C;AAAA;;AAD1B,eAAAywC,qBAAA,GAAAA,qBAAA;AACR,eAAAzwC,eAAA,GAAAA,eAAA;AACX;;;;iBAED,0CAAiCq0B,GAAjC,EAAqD;AACjD,gBAAI9H,QAAQ,GAAmB,KAAKvsB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAzE;AAEA,gBAAI,CAACwxB,GAAD,IAAQA,GAAG,CAAC7rB,MAAJ,IAAc,CAA1B,EAA6B,OAAO6rB,GAAP;AAE7B,gBAAIqc,mBAAmB,GAAoB,EAA3C;AACA,gBAAInc,IAAI,GAA2B,EAAnC;AACA,gBAAIC,QAAQ,GAA2B,EAAvC;;AAEA,iBAAK,IAAI9mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2mB,GAAG,CAAC7rB,MAAxB,EAAgCkF,CAAC,EAAjC,EAAqC;AACjC8mB,sBAAQ,CAAChuB,IAAT,CAAoC;AAChC6E,wBAAQ,EAAEgpB,GAAG,CAAC3mB,CAAD,CAAH,CAAO/B,WAAP,CAAmB9J,MAAnB,CAA0BwJ,QADJ;AAEhC+iB,sBAAM,EAAEiG,GAAG,CAAC3mB,CAAD,CAAH,CAAO/B,WAAP,CAAmBwiB,kBAAnB,CAAsC5B,QAAtC,EAAgD6B;AAFxB,eAApC;AAIH;;AAEDmG,gBAAI,GAAGC,QAAQ,CAAC7tB,IAAT,CAAc,KAAK8pC,qBAAL,CAA2BE,cAA3B,CAA0C,QAA1C,CAAd,CAAP;;AAEA,iBAAK,IAAIjjC,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG8mB,QAAQ,CAAChsB,MAA7B,EAAqCkF,GAAC,EAAtC,EAA0C;AACtC,mBAAK,IAAImnB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAAC7rB,MAAxB,EAAgCqsB,CAAC,EAAjC,EAAqC;AACjC,oBAAIN,IAAI,CAAC7mB,GAAD,CAAJ,CAAQrC,QAAR,IAAoBgpB,GAAG,CAACQ,CAAD,CAAH,CAAOlpB,WAAP,CAAmB9J,MAAnB,CAA0BwJ,QAAlD,EAA4D;AACxDqlC,qCAAmB,CAAClqC,IAApB,CAAyB6tB,GAAG,CAACQ,CAAD,CAA5B;AACA;AACH;AACJ;AACJ;;AAED,mBAAO6b,mBAAP;AACH;;;;;;;yBAjCQF,4B,EAA4B,+J,EAAA,0H;AAAA,O;;;eAA5BA,4B;AAA4B,iBAA5BA,4BAA4B,K;AAAA,oBAFzB;;;;;;;;;;;;;;;;;ACPhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAUalvB,Y;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTT;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCOKsvB,yB;AAKX,2CAAmB5wC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAbU0wC,yB,EAAyB,mJ,EAAA,yJ;AAAA,O;;;cAAzBA,yB;AAAyB,gD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,8J;AAAA;AAAA;ADZtC;;AACI;;;;AAGA;;;;AAIA;;AAAyC;;AAA+B;;AAC5E;;;;AARW;;AAAA;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEF/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAeaC,qC;AAKT,uDAAoB/oC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIY4wC,sBAJZ,EAKY9oC,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA4wC,sBAAA,GAAAA,sBAAA;AACA,eAAA9oC,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,0CAAiCoF,OAAjC,EAAmD;;;AAC/C,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,wBAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE4f,8BAA7C,MAA2E,IAA3E,IAA2E,aAA3E,GAA2E,MAA3E,GAA2E,GAAEqwB,2BAA7E,MAAwG,IAAxG,IAAwG,aAAxG,GAAwG,MAAxG,GAAwG,GAAEvoC,MAA1G,IAAmH,CAAvH,EAA0H;AACtH,mBAAKwoC,kCAAL;AACH,aAFD,MAGK;AACD,mBAAK7oC,GAAL,GAAW,KAAK8oC,iCAAL,GAAyCtoC,SAAzC,EAAX;AACH;AACJ;;;iBAEO,6CAAoC;AAAA;;AACxC,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE8X,4CAA8B,EAAE;AAAlC,aAAjD;AACA,iBAAK1gB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,gIAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,4CAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAoDF,GAApD,EAAyDG,IAAzD,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAAC6nC,oCAAL,CAA0C7nC,CAA1C;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAACipC,iBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAhqC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,6BAAoB;AACxB,iBAAK2pC,sBAAL,CAA4BK,iBAA5B,CAA8C,KAAKjpC,OAAnD;AACH;;;iBAEO,8CAAqC;;;AACzC,iBAAKgpC,oCAAL,CAA0C,CAAD,WAAC,KAAKjxC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI4f,8BAAxF;AACAnX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI4f,8BAA5D;;AACA,gBAAI,KAAKxY,OAAT,EAAkB;AACd,mBAAKipC,iBAAL;AACH;AACJ;;;iBAEO,8CAAqC9nC,CAArC,EAAwE;AAC5E,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAE8X,4CAA8B,EAAErX;AAAlC,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCopC,qCAAhC,EAAJ,EAA6E;AACzE,qBAAKpxC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;AACJ;;;;;;;yBA1EQ6nC,qC,EAAqC,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,iK,EAAA,0K;AAAA,O;;;eAArCA,qC;AAAqC,iBAArCA,qCAAqC,K;AAAA,oBAFlC;;;;;;;;;;;;;;;;;ACfhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYQ,uBAAZ;;AAAA,iBAAYA,uBAAZ,EAAmC;AAC/B;AACA;AACA;AACA;AACA;AACH,OAND,EAAYA,uBAAuB,KAAvBA,uBAAuB,MAAnC;;AAQO,eAASC,0BAAT,GAAmC;AAExC,eAAOD,uBAAP;AACD;;AAEM,eAASE,sCAAT,CAAgDvxC,eAAhD,EAAgF;;;AACnF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAND,MAOK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAAS8qC,iCAAT,CAA2CxqC,MAA3C,EAA2DhH,eAA3D,EAA2F;AAC9F,YAAIiH,mBAAJ;AACAsqC,8CAAsC,CAACvxC,eAAD,CAAtC,CAAwDkH,OAAxD,CAAgE,UAAAC,CAAC,EAAI;AACjE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;ACtDD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYwqC,wBAAZ;;AAAA,iBAAYA,wBAAZ,EAAoC;AAChC;AACA;AACH,OAHD,EAAYA,wBAAwB,KAAxBA,wBAAwB,MAApC;;AAKO,eAASC,2BAAT,GAAoC;AAEzC,eAAOD,wBAAP;AACD;;AAEM,eAASE,uCAAT,CAAiD3xC,eAAjD,EAAiF;;;AACpF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAHD,MAIK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASkrC,kCAAT,CAA4C5qC,MAA5C,EAA4DhH,eAA5D,EAA4F;AAC/F,YAAIiH,mBAAJ;AACA0qC,+CAAuC,CAAC3xC,eAAD,CAAvC,CAAyDkH,OAAzD,CAAiE,UAAAC,CAAC,EAAI;AAClE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7CD;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMS4qC,kC;AAEX,oDAAmB7xC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATU2xC,kC,EAAkC,mJ,EAAA,yJ;AAAA,O;;;cAAlCA,kC;AAAkC,yD;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADV/C;;;;AAGA;;;;AAIA;;AAAG;;AAA6C;;;;AAPzC;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AED3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAoBaC,mB;AAMT,qCAAoBhqC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYgL,qBAJZ,EAKYC,0BALZ,EAMY7D,UANZ,EAOYU,0BAPZ,EAQYwG,mBARZ,EASYpD,cATZ,EAS4C;AAAA;;;;AATxB,eAAAtD,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgL,qBAAA,GAAAA,qBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AACA,eAAA7D,UAAA,GAAAA,UAAA;AACA,eAAAU,0BAAA,GAAAA,0BAAA;AACA,eAAAwG,mBAAA,GAAAA,mBAAA;AACA,eAAApD,cAAA,GAAAA,cAAA;AAXZ,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAYC;;;;iBAED,wBAAeuI,QAAf,EAAiCnD,OAAjC,EAAmD;;;AAC/C,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAE2gB,YAAjD,EAA+D;AAC3D,mBAAKswB,gBAAL;AACH,aAFD,MAGK;AACD,mBAAK5pC,GAAL,GAAW,KAAK6pC,eAAL,GAAuBrpC,SAAvB,EAAX;AACH;AACJ;;;iBAEO,2BAAkB;AAAA;;AACtB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C6Y,0BAAY,EAAE;AAD+B,aAAjD;AAGA,iBAAKzhB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAK,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAL,gBAAoE,4FAApE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,mCAA0I,KAAKwI,QAA/I,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAkCF,GAAlC,EAAuCG,IAAvC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAAC4oC,kBAAL,CAAwB5oC,CAAxB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAAC0H,cAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAzI,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,0BAAiB;AACrB,iBAAKqH,mBAAL,CAAyBoB,cAAzB,CAAwC,KAAKvE,QAA7C,EAAuD,KAAKnD,OAA5D;AACH;;;iBAEO,4BAAmB;;;AACvB,iBAAK+pC,kBAAL,CAAwB,CAAD,WAAC,KAAKhyC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI2gB,YAAtE;AACAlY,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAI2gB,YAA5D;;AACA,gBAAI,KAAKvZ,OAAT,EAAkB;AACd,mBAAK0H,cAAL;AACH;AACJ;;;iBAEO,4BAAmBvG,CAAnB,EAAoC;;;AAExC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7C6Y,0BAAY,EAAEpY;AAD+B,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAE2gB,YAA7C,MAAyD,IAAzD,IAAyD,aAAzD,GAAyD,MAAzD,GAAyD,GAAE9V,WAA1F;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2J,sBAAhC,EAAJ,EAA8D;AAC1D,qBAAK3R,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,mBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,sBAAM,EAAE,EAAV;AAAcE,uBAAO,EAAE;AAAvB,eAA9C;AACH;;AAED,gBAAI,KAAKhJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC1D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0BC,SAAjG,EAA4G;AACxG,qBAAKrN,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAEO,CAAC,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C2gB,YAA5C,CAAyD9V,WAA1D,CAFP;AAIH;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0Bw9B,QAAjG,EAA2G;AACvG,qBAAK5qC,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAEO,CAAC,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C2gB,YAA5C,CAAyD9V,WAA1D,CAFP;AAIH;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0By9B,QAAjG,EAA2G;AACvG,qBAAK7qC,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAEO,CAAC,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C2gB,YAA5C,CAAyD9V,WAA1D,CAFP;AAIH;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0B09B,oBAAjG,EAAuH;AACnH,qBAAK9qC,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAEO,CAAC,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C2gB,YAA5C,CAAyD9V,WAA1D,CAFP;AAIH;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0BvI,KAAjG,EAAwG;AACpG,qBAAK7E,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAEO,CAAC,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C2gB,YAA5C,CAAyD9V,WAA1D,CAFP;AAIH;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0B29B,cAAjG,EAAiH;AAC7G,qBAAK/qC,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAEO,CAAC,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C2gB,YAA5C,CAAyD9V,WAA1D,CAFP;AAIH;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0B49B,OAAjG,EAA0G;AACtG,qBAAKhrC,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAEO,CAAC,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4C2gB,YAA5C,CAAyD9V,WAA1D,CAFP;AAIH;AACJ;AACJ;;;;;;;yBA/IQmmC,mB,EAAmB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,gK,EAAA,0K,EAAA,oI,EAAA,0K,EAAA,4J,EAAA,gJ;AAAA,O;;;eAAnBA,mB;AAAmB,iBAAnBA,mBAAmB,K;AAAA,oBAFhB;;;;;;;;;;;;;;;;;ACpBhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAUa9wB,a;;;;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACDA;;AACG;;AACG;;AAAY;;AAAuF;;AACnG;;AAAY;;AAAoH;;AAChI;;AACH;;AACH;;;;;;AAJkB;;AAAA;;AACA;;AAAA;;;;UDSLuxB,2B;AAMX,+CAAc;AAAA;;AALL,eAAAnC,WAAA,GAA2B,IAA3B;AAET,eAAAoC,YAAA,GAAe,8FAAf;AACA,eAAAxc,eAAA,GAAkB,oGAAlB;AAGC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAdUuc,2B;AAA2B,O;;;cAA3BA,2B;AAA2B,kD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,+C;AAAA;AAAA;ACZxC;;;;AAAgB;;;;;;;;;;;;;;;;;;;;;;ACEhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBaE,qB;AAKT,uCAAoB3qC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYwyC,sBAJZ,EAKY1qC,0BALZ,EAKoE;AAAA;;;;AALhD,eAAAF,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAwyC,sBAAA,GAAAA,sBAAA;AACA,eAAA1qC,0BAAA,GAAAA,0BAAA;AAPZ,eAAAC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAQC;;;;iBAED,0BAAiBoF,OAAjB,EAAmC;;;AAC/B,iBAAKA,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEqf,cAAjD,EAAiE;AAC/D,mBAAKwyB,kBAAL;AACD,aAFD,MAGK;AACH,mBAAKxqC,GAAL,GAAW,KAAKyqC,iBAAL,GAAyBjqC,SAAzB,EAAX;AACD;AACF;;;iBAEK,6BAAoB;AAAA;;AACxB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEuX,4BAAc,EAAE;AAAlB,aAAjD;AACA,iBAAKngB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,gGAArE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,4BAAP;AACA,mBAAO,KAAKiF,UAAL,CAAgBqB,GAAhB,CAAoCF,GAApC,EAAyCG,IAAzC,CACH,2DAAI,UAACC,CAAD,EAAuB;AACvB,qBAAI,CAACwpC,oBAAL,CAA0BxpC,CAA1B;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAAC4qC,iBAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAA3rC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,6BAAoB;AACxB,iBAAKurC,sBAAL,CAA4BI,iBAA5B,CAA8C,KAAK5qC,OAAnD;AACH;;;iBAEO,8BAAqB;;;AACzB,iBAAK2qC,oBAAL,CAA0B,CAAD,WAAC,KAAK5yC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIqf,cAAxE;AACA5W,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIqf,cAA5D;;AACA,gBAAI,KAAKjY,OAAT,EAAkB;AACd,mBAAK4qC,iBAAL;AACH;AACJ;;;iBAEO,8BAAqBzpC,CAArB,EAAwC;AAC5C,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEuX,4BAAc,EAAE9W;AAAlB,aAAjD;;AAEA,gBAAI,KAAKnB,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2B,iBAAhC,EAAJ,EAAyD;AACrD,qBAAK3J,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgC+qC,wBAAhC,EAAJ,EAAgE;AAC5D,qBAAK/yC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AAEJ;AACJ;;;;;;;yBA3EQypC,qB,EAAqB,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,iK,EAAA,0K;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSO,yB;AAIX,2CAAmBhzC,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUooC,yB,EAAyB,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,8J;AAAA;AAAA;ADdtC;;;;AAGA;;;;AAIA;;AAAyC;;AAAmC;;;;AAPrE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AED3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAqBaC,c;AAMX,gCAAoBnrC,UAApB,EACU9H,eADV,EAEUC,gBAFV,EAGUC,kBAHV,EAIUgL,qBAJV,EAKUC,0BALV,EAMU7D,UANV,EAOUU,0BAPV,EAQUoD,cARV,EAQ0C;AAAA;;;;AARtB,eAAAtD,UAAA,GAAAA,UAAA;AACV,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAgL,qBAAA,GAAAA,qBAAA;AACA,eAAAC,0BAAA,GAAAA,0BAAA;AACA,eAAA7D,UAAA,GAAAA,UAAA;AACA,eAAAU,0BAAA,GAAAA,0BAAA;AACA,eAAAoD,cAAA,GAAAA,cAAA;AAVV,eAAAnD,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAWC;;;;iBAED,mBAAUuI,QAAV,EAA4BnD,OAA5B,EAA8C;;;AAC5C,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEggB,OAAjD,EAA0D;AACxD,mBAAKoyB,WAAL;AACD,aAFD,MAGK;AACH,mBAAK/qC,GAAL,GAAW,KAAKgrC,UAAL,GAAkBxqC,SAAlB,EAAX;AACD;AACF;;;iBAEO,sBAAa;AAAA;;AACnB,gBAAInB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/CkY,qBAAO,EAAE;AADsC,aAAjD;AAGA,iBAAK9gB,eAAL,CAAqB6I,cAArB,CAA8C;AAC5CC,oBAAM,YAAM,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAN,gBAAqE,wFAArE,CADsC;AAE5Ce,qBAAO,EAAE;AAFmC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,8BAAqI,KAAKwI,QAA1I,OAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAA6BF,GAA7B,EAAkCG,IAAlC,CACL,2DAAI,UAACC,CAAD,EAAY;AACd,qBAAI,CAAC+pC,aAAL,CAAmB/pC,CAAnB;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB,CAChB;AACD;AACF,aAND,CADK,EAQL,kEAAW,UAAAf,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAClC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACD,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARK,CAAP;AAaD;;;iBAEO,uBAAc;;;AACpB,iBAAKisC,aAAL,CAAmB,CAAD,WAAC,KAAKnzC,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIggB,OAAjE;AACAvX,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIggB,OAA5D;;AACA,gBAAI,KAAK5Y,OAAT,EAAkB,CAChB;AACD;AACF;;;iBAEO,uBAAcmB,CAAd,EAA0B;;;AAEhC,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC/CkY,qBAAO,EAAEzX;AADsC,aAAjD;AAIA,iBAAK+B,cAAL,CAAoBM,UAApB,CAA+B,CAAD,WAAC,KAAKzL,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAD,MAA4C,IAA5C,IAA4C,aAA5C,GAA4C,MAA5C,GAA4C,GAAEggB,OAA7C,MAAoD,IAApD,IAAoD,aAApD,GAAoD,MAApD,GAAoD,GAAEnV,WAArF;;AAEA,gBAAI,KAAKzD,OAAT,EAAkB;AAChB,kBAAI,KAAKF,0BAAL,CAAgCqrC,iBAAhC,EAAJ,EAAyD;AACvD,qBAAKrzC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACD;AACF,aAJD,MAKK;AACH,mBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,sBAAM,EAAE,EAAV;AAAcE,uBAAO,EAAE;AAAvB,eAA9C;AACD;;AAED,gBAAI,KAAKhJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC5D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwT,gBAA1C,IAA8D,kGAAqBC,OAAvF,EAAgG;AAC9F,qBAAKjN,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CggB,OAA5C,CAAoDwyB,qBADzD,GAEK,CAAC,KAAKrzC,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CggB,OAA5C,CAAoDnV,WAArD,CAFL;AAID;;AAED,kBAAI,KAAK3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwT,gBAA1C,IAA8D,kGAAqBnI,KAAvF,EAA8F;AAC5F,qBAAK7E,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,8BACK,KAAKhM,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CggB,OAA5C,CAAoDwyB,qBADzD,GAEK,CAAC,KAAKrzC,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CggB,OAA5C,CAAoDnV,WAArD,CAFL;AAID;AACF;AACF;;;;;;;yBAlGUsnC,c,EAAc,uH,EAAA,0I,EAAA,4I,EAAA,gJ,EAAA,gK,EAAA,0K,EAAA,oI,EAAA,0K,EAAA,gJ;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFb;;;;;;;;;;;;;;;;;ACrBd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAUa5xB,c;;;;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMakyB,e;AAEX,iCAAoBvzC,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AACnB;;;;iBAED,qBAAYi6B,MAAZ,EAA4B;AAC1B,mBAAO,gGAAqBA,MAArB,EAA6B,KAAKj6B,eAAlC,CAAP;AACD;;;;;;;yBAPUuzC,e,EAAe,0I;AAAA,O;;;eAAfA,e;AAAe,iBAAfA,eAAe,K;AAAA,oBAFd;;;;;;;;;;;;;;;;;ACJd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACAI;;AACI;;AAAM;;AAA2H;;AACjI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,uGAA4B,aAA5B,EAA4B,kBAA5B;;;;;;AAGpB;;AACI;;AAAM;;AAA8H;;AACpI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,0GAA+B,aAA/B,EAA+B,kBAA/B;;;;;;AAGpB;;AACI;;AAAM;;AAA+H;;AACrI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,+GAAoC,aAApC,EAAoC,kBAApC;;;;;;AAGpB;;AACI;;AAAM;;AAA6H;;AACnI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,yGAA8B,aAA9B,EAA8B,kBAA9B;;;;;;AAGpB;;AACI;;AAAM;;AAA4H;;AAClI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,wGAA6B,aAA7B,EAA6B,kBAA7B;;;;;;AAGpB;;AACI;;AAAM;;AAAkI;;AACxI;;AAEJ;;;;;;AAHU;;AAAA;;AACU;;AAAA,8GAAmC,aAAnC,EAAmC,kBAAnC;;;;UDfXC,6B;AAIX,+CAAmBxzC,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;eAED,eAAc;AACZ,mBAAO,6EAAP;AACD;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAhBUszC,6B,EAA6B,mJ,EAAA,yJ;AAAA,O;;;cAA7BA,6B;AAA6B,oD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,2D;AAAA;AAAA;ACb1C;;AACI;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AAKA;;AACJ;;;;AA/BW;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACxBX;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAcaC,4B;AAQX,8CAAmBzzC,eAAnB,EACSC,gBADT,EAESi8B,eAFT,EAGSh8B,kBAHT,EAISqH,iBAJT,EAKUgjC,EALV,EAK2B;AAAA;;AALR,eAAAvqC,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAi8B,eAAA,GAAAA,eAAA;AACA,eAAAh8B,kBAAA,GAAAA,kBAAA;AACA,eAAAqH,iBAAA,GAAAA,iBAAA;AACC,eAAAgjC,EAAA,GAAAA,EAAA;AARV,eAAA/iC,YAAA,GAAe,8FAAf;AAQ8B;;;;iBAE9B,oBAAQ;AACN,iBAAK+kB,QAAL,GAAwB,KAAKvsB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAlE;AACA,iBAAK6wC,eAAL,GAAuB,KAAKnJ,EAAL,CAAQE,KAAR,CAAc;AACnCj3B,mCAAqB,EAAE,CAAE;AAAE+Q,qBAAK,EAAE,KAAKvkB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0S,qBAAnD;AAA0EmgC,wBAAQ,EAAE;AAApF,eAAF,CADY;AAEnClgC,qCAAuB,EAAE,CAAC,KAAKzT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C2S,uBAA3C,CAFU;AAGnCC,oCAAsB,EAAE,CAAC,KAAK1T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4S,sBAA3C,CAHW;AAInCC,oCAAsB,EAAE,CAAC,KAAK3T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6S,sBAA3C,CAJW;AAKnCC,wCAA0B,EAAE,CAAC,KAAK5T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8S,0BAA3C,CALO;AAMnCC,uCAAyB,EAAE,CAAC,KAAK7T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+S,yBAA3C,CANQ;AAOnCC,0CAA4B,EAAE,CAAC,KAAK9T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgT,4BAA3C,CAPK;AAQnCC,2CAA6B,EAAE,CAAC,KAAK/T,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CiT,6BAA3C;AARI,aAAd,CAAvB;AAUD;;;iBAED,uBAAW,CACV;;;;;;;yBA9BU0/B,4B,EAA4B,mJ,EAAA,qJ,EAAA,0J,EAAA,yJ,EAAA,+J,EAAA,2H;AAAA,O;;;cAA5BA,4B;AAA4B,kD;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,slB;AAAA;AAAA;AChBzC;;AACI;;AAAc;AAAA,qBAAS,IAAAvX,eAAA,8BAAT;AAAsD,aAAtD;;AAEV;;AAAsH;;AAC1H;;AAAc;AAAA,qBAAS,IAAAA,eAAA,gCAAT;AAAwD,aAAxD;;AAEV;;AAAoH;;AACxH;;AAAc;AAAA,qBAAS,IAAAA,eAAA,+BAAT;AAAuD,aAAvD;;AAEV;;AAAiH;;AACrH;;AAAc;AAAA,qBAAS,IAAAA,eAAA,+BAAT;AAAuD,aAAvD;;AAEV;;AAA4G;;AAChH;;AAAc;AAAA,qBAAS,IAAAA,eAAA,mCAAT;AAA2D,aAA3D;;AAGV;;AAA4G;;AAChH;;AAAc;AAAA,qBAAS,IAAAA,eAAA,kCAAT;AAA0D,aAA1D;;AAEV;;AAA+G;;AACnH;;AAAc;AAAA,qBAAS,IAAAA,eAAA,qCAAT;AAA6D,aAA7D;;AAGV;;AAAmH;;AACvH;;AAAc;AAAA,qBAAS,IAAAA,eAAA,sCAAT;AAA8D,aAA9D;;AAGV;;AAAoH;;AAC5H;;;;;;;;;;;;;;;;;;;;;AA5BM;;AAEE;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;AAGA;;AAAA;;AACA;;AAAA;;;;;;;;;;;;;;;;;;;;;;ACzBR;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAea0X,sB;AACX,wCAAoB3zC,gBAApB,EACUD,eADV,EAEUqO,cAFV,EAGUvE,iBAHV,EAIUyE,sBAJV,EAKUH,kBALV,EAMUD,cANV,EAOUG,gBAPV,EAQUnO,mBARV,EAQkD;AAAA;;AAR9B,eAAAF,gBAAA,GAAAA,gBAAA;AACV,eAAAD,eAAA,GAAAA,eAAA;AACA,eAAAqO,cAAA,GAAAA,cAAA;AACA,eAAAvE,iBAAA,GAAAA,iBAAA;AACA,eAAAyE,sBAAA,GAAAA,sBAAA;AACA,eAAAH,kBAAA,GAAAA,kBAAA;AACA,eAAAD,cAAA,GAAAA,cAAA;AACA,eAAAG,gBAAA,GAAAA,gBAAA;AACA,eAAAnO,mBAAA,GAAAA,mBAAA;AAET;;;;iBAED,+BAAsB0zC,aAAtB,EAA2DC,OAA3D,EAAiF;AAC/E,oBAAQD,aAAR;AACE,mBAAK,kGAAqBhV,WAA1B;AACE,qBAAK7+B,eAAL,CAAqB6I,cAArB,CAA8C;AAAEmR,sCAAoB,EAAE85B;AAAxB,iBAA9C;AACA,qBAAKzlC,cAAL,CAAoBiB,SAApB,CAA8B,KAAKtP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAxE,EAAyF,IAAzF;AACA;;AACF,mBAAK,kGAAqBm+B,gBAA1B;AACE,qBAAKl/B,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuR,2CAAyB,EAAE05B;AAA7B,iBAA9C;AACA,qBAAKhqC,iBAAL,CAAuBE,YAAvB,CAAoC,KAAKhK,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA9E,EAA+F,IAA/F;AACA;;AACF,mBAAK,kGAAqBgzC,yBAA1B;AACE,qBAAK/zC,eAAL,CAAqB6I,cAArB,CAA8C;AAAE8R,oDAAkC,EAAEm5B;AAAtC,iBAA9C;AACA,qBAAKvlC,sBAAL,CAA4BiB,iBAA5B,CAA8C,KAAKxP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAxF,EAAyG,IAAzG;AACA;;AACF,mBAAK,kGAAqBggC,aAA1B;AACE,qBAAK/gC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEqS,wCAAsB,EAAE44B;AAA1B,iBAA9C;AACA,qBAAK1lC,kBAAL,CAAwB4B,aAAxB,CAAsC,KAAKhQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACA;;AACF,mBAAK,kGAAqBkgC,sBAA1B;AACE,qBAAKjhC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEwS,iDAA+B,EAAEy4B;AAAnC,iBAA9C;AACA,qBAAK1lC,kBAAL,CAAwB4B,aAAxB,CAAsC,KAAKhQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACA;;AACF,mBAAK,kGAAqB4gC,aAA1B;AACE,qBAAK3hC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEyS,wCAAsB,EAAEw4B;AAA1B,iBAA9C;AACA,qBAAK3lC,cAAL,CAAoB+B,SAApB,CAA8B,IAA9B;AACA;;AACF,mBAAK,kGAAqBkzB,gBAA1B;AACE,qBAAKpjC,eAAL,CAAqB6I,cAArB,CAA8C;AAAE+S,2CAAyB,EAAEk4B;AAA7B,iBAA9C;AACA,qBAAKxlC,gBAAL,CAAsB8B,WAAtB,CAAkC,KAAKpQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5E,EAA6F,IAA7F;AACA;;AACF,mBAAK,kGAAqBizC,mBAA1B;AACE,qBAAKh0C,eAAL,CAAqB6I,cAArB,CAA8C;AAAE8S,8CAA4B,EAAEm4B;AAAhC,iBAA9C;AACA,qBAAK3zC,mBAAL,CAAyBS,cAAzB,CAAwC,KAAKZ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACA;;AACF,mBAAK,kGAAqB4iC,kBAA1B;AACE,qBAAK3jC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEoT,6CAA2B,EAAE63B;AAA/B,iBAA9C;AACA,qBAAK3zC,mBAAL,CAAyBS,cAAzB,CAAwC,KAAKZ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACA;;AACF,mBAAK,kGAAqBgjC,iBAA1B;AACE,qBAAK/jC,eAAL,CAAqB6I,cAArB,CAA8C;AAAEkT,4CAA0B,EAAE+3B;AAA9B,iBAA9C;AACA,qBAAK3zC,mBAAL,CAAyBS,cAAzB,CAAwC,KAAKZ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACA;;AACF,mBAAK,kGAAqBkzC,uBAA1B;AACE,qBAAKj0C,eAAL,CAAqB6I,cAArB,CAA8C;AAAEqT,kDAAgC,EAAE43B;AAApC,iBAA9C;AACA,qBAAK3zC,mBAAL,CAAyBS,cAAzB,CAAwC,KAAKZ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACA;;AACF;AACEuP,qBAAK,WAAIujC,aAAJ,uFAAL;AACA;AA/CJ;AAiDD;;;;;;;yBA/DUD,sB,EAAsB,4I,EAAA,0I,EAAA,gJ,EAAA,sJ,EAAA,+I,EAAA,wJ,EAAA,gJ,EAAA,oJ,EAAA,2J;AAAA,O;;;eAAtBA,sB;AAAsB,iBAAtBA,sBAAsB,K;AAAA,oBAFrB;;;;;;;;;;;;;;;;;ACbd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAUaM,qB;AACT,uCAAoBl0C,eAApB,EACYywC,qBADZ,EAEYrc,sBAFZ,EAE4D;AAAA;;AAFxC,eAAAp0B,eAAA,GAAAA,eAAA;AACR,eAAAywC,qBAAA,GAAAA,qBAAA;AACA,eAAArc,sBAAA,GAAAA,sBAAA;AACX;;;;iBAED,wBAAeC,GAAf,EAAmC8f,UAAnC,EAA4D;AACxD,gBAAI,CAAC9f,GAAD,IAAQA,GAAG,CAAC7rB,MAAJ,IAAc,CAA1B,EAA6B,OAAO6rB,GAAP;AAC7B,gBAAI,CAAC8f,UAAD,IAAeA,UAAU,CAAC3rC,MAAX,IAAqB,CAAxC,EAA2C,OAAO6rB,GAAP;AAE3C,gBAAInlB,MAAM,GAAeilC,UAAU,CAACA,UAAU,CAAC3rC,MAAX,GAAoB,CAArB,CAAV,CAAkC3G,MAAlC,CAAyCqN,MAAlE;AACA,gBAAIklC,YAAY,GAAe/f,GAAG,CAAC,CAAD,CAAH,CAAOxyB,MAAP,CAAcqN,MAA7C;AACA,gBAAImlC,OAAO,GAAgB,gFAAYp6B,SAAvC;;AAEA,oBAAQ/K,MAAR;AACI,mBAAK,8EAAWG,IAAhB;AACI;AACI,0BAAQ+kC,YAAR;AACI,yBAAK,8EAAWjkC,MAAhB;AACI;AACIkkC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkZ,oBAApD;AACH;AACD;;AACJ;AACI;AACI1J,6BAAK,WAAI,8EAAW8jC,YAAX,CAAJ,0GAAL;AACH;AACD;AAVR;AAYH;AACD;;AACJ,mBAAK,8EAAWjlC,OAAhB;AACI;AACI,0BAAQilC,YAAR;AACI,yBAAK,8EAAWrkC,QAAhB;AACI;AACIskC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsZ,yBAApD;AACH;AACD;;AACJ;AACI;AACI9J,6BAAK,WAAI,8EAAW8jC,YAAX,CAAJ,6GAAL;AACH;AACD;AAVR;AAYH;AACD;;AACJ,mBAAK,8EAAW7kC,YAAhB;AACI;AACI,0BAAQ6kC,YAAR;AACI,yBAAK,8EAAWjtB,cAAhB;AACI;AACIktB,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4Z,oCAApD;AACH;AACD;;AACJ,yBAAK,8EAAWgN,YAAhB;AACI;AACI2sB,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6Z,kCAApD;AACH;AACD;;AACJ;AACI;AACIrK,6BAAK,WAAI,8EAAW8jC,YAAX,CAAJ,8GAAL;AACH;AACD;AAfR;AAiBH;AACD;;AACJ,mBAAK,8EAAWrkC,QAAhB;AACI;AACI,0BAAQqkC,YAAR;AACI,yBAAK,8EAAW/kC,IAAhB;AACI;AACIglC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0Coa,sBAApD;AACH;AACD;;AACJ,yBAAK,8EAAW3L,YAAhB;AACI;AACI8kC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0Cua,+BAApD;AACH;AACD;;AACJ;AACI;AACI/K,6BAAK,WAAI,8EAAW8jC,YAAX,CAAJ,8GAAL;AACH;AACD;AAfR;AAiBH;AACD;;AACJ,mBAAK,8EAAWnkC,IAAhB;AACI;AACI,0BAAQmkC,YAAR;AACI,yBAAK,8EAAWjlC,OAAhB;AACI;AACIklC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0Cwa,sBAApD;AACH;AACD;;AACJ;AACI;AACIhL,6BAAK,WAAI,8EAAW8jC,YAAX,CAAJ,0GAAL;AACH;AACD;AAVR;AAYH;AACD;;AACJ,mBAAK,8EAAWjkC,MAAhB;AACI;AACI,0BAAQikC,YAAR;AACI,yBAAK,8EAAW/jC,SAAhB;AACI;AACIgkC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8a,yBAApD;AACH;AACD;;AACJ,yBAAK,8EAAW8L,YAAhB;AACI;AACI2sB,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6a,4BAApD;AACH;AACD;;AACJ;AACI;AACIrL,6BAAK,WAAI,8EAAW8jC,YAAX,CAAJ,4GAAL;AACH;AACD;AAfR;AAiBH;AACD;;AACJ,mBAAK,8EAAW/jC,SAAhB;AACI;AACI,0BAAQ+jC,YAAR;AACI,yBAAK,8EAAWzkC,QAAhB;AACI;AACI0kC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0Cmb,2BAApD;AACH;AACD;;AACJ,yBAAK,8EAAWxM,OAAhB;AACI;AACI4kC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0Cib,0BAApD;AACH;AACD;;AACJ,yBAAK,8EAAWlM,aAAhB;AACI;AACIwkC,+BAAO,GAAG,KAAKr0C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0Cob,gCAApD;AACH;AACD;;AACJ;AACI;AACI5L,6BAAK,WAAI,8EAAW8jC,YAAX,CAAJ,+GAAL;AACH;AACD;AApBR;AAsBH;AACD;;AACJ;AACI;AACI9jC,uBAAK,WAAI,8EAAWpB,MAAX,CAAJ,wFAAL;AACH;AACD;AA9IR;;AAiJA,gBAAIolC,wBAAwB,GAAkB,EAA9C;AACA,gBAAI/f,IAAI,GAA2B,EAAnC;AACA,gBAAIC,QAAQ,GAA2B,EAAvC;;AAEA,iBAAK,IAAI9mB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2mB,GAAG,CAAC7rB,MAAxB,EAAgCkF,CAAC,EAAjC,EAAqC;AACjC8mB,sBAAQ,CAAChuB,IAAT,CAAoC;AAChC6E,wBAAQ,EAAEgpB,GAAG,CAAC3mB,CAAD,CAAH,CAAO7L,MAAP,CAAcwJ,QADQ;AAEhC+iB,sBAAM,EAAEiG,GAAG,CAAC3mB,CAAD,CAAH,CAAOygB,kBAAP,CAA0B,KAAKnuB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAApE,EAA8EurB,MAA9E,CAAqFuG,WAArF;AAFwB,eAApC;AAIH;;AAED,gBAAI0f,OAAO,IAAI,gFAAYp6B,SAA3B,EAAsC;AAClCsa,kBAAI,GAAGC,QAAQ,CAAC7tB,IAAT,CAAc,KAAK8pC,qBAAL,CAA2BE,cAA3B,CAA0C,QAA1C,CAAd,CAAP;AACH,aAFD,MAGK;AACDpc,kBAAI,GAAGC,QAAQ,CAAC7tB,IAAT,CAAc,KAAKytB,sBAAL,CAA4BQ,eAA5B,CAA4C,QAA5C,CAAd,CAAP;AACH;;AAED,iBAAK,IAAIlnB,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAG8mB,QAAQ,CAAChsB,MAA7B,EAAqCkF,IAAC,EAAtC,EAA0C;AACtC,mBAAK,IAAImnB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAAC7rB,MAAxB,EAAgCqsB,CAAC,EAAjC,EAAqC;AACjC,oBAAIN,IAAI,CAAC7mB,IAAD,CAAJ,CAAQrC,QAAR,IAAoBgpB,GAAG,CAACQ,CAAD,CAAH,CAAOhzB,MAAP,CAAcwJ,QAAtC,EAAgD;AAC5CipC,0CAAwB,CAAC9tC,IAAzB,CAA8B6tB,GAAG,CAACQ,CAAD,CAAjC;AACA;AACH;AACJ;AACJ;;AAED,mBAAOyf,wBAAP;AACH;;;;;;;yBA3LQJ,qB,EAAqB,0H,EAAA,+J,EAAA,iK;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSK,oB;AAEX,sCAAmBv0C,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATUq0C,oB,EAAoB,mJ,EAAA,yJ;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVjC;;;;AAGA;;;;AAIA;;AAAG;;AAA6B;;;;AAPzB;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,oBAAZ;;AAAA,iBAAYA,oBAAZ,EAAgC;AAC5B;AACA;AACH,OAHD,EAAYA,oBAAoB,KAApBA,oBAAoB,MAAhC;;AAKO,eAASC,uBAAT,GAAgC;AAErC,eAAOD,oBAAP;AACD;;AAEM,eAASE,mCAAT,CAA6C10C,eAA7C,EAA6E;;;AAChF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAHD,MAIK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASiuC,8BAAT,CAAwC3tC,MAAxC,EAAwDhH,eAAxD,EAAwF;AAC3F,YAAIiH,mBAAJ;AACAytC,2CAAmC,CAAC10C,eAAD,CAAnC,CAAqDkH,OAArD,CAA6D,UAAAC,CAAC,EAAI;AAC9D,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AC7CD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAY2tC,wBAAZ;;AAAA,iBAAYA,wBAAZ,EAAoC;AAChC;AACA;AACA;AACA;AACA;AACA;AACH,OAPD,EAAYA,wBAAwB,KAAxBA,wBAAwB,MAApC;;AASO,eAASC,2BAAT,GAAoC;AAEzC,eAAOD,wBAAP;AACD;;AAEM,eAASE,uCAAT,CAAiD90C,eAAjD,EAAiF;;;AACpF,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAPD,MAQK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASquC,kCAAT,CAA4C/tC,MAA5C,EAA4DhH,eAA5D,EAA4F;AAC/F,YAAIiH,mBAAJ;AACA6tC,+CAAuC,CAAC90C,eAAD,CAAvC,CAAyDkH,OAAzD,CAAiE,UAAAC,CAAC,EAAI;AAClE,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;ACtDD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgBa+tC,c;AACT,gCAAoBh1C,eAApB,EACYC,gBADZ,EAEYoO,cAFZ,EAGYvE,iBAHZ,EAIYyE,sBAJZ,EAKYC,mBALZ,EAMYC,kBANZ,EAOYC,wBAPZ,EAQYN,kBARZ,EASYD,cATZ,EAUYG,gBAVZ,EAWYnO,mBAXZ,EAWoD;AAAA;;AAXhC,eAAAH,eAAA,GAAAA,eAAA;AACR,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAoO,cAAA,GAAAA,cAAA;AACA,eAAAvE,iBAAA,GAAAA,iBAAA;AACA,eAAAyE,sBAAA,GAAAA,sBAAA;AACA,eAAAC,mBAAA,GAAAA,mBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAC,wBAAA,GAAAA,wBAAA;AACA,eAAAN,kBAAA,GAAAA,kBAAA;AACA,eAAAD,cAAA,GAAAA,cAAA;AACA,eAAAG,gBAAA,GAAAA,gBAAA;AACA,eAAAnO,mBAAA,GAAAA,mBAAA;AAGX;;;;iBAED,wBAAY;AACR,iBAAKH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEuM,2BAAa,EAAE,CAAC,KAAKpV,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsU,aAA5D;AAA2EpM,qBAAO,EAAE;AAApF,aAA9C;AACH;;;iBAED,wBAAemT,QAAf,EAAiC;AAC7B,iBAAKnc,eAAL,CAAqB6I,cAArB,CAA8C;AAAE0M,0BAAY,EAAE,CAAC,KAAKvV,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyU;AAA3D,aAA9C;AACA,iBAAK0/B,UAAL,CAAgB94B,QAAhB;AACH;;;iBAED,4BAAgB;AACZ,iBAAKnc,eAAL,CAAqB6I,cAArB,CAA8C;AAAEyM,+BAAiB,EAAE,CAAC,KAAKtV,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwU,iBAAhE;AAAmFtM,qBAAO,EAAE;AAA5F,aAA9C;AACH;;;iBAED,qBAAS;AACL,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAE6M,wBAAU,EAAE,CAAC,KAAK1V,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4U;AAAzD,aAA9C;AACH;;;iBAED,sBAAU;AACN,iBAAK1V,eAAL,CAAqB6I,cAArB,CAA8C;AAAE2M,yBAAW,EAAE,CAAC,KAAKxV,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0U;AAA1D,aAA9C;AACH;;;iBAED,2BAAe;AACX,iBAAKxV,eAAL,CAAqB6I,cAArB,CAA8C;AAAEwM,8BAAgB,EAAE,CAAC,KAAKrV,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuU,gBAA/D;AAAiFrM,qBAAO,EAAE;AAA1F,aAA9C;AACH;;;iBAED,sBAAU;AACN,iBAAKhJ,eAAL,CAAqB6I,cAArB,CAA8C;AAAE4M,yBAAW,EAAE,CAAC,KAAKzV,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C2U,WAA1D;AAAuEzM,qBAAO,EAAE;AAAhF,aAA9C;AACH;;;iBAED,uBAAcmT,QAAd,EAA+B;AAC3B,iBAAKnc,eAAL,CAAqB6I,cAArB,CAA8C;AAAE8M,4BAAc,EAAE,CAAC,KAAK3V,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6U,cAA7D;AAA6E3M,qBAAO,EAAE;AAAtF,aAA9C;AACA,iBAAKisC,UAAL,CAAgB94B,QAAhB;AACH;;;iBAEO,oBAAWA,QAAX,EAA6B;AAEjC,oBAAQA,QAAQ,CAAC/M,iBAAjB;AACI,mBAAK,oGAAsBC,IAA3B;AACI;AACI,uBAAKhB,cAAL,CAAoBiB,SAApB,CAA8B,KAAKtP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAxE,EAAyF,IAAzF;AACH;AACD;;AACJ,mBAAK,oGAAsBoO,OAA3B;AACI;AACI,uBAAKrF,iBAAL,CAAuBE,YAAvB,CAAoC,KAAKhK,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA9E,EAA+F,IAA/F;AACH;AACD;;AACJ,mBAAK,oGAAsBwO,YAA3B;AACI;AACI,uBAAKhB,sBAAL,CAA4BiB,iBAA5B,CAA8C,KAAKxP,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAxF,EAAyG,IAAzG;AACH;AACD;;AACJ,mBAAK,oGAAsB0O,OAA3B;AACI;AACI,uBAAKhB,kBAAL,CAAwBiB,aAAxB,CAAsC,KAAK1P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACH;AACD;;AACJ,mBAAK,oGAAsB4O,QAA3B;AACI;AACI,uBAAKnB,mBAAL,CAAyBoB,cAAzB,CAAwC,KAAK5P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACH;AACD;;AACJ,mBAAK,oGAAsB8O,aAA3B;AACI;AACI,uBAAKnB,wBAAL,CAA8BoB,mBAA9B,CAAkD,KAAK9P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5F,EAA6G,IAA7G;AACH;AACD;;AACJ,mBAAK,oGAAsBgP,QAA3B;AACI;AACI,uBAAK3B,kBAAL,CAAwB4B,aAAxB,CAAsC,KAAKhQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACH;AACD;;AACJ,mBAAK,oGAAsBkP,IAA3B;AACI;AACI,uBAAK9B,cAAL,CAAoB+B,SAApB,CAA8B,IAA9B;AACH;AACD;;AACJ,mBAAK,oGAAsBC,MAA3B;AACI;AACI,uBAAK7B,gBAAL,CAAsB8B,WAAtB,CAAkC,KAAKpQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5E,EAA6F,IAA7F;AACH;AACD;;AACJ,mBAAK,oGAAsBsP,SAA3B;AACI;AACI,uBAAKlQ,mBAAL,CAAyBS,cAAzB,CAAwC,KAAKZ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAlF,EAAmG,IAAnG;AACH;AACD;;AACJ;AACI,iBAEC;AACD;AAvDR;AAyDH;;;;;;;yBA9GQi0C,c,EAAc,0I,EAAA,4H,EAAA,gJ,EAAA,sJ,EAAA,+J,EAAA,2J,EAAA,yJ,EAAA,sK,EAAA,yJ,EAAA,iJ,EAAA,qJ,EAAA,2J;AAAA,O;;;eAAdA,c;AAAc,iBAAdA,cAAc,K;AAAA,oBAFX;;;;;;;;;;;;;;;;;AChBhB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKY;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAEJ;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;AAIR;;;;;;AAA8E,mFAAe,aAAf,EAAe,qBAAf;;;;;;AAE9E;;;;;;AACI;;;;;;AAGR;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AACI,yGAAkC,UAAlC,EAAkC,eAAlC;;;;;;AAGJ;;;;;;;;AAAqC,gGAAqB,aAArB,EAAqB,qBAArB;;;;;;;;AA5BzC;;AACI;;AAGA;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,QAAA3tC,cAAA,kCAAT;AAAsD,WAAtD;;AACf;;AACI;;AAGA;;AAGA;;AACJ;;AACA;;AAEA;;AAEJ;;AAEA;;AAIA;;AAIA;;AAGJ;;;;;;;;;;;;AA9BqB;;AAAA,yGAAkC,UAAlC,EAAkC,eAAlC;;AAIP;;AAAA;;AACK;;AAAA;;AAGA;;AAAA;;AAGP;;AAAA;;AAEa;;AAAA;;AAEe;;AAAA;;AAIP;;AAAA;;AAIA;;AAAA;;AAI+B;;AAAA;;;;UDbnD6tC,mC;AAOX,qDAAmBl1C,eAAnB,EACSqH,cADT,EAESC,UAFT,EAGSsD,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAsD,iBAAA,GAAAA,iBAAA;AATA,eAAA4B,eAAA,GAAiC,EAAjC;AACA,eAAAC,YAAA,GAAwB,KAAxB;AAGT,eAAAjF,YAAA,GAAe,8FAAf;AAMC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;;;;;yBAlBU0tC,mC,EAAmC,mJ,EAAA,yJ,EAAA,4I,EAAA,+J;AAAA,O;;;cAAnCA,mC;AAAmC,0D;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,sX;AAAA;AAAA;ACfhD;;;;AAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzC;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCSSC,0B;AAIX,4CAAmBn1C,eAAnB,EACSE,kBADT,EAEUwO,wBAFV,EAE8D;AAAA;;AAF3C,eAAA1O,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACC,eAAAwO,wBAAA,GAAAA,wBAAA;AAAuD;;;;iBAEjE,oBAAQ;AACN,iBAAKA,wBAAL,CAA8BoB,mBAA9B,CAAkD,KAAK9P,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAA5F,EAA6G,IAA7G;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAbUo0C,0B,EAA0B,mJ,EAAA,yJ,EAAA,+K;AAAA,O;;;cAA1BA,0B;AAA0B,iD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADbvC;;;;AAGA;;;;AAIA;;AAAG;;AAAqC;;;;AAPjC;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UAYa7pC,U;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCIA8pC,+B;AAEX,iDAAoBp1C,eAApB,EAAsD;AAAA;;AAAlC,eAAAA,eAAA,GAAAA,eAAA;AACnB;;;;iBAED,4BAAmBupB,gBAAnB,EAA2D;AACzD,gBAAI,KAAKvpB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwT,gBAA1C,IAA8DiV,gBAAlE,EAAoF;AAClF,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,+BAAsBC,mBAAtB,EAAoE;AAClE,gBAAI,KAAKxpB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgL,mBAA1C,IAAiE0d,mBAArE,EAA0F;AACxF,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,oCAA2BC,wBAA3B,EAAmF;AACjF,gBAAI,KAAKzpB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C8T,wBAA1C,IAAsE6U,wBAA1E,EAAoG;AAClG,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,+BAAsBC,mBAAtB,EAAoE;AAClE,gBAAI,KAAK1pB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkU,mBAA1C,IAAiE0U,mBAArE,EAA0F;AACxF,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,gCAAuBC,oBAAvB,EAAuE;AACrE,gBAAI,KAAK3pB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgU,oBAA1C,IAAkE6U,oBAAtE,EAA4F;AAC1F,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,qCAA4BC,yBAA5B,EAAsF;AACpF,gBAAI,KAAK5pB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CmU,yBAA1C,IAAuE2U,yBAA3E,EAAsG;AACpG,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,gCAAuBC,oBAAvB,EAAuE;AACrE,gBAAI,KAAK7pB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsT,oBAA1C,IAAkEyV,oBAAtE,EAA4F;AAC1F,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,4BAAmBC,gBAAnB,EAA2D;AACzD,gBAAI,KAAK9pB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C,kBAA1C,KAAiEgpB,gBAArE,EAAuF;AACrF,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,8BAAqBC,kBAArB,EAAiE;AAC/D,gBAAI,KAAK/pB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0T,kBAA1C,IAAgEuV,kBAApE,EAAwF;AACtF,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;iBAED,iCAAwBC,qBAAxB,EAA0E;AACxE,gBAAI,KAAKhqB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmEsV,qBAAvE,EAA8F;AAC5F,qBAAO,UAAP;AACD,aAFD,MAGK;AACH,qBAAO,EAAP;AACD;AACF;;;;;;;yBA7FUorB,+B,EAA+B,0I;AAAA,O;;;eAA/BA,+B;AAA+B,iBAA/BA,+BAA+B,K;AAAA,oBAF9B;;;;;;;;;;;;;;;;;ACbd;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYaC,qC;AAIX,uDAAmBr1C,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACR;;;;eAED,eAAc;AACZ,mBAAO,6EAAP;AACD;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAhBUm1C,qC,EAAqC,mJ,EAAA,yJ;AAAA,O;;;cAArCA,qC;AAAqC,6D;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA;AAAA;ACRlD;;AACI;;AAAM;;AAAyC;;AAC/C;;AACJ;;;;;;;;;;;;;;;;;;;;;ACNA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAgCaC,qB;AAMT,uCAAoBxtC,UAApB,EACY9H,eADZ,EAEYC,gBAFZ,EAGYC,kBAHZ,EAIYq1C,sBAJZ,EAKYC,wBALZ,EAMYluC,UANZ,EAOYU,0BAPZ,EAQYytC,kCARZ,EAQoF;AAAA;;;;AARhE,eAAA3tC,UAAA,GAAAA,UAAA;AACR,eAAA9H,eAAA,GAAAA,eAAA;AACA,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAq1C,sBAAA,GAAAA,sBAAA;AACA,eAAAC,wBAAA,GAAAA,wBAAA;AACA,eAAAluC,UAAA,GAAAA,UAAA;AACA,eAAAU,0BAAA,GAAAA,0BAAA;AACA,eAAAytC,kCAAA,GAAAA,kCAAA;AAVZ,eAAAxtC,MAAA,GAAiB,kBAAKjI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAI+B,QAA5C,KAAwD,kFAAaC,EAArE,GAA0E,CAA1E,GAA8E,CAA/F;AAWC;;;;iBAED,0BAAiBuI,QAAjB,EAAmCnD,OAAnC,EAAqD;;;AACjD,iBAAKmD,QAAL,GAAgBA,QAAhB;AACA,iBAAKnD,OAAL,GAAeA,OAAf;AAEA,iBAAKC,GAAL,GAAW,KAAKA,GAAL,CAASC,WAAT,EAAX,GAAoC,IAApC;;AAEA,gBAAI,CAAJ,KAAI,KAAKnI,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEugB,cAAjD,EAAiE;AAC7D,mBAAKq0B,kBAAL;AACH,aAFD,MAGK;AACD,mBAAKvtC,GAAL,GAAW,KAAKwtC,0BAAL,GAAkChtC,SAAlC,EAAX;AACH;AACJ;;;iBAED,gCAAuB;AAAA;;;;AACnB,gBAAI0zB,eAAe,eAAkB,KAAKp8B,gBAAL,CAAsBoI,UAAxC,MAAkD,IAAlD,IAAkD,aAAlD,GAAkD,MAAlD,GAAkD,GAAEvH,QAAF,EAAlD,MAA4D,IAA5D,IAA4D,aAA5D,GAA4D,MAA5D,GAA4D,GAAIu7B,eAAnF;;AAEA,gBAAIA,eAAe,IAAIn7B,SAAnB,IAAgCm7B,eAAe,CAAC7zB,MAAhB,IAA0B,CAA9D,EAAiE;AAC7D;AACH;;AAED,gBAAIotC,MAAM,GAAWvZ,eAAe,CAAC7zB,MAArC;;AACA,iBAAK,IAAIqtC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,MAApB,EAA4BC,CAAC,EAA7B,EAAiC;AAC7BxZ,6BAAe,CAACwZ,CAAD,CAAf,CAAmBC,SAAnB,GAA+B,KAA/B;AACH;;AAED,gBAAI1Z,gBAAgB,GAAmB,EAAvC;AACA,gBAAI2Z,uBAAuB,GAAoB,KAAKP,wBAAL,CAA8BQ,gCAA9B,CAA+D,KAAK/1C,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwgB,YAA5C,CAAyDgS,iBAAzD,CAA2EjmB,MAA3E,CAAkF,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC3B,WAAF,CAAc9J,MAAd,CAAqBo0C,QAArB,IAAiC,IAArC;AAAA,aAAnF,CAA/D,CAA/C;AACA,gBAAIC,yBAAyB,GAAoB,KAAKV,wBAAL,CAA8BQ,gCAA9B,CAA+D,KAAK/1C,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwgB,YAA5C,CAAyDgS,iBAAzD,CAA2EjmB,MAA3E,CAAkF,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC3B,WAAF,CAAc9J,MAAd,CAAqBo0C,QAArB,IAAiC,KAArC;AAAA,aAAnF,CAA/D,CAAjD;AACA,gBAAIE,SAAS,GAAWJ,uBAAuB,CAACvtC,MAAhD;;AAfmB,yCAgBVkF,CAhBU;AAiBf,kBAAI4lB,iBAAiB,GAAoB,OAAI,CAACrzB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwgB,YAA5C,CAAyDgS,iBAAzD,CAA2EjmB,MAA3E,CAAkF,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACqC,QAAF,CAAWymC,gBAAX,IAA+BL,uBAAuB,CAACroC,CAAD,CAAvB,CAA2B/B,WAA3B,CAAuC9J,MAAvC,CAA8CwJ,QAAjF;AAAA,eAAnF,CAAzC;;AAEA,kBAAI2R,sBAAsB,GAAyB,EAAnD;;AACA,kBAAI,OAAI,CAAChd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0BC,SAAjG,EAA4G;AACxGqI,sCAAsB,GAAG,OAAI,CAACq5B,kCAAL,CAAwCN,uBAAuB,CAACroC,CAAD,CAAvB,CAA2B/B,WAAnE,CAAzB;AACH;;AAED,kBAAI,OAAI,CAAC3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkT,YAA1C,IAA0D,0FAAiBC,IAA3E,IAAmF,OAAI,CAACjU,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0Bw9B,QAApL,EAA8L;AAC1Ll1B,sCAAsB,GAAG,OAAI,CAACs5B,iCAAL,CAAuCP,uBAAuB,CAACroC,CAAD,CAAvB,CAA2B/B,WAAlE,CAAzB;AACH;;AAEDywB,8BAAgB,CAAC51B,IAAjB,CAAoC;AAAE0W,+BAAe,EAAE,OAAI,CAACq5B,kBAAL,CAAwBv5B,sBAAxB,CAAnB;AAAoEw5B,6BAAa,EAAEljB,iBAAiB,CAAC,CAAD,CAApG;AAAyGtW,sCAAsB,EAAEA,sBAAjI;AAAyJrR,2BAAW,EAAEoqC,uBAAuB,CAACroC,CAAD,CAAvB,CAA2B/B;AAAjM,eAApC;AA5Be;;AAgBnB,iBAAK,IAAI+B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyoC,SAApB,EAA+BzoC,CAAC,EAAhC,EAAoC;AAAA,qBAA3BA,CAA2B;AAanC;;AAED,gBAAI,KAAK1N,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyU,YAA9C,EAA4D;AACxD4gC,uBAAS,GAAGD,yBAAyB,CAAC1tC,MAAtC;;AADwD,2CAE/CkF,IAF+C;AAGpD,oBAAI4lB,iBAAiB,GAAoB,OAAI,CAACrzB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwgB,YAA5C,CAAyDgS,iBAAzD,CAA2EjmB,MAA3E,CAAkF,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACqC,QAAF,CAAWymC,gBAAX,IAA+BF,yBAAyB,CAACxoC,IAAD,CAAzB,CAA6B/B,WAA7B,CAAyC9J,MAAzC,CAAgDwJ,QAAnF;AAAA,iBAAnF,CAAzC;;AAEA,oBAAI2R,sBAAsB,GAAyB,EAAnD;;AACA,oBAAI,OAAI,CAAChd,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0BC,SAAjG,EAA4G;AACxGqI,wCAAsB,GAAG,OAAI,CAACq5B,kCAAL,CAAwCN,uBAAuB,CAACroC,IAAD,CAAvB,CAA2B/B,WAAnE,CAAzB;AACH;;AAED,oBAAI,OAAI,CAAC3L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkT,YAA1C,IAA0D,0FAAiBC,IAA3E,IAAmF,OAAI,CAACjU,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0Bw9B,QAApL,EAA8L;AAC1Ll1B,wCAAsB,GAAG,OAAI,CAACs5B,iCAAL,CAAuCP,uBAAuB,CAACroC,IAAD,CAAvB,CAA2B/B,WAAlE,CAAzB;AACH;;AAEDywB,gCAAgB,CAAC51B,IAAjB,CAAoC;AAAE0W,iCAAe,EAAE,OAAI,CAACq5B,kBAAL,CAAwBv5B,sBAAxB,CAAnB;AAAoEw5B,+BAAa,EAAEljB,iBAAiB,CAAC,CAAD,CAApG;AAAyGtW,wCAAsB,EAAEA,sBAAjI;AAAyJrR,6BAAW,EAAEuqC,yBAAyB,CAACxoC,IAAD,CAAzB,CAA6B/B;AAAnM,iBAApC;AAdoD;;AAExD,mBAAK,IAAI+B,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAGyoC,SAApB,EAA+BzoC,IAAC,EAAhC,EAAoC;AAAA,uBAA3BA,IAA2B;AAanC;AACJ;;AAED,iBAAKzN,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEwzB,8BAAgB,EAAEA;AAApB,aAAjD;;AAEA,gBAAI,kBAAKn8B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,QAA2C,IAA3C,IAA2C,aAA3C,GAA2C,MAA3C,GAA2C,GAAEu7B,eAA7C,MAA4D,IAA5D,IAA4D,aAA5D,GAA4D,MAA5D,GAA4D,GAAE7zB,MAA9D,IAAuE,CAA3E,EAA8E;AAC1E,kBAAI,kBAAKxI,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,EAA9B,MAAwC,IAAxC,IAAwC,aAAxC,GAAwC,MAAxC,GAAwC,GAAIwR,gBAA5C,KAAgE,IAApE,EAA0E;AACtE,qBAAKtS,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CyJ,kCAAgB,EAAE,KAAKrS,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4Cu7B,eAA5C,CAA4D,CAA5D,CADwB;AAE1C9pB,gCAAc,EAAE,KAAKtS,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4Cu7B,eAA5C,CAA4D,KAAKp8B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4Cu7B,eAA5C,CAA4D7zB,MAA5D,GAAqE,CAAjI;AAF0B,iBAA9C;AAIH;AACJ;AAEJ;;;iBAEO,4BAAmBiuC,sBAAnB,EAA+D;AACnE,gBAAIv5B,eAAe,GAAW,IAA9B;;AACA,gBAAIu5B,sBAAsB,IAAIv1C,SAA1B,IAAuCu1C,sBAAsB,CAACjuC,MAAvB,GAAgC,CAA3E,EAA8E;AAC1E,kBAAIiF,KAAK,GAAWgpC,sBAAsB,CAACjuC,MAA3C;AACA,kBAAIyvB,KAAK,GAAW,CAApB;AACA,kBAAIye,QAAQ,GAAW,CAAvB;;AACA,mBAAK,IAAIhpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAC5B,oBAAI+oC,sBAAsB,CAAC/oC,CAAD,CAAtB,CAA0BuP,GAA1B,IAAiC,IAArC,EAA2C;AACvCy5B,0BAAQ,IAAI,CAAZ;AACAze,uBAAK,IAAIwe,sBAAsB,CAAC/oC,CAAD,CAAtB,CAA0BuP,GAAnC;AACH;AACJ;;AAED,kBAAIy5B,QAAQ,GAAG,CAAf,EAAkB;AACdx5B,+BAAe,GAAG+a,KAAK,GAAGye,QAA1B;AACH;AACJ;;AAED,mBAAOx5B,eAAP;AACH;;;iBAED,4CAAmCtb,WAAnC,EAA2D;AAAA;;;;AACvD,gBAAI+0C,8BAA8B,GAAmC,IAAI,6GAAJ,EAArE;AACA,gBAAIC,+BAA+B,GAAkC,EAArE;AAEA,gBAAIC,gBAAgB,qBAAmB,KAAK52C,gBAAL,CAAsBoI,UAAzC,MAAmD,IAAnD,IAAmD,aAAnD,GAAmD,MAAnD,GAAmD,GAAEvH,QAAF,EAAnD,MAA6D,IAA7D,IAA6D,aAA7D,GAA6D,MAA7D,GAA6D,GAAIyQ,WAAJ,CAAgBulC,gBAA7E,MAA6F,IAA7F,IAA6F,aAA7F,GAA6F,MAA7F,GAA6F,GAAEzpC,MAAF,CAAS,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC3B,WAAF,CAAc9J,MAAd,CAAqBwJ,QAArB,IAAiCzJ,WAAW,CAACC,MAAZ,CAAmBwJ,QAAxD;AAAA,aAAV,CAAjH;;AAEA,gBAAIwrC,gBAAgB,KAAK31C,SAArB,IAAkC21C,gBAAgB,CAACruC,MAAjB,GAA0B,CAAhE,EAAmE;AAAA;AAC/DmuC,8CAA8B,CAACI,YAA/B,GAA8CF,gBAAgB,CAAC,CAAD,CAA9D;AAEA,oBAAIG,mBAAmB,qBAAsB,OAAI,CAAC/2C,gBAAL,CAAsBoI,UAA5C,MAAsD,IAAtD,IAAsD,aAAtD,GAAsD,MAAtD,GAAsD,GAAEvH,QAAF,EAAtD,MAAgE,IAAhE,IAAgE,aAAhE,GAAgE,MAAhE,GAAgE,GAAIugB,cAAJ,CAAmB41B,mBAAnF,MAAsG,IAAtG,IAAsG,aAAtG,GAAsG,MAAtG,GAAsG,GAAE5pC,MAAF,CAAS,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAACyuB,UAAF,CAAaqa,gBAAb,IAAiCx0C,WAAW,CAACC,MAAZ,CAAmBwJ,QAAxD;AAAA,iBAAV,CAA7H;;AAEA,oBAAI0qC,uBAAuB,GAAoB,OAAI,CAACP,wBAAL,CAA8BQ,gCAA9B,CAA+D,OAAI,CAAC/1C,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwgB,YAA5C,CAAyDgS,iBAAzD,CAA2EjmB,MAA3E,CAAkF,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAC3B,WAAF,CAAc9J,MAAd,CAAqBo0C,QAArB,IAAiC,IAArC;AAAA,iBAAnF,CAA/D,CAA/C;;AAEA,oBAAIxoC,KAAK,GAAWsoC,uBAAuB,CAACvtC,MAA5C;;AAP+D,6CAQtDkF,CARsD;AAS3D,sBAAIwpC,uBAAuB,GAAsBF,mBAAmB,CAAC3pC,MAApB,CAA2B,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACyuB,UAAF,CAAaqa,gBAAb,IAAiCL,uBAAuB,CAACroC,CAAD,CAAvB,CAA2B/B,WAA3B,CAAuC9J,MAAvC,CAA8CwJ,QAAnF;AAAA,mBAA5B,CAAjD;;AACA,sBAAI6rC,uBAAuB,KAAKh2C,SAA5B,IAAyCg2C,uBAAuB,CAAC1uC,MAAxB,GAAiC,CAA9E,EAAiF;AAC7EouC,mDAA+B,CAACpwC,IAAhC,CAAkE;AAAEgwC,mCAAa,EAAET,uBAAuB,CAACroC,CAAD,CAAxC;AAA6CquB,gCAAU,EAAEmb,uBAAuB,CAAC,CAAD;AAAhF,qBAAlE;AACH;AAZ0D;;AAQ/D,qBAAK,IAAIxpC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAApB,EAA2BC,CAAC,EAA5B,EAAgC;AAAA,yBAAvBA,CAAuB;AAK/B;;AAED,oBAAIwoC,yBAAyB,GAAoB,OAAI,CAACV,wBAAL,CAA8BQ,gCAA9B,CAA+D,OAAI,CAAC/1C,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CwgB,YAA5C,CAAyDgS,iBAAzD,CAA2EjmB,MAA3E,CAAkF,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAC3B,WAAF,CAAc9J,MAAd,CAAqBo0C,QAArB,IAAiC,KAArC;AAAA,iBAAnF,CAA/D,CAAjD;;AAEAxoC,qBAAK,GAAGyoC,yBAAyB,CAAC1tC,MAAlC;;AAjB+D,6CAkBtDkF,IAlBsD;AAmB3D,sBAAIwpC,uBAAuB,GAAsBF,mBAAmB,CAAC3pC,MAApB,CAA2B,UAAAC,CAAC;AAAA,2BAAIA,CAAC,CAACyuB,UAAF,CAAaqa,gBAAb,IAAiCF,yBAAyB,CAACxoC,IAAD,CAAzB,CAA6B/B,WAA7B,CAAyC9J,MAAzC,CAAgDwJ,QAArF;AAAA,mBAA5B,CAAjD;;AACA,sBAAI6rC,uBAAuB,KAAKh2C,SAA5B,IAAyCg2C,uBAAuB,CAAC1uC,MAAxB,GAAiC,CAA9E,EAAiF;AAC7EouC,mDAA+B,CAACpwC,IAAhC,CAAkE;AAAEgwC,mCAAa,EAAEN,yBAAyB,CAACxoC,IAAD,CAA1C;AAA+CquB,gCAAU,EAAEmb,uBAAuB,CAAC,CAAD;AAAlF,qBAAlE;AACH;AAtB0D;;AAkB/D,qBAAK,IAAIxpC,IAAC,GAAG,CAAb,EAAgBA,IAAC,GAAGD,KAApB,EAA2BC,IAAC,EAA5B,EAAgC;AAAA,yBAAvBA,IAAuB;AAK/B;;AAEDipC,8CAA8B,CAACQ,+BAA/B,GAAiEP,+BAAjE;AAzB+D;AA0BlE;;AAED,mBAAOD,8BAAP;AACH;;;iBAED,2BAAkB/0C,WAAlB,EAA0C;;;AACtC,gBAAIw1C,gBAAgB,SAAmB,KAAKn3C,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4Cs7B,gBAA/D,MAA+E,IAA/E,IAA+E,aAA/E,GAA+E,MAA/E,GAA+E,GAAE/uB,MAAF,CAAS,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC3B,WAAF,CAAc9J,MAAd,CAAqBwJ,QAArB,IAAiCzJ,WAAW,CAACC,MAAZ,CAAmBwJ,QAAxD;AAAA,aAAV,CAAnG;AACA,mBAAO+rC,gBAAgB,KAAKl2C,SAArB,GAAiC,IAAjC,GAAwCk2C,gBAAgB,CAAC,CAAD,CAA/D;AACH;;;iBAED,yBAAgBx1C,WAAhB,EAAwC;;;AACpC,gBAAIw1C,gBAAgB,SAAmB,KAAKn3C,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4Cs7B,gBAA/D,MAA+E,IAA/E,IAA+E,aAA/E,GAA+E,MAA/E,GAA+E,GAAE/uB,MAAF,CAAS,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC3B,WAAF,CAAc9J,MAAd,CAAqBwJ,QAArB,IAAiCzJ,WAAW,CAACC,MAAZ,CAAmBwJ,QAAxD;AAAA,aAAV,CAAnG;AACA,mBAAO+rC,gBAAgB,KAAKl2C,SAArB,GAAiC,IAAjC,GAAwCk2C,gBAA/C;AACH;;;iBAEO,+BAAsB;AAC1B,gBAAI/a,eAAe,GAAkB,EAArC;AAEA,gBAAIgb,sBAAsB,GAAmB,KAAK9B,sBAAL,CAA4B+B,yBAA5B,CAAsD,KAAKr3C,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CyQ,WAA5C,CAAwDulC,gBAA9G,CAA7C;AAEA,gBAAIS,QAAQ,GAAWF,sBAAsB,CAAC7uC,MAA9C;;AACA,iBAAK,IAAIkF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6pC,QAApB,EAA8B7pC,CAAC,EAA/B,EAAmC;AAC/B,kBAAInM,QAAQ,GAAW81C,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCjO,cAAlC,CAAiDH,QAAjD,EAAvB;AACA,kBAAIc,IAAI,GAAWC,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAA3B;AACA,kBAAIY,KAAK,GAAWD,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,CAAD,CAA5B;AACA,kBAAIa,GAAG,GAAWF,QAAQ,CAACb,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsB,EAAtB,CAAD,CAA1B;AAEA,kBAAI6a,WAAW,GAA6B;AACxCk7B,uBAAO,EAAE,IAD+B;AAExCC,+BAAe,EAAEJ,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCgoC,eAFX;AAGxCC,wBAAQ,EAAEL,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCkoC,WAHJ;AAIxCp7B,wBAAQ,EAAE86B,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCmoC,WAJJ;AAKxCp7B,wBAAQ,EAAE66B,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCooC,WALJ;AAMxCp7B,wBAAQ,EAAE46B,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCqoC,WANJ;AAOxCp7B,wBAAQ,EAAE26B,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCsoC,WAPJ;AAQxCC,wBAAQ,EAAEX,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCwoC,WARJ;AASxCC,wBAAQ,EAAEb,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkC0oC,WATJ;AAUxCC,wBAAQ,EAAEf,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkC4oC,WAVJ;AAWxCC,wBAAQ,EAAEjB,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkC8oC,WAXJ;AAYxCC,wBAAQ,EAAEnB,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCgpC,WAZJ;AAaxCC,yBAAS,EAAErB,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCkpC,YAbL;AAcxCv6B,8BAAc,EAAE,KAdwB;AAexCw6B,uBAAO,EAAEvB,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCjO,cAfH;AAgBxCq3C,wBAAQ,EAAEnrC,CAhB8B;AAiBxCorC,uBAAO,EAAE32C,IAjB+B;AAkBxC42C,wBAAQ,EAAE12C,KAlB8B;AAmBxC22C,sBAAM,EAAE12C,GAnBgC;AAoBxC22C,yBAAS,EAAE5B,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkCypC,UApBL;AAqBxCC,uBAAO,EAAE9B,sBAAsB,CAAC3pC,CAAD,CAAtB,CAA0B+B,OAA1B,CAAkC2pC,QArBH;AAsBxCtD,yBAAS,EAAE;AAtB6B,eAA5C;AAyBAzZ,6BAAe,CAAC71B,IAAhB,CAAqB8V,WAArB;AACH;;AAED,iBAAKrc,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEyzB,6BAAe,EAAEA;AAAnB,aAAjD;;AACA,gBAAIA,eAAe,CAAC7zB,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,mBAAKxI,eAAL,CAAqB6I,cAArB,CAA8C;AAAEyJ,gCAAgB,EAAE+pB,eAAe,CAAC,CAAD,CAAnC;AAAwC9pB,8BAAc,EAAE8pB,eAAe,CAACA,eAAe,CAAC7zB,MAAhB,GAAyB,CAA1B;AAAvE,eAA9C;AACH;AACJ;;;iBAEO,sCAA6B;AAAA;;AACjC,gBAAIhB,YAAY,GAAG,8FAAnB;AACA,iBAAKvH,gBAAL,CAAsB2I,eAAtB,CAAiD;AAAEyY,4BAAc,EAAE;AAAlB,aAAjD;AACA,iBAAKrhB,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAK,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAL,gBAAmE,gGAAnE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,8CAAqJ,KAAKwI,QAA1J,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAoCF,GAApC,EAAyCG,IAAzC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACgwC,6BAAL,CAAmChwC,CAAnC;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB;AACd,uBAAI,CAACoxC,0BAAL;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAnyC,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,sCAA6B;AAAA;;AACjC,gBAAIK,YAAY,GAAG,8FAAnB;AACA,iBAAKxH,eAAL,CAAqB6I,cAArB,CAA8C;AAC1CC,oBAAM,YAAK,KAAK5I,kBAAL,CAAwBgD,WAAxB,CAAoC6F,OAApC,CAA4C,KAAKd,MAAjD,CAAL,gBAAmE,gGAAnE,CADoC;AAE1Ce,qBAAO,EAAE;AAFiC,aAA9C;AAIA,gBAAIC,GAAG,aAAc,KAAKhJ,gBAAL,CAAsBiJ,UAApC,SAAiD1B,YAAY,CAAC,KAAKxH,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAA3C,CAA7D,8CAAqJ,KAAKwI,QAA1J,CAAP;AACA,mBAAO,KAAKvD,UAAL,CAAgBqB,GAAhB,CAAoCF,GAApC,EAAyCG,IAAzC,CACH,2DAAI,UAACC,CAAD,EAAY;AACZ,qBAAI,CAACkwC,6BAAL,CAAmClwC,CAAnC;;AACAE,qBAAO,CAACC,KAAR,CAAcH,CAAd;;AACA,kBAAI,OAAI,CAACnB,OAAT,EAAkB,CACd;AACH;AACJ,aAND,CADG,EAQH,kEAAW,UAAAf,CAAC;AAAA,qBAAI,gDAAGA,CAAH,EAAMiC,IAAN,CAAW,2DAAI,UAAAjC,CAAC,EAAI;AAChC,uBAAI,CAACnH,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE,KAAvB;AAA8BU,uBAAK,EAAqBvC;AAAxD,iBAA9C;;AACAoC,uBAAO,CAACC,KAAR,CAAcrC,CAAd;AACH,eAH0B,CAAX,CAAJ;AAAA,aAAZ,CARG,CAAP;AAaH;;;iBAEO,2CAAkCvF,WAAlC,EAA0D;;;AAC9D,gBAAI43C,cAAc,aAAc,sFAAeC,OAA7B,MAAlB;AACA,gBAAIz8B,sBAAsB,GAAyB,EAAnD;AACA,gBAAIqf,eAAe,SAAkB,KAAKp8B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAlB,MAA6D,IAA7D,IAA6D,aAA7D,GAA6D,MAA7D,GAA6D,GAAEu7B,eAAlF;AAEA,gBAAIqd,QAAQ,GAAG,KAAK15C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0R,YAAzD;AAEA,gBAAI8gB,iBAAiB,2BAAoB,KAAKrzB,gBAAL,CAAsBoI,UAA1C,MAAoD,IAApD,IAAoD,aAApD,GAAoD,MAApD,GAAoD,GAAEvH,QAAF,EAApD,MAA8D,IAA9D,IAA8D,aAA9D,GAA8D,MAA9D,GAA8D,GAAIwgB,YAAlE,MAA8E,IAA9E,IAA8E,aAA9E,GAA8E,MAA9E,GAA8E,GAAEgS,iBAAhF,MAAiG,IAAjG,IAAiG,aAAjG,GAAiG,MAAjG,GAAiG,GAAEjmB,MAAF,CAClH,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACqC,QAAF,CAAWymC,gBAAX,IAA+Bx0C,WAAW,CAACC,MAAZ,CAAmBwJ,QAAtD;AAAA,aADiH,CAAtH;;AAGA,gBAAIioB,iBAAiB,IAAIA,iBAAiB,CAAC9qB,MAAlB,GAA2B,CAApD,EAAuD;AACnD,kBAAImxC,6BAA6B,GAAsB,KAAKlE,kCAAL,CAAwCmE,qCAAxC,CAA8E,CAAD,iBAChI,KAAK35C,gBAAL,CAAsBoI,UAD0G,MAChG,IADgG,IAChG,aADgG,GAChG,MADgG,GAChG,GAAEvH,QAAF,EADgG,MACtF,IADsF,IACtF,aADsF,GACtF,MADsF,GACtF,GAAIugB,cADmF,MACrE,IADqE,IACrE,aADqE,GACrE,MADqE,GACrE,GAAE41B,mBAAF,CAAsB5pC,MAAtB,CAA6B,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACyuB,UAAF,CAAaqa,gBAAb,IAAiCx0C,WAAW,CAACC,MAAZ,CAAmBwJ,QAAxD;AAAA,eAA9B,CADT,CAAvD;;AAIA,kBAAIsuC,6BAA6B,IAAIA,6BAA6B,CAACnxC,MAA9B,GAAuC,CAA5E,EAA+E;AAC3E,oBAAIqxC,OAAO,GAAGz3C,QAAQ,CAACu3C,6BAA6B,CAACA,6BAA6B,CAACnxC,MAA9B,GAAuC,CAAxC,CAA7B,CAAwEuzB,UAAxE,CAAmFp6B,oBAAnF,CAAwGN,QAAxG,EAAD,CAAtB;AACA,oBAAIy4C,SAAS,GAAG13C,QAAQ,CAACu3C,6BAA6B,CAAC,CAAD,CAA7B,CAAiC5d,UAAjC,CAA4Cp6B,oBAA5C,CAAiEN,QAAjE,EAAD,CAAxB;;AAEA,oBAAIs4C,6BAA6B,CAACnxC,MAA9B,GAAuC,CAA3C,EAA8C;AAE1C,sBAAIuxC,WAAW,GAAW,CAA1B;AACA,sBAAIxC,QAAQ,GAAWlb,eAAe,CAAC7zB,MAAvC;AACA,sBAAIwxC,WAAW,GAAWL,6BAA6B,CAACnxC,MAAxD;AACA,sBAAIyxC,KAAK,GAAW,CAApB;AACA,sBAAIC,QAAQ,GAAW,CAAvB;;AAEA,uBAAK,IAAIrE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,QAApB,EAA8B1B,CAAC,EAA/B,EAAmC;AACnC;AACI,wBAAIsE,WAAW,GAAW9d,eAAe,CAACwZ,CAAD,CAAf,CAAmB+C,OAAnB,CAA2Bv3C,QAA3B,EAA1B;AACA,wBAAIy3C,OAAO,GAAW12C,QAAQ,CAAC+3C,WAAW,CAAC14C,SAAZ,CAAsB,CAAtB,EAAyB,CAAzB,CAAD,CAA9B;AACA,wBAAIs3C,QAAQ,GAAW32C,QAAQ,CAAC+3C,WAAW,CAAC14C,SAAZ,CAAsB,CAAtB,EAAyB,CAAzB,CAAD,CAA/B;AACA,wBAAIm3C,OAAO,GAAWx2C,QAAQ,CAAC+3C,WAAW,CAAC14C,SAAZ,CAAsB,CAAtB,EAAyB,EAAzB,CAAD,CAA9B;AAEA,wBAAI24C,KAAK,GAAY,KAArB;;AACA,yBAAK,IAAIC,CAAC,GAAGJ,KAAb,EAAoBI,CAAC,GAAGL,WAAxB,EAAqCK,CAAC,EAAtC,EAA0C;AACtC,0BAAIC,cAAc,GAAWX,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cp6B,oBAA5C,CAAiEN,QAAjE,EAA7B;AACA,0BAAIqG,UAAU,GAAWtF,QAAQ,CAACk4C,cAAc,CAAC74C,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,CAAD,CAAjC;AACA,0BAAI84C,WAAW,GAAWn4C,QAAQ,CAACk4C,cAAc,CAAC74C,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,CAAD,CAAlC;AACA,0BAAI+4C,SAAS,GAAWp4C,QAAQ,CAACk4C,cAAc,CAAC74C,SAAf,CAAyB,CAAzB,EAA4B,EAA5B,CAAD,CAAhC;AACA,0BAAIg5C,SAAS,GAAYd,6BAA6B,CAACtsC,MAA9B,CAAqC,UAAAC,CAAC;AAAA,+BAAIA,CAAC,CAACyuB,UAAF,CAAa2e,eAAb,CAA6BprB,OAA7B,CAAqCkqB,cAArC,IAAuD,CAAC,CAA5D;AAAA,uBAAtC,IAAuG,IAAvG,GAA8G,KAAvI;;AACA,0BAAIV,OAAO,IAAIpxC,UAAX,IAAyBqxC,QAAQ,IAAIwB,WAArC,IAAoD3B,OAAO,IAAI4B,SAA/D,IAA4EC,SAAhF,EAA2F;AACvFV,mCAAW,IAAI,CAAf;AACA/8B,8CAAsB,CAACxW,IAAvB,CAAgD;AAC5Cm0C,+BAAK,EAAEhB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4C6e,OADP;AAE5C5jB,4BAAE,EAAE2iB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4C8e,gBAFJ;AAG5C5E,kCAAQ,EAAEr0C,WAAW,CAACC,MAAZ,CAAmBo0C,QAHe;AAI5CwB,yCAAe,EAAEpb,eAAe,CAACwZ,CAAD,CAAf,CAAmB4B,eAJQ;AAK5CrB,0CAAgB,EAAEx0C,WAAW,CAACC,MAAZ,CAAmBwJ,QALO;AAM5CyvC,4BAAE,EAAEnB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4C+e,EANJ;AAO5CjC,kCAAQ,EAAEhD,CAPkC;AAQ5C54B,6BAAG,EAAE08B,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cgf,YARL;AAS5CC,oCAAU,EAAErB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cp6B,oBATZ;AAU5Cs5C,8BAAI,EAAEtB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cmf,WAVN;AAW5CpF,mCAAS,EAAEzZ,eAAe,CAACwZ,CAAD,CAAf,CAAmBC,SAXc;AAY5CqF,iCAAO,EAAEnB,WAZmC;AAa5CtyC,oCAAU,EAAEA,UAbgC;AAc5C6yC,qCAAW,EAAEA,WAd+B;AAe5CC,mCAAS,EAAEA;AAfiC,yBAAhD,EAFuF,CAmBvF;;AACAP,6BAAK,GAAGI,CAAC,GAAG,CAAZ;AACAD,6BAAK,GAAG,IAAR;AAEAp9B,8CAAsB,CAACA,sBAAsB,CAACxU,MAAvB,GAAgC,CAAjC,CAAtB,CAA0DstC,SAA1D,GAAsE,KAAtE;AAEA,4BAAIsF,OAAO,GAAY,KAAvB,CAzBuF,CA2BvF;AACA;AAEA;;AACA,4BAAIzB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cp6B,oBAA5C,CAAiEN,QAAjE,GAA4EI,SAA5E,CAAsF,CAAtF,EAAyF,EAAzF,IAA+F,KAAKzB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwR,gBAA1C,CAA2DsmC,OAA3D,CAAmEv3C,QAAnE,GAA8EI,SAA9E,CAAwF,CAAxF,EAA2F,EAA3F,CAAnG,EAAmM;AAC/L25C,iCAAO,GAAG,IAAV;AACH,yBAjCsF,CAmCvF;;;AACA,4BAAIzB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cp6B,oBAA5C,CAAiEN,QAAjE,GAA4EI,SAA5E,CAAsF,CAAtF,EAAyF,EAAzF,IAA+F,KAAKzB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyR,cAA1C,CAAyDqmC,OAAzD,CAAiEv3C,QAAjE,GAA4EI,SAA5E,CAAsF,CAAtF,EAAyF,EAAzF,CAAnG,EAAiM;AAC7L25C,iCAAO,GAAG,IAAV;AACH,yBAtCsF,CAwCvF;;;AACA,4BAAIlB,QAAQ,IAAI,KAAKl6C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0R,YAA1D,EAAwE;AACpE4oC,iCAAO,GAAG,IAAV;AACH;;AAED,4BAAI,KAAKp7C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6R,uBAA1C,IAAqE,gHAA4BC,GAArG,EAA0G,CACtG;AACH;;AAED,4BAAI,KAAK5S,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6R,uBAA1C,IAAqE,gHAA4B0oC,GAArG,EAA0G;AACtG,8BAAIhf,eAAe,CAACwZ,CAAD,CAAf,CAAmBt5B,QAAnB,IAA+B,KAAKvc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkS,cAAzE,IACIqpB,eAAe,CAACwZ,CAAD,CAAf,CAAmBt5B,QAAnB,GAA8B8f,eAAe,CAACwZ,CAAD,CAAf,CAAmBr5B,QAAlD,IAA+D,KAAKxc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CmS,cAD5G,IAEIopB,eAAe,CAACwZ,CAAD,CAAf,CAAmBt5B,QAAnB,GAA8B8f,eAAe,CAACwZ,CAAD,CAAf,CAAmBr5B,QAAjD,GAA4D6f,eAAe,CAACwZ,CAAD,CAAf,CAAmBp5B,QAAhF,IAA6F,KAAKzc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoS,cAF1I,IAGImpB,eAAe,CAACwZ,CAAD,CAAf,CAAmBt5B,QAAnB,GAA8B8f,eAAe,CAACwZ,CAAD,CAAf,CAAmBr5B,QAAjD,GAA4D6f,eAAe,CAACwZ,CAAD,CAAf,CAAmBp5B,QAA/E,GAA0F4f,eAAe,CAACwZ,CAAD,CAAf,CAAmBn5B,QAA9G,IAA2H,KAAK1c,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CqS,cAH5K,EAG4L;AACxLioC,mCAAO,GAAG,IAAV;AACH;AACJ;;AAED,4BAAI,KAAKp7C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6R,uBAA1C,IAAqE,gHAA4B2oC,GAArG,EAA0G;AACtG,8BAAIjf,eAAe,CAACwZ,CAAD,CAAf,CAAmBt5B,QAAnB,IAA+B,KAAKvc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsS,cAAzE,IACIipB,eAAe,CAACwZ,CAAD,CAAf,CAAmBt5B,QAAnB,GAA8B8f,eAAe,CAACwZ,CAAD,CAAf,CAAmBr5B,QAAlD,IAA+D,KAAKxc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuS,cAD5G,IAEIgpB,eAAe,CAACwZ,CAAD,CAAf,CAAmBt5B,QAAnB,GAA8B8f,eAAe,CAACwZ,CAAD,CAAf,CAAmBr5B,QAAjD,GAA4D6f,eAAe,CAACwZ,CAAD,CAAf,CAAmBp5B,QAAhF,IAA6F,KAAKzc,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwS,cAF1I,IAGI+oB,eAAe,CAACwZ,CAAD,CAAf,CAAmBt5B,QAAnB,GAA8B8f,eAAe,CAACwZ,CAAD,CAAf,CAAmBr5B,QAAjD,GAA4D6f,eAAe,CAACwZ,CAAD,CAAf,CAAmBp5B,QAA/E,GAA0F4f,eAAe,CAACwZ,CAAD,CAAf,CAAmBn5B,QAA9G,IAA2H,KAAK1c,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyS,cAH5K,EAG4L;AACxL6nC,mCAAO,GAAG,IAAV;AACH;AACJ;;AAED,4BAAI/e,eAAe,CAACwZ,CAAD,CAAf,CAAmBz3B,cAAvB,EAAuC;AACnCg9B,iCAAO,GAAG,IAAV;AACH;;AAED,4BAAI,CAACA,OAAL,EAAc;AACVlB,kCAAQ,IAAI,CAAZ;AACA7d,yCAAe,CAACwZ,CAAD,CAAf,CAAmBC,SAAnB,GAA+B,IAA/B;AACA94B,gDAAsB,CAACA,sBAAsB,CAACxU,MAAvB,GAAgC,CAAjC,CAAtB,CAA0DstC,SAA1D,GAAsE,IAAtE;AACH;;AAED;AACH;AACJ;;AAED,wBAAI,CAACsE,KAAL,EAAY;AACRp9B,4CAAsB,CAACxW,IAAvB,CAAgD;AAC5Cw0C,kCAAU,EAAE3e,eAAe,CAACwZ,CAAD,CAAf,CAAmB+C,OADa;AAE5CC,gCAAQ,EAAEhD,CAFkC;AAG5CC,iCAAS,EAAE;AAHiC,uBAAhD;AAKH;AACJ;;AAED,sBAAIyF,MAAM,GAAa,EAAvB;AACA,sBAAIC,QAAQ,GAAa,EAAzB;AAEA,sBAAIC,SAAS,GAAWz+B,sBAAsB,CAACxU,MAA/C;AACA,sBAAIrH,cAAJ;;AACA,uBAAK,IAAI00C,EAAC,GAAG4F,SAAS,GAAG,CAAzB,EAA4B5F,EAAC,IAAI,CAAjC,EAAoCA,EAAC,EAArC,EAAyC;AACrC,wBAAI74B,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0B7e,EAA1B,IAAgCha,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0BC,SAA9D,EAAyE;AACrE30C,oCAAc,GAAG6b,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0BmF,UAA3C;;AACA,0BAAIV,eAAc,GAAWt9B,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0BmF,UAA1B,CAAqC35C,QAArC,EAA7B;;AACA,0BAAIqG,WAAU,GAAWtF,QAAQ,CAACk4C,eAAc,CAAC74C,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,CAAD,CAAjC,CAHqE,CAKrE;;;AACA85C,4BAAM,CAAC/0C,IAAP,CAAYwW,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0B7e,EAAtC;AACAwkB,8BAAQ,CAACh1C,IAAT,CAAckB,WAAd;AACH;;AAED,wBAAI6zC,MAAM,CAAC/yC,MAAP,GAAgBkxC,QAApB,EAA8B;AAC1B6B,4BAAM,CAACG,KAAP;AACAF,8BAAQ,CAACE,KAAT;AACH;;AAED,wBAAIH,MAAM,CAAC/yC,MAAP,GAAgB,CAApB,EAAuB;AACnBwU,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0B8F,QAA1B,GAAqCJ,MAAM,CAACK,IAAP,CAAY,GAAZ,CAArC;AACA5+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0B10C,cAA1B,GAA2CA,cAA3C;AACA6b,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BgG,SAA1B,GAAsCN,MAAM,CAAC/yC,MAA7C;AACAwU,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BiG,UAA1B,GAAuC,KAAKA,UAAL,CAAgBP,MAAhB,CAAvC;AACAv+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BkG,WAA1B,GAAwC,KAAKA,WAAL,CAAiBR,MAAjB,CAAxC;AACAv+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BmG,KAA1B,GAAkC,KAAKA,KAAL,CAAWT,MAAX,CAAlC;AACAv+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BoG,KAA1B,GAAkC,KAAKA,KAAL,CAAWV,MAAX,CAAlC;AACAv+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BqG,MAA1B,GAAmC,KAAKC,SAAL,CAAeZ,MAAf,CAAnC;AACAv+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BuG,GAA1B,GAAgC,KAAKC,MAAL,CAAYd,MAAZ,CAAhC;AACAv+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0ByG,OAA1B,GAAoC,KAAKC,gBAAL,CAAsBhB,MAAtB,CAApC;AACAv+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0B2G,cAA1B,GAA2C,KAAKC,iBAAL,CACvCz/B,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0BuG,GADa,EAEvCp/B,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0ByG,OAFa,EAGvCt/B,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0BqG,MAHa,EAIvCl/B,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0BiG,UAJa,EAKvC9+B,sBAAsB,CAAC64B,EAAD,CAAtB,CAA0BkG,WALa,CAA3C;AAMA/+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0B6G,WAA1B,GAAwC,KAAKC,OAAL,CAAanB,QAAb,CAAxC;AACAx+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0B+G,aAA1B,GAA0C,KAAKC,OAAL,CAAarB,QAAb,CAA1C;AACAx+B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BgE,OAA1B,GAAoCA,OAApC;AACA78B,4CAAsB,CAAC64B,EAAD,CAAtB,CAA0BiE,SAA1B,GAAsCA,SAAtC;AACH;AACJ;;AAED,sBAAIgD,SAAS,GAAW9/B,sBAAsB,CAACxU,MAA/C;;AACA,uBAAK,IAAIkF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGovC,SAApB,EAA+BpvC,CAAC,EAAhC,EAAoC;AAChCsP,0CAAsB,CAACtP,CAAD,CAAtB,CAA0BytC,OAA1B,GAAoCpB,WAApC;AACH;AACJ;AACJ;;AAED,qBAAO/8B,sBAAP;AACH;AACJ;;;iBAEO,4CAAmCpb,WAAnC,EAA2D;;;AAC/D,gBAAI43C,cAAc,aAAc,sFAAeC,OAA7B,MAAlB;AACA,gBAAIz8B,sBAAsB,GAAyB,EAAnD;AACA,gBAAIqf,eAAe,SAAkB,KAAKp8B,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,EAAlB,MAA6D,IAA7D,IAA6D,aAA7D,GAA6D,MAA7D,GAA6D,GAAEu7B,eAAlF;AAEA,gBAAIqd,QAAQ,GAAW,KAAK15C,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsR,iBAAjE;AAEA,gBAAIkhB,iBAAiB,2BAAoB,KAAKrzB,gBAAL,CAAsBoI,UAA1C,MAAoD,IAApD,IAAoD,aAApD,GAAoD,MAApD,GAAoD,GAAEvH,QAAF,EAApD,MAA8D,IAA9D,IAA8D,aAA9D,GAA8D,MAA9D,GAA8D,GAAIwgB,YAAlE,MAA8E,IAA9E,IAA8E,aAA9E,GAA8E,MAA9E,GAA8E,GAAEgS,iBAAhF,MAAiG,IAAjG,IAAiG,aAAjG,GAAiG,MAAjG,GAAiG,GAAEjmB,MAAF,CAClH,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACqC,QAAF,CAAWymC,gBAAX,IAA+Bx0C,WAAW,CAACC,MAAZ,CAAmBwJ,QAAtD;AAAA,aADiH,CAAtH;;AAGA,gBAAIioB,iBAAiB,IAAIA,iBAAiB,CAAC9qB,MAAlB,GAA2B,CAApD,EAAuD;AACnD,kBAAImxC,6BAA6B,GAAsB,KAAKlE,kCAAL,CAAwCmE,qCAAxC,CAA8E,CAAD,iBAChI,KAAK35C,gBAAL,CAAsBoI,UAD0G,MAChG,IADgG,IAChG,aADgG,GAChG,MADgG,GAChG,GAAEvH,QAAF,EADgG,MACtF,IADsF,IACtF,aADsF,GACtF,MADsF,GACtF,GAAIugB,cADmF,MACrE,IADqE,IACrE,aADqE,GACrE,MADqE,GACrE,GAAE41B,mBAAF,CAAsB5pC,MAAtB,CAA6B,UAAAC,CAAC;AAAA,uBAAIA,CAAC,CAACyuB,UAAF,CAAaqa,gBAAb,IAAiCx0C,WAAW,CAACC,MAAZ,CAAmBwJ,QAAxD;AAAA,eAA9B,CADT,CAAvD;;AAIA,kBAAIsuC,6BAA6B,IAAIA,6BAA6B,CAACnxC,MAA9B,GAAuC,CAA5E,EAA+E;AAC3E,oBAAIqxC,OAAO,GAAGz3C,QAAQ,CAACu3C,6BAA6B,CAACA,6BAA6B,CAACnxC,MAA9B,GAAuC,CAAxC,CAA7B,CAAwEuzB,UAAxE,CAAmFp6B,oBAAnF,CAAwGN,QAAxG,EAAD,CAAtB;AACA,oBAAIy4C,SAAS,GAAG13C,QAAQ,CAACu3C,6BAA6B,CAAC,CAAD,CAA7B,CAAiC5d,UAAjC,CAA4Cp6B,oBAA5C,CAAiEN,QAAjE,EAAD,CAAxB;;AAEA,oBAAIs4C,6BAA6B,CAACnxC,MAA9B,GAAuC,CAA3C,EAA8C;AAE1C,sBAAIuxC,WAAW,GAAW,CAA1B;AACA,sBAAIxC,QAAQ,GAAWlb,eAAe,CAAC7zB,MAAvC;AACA,sBAAIwxC,WAAW,GAAWL,6BAA6B,CAACnxC,MAAxD;AACA,sBAAIyxC,KAAK,GAAW,CAApB;;AAEA,uBAAK,IAAIpE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,QAApB,EAA8B1B,CAAC,EAA/B,EAAmC;AACnC;AACI,wBAAIsE,WAAW,GAAW9d,eAAe,CAACwZ,CAAD,CAAf,CAAmB+C,OAAnB,CAA2Bv3C,QAA3B,EAA1B;AACA,wBAAIy3C,OAAO,GAAW12C,QAAQ,CAAC+3C,WAAW,CAAC14C,SAAZ,CAAsB,CAAtB,EAAyB,CAAzB,CAAD,CAA9B;AACA,wBAAIs3C,QAAQ,GAAW32C,QAAQ,CAAC+3C,WAAW,CAAC14C,SAAZ,CAAsB,CAAtB,EAAyB,CAAzB,CAAD,CAA/B;AACA,wBAAIm3C,OAAO,GAAWx2C,QAAQ,CAAC+3C,WAAW,CAAC14C,SAAZ,CAAsB,CAAtB,EAAyB,EAAzB,CAAD,CAA9B;AAEA,wBAAI24C,KAAK,GAAY,KAArB;;AACA,yBAAK,IAAIC,CAAC,GAAGJ,KAAb,EAAoBI,CAAC,GAAGL,WAAxB,EAAqCK,CAAC,EAAtC,EAA0C;AACtC,0BAAIC,cAAc,GAAWX,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cp6B,oBAA5C,CAAiEN,QAAjE,EAA7B;AACA,0BAAIqG,UAAU,GAAWtF,QAAQ,CAACk4C,cAAc,CAAC74C,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,CAAD,CAAjC;AACA,0BAAI84C,WAAW,GAAWn4C,QAAQ,CAACk4C,cAAc,CAAC74C,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,CAAD,CAAlC;AACA,0BAAIu5C,UAAU,GAAW54C,QAAQ,CAACk4C,cAAc,CAAC74C,SAAf,CAAyB,CAAzB,EAA4B,EAA5B,CAAD,CAAjC;AACA,0BAAIg5C,SAAS,GAAYd,6BAA6B,CAACtsC,MAA9B,CAAqC,UAAAC,CAAC;AAAA,+BAAIA,CAAC,CAACyuB,UAAF,CAAa2e,eAAb,CAA6BprB,OAA7B,CAAqCkqB,cAArC,IAAuD,CAAC,CAA5D;AAAA,uBAAtC,IAAuG,IAAvG,GAA8G,KAAvI;;AACA,0BAAIV,OAAO,IAAIpxC,UAAX,IAAyBqxC,QAAQ,IAAIwB,WAArC,IAAoD3B,OAAO,IAAIoC,UAA/D,IAA6EP,SAAjF,EAA4F;AACxFV,mCAAW,IAAI,CAAf;AACA/8B,8CAAsB,CAACxW,IAAvB,CAAgD;AAC5Cm0C,+BAAK,EAAEhB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4C6e,OADP;AAE5C5jB,4BAAE,EAAE2iB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4C8e,gBAFJ;AAG5C5E,kCAAQ,EAAEr0C,WAAW,CAACC,MAAZ,CAAmBo0C,QAHe;AAI5CwB,yCAAe,EAAEpb,eAAe,CAACwZ,CAAD,CAAf,CAAmB4B,eAJQ;AAK5CrB,0CAAgB,EAAEx0C,WAAW,CAACC,MAAZ,CAAmBwJ,QALO;AAM5CyvC,4BAAE,EAAEnB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4C+e,EANJ;AAO5CjC,kCAAQ,EAAEhD,CAPkC;AAQ5C54B,6BAAG,EAAE08B,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cgf,YARL;AAS5CC,oCAAU,EAAErB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cp6B,oBATZ;AAU5Cs5C,8BAAI,EAAEtB,6BAA6B,CAACU,CAAD,CAA7B,CAAiCte,UAAjC,CAA4Cmf,WAVN;AAW5CpF,mCAAS,EAAEzZ,eAAe,CAACwZ,CAAD,CAAf,CAAmBC,SAXc;AAY5CqF,iCAAO,EAAEnB,WAZmC;AAa5CtyC,oCAAU,EAAEA,UAbgC;AAc5C6yC,qCAAW,EAAEA,WAd+B;AAe5CC,mCAAS,EAAEQ;AAfiC,yBAAhD,EAFwF,CAmBxF;;AACAf,6BAAK,GAAGI,CAAC,GAAG,CAAZ;AACAD,6BAAK,GAAG,IAAR;AACA;AACH;AACJ;;AAED,wBAAI,CAACA,KAAL,EAAY;AACRp9B,4CAAsB,CAACxW,IAAvB,CAAgD;AAC5Cw0C,kCAAU,EAAE3e,eAAe,CAACwZ,CAAD,CAAf,CAAmB+C,OADa;AAE5CC,gCAAQ,EAAEhD,CAFkC;AAG5CC,iCAAS,EAAE;AAHiC,uBAAhD;AAKH;AACJ;;AAED,sBAAIyF,MAAM,GAAa,EAAvB;AACA,sBAAIC,QAAQ,GAAa,EAAzB;AAEA,sBAAIC,SAAS,GAAWz+B,sBAAsB,CAACxU,MAA/C;AACA,sBAAIrH,cAAJ;;AACA,uBAAK,IAAI00C,GAAC,GAAG4F,SAAS,GAAG,CAAzB,EAA4B5F,GAAC,IAAI,CAAjC,EAAoCA,GAAC,EAArC,EAAyC;AACrC,wBAAI74B,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0B7e,EAA9B,EAAkC;AAC9B71B,oCAAc,GAAG6b,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0BmF,UAA3C;;AACA,0BAAIV,gBAAc,GAAWt9B,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0BmF,UAA1B,CAAqC35C,QAArC,EAA7B;;AACA,0BAAIqG,YAAU,GAAWtF,QAAQ,CAACk4C,gBAAc,CAAC74C,SAAf,CAAyB,CAAzB,EAA4B,CAA5B,CAAD,CAAjC,CAH8B,CAK9B;;;AACA85C,4BAAM,CAAC/0C,IAAP,CAAYwW,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0B7e,EAAtC;AACAwkB,8BAAQ,CAACh1C,IAAT,CAAckB,YAAd;AACH;;AAED,wBAAI6zC,MAAM,CAAC/yC,MAAP,GAAgBkxC,QAApB,EAA8B;AAC1B6B,4BAAM,CAACG,KAAP;AACAF,8BAAQ,CAACE,KAAT;AACH;;AAED,wBAAIH,MAAM,CAAC/yC,MAAP,GAAgB,CAApB,EAAuB;AACnBwU,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0B8F,QAA1B,GAAqCJ,MAAM,CAACK,IAAP,CAAY,GAAZ,CAArC;AACA5+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0B10C,cAA1B,GAA2CA,cAA3C;AACA6b,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BgG,SAA1B,GAAsCN,MAAM,CAAC/yC,MAA7C;AACAwU,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BiG,UAA1B,GAAuC,KAAKA,UAAL,CAAgBP,MAAhB,CAAvC;AACAv+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BkG,WAA1B,GAAwC,KAAKA,WAAL,CAAiBR,MAAjB,CAAxC;AACAv+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BmG,KAA1B,GAAkC,KAAKA,KAAL,CAAWT,MAAX,CAAlC;AACAv+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BoG,KAA1B,GAAkC,KAAKA,KAAL,CAAWV,MAAX,CAAlC;AACAv+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BqG,MAA1B,GAAmC,KAAKC,SAAL,CAAeZ,MAAf,CAAnC;AACAv+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BuG,GAA1B,GAAgC,KAAKC,MAAL,CAAYd,MAAZ,CAAhC;AACAv+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0ByG,OAA1B,GAAoC,KAAKC,gBAAL,CAAsBhB,MAAtB,CAApC;AACAv+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0B2G,cAA1B,GAA2C,KAAKC,iBAAL,CACvCz/B,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0BuG,GADa,EAEvCp/B,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0ByG,OAFa,EAGvCt/B,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0BqG,MAHa,EAIvCl/B,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0BiG,UAJa,EAKvC9+B,sBAAsB,CAAC64B,GAAD,CAAtB,CAA0BkG,WALa,CAA3C;AAMA/+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0B6G,WAA1B,GAAwC,KAAKC,OAAL,CAAanB,QAAb,CAAxC;AACAx+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0B+G,aAA1B,GAA0C,KAAKC,OAAL,CAAarB,QAAb,CAA1C;AACAx+B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BgE,OAA1B,GAAoCA,OAApC;AACA78B,4CAAsB,CAAC64B,GAAD,CAAtB,CAA0BiE,SAA1B,GAAsCA,SAAtC;AACH;AACJ;;AAED,sBAAIgD,SAAS,GAAW9/B,sBAAsB,CAACxU,MAA/C;;AACA,uBAAK,IAAIkF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGovC,SAApB,EAA+BpvC,CAAC,EAAhC,EAAoC;AAChCsP,0CAAsB,CAACtP,CAAD,CAAtB,CAA0BytC,OAA1B,GAAoCpB,WAApC;AACH;AACJ;AACJ;;AAED,qBAAO/8B,sBAAP;AACH;AACJ;;;iBAEO,oBAAWu+B,MAAX,EAA2B;AAC/B,gBAAIwB,UAAU,GAAa,EAA3B;;AAD+B,wDAEhBxB,MAFgB;AAAA;;AAAA;AAE/B,qEAAuB;AAAA,oBAAdvkB,EAAc;;AACnB,oBAAIA,EAAE,GAAG,EAAT,EAAa;AACT+lB,4BAAU,CAACv2C,IAAX,CAAgBwwB,EAAhB;AACH;AACJ;AAN8B;AAAA;AAAA;AAAA;AAAA;;AAQ/B,mBAAQ+lB,UAAU,CAACv0C,MAAX,GAAoB+yC,MAAM,CAAC/yC,MAA5B,GAAsC,GAA7C;AACH;;;iBAEO,qBAAY+yC,MAAZ,EAA4B;AAChC,gBAAIyB,WAAW,GAAa,EAA5B;;AADgC,yDAEjBzB,MAFiB;AAAA;;AAAA;AAEhC,wEAAuB;AAAA,oBAAdvkB,EAAc;;AACnB,oBAAIA,EAAE,GAAG,GAAT,EAAc;AACVgmB,6BAAW,CAACx2C,IAAZ,CAAiBwwB,EAAjB;AACH;AACJ;AAN+B;AAAA;AAAA;AAAA;AAAA;;AAQhC,mBAAQgmB,WAAW,CAACx0C,MAAZ,GAAqB+yC,MAAM,CAAC/yC,MAA7B,GAAuC,GAA9C;AACH;;;iBACO,iBAAQgzC,QAAR,EAA0B;AAC9B,gBAAImB,OAAO,GAAW,KAAtB;;AAD8B,yDAGbnB,QAHa;AAAA;;AAAA;AAG9B,wEAA2B;AAAA,oBAAlBr5C,IAAkB;;AACvB,oBAAIw6C,OAAO,GAAGx6C,IAAd,EAAoB;AAChBw6C,yBAAO,GAAGx6C,IAAV;AACH;AACJ;AAP6B;AAAA;AAAA;AAAA;AAAA;;AAS9B,mBAAOw6C,OAAP;AACH;;;iBACO,iBAAQnB,QAAR,EAA0B;AAC9B,gBAAIqB,OAAO,GAAW,CAAtB;;AAD8B,yDAGbrB,QAHa;AAAA;;AAAA;AAG9B,wEAA2B;AAAA,oBAAlBr5C,IAAkB;;AACvB,oBAAI06C,OAAO,GAAG16C,IAAd,EAAoB;AAChB06C,yBAAO,GAAG16C,IAAV;AACH;AACJ;AAP6B;AAAA;AAAA;AAAA;AAAA;;AAS9B,mBAAO06C,OAAP;AACH;;;iBACO,eAAMtB,MAAN,EAAsB;AAC1B,gBAAIU,KAAK,GAAW,CAApB;;AAD0B,yDAGXV,MAHW;AAAA;;AAAA;AAG1B,wEAAuB;AAAA,oBAAdvkB,EAAc;;AACnB,oBAAIilB,KAAK,GAAGjlB,EAAZ,EAAgB;AACZilB,uBAAK,GAAGjlB,EAAR;AACH;AACJ;AAPyB;AAAA;AAAA;AAAA;AAAA;;AAS1B,mBAAOilB,KAAP;AACH;;;iBACO,eAAMV,MAAN,EAAsB;AAC1B,gBAAIS,KAAK,GAAW,QAApB;;AAD0B,yDAGXT,MAHW;AAAA;;AAAA;AAG1B,wEAAuB;AAAA,oBAAdvkB,EAAc;;AACnB,oBAAIglB,KAAK,GAAGhlB,EAAZ,EAAgB;AACZglB,uBAAK,GAAGhlB,EAAR;AACH;AACJ;AAPyB;AAAA;AAAA;AAAA;AAAA;;AAS1B,mBAAOglB,KAAP;AACH;;;iBACO,0BAAiBT,MAAjB,EAAiC;AACrC,gBAAI0B,IAAI,GAAW,CAAnB;AAEAA,gBAAI,GAAG,GAAP;;AAHqC,yDAKtB1B,MALsB;AAAA;;AAAA;AAKrC,wEAAuB;AAAA,oBAAdvkB,EAAc;AACnBimB,oBAAI,IAAIjmB,EAAR;AACH;AAPoC;AAAA;AAAA;AAAA;AAAA;;AASrC,mBAAOla,IAAI,CAACogC,GAAL,CAASD,IAAT,EAAgB,MAAM1B,MAAM,CAAC/yC,MAA7B,CAAP;AACH;;;iBACO,2BAAkB4zC,GAAlB,EAA+BE,OAA/B,EAAgDJ,MAAhD,EAAgEJ,UAAhE,EAAoFC,WAApF,EAAuG;AAC3G,gBAAIoB,cAAc,GAAmC;AAAEnvB,mBAAK,EAAE,EAAT;AAAaovB,oBAAM,EAAE;AAArB,aAArD;;AACA,gBAAI,CAAClB,MAAL,EAAa;AACT,qBAAOiB,cAAP;AACH;;AACD,gBAAKb,OAAO,GAAG,EAAX,IAAmBJ,MAAM,GAAG,EAA5B,IAAoCE,GAAG,GAAG,GAA1C,IAAmDL,WAAW,GAAG,EAArE,EAA0E;AACtE,kBAAKO,OAAO,GAAG,GAAX,IAAoBJ,MAAM,GAAG,GAA7B,IAAsCE,GAAG,GAAG,GAA5C,IAAqDL,WAAW,GAAG,EAAvE,EAA4E;AACxEoB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,SAA9B;AAAyCovB,wBAAM,EAAE;AAAjD,iBAAjC;AACH,eAFD,MAGK,IAAKd,OAAO,GAAG,GAAX,IAAoBJ,MAAM,GAAG,GAA7B,IAAsCE,GAAG,GAAG,GAA5C,IAAqDL,WAAW,GAAG,EAAvE,EAA4E;AAC7EoB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,SAA9B;AAAyCovB,wBAAM,EAAE;AAAjD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,GAAX,IAAoBJ,MAAM,GAAG,GAA7B,IAAsCE,GAAG,GAAG,GAA5C,IAAqDL,WAAW,GAAG,EAAvE,EAA4E;AAC7EoB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,SAA9B;AAAyCovB,wBAAM,EAAE;AAAjD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,GAAX,IAAoBJ,MAAM,GAAG,GAA7B,IAAsCE,GAAG,GAAG,GAA5C,IAAqDL,WAAW,GAAG,EAAvE,EAA4E;AAC7EoB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,SAA9B;AAAyCovB,wBAAM,EAAE;AAAjD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,GAAX,IAAoBJ,MAAM,GAAG,GAA7B,IAAsCE,GAAG,GAAG,GAA5C,IAAqDL,WAAW,GAAG,EAAvE,EAA4E;AAC7EoB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,SAA9B;AAAyCovB,wBAAM,EAAE;AAAjD,iBAAjC;AACH,eAFI,MAGA;AACDD,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,SAA9B;AAAyCovB,wBAAM,EAAE;AAAjD,iBAAjC;AACH;AACJ,aAnBD,MAoBK,IAAKd,OAAO,GAAG,EAAX,IAAmBJ,MAAM,GAAG,EAA5B,IAAoCE,GAAG,GAAG,EAA1C,IAAkDN,UAAU,GAAG,EAAnE,EAAwE;AACzE,kBAAKQ,OAAO,GAAG,EAAX,IAAmBJ,MAAM,GAAG,EAA5B,IAAoCE,GAAG,GAAG,GAA1C,IAAmDN,UAAU,GAAG,EAApE,EAAyE;AACrEqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,QAA9B;AAAwCovB,wBAAM,EAAE;AAAhD,iBAAjC;AACH,eAFD,MAGK,IAAKd,OAAO,GAAG,EAAX,IAAmBJ,MAAM,GAAG,EAA5B,IAAoCE,GAAG,GAAG,GAA1C,IAAmDN,UAAU,GAAG,EAApE,EAAyE;AAC1EqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,QAA9B;AAAwCovB,wBAAM,EAAE;AAAhD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,EAAX,IAAmBJ,MAAM,GAAG,EAA5B,IAAoCE,GAAG,GAAG,GAA1C,IAAmDN,UAAU,GAAG,EAApE,EAAyE;AAC1EqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,QAA9B;AAAwCovB,wBAAM,EAAE;AAAhD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,EAAX,IAAmBJ,MAAM,GAAG,EAA5B,IAAoCE,GAAG,GAAG,GAA1C,IAAmDN,UAAU,GAAG,EAApE,EAAyE;AAC1EqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,QAA9B;AAAwCovB,wBAAM,EAAE;AAAhD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,EAAX,IAAmBJ,MAAM,GAAG,EAA5B,IAAoCE,GAAG,GAAG,EAA1C,IAAkDN,UAAU,GAAG,EAAnE,EAAwE;AACzEqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,QAA9B;AAAwCovB,wBAAM,EAAE;AAAhD,iBAAjC;AACH,eAFI,MAGA;AACDD,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,QAA9B;AAAwCovB,wBAAM,EAAE;AAAhD,iBAAjC;AACH;AACJ,aAnBI,MAoBA;AACD,kBAAKd,OAAO,GAAG,EAAX,IAAmBJ,MAAM,GAAG,EAA5B,IAAoCE,GAAG,GAAG,EAA1C,IAAkDN,UAAU,GAAG,CAAnE,EAAuE;AACnEqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,UAA9B;AAA0CovB,wBAAM,EAAE;AAAlD,iBAAjC;AACH,eAFD,MAGK,IAAKd,OAAO,GAAG,CAAX,IAAkBJ,MAAM,GAAG,CAA3B,IAAkCE,GAAG,GAAG,EAAxC,IAAgDN,UAAU,GAAG,CAAjE,EAAqE;AACtEqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,UAA9B;AAA0CovB,wBAAM,EAAE;AAAlD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,CAAX,IAAkBJ,MAAM,GAAG,CAA3B,IAAkCE,GAAG,GAAG,EAAxC,IAAgDN,UAAU,GAAG,CAAjE,EAAqE;AACtEqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,UAA9B;AAA0CovB,wBAAM,EAAE;AAAlD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,CAAX,IAAkBJ,MAAM,GAAG,CAA3B,IAAkCE,GAAG,GAAG,EAAxC,IAAgDN,UAAU,GAAG,CAAjE,EAAqE;AACtEqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,UAA9B;AAA0CovB,wBAAM,EAAE;AAAlD,iBAAjC;AACH,eAFI,MAGA,IAAKd,OAAO,GAAG,CAAX,IAAkBJ,MAAM,GAAG,CAA3B,IAAkCE,GAAG,GAAG,CAAxC,IAA+CN,UAAU,GAAG,CAAhE,EAAoE;AACrEqB,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,UAA9B;AAA0CovB,wBAAM,EAAE;AAAlD,iBAAjC;AACH,eAFI,MAGA;AACDD,8BAAc,GAAmB;AAAEE,0BAAQ,EAAE,SAAZ;AAAuBrvB,uBAAK,EAAE,UAA9B;AAA0CovB,wBAAM,EAAE;AAAlD,iBAAjC;AACH;AACJ;;AAED,mBAAOD,cAAP;AACH;;;iBACO,mBAAU5B,MAAV,EAA0B;AAC9B,gBAAI+B,UAAU,GAAa,EAA3B;AAEA,gBAAIC,OAAO,GAAWhC,MAAM,CAAC/yC,MAA7B;;AACA,iBAAK,IAAIkF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6vC,OAApB,EAA6B7vC,CAAC,EAA9B,EAAkC;AAC9B4vC,wBAAU,CAAC92C,IAAX,CAAgB+0C,MAAM,CAAC7tC,CAAD,CAAtB;AACH;;AAED4vC,sBAAU,CAAC32C,IAAX,CAAgB,UAAC62C,EAAD,EAAKC,EAAL;AAAA,qBAAYD,EAAE,GAAGC,EAAjB;AAAA,aAAhB;AACA,gBAAIC,IAAI,GAAWJ,UAAU,CAAC90C,MAA9B;AACA,gBAAIm1C,GAAG,GAAGv7C,QAAQ,CAAC,CAACs7C,IAAI,GAAG,CAAR,EAAWr8C,QAAX,EAAD,CAAlB;AACA,mBAAQq8C,IAAI,GAAG,CAAP,IAAY,CAAb,GAAkBJ,UAAU,CAACK,GAAD,CAA5B,GAAoC,CAACL,UAAU,CAACK,GAAD,CAAV,GAAkBL,UAAU,CAACK,GAAG,GAAG,CAAP,CAA7B,IAA0C,CAArF;AAEH;;;iBACO,gBAAOpC,MAAP,EAAuB;AAC3B,gBAAIqC,SAAS,GAAa,EAA1B;;AAD2B,yDAEZrC,MAFY;AAAA;;AAAA;AAE3B,wEAAuB;AAAA,oBAAdvkB,EAAc;AACnB4mB,yBAAS,CAACp3C,IAAV,CAAesW,IAAI,CAAC+U,GAAL,CAASmF,EAAT,IAAela,IAAI,CAAC+gC,IAAnC;AACH;AAJ0B;AAAA;AAAA;AAAA;AAAA;;AAM3B,gBAAIC,OAAO,GAAG,GAAd;AACA,gBAAIC,GAAG,GAAG,GAAV;;AACA,4CAAcH,SAAd,oCAAyB;AAApB,kBAAII,CAAC,mBAAL;AACDD,iBAAG,IAAIC,CAAP;AACH;;AACDF,mBAAO,GAAGC,GAAG,GAAGxC,MAAM,CAAC/yC,MAAvB;AACA,gBAAIy1C,EAAE,GAAW,KAAKC,oBAAL,CAA0BN,SAA1B,CAAjB;AACA,gBAAIO,MAAM,GAAIF,EAAE,GAAG,IAAN,GAAcH,OAA3B;AACA,mBAAOhhC,IAAI,CAACogC,GAAL,CAAS,EAAT,EAAaiB,MAAb,CAAP;AACH;;;iBACO,8BAAqB5C,MAArB,EAAqC;AACzC,gBAAI6C,GAAG,GAAW,CAAlB;AACA,gBAAInmB,KAAK,GAAW,CAApB;;AAFyC,yDAG1BsjB,MAH0B;AAAA;;AAAA;AAGzC,wEAAuB;AAAA,oBAAdvkB,EAAc;AACnBiB,qBAAK,GAAGA,KAAK,GAAGjB,EAAhB;AACH;AALwC;AAAA;AAAA;AAAA;AAAA;;AAMzConB,eAAG,GAAGnmB,KAAK,GAAGsjB,MAAM,CAAC/yC,MAArB;AAEA,gBAAI61C,GAAG,GAAW,CAAlB;;AARyC,yDAS1B9C,MAT0B;AAAA;;AAAA;AASzC,wEAAuB;AAAA,oBAAdvkB,GAAc;AACnBqnB,mBAAG,IAAI,CAACrnB,GAAE,GAAGonB,GAAN,KAAcpnB,GAAE,GAAGonB,GAAnB,CAAP;AACH;AAXwC;AAAA;AAAA;AAAA;AAAA;;AAazC,mBAAOthC,IAAI,CAACwhC,IAAL,CAAWD,GAAD,IAAS9C,MAAM,CAAC/yC,MAAP,GAAgB,CAAzB,CAAV,CAAP;AACH;;;iBAEO,8BAAqB;;;AACzB,iBAAK6wC,6BAAL,CAAmC,CAAD,WAAC,KAAKp5C,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIugB,cAAjF;AACA9X,mBAAO,CAACC,KAAR,CAAc,CAAD,WAAC,KAAKvJ,gBAAL,CAAsBoI,UAAvB,MAAiC,IAAjC,IAAiC,aAAjC,GAAiC,MAAjC,GAAiC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIugB,cAA5D;;AACA,gBAAI,KAAKnZ,OAAT,EAAkB,CACd;AACH;AACJ;;;iBAEO,uCAA8BmB,CAA9B,EAAiD;AACrD,iBAAKpJ,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7CyY,4BAAc,EAAEhY;AAD6B,aAAjD;AAGH;;;iBACO,uCAA8BA,CAA9B,EAAiD;AACrD,iBAAKpJ,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CugB,cAA5C,CAA2D41B,mBAA3D,CAA+EsH,MAA/E,CAAsFl1C,CAAC,CAAC4tC,mBAAxF;AACA,iBAAKh3C,gBAAL,CAAsB2I,eAAtB,CAAiD;AAC7CyY,4BAAc,EAAE,KAAKphB,gBAAL,CAAsBoI,UAAtB,CAAiCvH,QAAjC,GAA4CugB;AADf,aAAjD;AAIA,iBAAKm9B,mBAAL;AAEA,iBAAKngC,oBAAL;;AAEA,gBAAI,KAAKnW,OAAT,EAAkB;AACd,kBAAI,KAAKF,0BAAL,CAAgC2J,sBAAhC,EAAJ,EAA8D;AAC1D,qBAAK3R,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ,aAJD,MAKK;AACD,kBAAI,KAAKhB,0BAAL,CAAgCy2C,wBAAhC,EAAJ,EAAgE;AAC5D,qBAAKz+C,eAAL,CAAqB6I,cAArB,CAA8C;AAAEC,wBAAM,EAAE,EAAV;AAAcE,yBAAO,EAAE;AAAvB,iBAA9C;AACH;AACJ;;AAED,gBAAI,KAAKhJ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+K,cAA9C,EAA8D;AAC1D,kBAAI,KAAK7L,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4T,qBAA1C,IAAmE,4GAA0BC,SAAjG,EAA4G;AACxG,qBAAKrN,UAAL,CAAgB0E,QAAhB;AACA,qBAAK1E,UAAL,CAAgB2E,WAAhB,CAA4B,CACxB;AACA;AAFwB,iBAA5B;AAIH;AACJ;AACJ;;;;;;;yBAnyBQqpC,qB,EAAqB,wH,EAAA,2I,EAAA,6I,EAAA,iJ,EAAA,wK,EAAA,gL,EAAA,oI,EAAA,0K,EAAA,uL;AAAA,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC3BHoJ,qB;AACT,yCAAc;AAAA;AACb;;;;iBAED,wBAAe92C,IAAf,EAAqB;AACjB,mBAAO,UAAUhB,CAAV,EAAaC,CAAb,EAAgB;AACnB,kBAAID,CAAC,CAACgB,IAAD,CAAD,GAAUf,CAAC,CAACe,IAAD,CAAf,EAAuB;AACnB,uBAAO,CAAP;AACH,eAFD,MAEO,IAAIhB,CAAC,CAACgB,IAAD,CAAD,GAAUf,CAAC,CAACe,IAAD,CAAf,EAAuB;AAC1B,uBAAO,CAAC,CAAR;AACH;;AACD,qBAAO,CAAP;AACH,aAPD;AAQH;;;;;;;yBAbQ82C,qB;AAAqB,O;;;eAArBA,qB;AAAqB,iBAArBA,qBAAqB,K;AAAA,oBAFlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACHhB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCMSC,yB;AAEX,2CAAmB3+C,eAAnB,EACSE,kBADT,EACiD;AAAA;;AAD9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AAA2C;;;;iBAEpD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBATUy+C,yB,EAAyB,mJ,EAAA,yJ;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA,gB;AAAA,e;AAAA,uH;AAAA;AAAA;ADVtC;;;;AAGA;;;;AAIA;;AAAG;;AAAmC;;;;AAP/B;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AEH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAKO,UAAMC,KAAK,GAAG,IAAI,4DAAJ,CAA0B,OAA1B,CAAd;;AAEA,eAASC,QAAT,GAAiB;AACtB,eAAO,iDAAP;AACD;;;;;;;;;;;;;;;;;ACTD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;AAWA,UAAYC,YAAZ;;AAAA,iBAAYA,YAAZ,EAAwB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,OAVD,EAAYA,YAAY,KAAZA,YAAY,MAAxB;;AAYO,eAASC,eAAT,GAAwB;AAE7B,eAAOD,YAAP;AACD;;AAEM,eAASE,2BAAT,CAAqCh/C,eAArC,EAAqE;;;AACxE,YAAIuG,mBAAmB,GAAoB,EAA3C;;AACA,YAAI,OAAAvG,eAAe,CAACa,SAAhB,MAAyB,IAAzB,IAAyB,aAAzB,GAAyB,MAAzB,GAAyB,GAAEC,QAAF,GAAa+B,QAAtC,KAAkD,kFAAaC,EAAnE,EAAuE;AACnEyD,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH,SAVD,MAWK;AACDH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACAH,6BAAmB,CAACC,IAApB,CAAyB;AAAEC,kBAAM,EAAE,CAAV;AAAaC,oBAAQ,EAAE;AAAvB,WAAzB;AACH;;AAED,eAAOH,mBAAmB,CAACI,IAApB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACF,QAAF,CAAWI,aAAX,CAAyBD,CAAC,CAACH,QAA3B,CAAV;AAAA,SAAzB,CAAP;AACH;;AAEM,eAASu4C,sBAAT,CAAgCj4C,MAAhC,EAAgDhH,eAAhD,EAAgF;AACnF,YAAIiH,mBAAJ;AACA+3C,mCAA2B,CAACh/C,eAAD,CAA3B,CAA6CkH,OAA7C,CAAqD,UAAAC,CAAC,EAAI;AACtD,cAAIA,CAAC,CAACV,MAAF,IAAYO,MAAhB,EAAwB;AACpBC,+BAAmB,GAAGE,CAAC,CAACT,QAAxB;AACA,mBAAO,KAAP;AACH;AACJ,SALD;AAOA,eAAOO,mBAAP;AACH;;;;;;;;;;;;;;;;;AChED;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoCgC;;AAGI;;;;AACJ;;;;;;AAFI;;AACA;;AAAA;;;;;;AAUJ;;AAGI;;;;AACJ;;;;;;AAFI;;AACA;;AAAA;;;;;;AAUJ;;AACI;;AACJ;;;;;;AAF6D;;AACzD;;AAAA;;;;;;AAmBJ;;AACI;;AACJ;;;;;;AAFsD;;AAClD;;AAAA;;;;;;AAUJ;;AACI;;AAGJ;;;;;;;;;;AAJ0C;;AACtC;;AAAA;;;;;;AAoCJ;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;;;AAUJ;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;;;AAUJ;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;;;AAUJ;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;;;AAcJ;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;;;AAUJ;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;;;AAUJ;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;;;AAUJ;;AACI;;AACJ;;;;;;AAFgD;;AAC5C;;AAAA;;;;UD7LvBi4C,wB;AAkBX,0CAAmBl/C,eAAnB,EACSC,gBADT,EAES8rB,cAFT,EAGS7rB,kBAHT,EAISI,+BAJT,EAKSiH,iBALT,EAMUgjC,EANV,EAOSrO,eAPT,EAQU97B,qBARV,EAQwD;AAAA;;AARrC,eAAAJ,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAA8rB,cAAA,GAAAA,cAAA;AACA,eAAA7rB,kBAAA,GAAAA,kBAAA;AACA,eAAAI,+BAAA,GAAAA,+BAAA;AACA,eAAAiH,iBAAA,GAAAA,iBAAA;AACC,eAAAgjC,EAAA,GAAAA,EAAA;AACD,eAAArO,eAAA,GAAAA,eAAA;AACC,eAAA97B,qBAAA,GAAAA,qBAAA;AAzBD,eAAAoM,eAAA,GAAiC,EAAjC;AAEA,eAAA4vB,gBAAA,GAAmC,EAAnC;AACA,eAAAC,eAAA,GAAiC,EAAjC;AAIT,eAAA70B,YAAA,GAAe,8FAAf;AACA,eAAA/G,UAAA,GAAa,0FAAb;AACA,eAAA+d,2BAAA,GAA8B,4HAA9B;AAEA,eAAA2gC,iBAAA,GAAqC,EAArC;AACA,eAAA7gC,eAAA,GAA4B,EAA5B;AACA,eAAAC,eAAA,GAA4B,EAA5B;AACA,eAAA6gC,QAAA,GAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAArB;AACA,eAAAC,SAAA,GAAsB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CAAtB;AAU2D;;;;iBAE3D,oBAAQ;AACN,iBAAK9yB,QAAL,GAAwB,KAAKvsB,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+B,QAAlE;AACA,iBAAKy8C,QAAL,GAAgB,KAAK/U,EAAL,CAAQE,KAAR,CAAc;AAC5Bn4B,8BAAgB,EAAE,CAAC,KAAKtS,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwR,gBAA3C,CADU;AAE5BC,4BAAc,EAAE,CAAC,KAAKvS,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyR,cAA3C,CAFY;AAG5BC,0BAAY,EAAE,CAAC,KAAKxS,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C0R,YAA3C,CAHc;AAI5BC,8BAAgB,EAAE,CAAC,KAAKzS,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C2R,gBAA3C,CAJU;AAK5BC,kCAAoB,EAAE,CAAC,KAAK1S,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C4R,oBAA3C,CALM;AAM5BC,qCAAuB,EAAE,CAAC,KAAK3S,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C6R,uBAA3C,CANG;AAO5BE,6CAA+B,EAAE,CAAC,KAAK7S,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0C+R,+BAA3C,CAPL;AAQ5BC,gCAAkB,EAAE,CAAC,KAAK9S,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CgS,kBAA3C,CARQ;AAS5BC,8BAAgB,EAAE,CAAC,KAAK/S,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CiS,gBAA3C,CATU;AAU5BC,4BAAc,EAAE,CAAC,KAAKhT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CkS,cAA3C,CAVY;AAW5BC,4BAAc,EAAE,CAAC,KAAKjT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CmS,cAA3C,CAXY;AAY5BC,4BAAc,EAAE,CAAC,KAAKlT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CoS,cAA3C,CAZY;AAa5BC,4BAAc,EAAE,CAAC,KAAKnT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CqS,cAA3C,CAbY;AAc5BC,4BAAc,EAAE,CAAC,KAAKpT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CsS,cAA3C,CAdY;AAe5BC,4BAAc,EAAE,CAAC,KAAKrT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CuS,cAA3C,CAfY;AAgB5BC,4BAAc,EAAE,CAAC,KAAKtT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CwS,cAA3C,CAhBY;AAiB5BC,4BAAc,EAAE,CAAC,KAAKvT,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CyS,cAA3C;AAjBY,aAAd,CAAhB;AAmBA,iBAAK4rC,iBAAL,GAAyB,KAAKjjB,eAAL,CAAqBqjB,6CAArB,EAAzB;AACA,iBAAKjhC,eAAL,GAAuB,KAAK4d,eAAL,CAAqBsjB,UAArB,EAAvB;AACA,iBAAKjhC,eAAL,GAAuB,KAAK2d,eAAL,CAAqBujB,UAArB,EAAvB;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBAvDUP,wB,EAAwB,mJ,EAAA,qJ,EAAA,wJ,EAAA,yJ,EAAA,4L,EAAA,+J,EAAA,4H,EAAA,2J,EAAA,yK;AAAA,O;;;cAAxBA,wB;AAAwB,6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,kB;AAAA,gB;AAAA,qmC;AAAA;AAAA;;;ACzBrC;;AACI;;AACI;;AACI;;AACI;;AACI;;AAGJ;;AACA;;AACI;;AAAQ;;AAED;;AAAS;;;;AAEhB;;AAAQ;;AAED;;AAAS;;;;AAEhB;;AAAQ;;AAED;;AAAS;;AAEhB;;AAAQ;;AAED;;AAAS;;AAMpB;;AACJ;;AACA;;AACI;;AACI;;AACI;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAhjB,eAAA,uBAAnB;AAAwD,aAAxD;;AACA;;;;AAKJ;;AACA;;AAAW;;AAEL;;AACV;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,qBAAnB;AAAsD,aAAtD;;AACA;;;;AAKJ;;AACA;;AAAW;;AAEL;;AACV;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,mBAAnB;AAAmD,aAAnD;;AACA;;AAGJ;;AACA;;AAAW;;AAEL;;AACV;;AASA;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,8BAAnB;AAAgE,aAAhE;;AACA;;AAGJ;;AACA;;AAAW;;AAEL;;AACV;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sCAAnB;AAAwE,aAAxE;;AACA;;AAKJ;;AACA;;AAAW;;AAEL;;AACV;;AAmBA;;AAAI;;AAEE;;AACN;;AAAM;;AAEO;;AACb;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sBAAnB;AAA0D,aAA1D;;AACA;;AAGJ;;AACA;;AAAW;;AAEK;;AACpB;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sBAAnB;AAA0D,aAA1D;;AACA;;AAGJ;;AACA;;AAAW;;AAEK;;AACpB;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sBAAnB;AAA0D,aAA1D;;AACA;;AAGJ;;AACA;;AAAW;;AAEK;;AACpB;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sBAAnB;AAA0D,aAA1D;;AACA;;AAGJ;;AACA;;AAAW;;AAEK;;AACpB;;AACA;;AACA;;AAAM;;AAEO;;AACb;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sBAAnB;AAA0D,aAA1D;;AACA;;AAGJ;;AACA;;AAAW;;AAEK;;AACpB;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sBAAnB;AAA0D,aAA1D;;AACA;;AAGJ;;AACA;;AAAW;;AAEK;;AACpB;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sBAAnB;AAA0D,aAA1D;;AACA;;AAGJ;;AACA;;AAAW;;AAEK;;AACpB;;AACA;;AACI;;AACI;AAAA;;AAAA;;AAAA,qBAAmB,IAAAA,eAAA,sBAAnB;AAA0D,aAA1D;;AACA;;AAGJ;;AACA;;AAAW;;AAEK;;AACpB;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA7NoB;;AAAA;;AAKQ;;AAAA;;AAEQ;;AAAA;;AAER;;AAAA;;AAEQ;;AAAA;;AAER;;AAAA;;AAEQ;;AAAA;;AAER;;AAAA;;AAEQ;;AAAA;;AAUV;;AAAA;;AAKuC;;AAAA;;AAK1B;;AAAA;;AAQwB;;AAAA;;AAKxB;;AAAA;;AAOmB;;AAAA;;AAInB;;AAAA;;AAgByB;;AAAA;;AAIzB;;AAAA;;AAOqB;;AAAA;;AAMrB;;AAAA;;AAsBX;;AAAA;;AAGE;;AAAA;;AAM8B;;AAAA;;AAIrB;;AAAA;;AAOqB;;AAAA;;AAIrB;;AAAA;;AAOqB;;AAAA;;AAIrB;;AAAA;;AAOqB;;AAAA;;AAIrB;;AAAA;;AAKT;;AAAA;;AAM8B;;AAAA;;AAIrB;;AAAA;;AAOqB;;AAAA;;AAIrB;;AAAA;;AAOqB;;AAAA;;AAIrB;;AAAA;;AAOqB;;AAAA;;AAIrB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;ACxNvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIQ;;AACI;;AAAuC;AAAA;;AAAA;;AAAA;AAAA;;AACnC;;AAAU;;AAAI;;AACd;;AAAM;;AAAI;;AACd;;AACJ;;;;;;;;AAKA;;AACI;;AAAqD;AAAA;;AAAA;;AAAA,mBAAS,OAAA50B,UAAA,qCAAT;AAAiD,WAAjD;;AACjD;;AAAU;;AAAK;;AACf;;AAAM;;AAAgB;;AAC1B;;AACJ;;;;UDNKo4C,yB;AAMX,2CAAmB1/C,eAAnB,EACSqH,cADT,EAESC,UAFT,EAEiC;AAAA;;AAFd,eAAAtH,eAAA,GAAAA,eAAA;AACV,eAAAqH,cAAA,GAAAA,cAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AAJT,eAAAE,YAAA,GAAe,8FAAf;AAKC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAW,CAEV;;;iBAED,kBAASob,kBAAT,EAA0C;AACxCtS,iBAAK,CAAC,kBAAD,CAAL;AACD;;;iBAED,kBAASsS,kBAAT,EAA0C;AACxCtS,iBAAK,CAAC,kBAAD,CAAL;AACD;;;;;;;yBAxBUovC,yB,EAAyB,mJ,EAAA,yJ,EAAA,4I;AAAA,O;;;cAAzBA,yB;AAAyB,+C;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,+P;AAAA;AAAA;ACdtC;;AACI;;AACI;;AAAU;;AAAS;;AACvB;;AACA;;AACI;;AAMA;;AAAsB;AAAA,qBAAS,IAAAC,QAAA,iBAAT;AAA8B,aAA9B;;AAClB;;AAAU;;AAAU;;AACpB;;AAAM;;AAAgB;;AAC1B;;AACA;;AAMJ;;AACJ;;;;;;;;;AArBuB;;AAAA;;AAIA;;AAAA;;AAUA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfvB;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSC,0B;AAIX,4CAAmB5/C,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUg1C,0B,EAA0B,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAA1BA,0B;AAA0B,gD;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,wJ;AAAA;AAAA;ADdvC;;;;AAGA;;;;AAIA;;AAAmC;;AAAoC;;;;AAPhE;;AAGoB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UESdC,oB;AAGX,sCAAmB7/C,eAAnB,EACSE,kBADT,EAES6rB,cAFT,EAEyC;AAAA;;AAFtB,eAAA/rB,eAAA,GAAAA,eAAA;AACV,eAAAE,kBAAA,GAAAA,kBAAA;AACA,eAAA6rB,cAAA,GAAAA,cAAA;AACR;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAZU8zB,oB,EAAoB,mJ,EAAA,yJ,EAAA,wJ;AAAA,O;;;cAApBA,oB;AAAoB,yC;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,mF;AAAA;AAAA;ACZjC;;AACI;;AAA2G;;AAC/G;;AACI;;AACI;;AACI;AAAA,qBAAS,IAAA9zB,cAAA,+DAA8B,IAAA/rB,eAAA,qBAA9B,CAAT;AAA6E,aAA7E;;AAEA;;AACJ;;AACJ;;AACA;;AACI;;AACI;AAAA,qBAAS,IAAA+rB,cAAA,eAAT;AAAsC,aAAtC;;AAEA;;AACJ;;AACJ;;AACA;;AACI;;AACI;AAAA,qBAAS,IAAAA,cAAA,kBAAT;AAAyC,aAAzC;;AAEA;;AACJ;;AACJ;;AACA;;AACI;;AACI;AAAA,qBAAS,IAAAA,cAAA,mBAAT;AAA0C,aAA1C;;AAEA;;AACJ;;AACJ;;AACA;;AACI;;AACI;AAAA,qBAAS,IAAAA,cAAA,aAAT;AAAoC,aAApC;;AAEA;;AACJ;;AACJ;;AACJ;;;;;;;;;;AArCI;;AAAA;;AAKQ;;AAAA;;AAFe;;AAGf;;AAAA;;AAMA;;AAAA;;AAFe;;AAGf;;AAAA;;AAMA;;AAAA;;AAFe;;AAGf;;AAAA;;AAMA;;AAAA;;AAFe;;AAGf;;AAAA;;AAMA;;AAAA;;AAFe;;AAGf;;AAAA;;;;;;;;;;;;;;;;;;;;;;AClCZ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAYa+zB,8B;AAKX,gDAAmB9/C,eAAnB,EACSuH,iBADT,EAES2pB,kBAFT,EAEiD;AAAA;;AAF9B,eAAAlxB,eAAA,GAAAA,eAAA;AACV,eAAAuH,iBAAA,GAAAA,iBAAA;AACA,eAAA2pB,kBAAA,GAAAA,kBAAA;AAJT,eAAA1pB,YAAA,GAAe,8FAAf;AAKC;;;;iBAED,oBAAW,CACV;;;iBAED,uBAAc,CACb;;;;;;;yBAdUs4C,8B,EAA8B,mJ,EAAA,+J,EAAA,iK;AAAA,O;;;cAA9BA,8B;AAA8B,sD;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,oC;AAAA;AAAA;ACb3C;;AACI;;AAEJ;;;;AAFI;;AAAA;;;;;;;;;;;;;;;;;;;;;ACIJ;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;UAMaC,0B;AACX,4CAAoB//C,eAApB,EACUywC,qBADV,EACwD;AAAA;;AADpC,eAAAzwC,eAAA,GAAAA,eAAA;AACV,eAAAywC,qBAAA,GAAAA,qBAAA;AACT;;;;iBAED,6BAAoBuP,eAApB,EAAkD;AAChD,gBAAI,CAACA,eAAL,EAAsB,OAAO,CAAC,EAAD,CAAP;AAEtB,gBAAIC,mBAAmB,GAAoB,CAAC,EAAD,CAA3C;AAEA,gBAAIC,QAAQ,GAAmC,EAA/C;AACA,gBAAI1rB,QAAQ,GAAmC,EAA/C;AAEA,gBAAI2qB,iBAAiB,GAAoB,+GAA+B,KAAKn/C,eAApC,CAAzC;;AAEA,iBAAK,IAAI0N,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGyxC,iBAAiB,CAAC32C,MAAtC,EAA8CkF,CAAC,EAA/C,EAAmD;AACjD,kBAAIyyC,eAAe,GAAkB,EAArC;AACA,kBAAIC,qBAAqB,GAAkB,EAA3C;;AACA,mBAAK,IAAIvrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmrB,eAAe,CAACx3C,MAApC,EAA4CqsB,CAAC,EAA7C,EAAiD;AAC/C,oBAAIsqB,iBAAiB,CAACzxC,CAAD,CAAjB,CAAqBjH,MAArB,IAA+Bu5C,eAAe,CAACnrB,CAAD,CAAf,CAAmB7yB,MAAnB,CAA0Bq+C,WAA7D,EAA0E;AACxEF,iCAAe,CAAC35C,IAAhB,CAAqBw5C,eAAe,CAACnrB,CAAD,CAApC;AACD;AACF;;AACD,kBAAIsrB,eAAe,CAAC33C,MAAhB,GAAyB,CAA7B,EAAgC;AAE9B,qBAAK,IAAI83C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,eAAe,CAAC33C,MAApC,EAA4C83C,CAAC,EAA7C,EAAiD;AAC/C9rB,0BAAQ,CAAChuB,IAAT,CAA4C;AAC1C+G,4BAAQ,EAAE4yC,eAAe,CAACG,CAAD,CAAf,CAAmBt+C,MAAnB,CAA0BuL,QADM;AAE1ClD,kCAAc,EAAE81C,eAAe,CAACG,CAAD,CAAf,CAAmBt+C,MAAnB,CAA0BqI,cAA1B,CAAyCsqB,WAAzC;AAF0B,mBAA5C;AAID;;AAEDurB,wBAAQ,GAAG1rB,QAAQ,CAAC7tB,IAAT,CAAc,KAAK8pC,qBAAL,CAA2BE,cAA3B,CAA0C,gBAA1C,CAAd,CAAX;;AAEA,qBAAK,IAAI2P,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG9rB,QAAQ,CAAChsB,MAA7B,EAAqC83C,GAAC,EAAtC,EAA0C;AACxC,uBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,eAAe,CAAC33C,MAApC,EAA4C+3C,CAAC,EAA7C,EAAiD;AAC/C,wBAAIL,QAAQ,CAACI,GAAD,CAAR,CAAY/yC,QAAZ,IAAwB4yC,eAAe,CAACI,CAAD,CAAf,CAAmBv+C,MAAnB,CAA0BuL,QAAtD,EAAgE;AAC9D6yC,2CAAqB,CAAC55C,IAAtB,CAA2B25C,eAAe,CAACI,CAAD,CAA1C;AACA;AACD;AACF;AACF;;AAEDN,mCAAmB,CAACz5C,IAApB,CAAyB45C,qBAAzB;AACD;AACF;;AAED,mBAAOH,mBAAP;AACD;;;;;;;yBAhDUF,0B,EAA0B,0I,EAAA,+J;AAAA,O;;;eAA1BA,0B;AAA0B,iBAA1BA,0BAA0B,K;AAAA,oBAFzB;;;;;;;;;;;;;;;;;ACRdmBAAS,QAAAjgD,sBAAA,6FAAT;AAA4G,WAA5G;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,8FAAT;AAA6G,WAA7G;;AAEA;;AACJ;;;;;;AAOI;;AACI;;AACJ;;;;;;AADI;;AAAA;;;;;;;;AAGR;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,sGAAT;AAAqH,WAArH;;AAEA;;AACJ;;;;;;;;AACA;;AACI;AAAA;;AAAA;;AAAA,mBAAS,QAAAA,sBAAA,uGAAT;AAAsH,WAAtH;;AAEA;;AACJ;;;;;;AAOI;;AACI;;AAEJ;;;;;;AAFI;;AAAA;;;;;;AAqBZ;;;;;;;;AACI,8KAAkD,iBAAlD,EAAkD,sKAAlD;;;;;;AAIJ;;;;;;;;AAEI,gLAAkD,iBAAlD,EAAkD,gLAAlD;;;;;;AAIJ;;;;;;;;AACI,gLAAkD,qBAAlD,EAAkD,oKAAlD;;;;;;AAIJ;;AACI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;;;AAEA;;AACI;;AACJ;;;;UDhFa0gD,qB;AAMX,uCAAmBxgD,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGSkO,kBAHT,EAIStO,sBAJT,EAKSO,gBALT,EAMSC,+BANT,EAOSC,oBAPT,EAOqD;AAAA;;AAPlC,eAAAP,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAkO,kBAAA,GAAAA,kBAAA;AACA,eAAAtO,sBAAA,GAAAA,sBAAA;AACA,eAAAO,gBAAA,GAAAA,gBAAA;AACA,eAAAC,+BAAA,GAAAA,+BAAA;AACA,eAAAC,oBAAA,GAAAA,oBAAA;AAZT,eAAAkgD,wBAAA,GAA2B,sHAA3B;AACA,eAAAhgD,UAAA,GAAa,0FAAb;AACA,eAAAC,WAAA,GAAc,4FAAd;AACA,eAAAC,gBAAA,GAAmB,8GAAnB;AASwD;;;;iBAExD,oBAAQ;AACN,iBAAKyN,kBAAL,CAAwB4B,aAAxB,CAAsC,KAAKhQ,eAAL,CAAqBa,SAArB,CAA+BC,QAA/B,GAA0CC,eAAhF,EAAiG,IAAjG;AACD;;;iBAED,uBAAW,CACV;;;;;;;yBApBUy/C,qB,EAAqB,mJ,EAAA,qJ,EAAA,yJ,EAAA,iK,EAAA,0K,EAAA,8J,EAAA,6L,EAAA,sK;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA,iB;AAAA,gB;AAAA,ie;AAAA;AAAA;ACpBlC;;;;AAGA;;;;AAIA;;AACI;AAAA,qBAAS,IAAAjgD,oBAAA,iDAAT;AAA0E,aAA1E;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,0DAAT;AAAmF,aAAnF;;AAEA;;AACI;;AACA;;AAGJ;;AACA;;AAKA;;AAKJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,iDAAT;AAA0E,aAA1E;;AAEA;;AACI;;AACA;;AAIJ;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,oDAAT;AAA6E,aAA7E;;AAEA;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,wDAAT;AAAiF,aAAjF;;AAEA;;AACJ;;AACA;;AACI;AAAA,qBAAS,IAAAA,oBAAA,yDAAT;AAAkF,aAAlF;;AAEA;;AACJ;;AAEA;;AAKA;;AAMA;;AAKA;;AAIA;;AAIA;;;;;;;;;;;AAlGO;;AAGoB;;AAAA;;AAMvB;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAMzB;;AAAA;;AAKA;;AAAA;;AAML;;AAAA;;AAFe;;AAIX;;AAAA;;AAC0B;;AAAA;;AAQ9B;;AAAA;;AAFe;;AAGf;;AAAA;;AAIA;;AAAA;;AAFe;;AAGf;;AAAA;;AAIA;;AAAA;;AAFe;;AAGf;;AAAA;;AAGwB;;AAAA;;AAMvB;;AAAA;;AAKW;;AAAA;;AAKV;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;;;;;;;;;;;;;;;;;;;;;;AClGN;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;;UASaogB,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEA+/B,kB;AAEX,oCAAoB1gD,eAApB,EACUC,gBADV,EAEUC,kBAFV,EAEkD;AAAA;;AAF9B,eAAAF,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACT;;;;iBAED,mCAA0B0B,WAA1B,EAAoD;AAClD,mBAAO,KAAK++C,cAAL,CAAoB/+C,WAAW,CAACC,MAAZ,CAAmB++C,yBAAvC,CAAP;AACD;;;iBAED,mCAA0B7+C,WAA1B,EAAoD;AAClD,mBAAO,KAAK4+C,cAAL,CAAoB5+C,WAAW,CAACC,MAAZ,CAAmB4+C,yBAAvC,CAAP;AACD;;;iBAEO,wBAAeA,yBAAf,EAAgD;;;AAEtD,gBAAI,CAAJ,WAAI,KAAK3gD,gBAAL,CAAsBoI,UAA1B,MAAoC,IAApC,IAAoC,aAApC,GAAoC,MAApC,GAAoC,GAAEvH,QAAF,EAAhC,MAA0C,IAA1C,IAA0C,aAA1C,GAA0C,MAA1C,GAA0C,GAAIqf,cAAlD,EAAkE;AAChE,kBAAM0gC,gBAAgB,eAAmB,KAAK5gD,gBAAL,CAAsBoI,UAAzC,MAAmD,IAAnD,IAAmD,aAAnD,GAAmD,MAAnD,GAAmD,GAAEvH,QAAF,EAAnD,MAA6D,IAA7D,IAA6D,aAA7D,GAA6D,MAA7D,GAA6D,GAAIqf,cAAJ,CAAmBgZ,gBAAnB,CAAoC9rB,MAApC,CAA2C,UAACC,CAAD,EAAO;AAAE,uBAAOA,CAAC,CAAC8rB,OAAF,CAAU0nB,eAAV,IAA6BF,yBAApC;AAA+D,eAAnH,CAAnF;;AACA,kBAAIC,gBAAgB,IAAIA,gBAAgB,CAACr4C,MAAjB,GAA0B,CAAlD,EAAqD;AACnD,iCAAUq4C,gBAAgB,CAAC,CAAD,CAAhB,CAAoBznB,OAApB,CAA4B2nB,SAAtC,cAAmDF,gBAAgB,CAAC,CAAD,CAAhB,CAAoBznB,OAApB,CAA4B4nB,QAA/E;AACD,eAFD,MAGK;AACH,uBAAO,CAAP,KAAO,KAAK9gD,kBAAL,CAAwBgD,WAAxB,MAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAE87B,eAAF,CAAkB,CAAD,KAAC,KAAKh/B,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,GAAa+B,QAA7D,CAA1C;AACD;AACF,aARD,MASK;AACH,qBAAO,CAAP,KAAO,KAAK3C,kBAAL,CAAwBgD,WAAxB,MAAmC,IAAnC,IAAmC,aAAnC,GAAmC,MAAnC,GAAmC,GAAE87B,eAAF,CAAkB,CAAD,KAAC,KAAKh/B,eAAL,CAAqBa,SAArB,MAA8B,IAA9B,IAA8B,aAA9B,GAA8B,MAA9B,GAA8B,GAAEC,QAAF,GAAa+B,QAA7D,CAA1C;AACD;AACF;;;;;;;yBA7BU69C,kB,EAAkB,0I,EAAA,4H,EAAA,gJ;AAAA,O;;;eAAlBA,kB;AAAkB,iBAAlBA,kBAAkB,K;AAAA,oBAFjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCEDO,qB;AAGX,uCAAmBC,eAAnB,EACSC,eADT,EAC2C;AAAA;;AADxB,eAAAD,eAAA,GAAAA,eAAA;AACV,eAAAC,eAAA,GAAAA,eAAA;AACR;;;;iBAED,oBAAW,CAEV;;;;;;;yBATUF,qB,EAAqB,2J,EAAA,2J;AAAA,O;;;cAArBA,qB;AAAqB,0C;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,8B;AAAA;AAAA;ACXlC;;AACI;;AAAgF;;AAA6D;;AAC7I;;AACJ;;;;AAFc;;AAAA;;AAAsE;;AAAA;;AAChF;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACIJ,UAAI,sEAAY73B,UAAhB,EAA4B;AAC1B;AACD;;AAED,kFAAyBg4B,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,eAAI93C,OAAO,CAAC4uB,KAAR,CAAckpB,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;ACVA,eAASC,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAO9vB,OAAO,CAACC,OAAR,GAAkB8vB,IAAlB,CAAuB,YAAW;AACxC,cAAIr6C,CAAC,GAAG,IAAIuC,KAAJ,CAAU,yBAAyB63C,GAAzB,GAA+B,GAAzC,CAAR;AACAp6C,WAAC,CAACs6C,IAAF,GAAS,kBAAT;AACA,gBAAMt6C,CAAN;AACA,SAJM,CAAP;AAKA;;AACDm6C,8BAAwB,CAACrhC,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAqhC,8BAAwB,CAAC5vB,OAAzB,GAAmC4vB,wBAAnC;AACAI,YAAM,CAACC,OAAP,GAAiBL,wBAAjB;AACAA,8BAAwB,CAACM,EAAzB,GAA8B,MAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;;AACI;;AACJ;;;;;;AACA;;AACI;;AACJ;;;;;;;;AADI;;AAAA;;;;UCUSC,uB;AAIX,yCAAmB7hD,eAAnB,EACSC,gBADT,EAESC,kBAFT,EAGS0K,iBAHT,EAG+C;AAAA;;AAH5B,eAAA5K,eAAA,GAAAA,eAAA;AACV,eAAAC,gBAAA,GAAAA,gBAAA;AACA,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAA0K,iBAAA,GAAAA,iBAAA;AAAyC;;;;iBAElD,oBAAQ,CACP;;;iBAED,uBAAW,CACV;;;;;;;yBAbUi3C,uB,EAAuB,mJ,EAAA,qJ,EAAA,yJ,EAAA,+J;AAAA,O;;;cAAvBA,uB;AAAuB,6C;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,6J;AAAA;AAAA;ADdpC;;;;AAGA;;;;AAIA;;AAAwC;;AAAiC;;;;AAPlE;;AAGoB;;AAAA","file":"main-es5.js","sourcesContent":["import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { GetAscDescEnum } from 'src/app/enums/generated/AscDescEnum';\nimport { GetSortOrderAngularEnum } from 'src/app/enums/generated/SortOrderAngularEnum';\nimport { GetSubsectorSubComponentEnum } from 'src/app/enums/generated/SubsectorSubComponentEnum';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { ComponentShowService } from 'src/app/services/helpers/component-show.service';\nimport { StatCountService } from 'src/app/services/helpers/stat-count.service';\nimport { TVItemSortOrderService } from 'src/app/services/helpers/tvitem-sort-order.service';\nimport { WebMWQMSamplesService } from 'src/app/services/loaders/web-mwqm-samples.service';\nimport { WebSubsectorService } from 'src/app/services/loaders/web-subsector.service';\n\n@Component({\n  selector: 'app-subsector-item',\n  templateUrl: './subsector-item.component.html',\n  styleUrls: ['./subsector-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SubsectorItemComponent implements OnInit, OnDestroy {\n  subsectorSubComponentEnum = GetSubsectorSubComponentEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  ascDescEnum = GetAscDescEnum();\n  sortOrderAngular = GetSortOrderAngularEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public webSubsectorService: WebSubsectorService,\n    public webMWQMSamplesService: WebMWQMSamplesService,\n    public tvItemSortOrderService: TVItemSortOrderService,\n    public statCountService: StatCountService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public componentShowService: ComponentShowService) { }\n\n  ngOnInit(): void {\n    this.webSubsectorService.DoWebSubsector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSubsector(subsectorSubComponentEnum.MWQMSites)\"\n    (click)=\"componentShowService.ShowSubsector(subsectorSubComponentEnum.MWQMSites)\"\n    title=\"{{ appLanguageService.AppLanguage.SubsectorShowMWQMSites[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.SubsectorMWQMSites[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSubsector?.TVItemModel, tvTypeEnum.MWQMSite) }}&nbsp;&nbsp;\n        </span>                \n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SubsectorMWQMSites, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SubsectorMWQMSitesSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SubsectorMWQMSites, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SubsectorMWQMSitesSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSubsector(subsectorSubComponentEnum.Analysis)\"\n    (click)=\"componentShowService.ShowSubsector(subsectorSubComponentEnum.Analysis)\"\n    title=\"{{ appLanguageService.AppLanguage.SubsectorShowAnalysis[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.SubsectorAnalysis[appStateService.AppState$?.getValue().Language] }}\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSubsector(subsectorSubComponentEnum.MWQMRuns)\"\n    (click)=\"componentShowService.ShowSubsector(subsectorSubComponentEnum.MWQMRuns)\"\n    title=\"{{ appLanguageService.AppLanguage.SubsectorShowMWQMRuns[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.SubsectorMWQMRuns[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSubsector?.TVItemModel, tvTypeEnum.MWQMRun) }}&nbsp;&nbsp;\n        </span>                        \n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SubsectorMWQMRuns, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SubsectorMWQMRunsSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SubsectorMWQMRuns, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SubsectorMWQMRunsSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSubsector(subsectorSubComponentEnum.PollutionSourceSites)\"\n    (click)=\"componentShowService.ShowSubsector(subsectorSubComponentEnum.PollutionSourceSites)\"\n    title=\"{{ appLanguageService.AppLanguage.SubsectorShowPollutionSourceSites[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.SubsectorPollutionSourceSites[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSubsector?.TVItemModel, tvTypeEnum.PolSourceSite) }}&nbsp;&nbsp;\n        </span>                                \n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SubsectorPolSourceSites, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SubsectorPolSourceSitesSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SubsectorPolSourceSites, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SubsectorPolSourceSitesSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSubsector(subsectorSubComponentEnum.Files)\"\n    (click)=\"componentShowService.ShowSubsector(subsectorSubComponentEnum.Files)\"\n    title=\"{{ appLanguageService.AppLanguage.SubsectorShowFiles[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.SubsectorFiles[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSubsector?.TVItemModel, tvTypeEnum.File) }}/\n            {{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSubsector?.TVItemModel, tvTypeEnum.TotalFile) }}&nbsp;&nbsp;\n        </span>                                        \n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSubsector(subsectorSubComponentEnum.SubsectorTools)\"\n    (click)=\"componentShowService.ShowSubsector(subsectorSubComponentEnum.SubsectorTools)\"\n    title=\"{{ appLanguageService.AppLanguage.SubsectorShowSubsectorTools[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.SubsectorSubsectorTools[appStateService.AppState$?.getValue().Language] }}\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSubsector(subsectorSubComponentEnum.LogBook)\"\n    (click)=\"componentShowService.ShowSubsector(subsectorSubComponentEnum.LogBook)\"\n    title=\"{{ appLanguageService.AppLanguage.SubsectorShowLogBook[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.SubsectorLogBook[appStateService.AppState$?.getValue().Language] }}\n</button>\n\n<app-mwqm-site-tvitem-list-item\n    *ngIf=\"appStateService.AppState$?.getValue()?.SubsectorSubComponent == subsectorSubComponentEnum.MWQMSites\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebMWQMSites.MWQMSiteModelList\">\n</app-mwqm-site-tvitem-list-item>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.SubsectorSubComponent == subsectorSubComponentEnum.Analysis\">\n    <app-analysis-item [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebMWQMSites.MWQMSiteModelList\"\n    [StatMWQMSiteList]=\"appLoadedService.AppLoaded$?.getValue()?.StatMWQMSiteList\"\n    [StatMWQMRunList]=\"appLoadedService.AppLoaded$?.getValue()?.StatMWQMRunList\"\n    ></app-analysis-item>\n</div>\n\n<app-mwqm-run-tvitem-list-item\n    *ngIf=\"appStateService.AppState$?.getValue()?.SubsectorSubComponent == subsectorSubComponentEnum.MWQMRuns\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebMWQMRuns.MWQMRunModelList\">\n</app-mwqm-run-tvitem-list-item>\n\n<app-pol-source-site-tvitem-list-item\n    *ngIf=\"appStateService.AppState$?.getValue()?.SubsectorSubComponent == subsectorSubComponentEnum.PollutionSourceSites\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebPolSourceSites.PolSourceSiteModelList\">\n</app-pol-source-site-tvitem-list-item>\n\n<app-file-list *ngIf=\"appStateService.AppState$?.getValue()?.SubsectorSubComponent == subsectorSubComponentEnum.Files\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVFileModelListList]=\"appLoadedService.AppLoaded$?.getValue()?.WebSubsector.TVFileModelList\">\n</app-file-list>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.SubsectorSubComponent == subsectorSubComponentEnum.SubsectorTools\">\n    <app-subsector-tools-item></app-subsector-tools-item>\n</div>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.SubsectorSubComponent == subsectorSubComponentEnum.LogBook\">\n    <app-log-book-item></app-log-book-item>\n</div>","import { Injectable } from '@angular/core';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { MWQMRun } from 'src/app/models/generated/db/MWQMRun.model';\r\nimport { MWQMSample } from 'src/app/models/generated/db/MWQMSample.model';\r\nimport { StatMWQMSiteSample } from 'src/app/models/generated/web/StatMWQMSiteSample.model';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DateFormatService {\r\n\r\n  constructor(private appStateService: AppStateService,\r\n    private appLanguageService: AppLanguageService) {\r\n  }\r\n\r\n  GetStatMWQMSiteSampleSampleLastSampleDate(statMWQMSiteSample: StatMWQMSiteSample) {\r\n    if (statMWQMSiteSample === undefined) {\r\n      return \"\";\r\n    }\r\n\r\n    if (statMWQMSiteSample.LastSampleDate === undefined)\r\n    {\r\n      return \"\";\r\n    }\r\n\r\n    return this.GetDateFromDateText(statMWQMSiteSample.LastSampleDate.toString(), true);\r\n  }\r\n\r\n  GetMWQMRunDateTime_LocalDigit(mwqmRun: MWQMRun) {\r\n    let DateText: string = mwqmRun.DateTime_Local.toString();\r\n\r\n    return `${DateText.substring(0, 4)}-${DateText.substring(5, 7)}-${DateText.substring(8, 10)}`;\r\n  }\r\n\r\n  GetMWQMSampleDateTime_LocalDigit(mwqmSample: MWQMSample) {\r\n    let DateText: string = mwqmSample.SampleDateTime_Local.toString();\r\n\r\n    return `${DateText.substring(0, 4)}-${DateText.substring(5, 7)}-${DateText.substring(8, 10)}`;\r\n  }\r\n\r\n  GetMWQMSampleSampleDateTime_Local(mwqmSample: MWQMSample) {\r\n    return this.GetDateFromDateText(mwqmSample.SampleDateTime_Local.toString(), false);\r\n  }\r\n\r\n  GetLastUpdateDateTVItemModel(tvItemModel: TVItemModel) {\r\n    return this.GetDateFromDateText(tvItemModel.TVItem.LastUpdateDate_UTC.toString(), false);\r\n  }\r\n\r\n  GetLastUpdateDateTVFileModel(tvFileModel: TVFileModel) {\r\n    return this.GetDateFromDateText(tvFileModel.TVFile.LastUpdateDate_UTC.toString(), false);\r\n  }\r\n\r\n  GetFileCreateDate(tvFileModel: TVFileModel) {\r\n    return this.GetDateFromDateText(tvFileModel.TVFile.FileCreatedDate_UTC.toString(), false);\r\n  }\r\n\r\n  private GetDateFromDateText(DateText: string, DateOnly: boolean) {\r\n    let Year: number = parseInt(DateText.substring(0, 4));\r\n    let Month: number = parseInt(DateText.substring(5, 7));\r\n    let Day: number = parseInt(DateText.substring(8, 10));\r\n    if (!DateOnly) {\r\n      let Hour: number = parseInt(DateText.substring(11, 13));\r\n      let Minute: number = parseInt(DateText.substring(14, 16));\r\n      let Second: number = parseInt(DateText.substring(17, 19));\r\n      let HourText: string = Hour < 10 ? `0${Hour}` : `${Hour}`;\r\n      let MinuteText: string = Minute < 10 ? `0${Minute}` : `${Minute}`;\r\n      let SecondText: string = Second < 10 ? `0${Second}` : `${Second}`;\r\n      if (this.appStateService.AppState$.getValue().Language == LanguageEnum.fr) {\r\n        return `${Day} ${this.GetMonthName(Month, false)} ${Year} ${HourText}:${MinuteText}:${SecondText} (utc)`;\r\n      }\r\n\r\n      return `${this.GetMonthName(Month, false)} ${Day}, ${Year} ${HourText}:${MinuteText}:${SecondText} (utc)`;\r\n    }\r\n    else {\r\n      if (this.appStateService.AppState$.getValue().Language == LanguageEnum.fr) {\r\n        return `${Day} ${this.GetMonthName(Month, false)} ${Year}`;\r\n      }\r\n\r\n      return `${this.GetMonthName(Month, false)} ${Day}, ${Year}`;\r\n\r\n    }\r\n  }\r\n\r\n  GetMonthName(month: number, acronym: boolean = false): string {\r\n    switch (month) {\r\n      case 1:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateJanuaryAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateJanuary[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 2:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateFebruaryAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateFebruary[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 3:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateMarchAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateMarch[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 4:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateAprilAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateApril[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 5:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateMayAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateMay[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 6:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateJuneAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateJune[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 7:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateJulyAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateJuly[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 8:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateAugustAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateAugust[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 9:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateSeptemberAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateSeptember[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 10:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateOctoberAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateOctober[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 11:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateNovemberAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateNovember[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n      case 12:\r\n        {\r\n          if (acronym) {\r\n            return this.appLanguageService.AppLanguage.DateDecemberAcronym[this.appStateService.AppState$.getValue().Language];\r\n          }\r\n          return this.appLanguageService.AppLanguage.DateDecember[this.appStateService.AppState$.getValue().Language];\r\n        }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FileTypeEnum } from 'src/app/enums/generated/FileTypeEnum';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileIconService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  GetFileIcon(tvFileModel: TVFileModel) {\r\n    let fileName: string = '';\r\n    switch (tvFileModel.TVFile.FileType) {\r\n      case FileTypeEnum.CSV:\r\n      case FileTypeEnum.XLSX:\r\n        {\r\n          fileName = 'Excel_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.DFS0:\r\n      case FileTypeEnum.DFS1:\r\n      case FileTypeEnum.DFSU:\r\n      case FileTypeEnum.MESH:\r\n        {\r\n          fileName = 'DataFile_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.DOCX:\r\n        {\r\n          fileName = 'Word_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.GIF:\r\n      case FileTypeEnum.JPEG:\r\n      case FileTypeEnum.JPG:\r\n      case FileTypeEnum.PNG:\r\n        {\r\n          fileName = 'Image_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.HTML:\r\n        {\r\n          fileName = 'Html_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.KML:\r\n      case FileTypeEnum.KMZ:\r\n        {\r\n          fileName = 'GoogleEarth_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.LOG:\r\n      case FileTypeEnum.TXT:\r\n      case FileTypeEnum.XYZ:\r\n        {\r\n          fileName = 'GeneralFile_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.M21FM:\r\n      case FileTypeEnum.M3FM:\r\n        {\r\n          fileName = 'Engine_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.MDF:\r\n        {\r\n          fileName = 'Tool_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.PDF:\r\n        {\r\n          fileName = 'Pdf_icon16';\r\n        }\r\n        break;\r\n      case FileTypeEnum.WMV:\r\n        {\r\n          fileName = 'GeneralFile_icon16';\r\n        }\r\n        break;\r\n      default:\r\n        {\r\n          fileName = 'GeneralFile_icon16';\r\n        }\r\n    }\r\n\r\n    return `../../../../assets/images/${fileName}.png`;\r\n\r\n  }\r\n\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum MapInfoDrawTypeEnum {\r\n    Point = 1,\r\n    Polyline = 2,\r\n    Polygon = 3,\r\n}\r\n\r\nexport function GetMapInfoDrawTypeEnum(): typeof MapInfoDrawTypeEnum\r\n{\r\n  return MapInfoDrawTypeEnum;\r\n}\r\n\r\nexport function MapInfoDrawTypeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Point (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Polyline (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Polygon (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Point' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Polyline' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Polygon' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function MapInfoDrawTypeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    MapInfoDrawTypeEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { GetMWQMSiteLatestClassificationEnum, MWQMSiteLatestClassificationEnum, MWQMSiteLatestClassificationEnum_GetIDText } from 'src/app/enums/generated/MWQMSiteLatestClassificationEnum';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { StatMWQMSite } from 'src/app/models/generated/web/StatMWQMSite.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { DateFormatService } from 'src/app/services/helpers/date-format.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { WebMWQMSamplesService } from 'src/app/services/loaders/web-mwqm-samples.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-mwqm-site-tvitem-list-item-special',\n  templateUrl: './mwqm-site-tvitem-list-item-special.component.html',\n  styleUrls: ['./mwqm-site-tvitem-list-item-special.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMSiteTVItemListItemSpecialComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  @Input() Index: number;\n  @Input() StatMWQMSite: StatMWQMSite;\n\n  languageEnum = GetLanguageEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  mwqmSiteLatestClassification = GetMWQMSiteLatestClassificationEnum();\n\n  Year: number = 0;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public dateFormatService: DateFormatService,\n    public webMWQMSamplesService: WebMWQMSamplesService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n  GetMWQMSiteLatestClassificationEnum_GetIDText(mwqmSiteLatestClassification: MWQMSiteLatestClassificationEnum): string {\n    return MWQMSiteLatestClassificationEnum_GetIDText(mwqmSiteLatestClassification, this.appStateService);\n  }\n\n  IsFirstOfNewYear(DateText: string) {\n    let SampleYear = parseInt(DateText);\n    if (SampleYear != this.Year) {\n      this.Year = SampleYear;\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n}\n\n","<span>\n    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.letter }}\n</span>\n<span>&nbsp;</span>\n<span class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.color }}\">\n    &nbsp;&nbsp;\n</span>\n<span>&nbsp;</span>\n<span [ngClass]=\"TVItemModel?.TVItem?.IsActive ? '' : 'inactive'\">\n    <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n        {{ Index }}&nbsp;-&nbsp;\n    </span>\n    <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n        [{{ TVItemModel.TVItem.TVItemID }}]\n    </span>\n    {{ TVItemModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n</span>\n<span>\n    ({{ GetMWQMSiteLatestClassificationEnum_GetIDText(StatMWQMSite?.MWQMSiteModel.MWQMSite?.MWQMSiteLatestClassification) }})\n</span>\n<app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"tvTypeEnum.MWQMSiteSample\"\n    [TVItemModel]=\"TVItemModel\"></app-stat-count>\n<app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n    [TVItemModel]=\"TVItemModel\"></app-last-udpate-tv-item-model>\n\n<span *ngFor=\"let statMWQMSiteSample of StatMWQMSite?.StatMWQMSiteSampleList\">\n    <span *ngIf=\"IsFirstOfNewYear(statMWQMSiteSample?.SampleDate?.toString())\">\n        <span title=\"{{ statMWQMSiteSample?.LastSampleDate | date:'yyyy' }}\"\n            class=\"{{ statMWQMSiteSample?.ColorAndLetter?.color }}\">&nbsp;{{ statMWQMSiteSample?.ColorAndLetter?.letter\n            }}&nbsp;</span>\n        <span *ngIf=\"Year % 10 == 0\">{{Year}}</span>\n    </span>\n</span>","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PredicateDescByService {\r\n    constructor() {\r\n    }\r\n\r\n    PredicateDescBy(prop) {\r\n        return function (a, b) {\r\n            if (a[prop] < b[prop]) {\r\n                return 1;\r\n            } else if (a[prop] > b[prop]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllReportTypes } from 'src/app/models/generated/web/WebAllReportTypes.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllTelsService } from 'src/app/services/loaders/web-all-tels.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllReportTypesService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllTelsService: WebAllTelsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllReportTypes(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllReportTypes?.ReportTypeModelList?.length > 0) {\r\n          this.KeepWebAllReportTypes();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllReportTypes().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllReportTypes() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllReportTypes: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllReportTypes }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllReportTypes`;\r\n        return this.httpClient.get<WebAllReportTypes>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllReportTypes(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllTels();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllTels() {\r\n        this.webAllTelsService.DoWebAllTels(this.DoOther);\r\n    }\r\n\r\n    private KeepWebAllReportTypes() {\r\n        this.UpdateWebAllReportTypes(this.appLoadedService.AppLoaded$?.getValue()?.WebAllReportTypes);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllReportTypes);\r\n        if (this.DoOther) {\r\n            this.DoWebAllTels();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllReportTypes(x: WebAllReportTypes) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllReportTypes: x });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllReportTypes()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { GetCountrySubComponentEnum } from 'src/app/enums/generated/CountrySubComponentEnum';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { GetAscDescEnum } from 'src/app/enums/generated/AscDescEnum';\nimport { WebCountryService } from 'src/app/services/loaders/web-country.service';\nimport { TVItemSortOrderService } from 'src/app/services/helpers/tvitem-sort-order.service';\nimport { StatCountService } from 'src/app/services/helpers/stat-count.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { ComponentShowService } from 'src/app/services/helpers/component-show.service';\nimport { GetSortOrderAngularEnum } from 'src/app/enums/generated/SortOrderAngularEnum';\n\n@Component({\n  selector: 'app-country-item',\n  templateUrl: './country-item.component.html',\n  styleUrls: ['./country-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CountryItemComponent implements OnInit, OnDestroy {\n  countrySubComponentEnum = GetCountrySubComponentEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  ascDescEnum = GetAscDescEnum();\n  sortOrderAngular = GetSortOrderAngularEnum();\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public webCountryService: WebCountryService,\n    public tvItemSortOrderService: TVItemSortOrderService,\n    public statCountService: StatCountService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public componentShowService: ComponentShowService) {\n\n  }\n\n  ngOnInit(): void {\n    this.webCountryService.DoWebCountry(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionCountry(countrySubComponentEnum.Provinces)\"\n    (click)=\"componentShowService.ShowCountry(countrySubComponentEnum.Provinces)\"\n    title=\"{{ appLanguageService.AppLanguage.CountryShowProvinces[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.CountryProvinces[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebCountry?.TVItemModel, tvTypeEnum.Province) }}&nbsp;&nbsp;\n        </span>                                                                                                \n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.CountryProvinces, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().CountryProvincesSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.CountryProvinces, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().CountryProvincesSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionCountry(countrySubComponentEnum.Files)\"\n    (click)=\"componentShowService.ShowCountry(countrySubComponentEnum.Files)\"\n    title=\"{{ appLanguageService.AppLanguage.CountryShowFiles[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.CountryFiles[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebCountry?.TVItemModel, tvTypeEnum.File) }}/\n            {{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebCountry?.TVItemModel, tvTypeEnum.TotalFile) }}&nbsp;&nbsp;\n        </span>                                                                                                        \n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionCountry(countrySubComponentEnum.OpenDataNational)\"\n    (click)=\"componentShowService.ShowCountry(countrySubComponentEnum.OpenDataNational)\"\n    title=\"{{ appLanguageService.AppLanguage.CountryShowOpenDataNationalTools[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.CountryOpenDataNational[appStateService.AppState$?.getValue().Language] }}\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionCountry(countrySubComponentEnum.EmailDistributionList)\"\n    (click)=\"componentShowService.ShowCountry(countrySubComponentEnum.EmailDistributionList)\"\n    title=\"{{ appLanguageService.AppLanguage.CountryShowEmailDistributionList[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.CountryEmailDistributionList[appStateService.AppState$?.getValue().Language] }}\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionCountry(countrySubComponentEnum.RainExceedance)\"\n    (click)=\"componentShowService.ShowCountry(countrySubComponentEnum.RainExceedance)\"\n    title=\"{{ appLanguageService.AppLanguage.CountryShowRainExceedance[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.CountryRainExceedance[appStateService.AppState$?.getValue().Language] }}\n</button>\n\n<app-province-tvitem-list-item *ngIf=\"appStateService.AppState$?.getValue()?.CountrySubComponent == countrySubComponentEnum.Provinces\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebCountry?.TVItemModelProvinceList\">\n</app-province-tvitem-list-item>\n\n<app-file-list *ngIf=\"appStateService.AppState$?.getValue()?.CountrySubComponent == countrySubComponentEnum.Files\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVFileModelListList]=\"appLoadedService.AppLoaded$?.getValue()?.WebCountry?.TVFileModelList\">\n</app-file-list>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.CountrySubComponent == countrySubComponentEnum.OpenDataNational\">\n    <app-open-data-national-item></app-open-data-national-item>\n</div>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.CountrySubComponent == countrySubComponentEnum.EmailDistributionList\">\n    <app-email-distribution-list-item></app-email-distribution-list-item>\n</div>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.CountrySubComponent == countrySubComponentEnum.RainExceedance\">\n    <app-rain-exceedance-item></app-rain-exceedance-item>\n</div>","import { Injectable, Inject } from '@angular/core'\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { Observable } from 'rxjs'\r\nimport { download, Download } from 'src/app/services/helpers/file-download'\r\nimport { SAVER, Saver } from 'src/app/services/helpers/saver.provider'\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model'\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service'\r\nimport { AppStateService } from 'src/app/services/app-state.service'\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DownloadService {\r\n\r\n  constructor(\r\n    private appLoadedService: AppLoadedService,\r\n    private appStateService: AppStateService,\r\n    private http: HttpClient,\r\n    @Inject(SAVER) private save: Saver\r\n  ) {\r\n  }\r\n\r\n  download(tvFileModel: TVFileModel): Observable<Download> {\r\n    let url: string = `${this.appLoadedService.BaseApiUrl}${this.appStateService.AppState$.getValue().Language}-CA/download/${tvFileModel.TVItem.ParentID}/${tvFileModel.TVFile.ServerFileName}`;\r\n\r\n    return this.http.get(url, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n      responseType: 'blob'\r\n    }).pipe(download(blob => this.save(blob, tvFileModel.TVFile.ServerFileName)))\r\n  }\r\n\r\n\r\n  blob(url: string, filename?: string): Observable<Blob> {\r\n    return this.http.get(url, {\r\n      responseType: 'blob'\r\n    })\r\n  }\r\n}","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\n\n@Component({\n  selector: 'app-country-item-view',\n  templateUrl: './country-item-view.component.html',\n  styleUrls: ['./country-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CountryItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) {\n\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span>Nothing for now</span>","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum RootSubComponentEnum {\r\n    Countries = 1,\r\n    Files = 2,\r\n    ExportArcGIS = 3,\r\n}\r\n\r\nexport function GetRootSubComponentEnum(): typeof RootSubComponentEnum\r\n{\r\n  return RootSubComponentEnum;\r\n}\r\n\r\nexport function RootSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Countries (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Export Arc GIS (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Countries' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Export Arc GIS' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function RootSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    RootSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { WebCountry } from 'src/app/models/generated/web/WebCountry.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { StructureTVFileListService } from 'src/app/services/helpers/structure-tvfile-list.service';\r\nimport { SortTVItemListService } from 'src/app/services/helpers/sort-tvitem-list.service';\r\nimport { MapService } from 'src/app/services/map/map.service';\r\nimport { CountrySubComponentEnum } from 'src/app/enums/generated/CountrySubComponentEnum';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebCountryService {\r\n  private TVItemID: number;\r\n  private DoOther: boolean;\r\n  private sub: Subscription;\r\n  LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private appLanguageService: AppLanguageService,\r\n    private sortTVItemListService: SortTVItemListService,\r\n    private structureTVFileListService: StructureTVFileListService,\r\n    private mapService: MapService,\r\n    private componentDataLoadedService: ComponentDataLoadedService,\r\n    private historyService: HistoryService) {\r\n  }\r\n\r\n  DoWebCountry(TVItemID: number, DoOther: boolean) {\r\n    this.TVItemID = TVItemID;\r\n    this.DoOther = DoOther;\r\n\r\n    this.sub ? this.sub.unsubscribe() : null;\r\n\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebCountry) {\r\n      this.KeepWebCountry();\r\n    }\r\n    else {\r\n      this.sub = this.GetWebCountry().subscribe();\r\n    }\r\n  }\r\n\r\n  private GetWebCountry() {\r\n    let languageEnum = GetLanguageEnum();\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      WebCountry: {},\r\n    });\r\n    this.appStateService.UpdateAppState(<AppState>{\r\n      Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebCountry }`,\r\n      Working: true\r\n    });\r\n    let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebCountry/${this.TVItemID}`;\r\n    return this.httpClient.get<WebCountry>(url).pipe(\r\n      map((x: any) => {\r\n        this.UpdateWebCountry(x);\r\n        console.debug(x);\r\n        if (this.DoOther) {\r\n          // nothing more to add in the chain\r\n        }\r\n      }),\r\n      catchError(e => of(e).pipe(map(e => {\r\n        this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n        console.debug(e);\r\n      })))\r\n    );\r\n  }\r\n\r\n  private KeepWebCountry() {\r\n    this.UpdateWebCountry(this.appLoadedService.AppLoaded$?.getValue()?.WebCountry);\r\n    console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebCountry);\r\n    if (this.DoOther) {\r\n      // nothing more to add in the chain\r\n    }\r\n  }\r\n\r\n  private UpdateWebCountry(x: WebCountry) {\r\n\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      WebCountry: x,\r\n    });\r\n\r\n    this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebCountry?.TVItemModel);\r\n\r\n    if (this.DoOther) {\r\n      if (this.componentDataLoadedService.DataLoadedWebCountry()) {\r\n        this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n      }\r\n    }\r\n    else {\r\n      this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n    }\r\n\r\n    if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\r\n      if (this.appStateService.AppState$.getValue().CountrySubComponent == CountrySubComponentEnum.Provinces) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModelProvinceList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().CountrySubComponent == CountrySubComponentEnum.Files) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModelProvinceList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().CountrySubComponent == CountrySubComponentEnum.OpenDataNational) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModelProvinceList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().CountrySubComponent == CountrySubComponentEnum.EmailDistributionList) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModelProvinceList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().CountrySubComponent == CountrySubComponentEnum.RainExceedance) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModelProvinceList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebCountry.TVItemModel]\r\n        ]);\r\n      }\r\n    }\r\n  }\r\n}","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-area-tvitem-list-item',\n  templateUrl: './area-tvitem-list-item.component.html',\n  styleUrls: ['./area-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() IsBreadCrumb: boolean = false;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n                {{ i + 1 }}&nbsp;-&nbsp;\n            </span>\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n                [{{ tvItemStatMapModel?.TVItem.TVItemID }}]\n            </span>\n            {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n        </span>\n        <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n        <app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\n    </button>\n\n    <app-area-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-area-item-view>\n\n    <app-area-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-area-item-edit>\n\n    <app-area-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"AppState?.DetailVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\">\n    </app-area-tvitem-list-detail>\n</mat-list>","import { ViewChild, Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-map-item',\n  templateUrl: './map-item.component.html',\n  styleUrls: ['./map-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapItemComponent implements OnInit, OnDestroy {\n  @Input() AppState: AppState;\n  @ViewChild(\"map\", { static: true }) mapElement;\n\n  constructor(public appStateService: AppStateService,\n    private mapService: MapService) {\n\n  }\n\n  ngOnInit() {\n    this.mapService.SetupMap(this.mapElement);\n  }\n\n  ngOnDestroy() {\n\n  }\n}\n","<div #map class=\"map\"></div>\n\n<app-map-menu [AppState]=\"AppState\"></app-map-menu>","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: darkgoldenrod;\">This is the mike scenario edit component</p>","import { Input } from '@angular/core';\nimport { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-mike-scenario-item-edit',\n  templateUrl: './mike-scenario-item-edit.component.html',\n  styleUrls: ['./mike-scenario-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MikeScenarioItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { SamplingPlanModel } from 'src/app/models/generated/web/SamplingPlanModel.model';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebProvince {\r\n    SamplingPlanModelList: SamplingPlanModel[];\r\n    TVFileModelList: TVFileModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelAreaList: TVItemModel[];\r\n    TVItemModelMunicipalityList: TVItemModel[];\r\n    TVItemModelParentList: TVItemModel[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ShowTVFileService {\r\n    constructor(private appStateService: AppStateService) {\r\n\r\n    }\r\n\r\n    ToggleShowTVFile(tvFileModel: TVFileModel): void {\r\n        if (this.TVFileVisible(tvFileModel)) {\r\n            this.RemoveShowTVFile(tvFileModel);\r\n        }\r\n        else {\r\n            this.AddShowTVFile(tvFileModel);\r\n        }\r\n    }\r\n\r\n    TVFileVisible(tvFileModel: TVFileModel): boolean {\r\n        let tvFileModelExist: TVFileModel[] = this.appStateService.AppState$.getValue().ShowTVFileModelList.filter(c => c == tvFileModel);\r\n        if (tvFileModelExist != undefined && tvFileModelExist.length > 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private AddShowTVFile(tvFileModel: TVFileModel): void {\r\n        let tvFileModelExist: TVFileModel[] = this.appStateService.AppState$.getValue().ShowTVFileModelList.filter(c => c.TVFile.TVFileID == tvFileModel.TVFile.TVFileID);\r\n        if (!(tvFileModelExist != undefined && tvFileModelExist.length > 0)) {\r\n            this.appStateService.AppState$.getValue().ShowTVFileModelList.push(tvFileModel);\r\n        }\r\n    }\r\n\r\n    private RemoveShowTVFile(tvFileModel: TVFileModel): void {\r\n        let tvFileModelExist: TVFileModel[] = this.appStateService.AppState$.getValue().ShowTVFileModelList.filter(c => c == tvFileModel);\r\n        if ((tvFileModelExist != undefined && tvFileModelExist.length > 0)) {\r\n            let ShowNewTVFileModelList: TVFileModel[] = this.appStateService.AppState$.getValue().ShowTVFileModelList;\r\n            let count: number = ShowNewTVFileModelList.length;\r\n            for (let i = 0; i < count; i++) {\r\n                if (ShowNewTVFileModelList[i] === tvFileModel) {\r\n                    ShowNewTVFileModelList.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.appStateService.UpdateAppState(<AppState>{ ShowTVFileModelList: ShowNewTVFileModelList });\r\n        }\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-province-tvitem-list-detail',\n  templateUrl: './province-tvitem-list-detail.component.html',\n  styleUrls: ['./province-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProvinceTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  tvTypeEnum = GetTVTypeEnum();\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n}\n","<blockquote>\r\n    <span *ngIf=\"tvTypeEnum.Municipality\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceMunicipality[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Municipality\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.LiftStation\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceLiftStation[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.LiftStation\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.WasteWaterTreatmentPlant\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceWWTP[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.WasteWaterTreatmentPlant\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.Area\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceArea[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Area\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.Sector\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceSector[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Sector\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.Subsector\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceSubsector[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Subsector\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSiteSample\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceMWQMSample[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSiteSample\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceMWQMSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMRun\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceMWQMRun[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMRun\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.PolSourceSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvincePolSourceSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.PolSourceSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MikeScenario\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceMikeScenario[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MikeScenario\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.BoxModel\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceBoxModel[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.BoxModel\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.VisualPlumesScenario\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailProvinceVPScenario[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.VisualPlumesScenario\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <hr />\r\n</blockquote>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FileService {\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService) {\r\n    }\r\n\r\n    DownloadFile(ParentTVItemID: number, FileName: string) {\r\n        this.appStateService.UpdateAppState(<AppState>{ Working: true });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${this.appStateService.AppState$.getValue().Language}-CA/download/${ParentTVItemID}/${FileName}`;\r\n        this.httpClient.get<Blob>(url).pipe(\r\n            map((x: any) => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Working: false });\r\n                console.debug(x);\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        ).subscribe();\r\n    }\r\n}","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-pol-source-site-tvitem-list-detail',\n  templateUrl: './pol-source-site-tvitem-list-detail.component.html',\n  styleUrls: ['./pol-source-site-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PolSourceSiteTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  get tvTypeEnum(): typeof TVTypeEnum {\n    return TVTypeEnum;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n}\n","<blockquote>\r\n<span>This is the detail for Pol Source Site</span>\r\n    <hr />\r\n</blockquote>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { FormControl } from '@angular/forms';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { SearchResult } from 'src/app/models/generated/helper/SearchResult.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { SearchService } from 'src/app/services/loaders/search.service';\nimport { WebRootService } from 'src/app/services/loaders/web-root.service';\nimport { WebCountryService } from 'src/app/services/loaders/web-country.service';\nimport { WebProvinceService } from 'src/app/services/loaders/web-province.service';\nimport { WebAreaService } from 'src/app/services/loaders/web-area.service';\nimport { WebSectorService } from 'src/app/services/loaders/web-sector.service';\nimport { WebSubsectorService } from 'src/app/services/loaders/web-subsector.service';\nimport { WebMWQMSitesService } from 'src/app/services/loaders/web-mwqm-sites.service';\nimport { WebMWQMRunsService } from 'src/app/services/loaders/web-mwqm-runs.service';\nimport { WebPolSourceSitesService } from 'src/app/services/loaders/web-pol-source-sites.service';\nimport { WebMunicipalityService } from 'src/app/services/loaders/web-municipalty.service';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { ShellSubComponentEnum } from 'src/app/enums/generated/ShellSubComponentEnum';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchComponent implements OnInit, OnDestroy {\n  myControl = new FormControl();\n  options = [];\n  searchResult: SearchResult;\n  formFieldWidthClass: string = '';\n  subSearch: Subscription;\n  subWebRoot: Subscription;\n  subWebCountry: Subscription;\n  subWebProvince: Subscription;\n  subWebMunicipalities: Subscription;\n  subWebArea: Subscription;\n  subWebSector: Subscription;\n  subWebSubsector: Subscription;\n  subWebMunicipality: Subscription;\n  subWebMWQMSite: Subscription;\n  subWebMWQMRun: Subscription;\n  subWebPolSourceSite: Subscription;\n\n  constructor(public appLoadedService: AppLoadedService,\n    public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private searchService: SearchService,\n    private webRootService: WebRootService,\n    private webCountryService: WebCountryService,\n    private webProvinceService: WebProvinceService,\n    private webAreaService: WebAreaService,\n    private webSectorService: WebSectorService,\n    private webSubsectorService: WebSubsectorService,\n    private webMunicipalityService: WebMunicipalityService,\n    private webMWQMSitesService: WebMWQMSitesService,\n    private webMWQMRunsService: WebMWQMRunsService,\n    private webPolSourceSitesService: WebPolSourceSitesService) {\n  }\n\n  ngOnInit() {\n    this.subSearch = this.searchService.GetSearch(this.myControl).subscribe();\n  }\n\n  displayFn(searchResult: SearchResult): string {\n    return '';\n  }\n\n  ToggleSearchWidth() {\n    this.formFieldWidthClass == '' ? this.formFieldWidthClass = 'form-field-width' : this.formFieldWidthClass = '';\n  }\n\n  NavigateTo(sr: SearchResult) {\n    this.searchResult = sr;\n    if (sr.TVItem.TVType == TVTypeEnum.Country) {\n      this.webCountryService.DoWebCountry(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Country, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.Area) {\n      this.webAreaService.DoWebArea(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Area, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.Municipality) {\n      this.webMunicipalityService.DoWebMunicipality(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Municipality, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.MWQMRun) {\n      this.webMWQMRunsService.DoWebMWQMRuns(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.MWQMRun, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.MWQMSite) {\n      this.webMWQMSitesService.DoWebMWQMSites(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.MWQMSite, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.PolSourceSite) {\n      this.webPolSourceSitesService.DoWebPolSourceSites(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.PolSourceSite, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.Province) {\n      this.webProvinceService.DoWebProvince(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Province, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.Root) {\n      this.webRootService.DoWebRoot(true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Root, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.Sector) {\n      this.webSectorService.DoWebSector(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Sector, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else if (sr.TVItem.TVType == TVTypeEnum.Subsector) {\n      this.webSubsectorService.DoWebSubsector(sr.TVItem.TVItemID, true);\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Subsector, CurrentTVItemID: sr.TVItem.TVItemID });\n    }\n    else {\n      alert(`${TVTypeEnum[sr.TVItem.TVType]} - Not Implemented Yet. See search.component.ts -- NavigateTo Function`);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subSearch ? this.subSearch.unsubscribe() : null;\n    this.subWebRoot ? this.subWebRoot.unsubscribe() : null;\n    this.subWebCountry ? this.subWebCountry.unsubscribe() : null;\n    this.subWebProvince ? this.subWebProvince.unsubscribe() : null;\n    this.subWebMunicipalities ? this.subWebMunicipalities.unsubscribe() : null;\n    this.subWebArea ? this.subWebArea.unsubscribe() : null;\n    this.subWebSector ? this.subWebSector.unsubscribe() : null;\n    this.subWebSubsector ? this.subWebSubsector.unsubscribe() : null;\n    this.subWebMunicipality ? this.subWebMunicipality.unsubscribe() : null;\n    this.subWebMWQMSite ? this.subWebMWQMSite.unsubscribe() : null;\n    this.subWebMWQMRun ? this.subWebMWQMRun.unsubscribe() : null;\n    this.subWebPolSourceSite ? this.subWebPolSourceSite.unsubscribe() : null;\n  }\n}\n","<mat-form-field [ngClass]=\"formFieldWidthClass\">\n    <input (focus)=\"ToggleSearchWidth()\" (blur)=\"ToggleSearchWidth()\" type=\"text\"\n        placeholder=\"{{ appLanguageService.AppLanguage.SearchSearch[appStateService.AppState$?.getValue().Language] }}\"\n        aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"searchAuto\">\n    <mat-icon matSuffix>search</mat-icon>\n    <span *ngIf=\"(appStateService.AppState$ | async).SearchWorking\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </span>\n    <mat-autocomplete #searchAuto=\"matAutocomplete\" (optionSelected)=\"NavigateTo($event.option.value)\"\n        [displayWith]=\"displayFn\">\n        <mat-option *ngFor=\"let option of (appLoadedService.AppLoaded$ | async).SearchResult\" [value]=\"option\">\n            <app-search-option [searchResult]=\"option\"></app-search-option>\n        </mat-option>\n    </mat-autocomplete>\n</mat-form-field>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-sector-tvitem-list-item',\n  templateUrl: './sector-tvitem-list-item.component.html',\n  styleUrls: ['./sector-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SectorTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() IsBreadCrumb: boolean = false;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n                {{ i + 1 }}&nbsp;-&nbsp;\n            </span>\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n                [{{ tvItemStatMapModel?.TVItem?.TVItemID }}]\n            </span>\n            {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n        </span>\n        <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n        <app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\n    </button>\n\n    <app-sector-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-sector-item-view>\n\n    <app-sector-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-sector-item-edit>\n\n    <app-sector-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"!IsBreadCrumb && AppState?.DetailVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\"></app-sector-tvitem-list-detail>\n</mat-list>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\nimport { SortMWQMRunListService } from 'src/app/services/helpers/sort-mwqm-run-list-desc.service';\r\nimport { WebPolSourceSitesService } from 'src/app/services/loaders/web-pol-source-sites.service';\r\nimport { WebMWQMRuns } from 'src/app/models/generated/web/WebMWQMRuns.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebMWQMRunsService {\r\n    private TVItemID: number;\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private sortMWQMRunListDescService: SortMWQMRunListService,\r\n        private webPolSourceSitesService: WebPolSourceSitesService,\r\n        private componentDataLoadedService: ComponentDataLoadedService,\r\n        private historyService: HistoryService) {\r\n    }\r\n\r\n    DoWebMWQMRuns(TVItemID: number, DoOther: boolean) {\r\n        this.TVItemID = TVItemID;\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebMWQMRuns) {\r\n            this.KeepWebMWQMRuns();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebMWQMRuns().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebMWQMRuns() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebMWQMRuns: {},\r\n        });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebMWQMRuns }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebMWQMRuns/${this.TVItemID}`;\r\n        return this.httpClient.get<WebMWQMRuns>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebMWQMRuns(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebPolSourceSites();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebPolSourceSites() {\r\n        this.webPolSourceSitesService.DoWebPolSourceSites(this.TVItemID, this.DoOther);\r\n    }\r\n\r\n    private KeepWebMWQMRuns() {\r\n        this.UpdateWebMWQMRuns(this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMRuns);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMRuns);\r\n        if (this.DoOther) {\r\n            this.DoWebPolSourceSites();\r\n        }\r\n    }\r\n\r\n    private UpdateWebMWQMRuns(x: WebMWQMRuns) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebMWQMRuns: x,\r\n        });\r\n\r\n        this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebMWQMRuns?.TVItemModel);\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebSubsector()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebMWQMRuns()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum ClassificationTypeEnum {\r\n    Approved = 1,\r\n    Restricted = 2,\r\n    Prohibited = 3,\r\n    ConditionallyApproved = 4,\r\n    ConditionallyRestricted = 5,\r\n}\r\n\r\nexport function GetClassificationTypeEnum(): typeof ClassificationTypeEnum\r\n{\r\n  return ClassificationTypeEnum;\r\n}\r\n\r\nexport function ClassificationTypeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Agréé' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Restreint' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Interdit' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Agréé sous condition' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Restreint sous condition' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Approved' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Restricted' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Prohibited' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Conditionally Approved' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Conditionally Restricted' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function ClassificationTypeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    ClassificationTypeEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AreaSubComponentEnum } from 'src/app/enums/generated/AreaSubComponentEnum';\r\nimport { AscDescEnum } from 'src/app/enums/generated/AscDescEnum';\r\nimport { CountrySubComponentEnum } from 'src/app/enums/generated/CountrySubComponentEnum';\r\nimport { FilesSortPropEnum } from 'src/app/enums/generated/FilesSortPropEnum';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { MapSizeEnum } from 'src/app/enums/generated/MapSizeEnum';\r\nimport { MunicipalitySubComponentEnum } from 'src/app/enums/generated/MunicipalitySubComponentEnum';\r\nimport { MWQMRunSubComponentEnum } from 'src/app/enums/generated/MWQMRunSubComponentEnum';\r\nimport { MWQMSiteSubComponentEnum } from 'src/app/enums/generated/MWQMSiteSubComponentEnum';\r\nimport { PolSourceSiteSubComponentEnum } from 'src/app/enums/generated/PolSourceSiteSubComponentEnum';\r\nimport { ProvinceSubComponentEnum } from 'src/app/enums/generated/ProvinceSubComponentEnum';\r\nimport { RootSubComponentEnum } from 'src/app/enums/generated/RootSubComponentEnum';\r\nimport { SectorSubComponentEnum } from 'src/app/enums/generated/SectorSubComponentEnum';\r\nimport { ShellSubComponentEnum } from 'src/app/enums/generated/ShellSubComponentEnum';\r\nimport { SubsectorSubComponentEnum } from 'src/app/enums/generated/SubsectorSubComponentEnum';\r\nimport { TopComponentEnum } from 'src/app/enums/generated/TopComponentEnum';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AnalysisCalculationTypeEnum } from '../enums/generated/AnalysisCalculationTypeEnum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppStateService {\r\n  AppState$: BehaviorSubject<AppState> = new BehaviorSubject<AppState>(<AppState>{});\r\n\r\n  constructor() {\r\n    this.UpdateAppState(<AppState>{\r\n      // http loading related\r\n      Working: null,\r\n      Error: null,\r\n      Status: null,\r\n\r\n      // http history related\r\n      History: [],\r\n\r\n      // search http loading related\r\n      SearchWorking: null,\r\n\r\n      // stat\r\n      StatRunsForDetail: 30,\r\n\r\n      // showing item\r\n      ShowTVItemModelList: [],\r\n\r\n      // showing file item\r\n      ShowTVFileModelList: [],\r\n\r\n      // Analysis\r\n      AnalysisStartRun: null,\r\n      AnalysisEndRun: null,\r\n      AnalysisRuns: 20,\r\n      AnalysisFullYear: true,\r\n      AnalysisShowOnlyUsed: false,\r\n      AnalysisCalculationType: AnalysisCalculationTypeEnum.All,\r\n      AnalysisHighlightSalFromAverage: 8,\r\n      AnalysisShortRange: 3,\r\n      AnalysisMidRange: 3,\r\n      AnalysisDry24h: 4,\r\n      AnalysisDry48h: 8,\r\n      AnalysisDry72h: 12,\r\n      AnalysisDry96h: 16,\r\n      AnalysisWet24h: 12,\r\n      AnalysisWet48h: 25,\r\n      AnalysisWet72h: 37,\r\n      AnalysisWet96h: 50,\r\n      AnalysisFCDataVisible: true,\r\n      AnalysisTempDataVisible: false,\r\n      AnalysisSalDataVisible: false,\r\n      AnalysisP90DataVisible: false,\r\n      AnalysisGeoMeanDataVisible: false,\r\n      AnalysisMedianDataVisible: false,\r\n      AnalysisPerOver43DataVisible: false,\r\n      AnalysisPerOver260DataVisible: false,\r\n\r\n      // visual related\r\n      TopComponent: TopComponentEnum.Home, // home | shell\r\n      ShellSubComponent: ShellSubComponentEnum.Root, // Root | Country | Province | Area | Sector | Subsector | Municipality\r\n      RootSubComponent: RootSubComponentEnum.Countries, // Countries | Files | ExportArcGIS\r\n      CountrySubComponent: CountrySubComponentEnum.Provinces, // Provinces | Files | OpenDataNational | EmailDistributionList | RainExceedance\r\n      ProvinceSubComponent: ProvinceSubComponentEnum.Areas, // Areas | Municipalities | Files | SamplingPlan | OpenData | ProvinceTools\r\n      AreaSubComponent: AreaSubComponentEnum.Sectors, // Sectors | Files \r\n      SectorSubComponent: SectorSubComponentEnum.Subsectors, // Subsectors | Files | MIKEScenarios\r\n      SubsectorSubComponent: SubsectorSubComponentEnum.MWQMSites, // MWQMSites | Analysis | MWQMRuns | PollutionSourceSites | Files | SubsectorTools | LogBook\r\n      MunicipalitySubComponent: MunicipalitySubComponentEnum.Infrastructures, // Infrastructures | MIKEScenarios | Contacts | Files\r\n      MWQMSiteSubComponent: MWQMSiteSubComponentEnum.Information, // Information | Files\r\n      MWQMRunSubComponent: MWQMRunSubComponentEnum.Information, // Information | Files\r\n      PolSourceSiteSubComponent: PolSourceSiteSubComponentEnum.Information, // Information | Files\r\n      CurrentTVItemID: 1,\r\n      SamplingPlanID: 0,\r\n      Language: LanguageEnum.en, // en | fr | enAndfr | es\r\n      BaseApiUrl: '',\r\n      DetailVisible: false,\r\n      StatCountVisible: false,\r\n      LastUpdateVisible: false,\r\n      InactVisible: false,\r\n      MenuVisible: false,\r\n      EditVisible: false,\r\n\r\n      // map \r\n      MapVisible: true,\r\n      EditMapVisible: false,\r\n      EditMapChanged: false,\r\n      MarkerDragStartPos: null,\r\n      MarkerDragEndPos: null,\r\n      MarkerTVItemID: 0,\r\n      MarkerMapInfoID: 0,\r\n      MarkerLabel: '',\r\n      \r\n      MapSize: MapSizeEnum.Size50, // Size30 | Size40 | Size50 | Size60 | Size70\r\n\r\n      MapMarkerPathCharacters: [\r\n        '',\r\n        'm0,0l-5,-10l-11,0l0,-20l32,0l0,20l-11,0l-5,10z',\r\n        'm0,0l-5,-10l-17,0l0,-20l44,0l0,20l-17,0l-5,10z',\r\n        'm0,0l-5,-10l-23,0l0,-20l56,0l0,20l-23,0l-5,10z',\r\n        'm0,0l-5,-10l-29,0l0,-20l68,0l0,20l-29,0l-5,10z',\r\n        'm0,0l-5,-10l-35,0l0,-20l80,0l0,20l-35,0l-5,10z',\r\n      ],\r\n\r\n      MapMarkerColorArea: '#0ffff0',\r\n      MapMarkerColorClimateSite: '#ff0000',\r\n      MapMarkerColorCountry: '#00ff00',\r\n      MapMarkerColorFailed: '#ff0000',\r\n      MapMarkerColorHydrometricSite: '#ff0000',\r\n      MapMarkerColorInfrastructure: '#ff0000',\r\n      MapMarkerColorLessThan10: '#ff0000',\r\n      MapMarkerColorLiftStation: '#ff0000',\r\n      MapMarkerColorLineOverflow: '#ff0000',\r\n      MapMarkerColorMeshNode: '#ff0000',\r\n      MapMarkerColorMikeBoundaryConditionMesh: '#ff0000',\r\n      MapMarkerColorMikeBoundaryConditionWebTide: '#ff0000',\r\n      MapMarkerColorMikeScenario: '#ff0000',\r\n      MapMarkerColorMikeSource: '#ff0000',\r\n      MapMarkerColorMikeSourceIncluded: '#ff0000',\r\n      MapMarkerColorMikeSourceIsRiver: '#ff0000',\r\n      MapMarkerColorMikeSourceNotIncluded: '#ff0000',\r\n      MapMarkerColorMunicipality: '#fff000',\r\n      MapMarkerColorMWQMRun: '#ff0000',\r\n      MapMarkerColorMWQMSite: '#f0f000',\r\n      MapMarkerColorNoData: '#ff0000',\r\n      MapMarkerColorNoDepuration: '#ff0000',\r\n      MapMarkerColorOtherInfrastructure: '#ff0000',\r\n      MapMarkerColorOutfall: '#ff0000',\r\n      MapMarkerColorPassed: '#ff0000',\r\n      MapMarkerColorPolSourceSite: '#ff0000',\r\n      MapMarkerColorProvince: '#ff00ff',\r\n      MapMarkerColorSector: '#ff00ff',\r\n      MapMarkerColorSeeOtherMunicipality: '#ff0000',\r\n      MapMarkerColorSubsector: '#0f0ff0',\r\n      MapMarkerColorTideSite: '#ff0000',\r\n      MapMarkerColorWasteWaterTreatmentPlant: '#ff0000',\r\n      MapMarkerColorWebTideNode: '#ff0000',\r\n\r\n      ClassificationColorApproved: '#ff0000',\r\n      ClassificationColorConditionallyApproved: '#ff0000',\r\n      ClassificationColorConditionallyRestricted: '#ff0000',\r\n      ClassificationColorProhibited: '#ff0000',\r\n      ClassificationColorRestricted: '#ff0000',\r\n\r\n      MapPolylineColorInfrastructureLineOverflowToOutfall: '#00ff00',\r\n      MapPolylineColorInfrastructureLiftStationToLiftStation: '#ff0000',\r\n      MapPolylineColorInfrastructureLiftStationToOutfall: '#ff00ff',\r\n      MapPolylineColorInfrastructureLiftStationToWWTP: '#ffff00',\r\n      MapPolylineColorInfrastructureWWTPToOutfall: '#00ffff',\r\n\r\n      MapPolygonColorArea: '#ff0000',\r\n      MapPolygonColorCountry: '#00ff00',\r\n      MapPolygonColorProvince: '#0000ff',\r\n      MapPolygonColorSector: '#ff00ff',\r\n      MapPolygonColorSubsector: '#ffff00',\r\n\r\n      zoom: 12,\r\n      center: /*<google.maps.LatLngLiteral> */{ lat: 46.0915449, lng: -64.7242012 },\r\n      options: /* <google.maps.MapOptions> */{\r\n        zoomControl: true,\r\n        scrollwheel: true,\r\n        disableDoubleClickZoom: false,\r\n        mapTypeId: 'satellite', //google.maps.MapTypeId.SATELLITE,\r\n      },\r\n      infoContent: '',\r\n\r\n      //HasInternetConnection: false,\r\n      //GoogleMapKey: '',\r\n      CSSLoaded: false,\r\n      IconLoaded: false,\r\n      GoogleJSLoaded: false,\r\n\r\n      // sorting\r\n      AreaSectorsSortOrder: AscDescEnum.Ascending,\r\n      AreaFilesSortByProp: FilesSortPropEnum.FileName,\r\n      AreaFilesSortOrder: AscDescEnum.Ascending,\r\n      CountryProvincesSortOrder: AscDescEnum.Ascending,\r\n      CountryFilesSortByProp: FilesSortPropEnum.FileName,\r\n      CountryFilesSortOrder: AscDescEnum.Ascending,\r\n      MunicipalityContactsSortOrder: AscDescEnum.Ascending,\r\n      MunicipalityFilesSortByProp: FilesSortPropEnum.FileName,\r\n      MunicipalityFilesSortOrder: AscDescEnum.Ascending,\r\n      MunicipalityInfrastructuresSortOrder: AscDescEnum.Ascending,\r\n      MunicipalityMIKEScenariosSortOrder: AscDescEnum.Ascending,\r\n      MWQMRunFilesSortByProp: FilesSortPropEnum.FileName,\r\n      MWQMRunFilesSortOrder: AscDescEnum.Ascending,\r\n      MWQMSiteFilesSortByProp: FilesSortPropEnum.FileName,\r\n      MWQMSiteFilesSortOrder: AscDescEnum.Ascending,\r\n      PolSourceSiteFilesSortByProp: FilesSortPropEnum.FileName,\r\n      PolSourceSiteFilesSortOrder: AscDescEnum.Ascending,\r\n      ProvinceAreasSortOrder: AscDescEnum.Ascending,\r\n      ProvinceFilesSortByProp: FilesSortPropEnum.FileName,\r\n      ProvinceFilesSortOrder: AscDescEnum.Ascending,\r\n      ProvinceMunicipalitiesSortOrder: AscDescEnum.Ascending,\r\n      RootCountriesSortOrder: AscDescEnum.Ascending,\r\n      RootFilesSortByProp: FilesSortPropEnum.FileName,\r\n      RootFilesSortOrder: AscDescEnum.Ascending,\r\n      SectorFilesSortByProp: FilesSortPropEnum.FileName,\r\n      SectorFilesSortOrder: AscDescEnum.Ascending,\r\n      SectorMikeScenariosSortOrder: AscDescEnum.Ascending,\r\n      SectorSubsectorsSortOrder: AscDescEnum.Ascending,\r\n      SubsectorFilesSortByProp: FilesSortPropEnum.FileName,\r\n      SubsectorFilesSortOrder: AscDescEnum.Ascending,\r\n      SubsectorMWQMRunsSortOrder: AscDescEnum.Descending,\r\n      SubsectorMWQMSitesSortOrder: AscDescEnum.Ascending,\r\n      SubsectorPolSourceSitesSortOrder: AscDescEnum.Ascending,\r\n\r\n    });\r\n  }\r\n\r\n  UpdateAppState(appState: AppState) {\r\n    this.AppState$.next(<AppState>{ ...this.AppState$.getValue(), ...appState });\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AnalysisCalculationTypeEnum, AnalysisCalculationTypeEnum_GetIDText, AnalysisCalculationTypeEnum_GetOrderedText } from 'src/app/enums/generated/AnalysisCalculationTypeEnum';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { MWQMSiteLatestClassificationEnum } from 'src/app/enums/generated/MWQMSiteLatestClassificationEnum';\r\nimport { TideTextEnum } from 'src/app/enums/generated/TideTextEnum';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { StatMWQMRun } from 'src/app/models/generated/web/StatMWQMRun.model';\r\nimport { StatMWQMSite } from 'src/app/models/generated/web/StatMWQMSite.model';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { WebMWQMSamplesService } from 'src/app/services/loaders/web-mwqm-samples.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalysisService {\r\n\r\n  constructor(private appStateService: AppStateService,\r\n    private webMWQMSamplesService: WebMWQMSamplesService)\r\n    {}\r\n\r\n\r\n  GetRainHighlight(statMWQMRun: StatMWQMRun): string {\r\n    if (statMWQMRun.RainDay1 >= this.appStateService.AppState$.getValue().AnalysisWet24h) {\r\n      return 'highlightYellow';\r\n    }\r\n    if ((statMWQMRun.RainDay1 + statMWQMRun.RainDay2) >= this.appStateService.AppState$.getValue().AnalysisWet48h) {\r\n      return 'highlightYellow';\r\n    }\r\n    if ((statMWQMRun.RainDay1 + statMWQMRun.RainDay2 + statMWQMRun.RainDay3) >= this.appStateService.AppState$.getValue().AnalysisWet72h) {\r\n      return 'highlightYellow';\r\n    }\r\n    if ((statMWQMRun.RainDay1 + statMWQMRun.RainDay2 + statMWQMRun.RainDay3 + statMWQMRun.RainDay4) >= this.appStateService.AppState$.getValue().AnalysisWet96h) {\r\n      return 'highlightYellow';\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  GetSalinityHighlight(statMWQMSite: StatMWQMSite, runIndex: number): string {\r\n    let highlight: string = Math.abs(statMWQMSite?.StatMWQMSiteSampleList[runIndex]?.Sal - statMWQMSite.SalinityAverage) > this.appStateService.AppState$.getValue().AnalysisHighlightSalFromAverage ? 'borderBottomRed' : ''\r\n\r\n    return highlight;\r\n  }\r\n\r\n  GetClassificationAcronym(mwqmSiteLatestClassification: MWQMSiteLatestClassificationEnum): string {\r\n    switch (mwqmSiteLatestClassification) {\r\n      case MWQMSiteLatestClassificationEnum.Approved:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'A' : 'A';\r\n      case MWQMSiteLatestClassificationEnum.ConditionallyApproved:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'AC' : 'CA';\r\n      case MWQMSiteLatestClassificationEnum.ConditionallyRestricted:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'RC' : 'CR';\r\n      case MWQMSiteLatestClassificationEnum.Prohibited:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'P' : 'P';\r\n      case MWQMSiteLatestClassificationEnum.Restricted:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'R' : 'R';\r\n      case MWQMSiteLatestClassificationEnum.Unclassified:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'U' : 'NC';\r\n      default:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? '' : '';\r\n    }\r\n  }\r\n\r\n  GetClassificationColor(mwqmSiteLatestClassification: MWQMSiteLatestClassificationEnum): string {\r\n    switch (mwqmSiteLatestClassification) {\r\n      case MWQMSiteLatestClassificationEnum.Approved:\r\n        return 'bggreen';\r\n      case MWQMSiteLatestClassificationEnum.ConditionallyApproved:\r\n        return 'bggreen';\r\n      case MWQMSiteLatestClassificationEnum.ConditionallyRestricted:\r\n        return 'bgred';\r\n      case MWQMSiteLatestClassificationEnum.Prohibited:\r\n        return 'bgblack';\r\n      case MWQMSiteLatestClassificationEnum.Restricted:\r\n        return 'bgred';\r\n      case MWQMSiteLatestClassificationEnum.Unclassified:\r\n        return 'bgwhite';\r\n      default:\r\n        return 'bgwhite';\r\n    }\r\n  }\r\n\r\n  GetTideInitialText(tideTextEnum: TideTextEnum): string {\r\n    switch (tideTextEnum) {\r\n      case TideTextEnum.LowTide:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'LT' : 'LT';\r\n      case TideTextEnum.LowTideFalling:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'LF' : 'LF';\r\n      case TideTextEnum.LowTideRising:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'LR' : 'LR';\r\n      case TideTextEnum.MidTide:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'MT' : 'MT';\r\n      case TideTextEnum.MidTideFalling:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'MF' : 'MF';\r\n      case TideTextEnum.MidTideRising:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'MR' : 'MR';\r\n      case TideTextEnum.HighTide:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'HT' : 'HT';\r\n      case TideTextEnum.HighTideFalling:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'HF' : 'HF';\r\n      case TideTextEnum.HighTideRising:\r\n        return this.appStateService.AppState$.getValue().Language == LanguageEnum.fr ? 'HR' : 'HR';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  ToggleRemoveFromStat(statEndMWQMRun: StatMWQMRun) {\r\n    statEndMWQMRun.RemoveFromStat = !statEndMWQMRun.RemoveFromStat;\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  ToggleAnalysisFullYear(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisFullYear: !this.appStateService.AppState$.getValue().AnalysisFullYear, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisShowOnlyUsed(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisShowOnlyUsed: !this.appStateService.AppState$.getValue().AnalysisShowOnlyUsed, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisFCDataVisible(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisFCDataVisible: !this.appStateService.AppState$.getValue().AnalysisFCDataVisible, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisTempDataVisible(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisTempDataVisible: !this.appStateService.AppState$.getValue().AnalysisTempDataVisible, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisSalDataVisible(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisSalDataVisible: !this.appStateService.AppState$.getValue().AnalysisSalDataVisible, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisP90DataVisible(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisP90DataVisible: !this.appStateService.AppState$.getValue().AnalysisP90DataVisible, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisGeoMeanDataVisible(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisGeoMeanDataVisible: !this.appStateService.AppState$.getValue().AnalysisGeoMeanDataVisible, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisMedianDataVisible(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisMedianDataVisible: !this.appStateService.AppState$.getValue().AnalysisMedianDataVisible, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisPerOver43DataVisible(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisPerOver43DataVisible: !this.appStateService.AppState$.getValue().AnalysisPerOver43DataVisible, Working: false });\r\n  }\r\n\r\n  ToggleAnalysisPerOver260DataVisible(): void {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisPerOver260DataVisible: !this.appStateService.AppState$.getValue().AnalysisPerOver260DataVisible, Working: false });\r\n  }\r\n\r\n\r\n  GetDryRain(): number[] {\r\n    let dryRain_mm_List: number[] = [];\r\n\r\n    for (let i = 0; i < 40; i++) {\r\n      dryRain_mm_List.push(i);\r\n    }\r\n\r\n      return dryRain_mm_List;\r\n  }\r\n\r\n  GetWetRain(): number[] {\r\n    let wetRain_mm_List: number[] = [];\r\n\r\n    for (let i = 0; i < 150; i++)\r\n    {\r\n      wetRain_mm_List.push(i);\r\n    } \r\n\r\n    return wetRain_mm_List;\r\n  }\r\n\r\n  GetAnalysisCalculationTypeEnum_GetIDText(analysisCalculationTypeEnum: AnalysisCalculationTypeEnum) {\r\n    return AnalysisCalculationTypeEnum_GetIDText(analysisCalculationTypeEnum, this.appStateService);\r\n  }\r\n\r\n  GetAnalysisCalculationTypeEnum_GetOrderedText(): EnumIDAndText[] {\r\n    return AnalysisCalculationTypeEnum_GetOrderedText(this.appStateService);\r\n  }\r\n\r\n  SetStartRun(statStartMWQMRun: StatMWQMRun) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisStartRun: statStartMWQMRun });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  SetEndRun(statEndMWQMRun: StatMWQMRun) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisEndRun: statEndMWQMRun });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  SetRuns(runs: number) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisRuns: runs });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  SetCalculationType(statCalculationType: AnalysisCalculationTypeEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisCalculationType: statCalculationType });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  SetHighlightSalFromAverage(sal: number) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisHighlightSalFromAverage: sal });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  // SetShortRange(shortRange: number) {\r\n  //   this.appStateService.UpdateAppState(<AppState>{ AnalysisShortRange: shortRange });\r\n  // }\r\n\r\n  // SetMidRange(midRange: number) {\r\n  //   this.appStateService.UpdateAppState(<AppState>{ AnalysisMidRange: midRange });\r\n  // }\r\n\r\n  SetDry24h(dry24h: number) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisDry24h: dry24h });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  SetDry48h(dry48h: number) {\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisDry48h: dry48h });\r\n  }\r\n\r\n  SetDry72h(dry72h: number) {\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisDry72h: dry72h });\r\n  }\r\n\r\n  SetDry96h(dry96h: number) {\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisDry96h: dry96h });\r\n  }\r\n\r\n  SetWet24h(wet24h: number) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisWet24h: wet24h });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  SetWet48h(wet48h: number) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisWet48h: wet48h });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  SetWet72h(wet72h: number) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisWet72h: wet72h });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n  SetWet96h(wet96h: number) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AnalysisWet96h: wet96h });\r\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\r\n  }\r\n\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: darkorchid;\">This is the pol source site view component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebPolSourceSitesService } from 'src/app/services/loaders/web-pol-source-sites.service';\n\n@Component({\n  selector: 'app-pol-source-site-item-view',\n  templateUrl: './pol-source-site-item-view.component.html',\n  styleUrls: ['./pol-source-site-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PolSourceSiteItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webPolSourceSitesService: WebPolSourceSitesService) { }\n\n  ngOnInit(): void {\n    this.webPolSourceSitesService.DoWebPolSourceSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { GetRootSubComponentEnum } from 'src/app/enums/generated/RootSubComponentEnum';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { GetAscDescEnum } from 'src/app/enums/generated/AscDescEnum';\nimport { WebRootService } from 'src/app/services/loaders/web-root.service';\nimport { TVItemSortOrderService } from 'src/app/services/helpers/tvitem-sort-order.service';\nimport { StatCountService } from 'src/app/services/helpers/stat-count.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { ComponentShowService } from 'src/app/services/helpers/component-show.service';\nimport { GetSortOrderAngularEnum } from 'src/app/enums/generated/SortOrderAngularEnum';\n\n@Component({\n  selector: 'app-root-item',\n  templateUrl: './root-item.component.html',\n  styleUrls: ['./root-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RootItemComponent implements OnInit, OnDestroy {\n  rootSubComponentEnum = GetRootSubComponentEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  ascDescEnum = GetAscDescEnum();\n  sortOrderAngular = GetSortOrderAngularEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public webRootService: WebRootService,\n    public tvItemSortOrderService: TVItemSortOrderService,\n    public statCountService: StatCountService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public componentShowService: ComponentShowService) {\n  }\n\n  ngOnInit(): void {\n    this.webRootService.DoWebRoot(true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionRoot(rootSubComponentEnum.Countries)\"\n    (click)=\"componentShowService.ShowRoot(rootSubComponentEnum.Countries)\"\n    title=\"{{ appLanguageService.AppLanguage.RootShowCountries[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.RootCountries[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$?.getValue()?.WebRoot?.TVItemModel, tvTypeEnum.Country) }}&nbsp;&nbsp;\n        </span>\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.RootCountries, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().RootCountriesSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.RootCountries, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().RootCountriesSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionRoot(rootSubComponentEnum.Files)\"\n    (click)=\"componentShowService.ShowRoot(rootSubComponentEnum.Files)\"\n    title=\"{{ appLanguageService.AppLanguage.RootShowFiles[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.RootFiles[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$?.getValue()?.WebRoot?.TVItemModel, tvTypeEnum.File) }}/\n            {{ statCountService.GetStatCount(appLoadedService.AppLoaded$?.getValue()?.WebRoot?.TVItemModel, tvTypeEnum.TotalFile) }}&nbsp;&nbsp;\n        </span>\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionRoot(rootSubComponentEnum.ExportArcGIS)\"\n    (click)=\"componentShowService.ShowRoot(rootSubComponentEnum.ExportArcGIS)\"\n    title=\"{{ appLanguageService.AppLanguage.RootShowExportArcGISTools[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.RootExportArcGIS[appStateService.AppState$?.getValue().Language] }}\n</button>\n\n<app-country-tvitem-list-item *ngIf=\"appStateService.AppState$?.getValue()?.RootSubComponent == rootSubComponentEnum.Countries\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebRoot.TVItemModelCountryList\">\n</app-country-tvitem-list-item>\n\n<app-file-list *ngIf=\"appStateService.AppState$?.getValue()?.RootSubComponent == rootSubComponentEnum.Files\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVFileModelListList]=\"appLoadedService.AppLoaded$?.getValue()?.WebRoot.TVFileModelList\">\n</app-file-list>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.RootSubComponent == rootSubComponentEnum.ExportArcGIS\">\n    <app-export-arc-gis-item></app-export-arc-gis-item>\n</div>","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is open data national component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-open-data-national-item',\n  templateUrl: './open-data-national-item.component.html',\n  styleUrls: ['./open-data-national-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OpenDataNationalItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-country-tvitem-list-item',\n  templateUrl: './country-tvitem-list-item.component.html',\n  styleUrls: ['./country-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CountryTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() IsBreadCrumb: boolean = false;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\r\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\r\n    </app-tvitem-menu>\r\n\r\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\r\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\r\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\r\n                {{ i + 1 }}&nbsp;-&nbsp;\r\n            </span>\r\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\r\n                [{{ tvItemStatMapModel?.TVItem.TVItemID }}]\r\n            </span>\r\n            {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\r\n        </span>\r\n        <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\r\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\r\n        <app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\r\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\r\n    </button>\r\n\r\n    <ng-container *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\">\r\n        <mat-accordion multi>\r\n            <mat-expansion-panel>\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <mat-icon>preview</mat-icon>\r\n                        &nbsp;&nbsp;&nbsp;View\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <app-country-item-view [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\r\n                </app-country-item-view>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel *ngIf=\"AppState.EditVisible\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <mat-icon>edit</mat-icon>\r\n                        &nbsp;&nbsp;&nbsp;Modify\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <app-country-item-modify [TVItemModel]=\"tvItemStatMapModel\"\r\n                    [AppState]=\"AppState\">\r\n                </app-country-item-modify>\r\n            </mat-expansion-panel>\r\n            <mat-expansion-panel *ngIf=\"AppState.EditVisible\">\r\n                <mat-expansion-panel-header>\r\n                    <mat-panel-title>\r\n                        <mat-icon>add</mat-icon>\r\n                        &nbsp;&nbsp;&nbsp;Create\r\n                    </mat-panel-title>\r\n                </mat-expansion-panel-header>\r\n                <app-country-item-create [TVItemModel]=\"tvItemStatMapModel\"\r\n                    [AppState]=\"AppState\">\r\n                </app-country-item-create>\r\n            </mat-expansion-panel>\r\n        </mat-accordion>\r\n    </ng-container>\r\n\r\n    <app-country-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"!IsBreadCrumb && AppState?.DetailVisible\"\r\n        [TVItemModel]=\"tvItemStatMapModel\"></app-country-tvitem-list-detail>\r\n</mat-list>","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { PolSourceSiteModel } from 'src/app/models/generated/web/PolSourceSiteModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebPolSourceSites {\r\n    PolSourceSiteModelList: PolSourceSiteModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelParentList: TVItemModel[];\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { GetAscDescEnum } from 'src/app/enums/generated/AscDescEnum';\nimport { GetMunicipalitySubComponentEnum, MunicipalitySubComponentEnum } from 'src/app/enums/generated/MunicipalitySubComponentEnum';\nimport { GetSortOrderAngularEnum } from 'src/app/enums/generated/SortOrderAngularEnum';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { ComponentShowService } from 'src/app/services/helpers/component-show.service';\nimport { StatCountService } from 'src/app/services/helpers/stat-count.service';\nimport { TVItemSortOrderService } from 'src/app/services/helpers/tvitem-sort-order.service';\nimport { WebMunicipalityService } from 'src/app/services/loaders/web-municipalty.service';\n\n@Component({\n  selector: 'app-municipality-item',\n  templateUrl: './municipality-item.component.html',\n  styleUrls: ['./municipality-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MunicipalityItemComponent implements OnInit, OnDestroy {\n  municipalitySubComponentEnum = GetMunicipalitySubComponentEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  ascDescEnum = GetAscDescEnum();\n  sortOrderAngular = GetSortOrderAngularEnum();\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public webMunicipalityService: WebMunicipalityService,\n    public tvItemSortOrderService: TVItemSortOrderService,\n    public statCountService: StatCountService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public componentShowService: ComponentShowService) { }\n\n  ngOnInit(): void {\n    this.webMunicipalityService.DoWebMunicipality(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionMunicipality(municipalitySubComponentEnum.Infrastructures)\"\n    (click)=\"componentShowService.ShowMunicipality(municipalitySubComponentEnum.Infrastructures)\"\n    title=\"{{ appLanguageService.AppLanguage.MunicipalityShowInfrastructures[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.MunicipalityInfrastructures[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebMunicipality?.TVItemModel, tvTypeEnum.Infrastructure) }}&nbsp;&nbsp;\n        </span>\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionMunicipality(municipalitySubComponentEnum.Contacts)\"\n    (click)=\"componentShowService.ShowMunicipality(municipalitySubComponentEnum.Contacts)\"\n    title=\"{{ appLanguageService.AppLanguage.MunicipalityShowContacts[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.MunicipalityContacts[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebMunicipality?.TVItemModel, tvTypeEnum.Contact) }}&nbsp;&nbsp;\n        </span>\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionMunicipality(municipalitySubComponentEnum.MIKEScenarios)\"\n    (click)=\"componentShowService.ShowMunicipality(municipalitySubComponentEnum.MIKEScenarios)\"\n    title=\"{{ appLanguageService.AppLanguage.MunicipalityShowMikeScenarios[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.MunicipalityMikeScenarios[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebMunicipality?.TVItemModel, tvTypeEnum.MikeScenario) }}&nbsp;&nbsp;\n        </span>\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.MunicipalityMIKEScenarios, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().MunicipalityMIKEScenariosSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.MunicipalityMIKEScenarios, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().MunicipalityMIKEScenariosSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionMunicipality(municipalitySubComponentEnum.Files)\"\n    (click)=\"componentShowService.ShowMunicipality(municipalitySubComponentEnum.Files)\"\n    title=\"{{ appLanguageService.AppLanguage.MunicipalityShowFiles[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.MunicipalityFiles[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebMunicipality?.TVItemModel, tvTypeEnum.File) }}/\n            {{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebMunicipality?.TVItemModel, tvTypeEnum.TotalFile) }}&nbsp;&nbsp;\n        </span>\n    </span>\n</button>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.MunicipalitySubComponent == municipalitySubComponentEnum.Infrastructures\">\n    <app-infrastructure-item></app-infrastructure-item>\n</div>\n\n<app-mike-scenario-tvitem-list-item\n    *ngIf=\"appStateService.AppState$?.getValue()?.MunicipalitySubComponent == municipalitySubComponentEnum.MIKEScenarios\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebMikeScenarios.MikeScenarioModelList\">\n</app-mike-scenario-tvitem-list-item>\n\n<app-file-list\n    *ngIf=\"appStateService.AppState$?.getValue()?.MunicipalitySubComponent == municipalitySubComponentEnum.Files\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVFileModelListList]=\"appLoadedService.AppLoaded$?.getValue()?.WebMunicipality.TVFileModelList\">\n</app-file-list>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.MunicipalitySubComponent == municipalitySubComponentEnum.Contacts\">\n    <app-contact-item></app-contact-item>\n</div>","import { Injectable } from '@angular/core';\r\nimport { AppLoadedService } from '../app-loaded.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComponentDataLoadedService {\r\n\r\n  constructor(private appLoadedService: AppLoadedService) {\r\n  }\r\n\r\n  DataLoadedWebAllAddresses(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllAddresses === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllAddresses).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllAddresses.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllContacts(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllContacts === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllContacts).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllContacts.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllCountries(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllCountries === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllCountries).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllCountries.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllEmails(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllEmails === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllEmails).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllEmails.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllHelpDocs(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllMunicipalities(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllMunicipalities === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllMunicipalities).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllMunicipalities.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllMWQMLookupMPNs(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllMWQMLookupMPNs === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllMWQMLookupMPNs).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllMWQMLookupMPNs.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebPolSourceGroupings(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceGroupings === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceGroupings).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceGroupings.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebPolSourceSiteEffectTerms(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceSiteEffectTerms === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceSiteEffectTerms).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceSiteEffectTerms.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllProvinces(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllProvinces === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllProvinces).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllProvinces.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllReportTypes(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllReportTypes === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllReportTypes).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllReportTypes.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllTels(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllTels === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllTels).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllTels.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebAllTideLocations(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllTideLocations === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllTideLocations).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllTideLocations.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebArea(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebArea === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebArea).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebArea.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebClimateSites(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebClimateSites === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebClimateSites).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebClimateSites.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebCountry(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebCountry === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebCountry).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebCountry.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebDrogueRuns(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebDrogueRuns === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebDrogueRuns).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebDrogueRuns.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebHelpDocs(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebHydrometricSites(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebHydrometricSites === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebHydrometricSites).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebHydrometricSites.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebLabSheets(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebLabSheets === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebLabSheets).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebLabSheets.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebMikeScenarios(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebMikeScenarios === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebMikeScenarios).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebMikeScenarios.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebMunicipality(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebMunicipality === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebMunicipality).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebMunicipality.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebMWQMRuns(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebMWQMRuns === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebMWQMRuns).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebMWQMRuns.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebMWQMSamples(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue().WebMWQMSamples === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue().WebMWQMSamples).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue().WebMWQMSamples.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue\r\n  }\r\n\r\n  DataLoadedWebMWQMSites(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebMWQMSites === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebMWQMSites).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebMWQMSites.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebPolSourceSites(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebPolSourceSites === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebPolSourceSites).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebPolSourceSites.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n\r\n  DataLoadedWebProvince(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebProvince === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebProvince).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebProvince.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebRoot(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebRoot === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebRoot).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebRoot.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllContacts === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllContacts).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllContacts.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllCountries === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllCountries).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllCountries.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllProvinces === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllProvinces).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllProvinces.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllMunicipalities === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllMunicipalities).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllMunicipalities.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllMWQMLookupMPNs === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllMWQMLookupMPNs).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllMWQMLookupMPNs.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceGroupings === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceGroupings).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceGroupings.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceSiteEffectTerms === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceSiteEffectTerms).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceSiteEffectTerms.constructor === Object)) {\r\n    //   AllTrue == false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllReportTypes === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllReportTypes).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllReportTypes.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue()?.WebAllTideLocations === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebAllTideLocations).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue()?.WebAllTideLocations.constructor === Object)) {\r\n    //   AllTrue == false;\r\n    // }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebSector(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebSector === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebSector).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebSector.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebSubsector(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebSubsector === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebSubsector).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebSubsector.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n    // if (this.appLoadedService.AppLoaded$.getValue().WebMWQMSite === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue().WebMWQMSite).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue().WebMWQMSite.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue().WebMWQMRun === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue().WebMWQMRun).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue().WebMWQMRun.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue().WebPolSourceSite === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue().WebPolSourceSite).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue().WebPolSourceSite.constructor === Object)) {\r\n    //   AllTrue = false;\r\n    // }\r\n    // if (this.appLoadedService.AppLoaded$.getValue().WebDrogueRun === undefined\r\n    //   || (Object.keys(this.appLoadedService.AppLoaded$.getValue().WebDrogueRun).length === 0\r\n    //     && this.appLoadedService.AppLoaded$.getValue().WebDrogueRun.constructor === Object)) {\r\n    //   AllTrue == false;\r\n    // }\r\n\r\n    return AllTrue;\r\n  }\r\n\r\n  DataLoadedWebTideSites(): boolean {\r\n    let AllTrue: boolean = true;\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebTideSites === undefined\r\n      || (Object.keys(this.appLoadedService.AppLoaded$.getValue()?.WebTideSites).length === 0\r\n        && this.appLoadedService.AppLoaded$.getValue()?.WebTideSites.constructor === Object)) {\r\n      AllTrue = false;\r\n    }\r\n\r\n    return AllTrue;\r\n  }\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum SectorSubComponentEnum {\r\n    Subsectors = 1,\r\n    Files = 2,\r\n    MIKEScenarios = 3,\r\n}\r\n\r\nexport function GetSectorSubComponentEnum(): typeof SectorSubComponentEnum\r\n{\r\n  return SectorSubComponentEnum;\r\n}\r\n\r\nexport function SectorSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Sous-secteurs' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Fichiers' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Scénarios MIKE' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Subsectors' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MIKE Scenarios' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function SectorSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    SectorSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-subsector-tvitem-list-item',\n  templateUrl: './subsector-tvitem-list-item.component.html',\n  styleUrls: ['./subsector-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SubsectorTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() IsBreadCrumb: boolean = false;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n                {{ i + 1 }}&nbsp;-&nbsp;\n            </span>\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n                [{{ tvItemStatMapModel?.TVItem?.TVItemID }}]\n            </span>\n            {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n        </span>\n        <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n        <app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\n    </button>\n\n    <app-subsector-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-subsector-item-view>\n\n    <app-subsector-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-subsector-item-edit>\n\n    <app-subsector-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"!IsBreadCrumb && AppState?.DetailVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\"></app-subsector-tvitem-list-detail>\n</mat-list>","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum SubsectorSubComponentEnum {\r\n    MWQMSites = 1,\r\n    Analysis = 2,\r\n    MWQMRuns = 3,\r\n    PollutionSourceSites = 4,\r\n    Files = 5,\r\n    SubsectorTools = 6,\r\n    LogBook = 7,\r\n}\r\n\r\nexport function GetSubsectorSubComponentEnum(): typeof SubsectorSubComponentEnum\r\n{\r\n  return SubsectorSubComponentEnum;\r\n}\r\n\r\nexport function SubsectorSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Sites PSQEM' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Analyse' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Tournées PSQEM' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Sites des sources de pollution' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Fichiers' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Outils de sous-secteurs' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'Journal de bord' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'MWQM Sites' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Analysis' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MWQM Runs' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Pollution Source Sites' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Files' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Subsector Tools' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'Log Book' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function SubsectorSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    SubsectorSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is provincial tools component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-provincial-tools-item',\n  templateUrl: './provincial-tools-item.component.html',\n  styleUrls: ['./provincial-tools-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProvincialToolsItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class FileUploadService {\r\n  errorMessage: string;\r\n  languageEnum = GetLanguageEnum();\r\n\r\n  constructor(private appLoadedService: AppLoadedService,\r\n    private appStateService: AppStateService,\r\n    private httpClient: HttpClient) { }\r\n\r\n  public upload(formData) {\r\n     const url: string = `${this.appLoadedService.BaseApiUrl}${this.languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Upload`;\r\n\r\n    return this.httpClient.post<any>(url, formData, {\r\n      reportProgress: true,\r\n      observe: 'events'\r\n    });\r\n  }\r\n\r\n  // Upload(name: string, file: File): Observable<HttpEvent<any>> {\r\n  //   var formData: any = new FormData();\r\n  //   formData.append(\"fileName\", file);\r\n\r\n  //   let url: string = `${this.appLoadedService.BaseApiUrl}${this.languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Upload`;\r\n\r\n  //   return this.http.post<any>(url, formData, {\r\n  //     reportProgress: true,\r\n  //     observe: 'events'\r\n  //   }).pipe(\r\n  //     catchError(this.errorMgmt)\r\n  //   )\r\n  // }\r\n\r\n  // errorMgmt(error: HttpErrorResponse) {\r\n  //   let errorMessage = '';\r\n  //   if (error.error instanceof ErrorEvent) {\r\n  //     // Get client-side error\r\n  //     errorMessage = error.error.message;\r\n  //   } else {\r\n  //     // Get server-side error\r\n  //     errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n  //   }\r\n  //   console.log(errorMessage);\r\n  //   return throwError(errorMessage);\r\n  // }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { MapInfoDrawTypeEnum } from 'src/app/enums/generated/MapInfoDrawTypeEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { MapHelperService } from 'src/app/services/map/map-helper.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapPolylinesService {\r\n\r\n  constructor(private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private mapHelperService: MapHelperService) {\r\n  }\r\n\r\n  DrawPolylines(tvItemStatMapList: TVItemModel[]) {\r\n    let polylineList: google.maps.Polyline[] = [];\r\n\r\n    for (let tvItemStatMapModel of tvItemStatMapList) {\r\n      for (let mapInfoModel of tvItemStatMapModel.MapInfoModelList) {\r\n        if (mapInfoModel.MapInfo?.MapInfoDrawType == MapInfoDrawTypeEnum.Polyline) {\r\n\r\n          let polyPoints = new google.maps.MVCArray<google.maps.LatLng>();\r\n          for (let point of mapInfoModel.MapInfoPointList) {\r\n            polyPoints.push(new google.maps.LatLng(point.Lat, point.Lng));\r\n          }\r\n\r\n          let strokeColor: string = this.mapHelperService.GetMapPolylineColor(mapInfoModel.MapInfo.TVType, mapInfoModel.MapInfo.TVType);\r\n\r\n          let options: google.maps.PolylineOptions = {\r\n            path: polyPoints,\r\n            strokeColor: strokeColor,\r\n            strokeOpacity: 0.8,\r\n            strokeWeight: 2,\r\n            map: this.appLoadedService.AppLoaded$.getValue().Map,\r\n          };\r\n\r\n          polylineList.push(new google.maps.Polyline(options));\r\n\r\n          google.maps.event.addListener(polylineList[polylineList.length - 1], \"mousemove\", (evt: google.maps.MouseEvent) => {\r\n            if (!this.appStateService.AppState$.getValue().EditMapChanged) {\r\n              (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (evt.latLng.lat().toString().substring(0, 8) +\r\n                ' ' + evt.latLng.lng().toString().substring(0, 8));\r\n            }\r\n            else{\r\n              (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (this.appStateService.AppState$.getValue().MarkerDragStartPos.lat().toFixed(6) +\r\n              ' ' + this.appStateService.AppState$.getValue().MarkerDragStartPos.lng().toFixed(6));\r\n            }\r\n          });\r\n\r\n        }\r\n      };\r\n    }\r\n\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ GooglePolylineListMVC: new google.maps.MVCArray<google.maps.Polyline>(polylineList) });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MapInfoDrawTypeEnum } from 'src/app/enums/generated/MapInfoDrawTypeEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { MapHelperService } from 'src/app/services/map/map-helper.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapPolygonsService {\r\n\r\n  constructor(private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private mapHelperService: MapHelperService) {\r\n  }\r\n\r\n  DrawPolygons(tvItemStatMapModelList: TVItemModel[]) {\r\n    let polygonList: google.maps.Polygon[] = [];\r\n\r\n    for (let tvItemStatMapModel of tvItemStatMapModelList) {\r\n      for (let mapInfoModel of tvItemStatMapModel.MapInfoModelList) {\r\n        if (mapInfoModel.MapInfo?.MapInfoDrawType == MapInfoDrawTypeEnum.Polygon) {\r\n\r\n          let polyPoints = new google.maps.MVCArray<google.maps.LatLng>();\r\n          for (let point of mapInfoModel.MapInfoPointList) {\r\n            polyPoints.push(new google.maps.LatLng(point.Lat, point.Lng));\r\n          }\r\n\r\n          let strokeColor: string = this.mapHelperService.GetMapPolygonColor(mapInfoModel.MapInfo.TVType);\r\n          let fillColor: string = this.mapHelperService.GetMapPolygonColor(mapInfoModel.MapInfo.TVType);\r\n\r\n          let options: google.maps.PolygonOptions = {\r\n            paths: polyPoints,\r\n            strokeColor: strokeColor,\r\n            strokeOpacity: 0.8,\r\n            strokeWeight: 2,\r\n            fillColor: fillColor,\r\n            fillOpacity: 0.0,\r\n            map: this.appLoadedService.AppLoaded$.getValue().Map,\r\n          };\r\n\r\n          polygonList.push(new google.maps.Polygon(options));\r\n\r\n          google.maps.event.addListener(polygonList[polygonList.length - 1], \"mousemove\", (evt: google.maps.MouseEvent) => {\r\n            if (!this.appStateService.AppState$.getValue().EditMapChanged) {\r\n              (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (evt.latLng.lat().toString().substring(0, 8) +\r\n                ' ' + evt.latLng.lng().toString().substring(0, 8));\r\n            }\r\n            else{\r\n              (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (this.appStateService.AppState$.getValue().MarkerDragStartPos.lat().toFixed(6) +\r\n              ' ' + this.appStateService.AppState$.getValue().MarkerDragStartPos.lng().toFixed(6));\r\n            }\r\n          });\r\n\r\n        }\r\n      };\r\n    }\r\n\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ GooglePolygonListMVC: new google.maps.MVCArray<google.maps.Polygon>(polygonList) });\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { StatCountService } from 'src/app/services/helpers/stat-count.service';\n\n@Component({\n  selector: 'app-stat-count',\n  templateUrl: './stat-count.component.html',\n  styleUrls: ['./stat-count.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StatCountComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() TVType?: TVTypeEnum;\n\n  constructor(public appStateService: AppStateService,\n    public statCountService: StatCountService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<span class=\"badge-stat\">&nbsp;&nbsp;{{ statCountService.GetStatCount(TVItemModel, TVType) }}&nbsp;&nbsp;</span>\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: gold;\">This is the mwqm run component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebMWQMRunsService } from 'src/app/services/loaders/web-mwqm-runs.service';\n\n@Component({\n  selector: 'app-mwqm-run-item-view',\n  templateUrl: './mwqm-run-item-view.component.html',\n  styleUrls: ['./mwqm-run-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMRunItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webMWQMRunsService: WebMWQMRunsService) { }\n\n  ngOnInit(): void {\n    this.webMWQMRunsService.DoWebMWQMRuns(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum AscDescEnum {\r\n    Ascending = 1,\r\n    Descending = 2,\r\n}\r\n\r\nexport function GetAscDescEnum(): typeof AscDescEnum\r\n{\r\n  return AscDescEnum;\r\n}\r\n\r\nexport function AscDescEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Ascendant' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Descendant' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Ascending' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Descending' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function AscDescEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    AscDescEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllCountries } from 'src/app/models/generated/web/WebAllCountries.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllEmailsService } from 'src/app/services/loaders/web-all-emails.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllCountriesService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllEmailsService: WebAllEmailsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllCountries(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllCountries) {\r\n          this.KeepWebAllCountries();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllCountries().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllCountries() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllCountries: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllCountries }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllCountries`;\r\n        return this.httpClient.get<WebAllCountries>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllCountries(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllEmails();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllEmails() {\r\n        this.webAllEmailsService.DoWebAllEmails(this.DoOther);\r\n    }\r\n    \r\n    private KeepWebAllCountries() {\r\n        this.UpdateWebAllCountries(this.appLoadedService.AppLoaded$?.getValue()?.WebAllCountries);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllCountries);\r\n        if (this.DoOther) {\r\n            this.DoWebAllEmails();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllCountries(x: WebAllCountries) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllCountries: x, });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllCountries()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ClassificationTypeEnum } from 'src/app/enums/generated/ClassificationTypeEnum';\r\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapHelperService {\r\n  constructor(private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService) {\r\n  }\r\n\r\n  FitBounds() {\r\n    let bounds = new google.maps.LatLngBounds();\r\n    let googleMarkerMVCArray: google.maps.MVCArray<google.maps.Marker> = this.appLoadedService.AppLoaded$.getValue().GoogleMarkerListMVC;\r\n    let length: number = googleMarkerMVCArray.getLength();\r\n    for (let i = 0; i < length; i++) {\r\n      let marker: google.maps.Marker = googleMarkerMVCArray.getAt(i);\r\n\r\n      bounds.extend(marker.getPosition());\r\n    }\r\n\r\n    let googlePolygonMVCArray: google.maps.MVCArray<google.maps.Polygon> = this.appLoadedService.AppLoaded$.getValue().GooglePolygonListMVC;\r\n    length = googlePolygonMVCArray.getLength();\r\n    for (let i = 0; i < length; i++) {\r\n\r\n      googlePolygonMVCArray.getAt(i).getPath().forEach((path) => {\r\n        bounds.extend(path);\r\n      });\r\n    }\r\n\r\n    let googlePolylineMVCArray: google.maps.MVCArray<google.maps.Polyline> = this.appLoadedService.AppLoaded$.getValue().GooglePolylineListMVC;\r\n    length = googlePolylineMVCArray.getLength();\r\n    for (let i = 0; i < length; i++) {\r\n\r\n      googlePolylineMVCArray.getAt(i).getPath().forEach((path) => {\r\n        bounds.extend(path);\r\n      });\r\n    }\r\n\r\n    this.appLoadedService.AppLoaded$.getValue().Map.fitBounds(bounds);\r\n  }\r\n\r\n  GetConditionColor(classification: ClassificationTypeEnum): string {\r\n\r\n    switch (classification) {\r\n      case ClassificationTypeEnum.Approved: return this.appStateService.AppState$.getValue().ClassificationColorApproved;\r\n      case ClassificationTypeEnum.ConditionallyApproved: return this.appStateService.AppState$.getValue().ClassificationColorConditionallyApproved;\r\n      case ClassificationTypeEnum.ConditionallyRestricted: return this.appStateService.AppState$.getValue().ClassificationColorConditionallyRestricted;\r\n      case ClassificationTypeEnum.Prohibited: return this.appStateService.AppState$.getValue().ClassificationColorProhibited;\r\n      case ClassificationTypeEnum.Restricted: return this.appStateService.AppState$.getValue().ClassificationColorRestricted;\r\n    }\r\n  }\r\n\r\n  GetMapMarkerColor(TVType: TVTypeEnum): string {\r\n\r\n    switch (TVType) {\r\n      case TVTypeEnum.Area: return this.appStateService.AppState$.getValue().MapMarkerColorArea;\r\n      case TVTypeEnum.ClimateSite: return this.appStateService.AppState$.getValue().MapMarkerColorClimateSite;\r\n      case TVTypeEnum.Country: return this.appStateService.AppState$.getValue().MapMarkerColorCountry;\r\n      case TVTypeEnum.Failed: return this.appStateService.AppState$.getValue().MapMarkerColorFailed;\r\n      case TVTypeEnum.HydrometricSite: return this.appStateService.AppState$.getValue().MapMarkerColorHydrometricSite;\r\n      case TVTypeEnum.Infrastructure: return this.appStateService.AppState$.getValue().MapMarkerColorInfrastructure;\r\n      case TVTypeEnum.LessThan10: return this.appStateService.AppState$.getValue().MapMarkerColorLessThan10;\r\n      case TVTypeEnum.LiftStation: return this.appStateService.AppState$.getValue().MapMarkerColorLiftStation;\r\n      case TVTypeEnum.LineOverflow: return this.appStateService.AppState$.getValue().MapMarkerColorLineOverflow;\r\n      case TVTypeEnum.MeshNode: return this.appStateService.AppState$.getValue().MapMarkerColorMeshNode;\r\n      case TVTypeEnum.MikeBoundaryConditionMesh: return this.appStateService.AppState$.getValue().MapMarkerColorMikeBoundaryConditionMesh;\r\n      case TVTypeEnum.MikeBoundaryConditionWebTide: return this.appStateService.AppState$.getValue().MapMarkerColorMikeBoundaryConditionWebTide;\r\n      case TVTypeEnum.MikeScenario: return this.appStateService.AppState$.getValue().MapMarkerColorMikeScenario;\r\n      case TVTypeEnum.MikeSource: return this.appStateService.AppState$.getValue().MapMarkerColorMikeSource;\r\n      case TVTypeEnum.MikeSourceIncluded: return this.appStateService.AppState$.getValue().MapMarkerColorMikeSourceIncluded;\r\n      case TVTypeEnum.MikeSourceIsRiver: return this.appStateService.AppState$.getValue().MapMarkerColorMikeSourceIsRiver;\r\n      case TVTypeEnum.MikeSourceNotIncluded: return this.appStateService.AppState$.getValue().MapMarkerColorMikeSourceNotIncluded;\r\n      case TVTypeEnum.Municipality: return this.appStateService.AppState$.getValue().MapMarkerColorMunicipality;\r\n      case TVTypeEnum.MWQMRun: return this.appStateService.AppState$.getValue().MapMarkerColorMWQMRun;\r\n      case TVTypeEnum.MWQMSite: return this.appStateService.AppState$.getValue().MapMarkerColorMWQMSite;\r\n      case TVTypeEnum.NoData: return this.appStateService.AppState$.getValue().MapMarkerColorNoData;\r\n      case TVTypeEnum.NoDepuration: return this.appStateService.AppState$.getValue().MapMarkerColorNoDepuration;\r\n      case TVTypeEnum.OtherInfrastructure: return this.appStateService.AppState$.getValue().MapMarkerColorOtherInfrastructure;\r\n      case TVTypeEnum.Outfall: return this.appStateService.AppState$.getValue().MapMarkerColorOutfall;\r\n      case TVTypeEnum.Passed: return this.appStateService.AppState$.getValue().MapMarkerColorPassed;\r\n      case TVTypeEnum.PolSourceSite: return this.appStateService.AppState$.getValue().MapMarkerColorPolSourceSite;\r\n      case TVTypeEnum.Province: return this.appStateService.AppState$.getValue().MapMarkerColorProvince;\r\n      case TVTypeEnum.Sector: return this.appStateService.AppState$.getValue().MapMarkerColorSector;\r\n      case TVTypeEnum.SeeOtherMunicipality: return this.appStateService.AppState$.getValue().MapMarkerColorSeeOtherMunicipality;\r\n      case TVTypeEnum.Subsector: return this.appStateService.AppState$.getValue().MapMarkerColorSubsector;\r\n      case TVTypeEnum.TideSite: return this.appStateService.AppState$.getValue().MapMarkerColorTideSite;\r\n      case TVTypeEnum.WasteWaterTreatmentPlant: return this.appStateService.AppState$.getValue().MapMarkerColorWasteWaterTreatmentPlant;\r\n      case TVTypeEnum.WebTideNode: return this.appStateService.AppState$.getValue().MapMarkerColorWebTideNode;\r\n    }\r\n  }\r\n\r\n  GetMapPolylineColor(FromTVType: TVTypeEnum, ToTVType: TVTypeEnum): string {\r\n\r\n    if (FromTVType == TVTypeEnum.LineOverflow && ToTVType == TVTypeEnum.Outfall) {\r\n      return this.appStateService.AppState$.getValue().MapPolylineColorInfrastructureLineOverflowToOutfall;\r\n    }\r\n    else if (FromTVType == TVTypeEnum.LiftStation && ToTVType == TVTypeEnum.LiftStation) {\r\n      return this.appStateService.AppState$.getValue().MapPolylineColorInfrastructureLiftStationToLiftStation;\r\n    }\r\n    else if (FromTVType == TVTypeEnum.LiftStation && ToTVType == TVTypeEnum.Outfall) {\r\n      return this.appStateService.AppState$.getValue().MapPolylineColorInfrastructureLiftStationToOutfall;\r\n    }\r\n    else if (FromTVType == TVTypeEnum.LiftStation && ToTVType == TVTypeEnum.WasteWaterTreatmentPlant) {\r\n      return this.appStateService.AppState$.getValue().MapPolylineColorInfrastructureLiftStationToWWTP;\r\n    }\r\n    else if (FromTVType == TVTypeEnum.WasteWaterTreatmentPlant && ToTVType == TVTypeEnum.Outfall) {\r\n      return this.appStateService.AppState$.getValue().MapPolylineColorInfrastructureWWTPToOutfall;\r\n    }\r\n    else {\r\n      return this.appStateService.AppState$.getValue().MapColorNotFound;\r\n    }\r\n  }\r\n\r\n  GetMapPolygonColor(TVType: TVTypeEnum): string {\r\n    switch (TVType) {\r\n      case TVTypeEnum.Area: return this.appStateService.AppState$.getValue().MapPolygonColorArea;\r\n      case TVTypeEnum.Country: return this.appStateService.AppState$.getValue().MapPolygonColorCountry;\r\n      case TVTypeEnum.Province: return this.appStateService.AppState$.getValue().MapPolygonColorProvince;\r\n      case TVTypeEnum.Sector: return this.appStateService.AppState$.getValue().MapPolygonColorSector;\r\n      case TVTypeEnum.Subsector: return this.appStateService.AppState$.getValue().MapPolygonColorSubsector;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllMunicipalities } from 'src/app/models/generated/web/WebAllMunicipalities.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllMWQMLookupMPNsService } from 'src/app/services/loaders/web-all-mwqm-lookup-mpns.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllMunicipalitiesService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllMWQMLookupMPNsService: WebAllMWQMLookupMPNsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllMunicipalities(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllMunicipalities) {\r\n          this.KeepWebAllMunicipalities();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllMunicipalities().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllMunicipalities() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllMunicipalities: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllMunicipalities }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllMunicipalities`;\r\n        return this.httpClient.get<WebAllMunicipalities>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllMunicipalities(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllMWQMLookupMPNs();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllMWQMLookupMPNs() {\r\n        this.webAllMWQMLookupMPNsService.DoWebAllMWQMLookupMPNs(this.DoOther);\r\n    }\r\n    \r\n    private KeepWebAllMunicipalities() {\r\n        this.UpdateWebAllMunicipalities(this.appLoadedService.AppLoaded$?.getValue()?.WebAllMunicipalities);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllMunicipalities);\r\n        if (this.DoOther) {\r\n            this.DoWebAllMWQMLookupMPNs();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllMunicipalities(x: WebAllMunicipalities) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllMunicipalities: x, });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllMunicipalities()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-country-tvitem-list-detail',\n  templateUrl: './country-tvitem-list-detail.component.html',\n  styleUrls: ['./country-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CountryTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  get tvTypeEnum(): typeof TVTypeEnum {\n    return TVTypeEnum;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n}\n","<blockquote>\r\n    <span *ngIf=\"tvTypeEnum.Province\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryProvince[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Province\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.Municipality\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryMunicipality[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Municipality\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.LiftStation\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryLiftStation[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.LiftStation\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.WasteWaterTreatmentPlant\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryWWTP[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.WasteWaterTreatmentPlant\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.Area\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryArea[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Area\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.Sector\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountrySector[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Sector\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.Subsector\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountrySubsector[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Subsector\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSiteSample\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryMWQMSample[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSiteSample\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryMWQMSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMRun\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryMWQMRun[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMRun\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.PolSourceSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryPolSourceSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.PolSourceSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MikeScenario\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryMikeScenario[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MikeScenario\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.BoxModel\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryBoxModel[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.BoxModel\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.VisualPlumesScenario\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryVPScenario[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.VisualPlumesScenario\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <hr />\r\n</blockquote>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    ClipboardModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { AreaSubComponentEnum } from 'src/app/enums/generated/AreaSubComponentEnum';\r\nimport { CountrySubComponentEnum } from 'src/app/enums/generated/CountrySubComponentEnum';\r\nimport { ProvinceSubComponentEnum } from 'src/app/enums/generated/ProvinceSubComponentEnum';\r\nimport { RootSubComponentEnum } from 'src/app/enums/generated/RootSubComponentEnum';\r\nimport { SectorSubComponentEnum } from 'src/app/enums/generated/SectorSubComponentEnum';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { WebAreaService } from 'src/app/services/loaders/web-area.service';\r\nimport { WebSectorService } from 'src/app/services/loaders/web-sector.service';\r\nimport { WebCountryService } from 'src/app/services/loaders/web-country.service';\r\nimport { WebProvinceService } from 'src/app/services/loaders/web-province.service';\r\nimport { SubsectorSubComponentEnum } from 'src/app/enums/generated/SubsectorSubComponentEnum';\r\nimport { WebSubsectorService } from 'src/app/services/loaders/web-subsector.service';\r\nimport { WebRootService } from 'src/app/services/loaders/web-root.service';\r\nimport { MunicipalitySubComponentEnum } from 'src/app/enums/generated/MunicipalitySubComponentEnum';\r\nimport { WebMunicipalityService } from 'src/app/services/loaders/web-municipalty.service';\r\nimport { MWQMRunSubComponentEnum } from 'src/app/enums/generated/MWQMRunSubComponentEnum';\r\nimport { MWQMSiteSubComponentEnum } from 'src/app/enums/generated/MWQMSiteSubComponentEnum';\r\nimport { PolSourceSiteSubComponentEnum } from 'src/app/enums/generated/PolSourceSiteSubComponentEnum';\r\nimport { WebMWQMRunsService } from 'src/app/services/loaders/web-mwqm-runs.service';\r\nimport { WebMWQMSitesService } from 'src/app/services/loaders/web-mwqm-sites.service';\r\nimport { WebPolSourceSitesService } from 'src/app/services/loaders/web-pol-source-sites.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComponentShowService {\r\n\r\n  constructor(private appStateService: AppStateService,\r\n    private webRootService: WebRootService,\r\n    private webCountryService: WebCountryService,\r\n    private webMunicipalityService: WebMunicipalityService,\r\n    private webMWQMRunsService: WebMWQMRunsService,\r\n    private webMWQMSitesService: WebMWQMSitesService,\r\n    private webPolSourceSitesService: WebPolSourceSitesService,\r\n    private webProvinceService: WebProvinceService,\r\n    private webAreaService: WebAreaService,\r\n    private webSectorService: WebSectorService,\r\n    private webSubsectorService: WebSubsectorService) {\r\n  }\r\n\r\n  ShowArea(areaSubComponent: AreaSubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ AreaSubComponent: areaSubComponent });\r\n    this.webAreaService.DoWebArea(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n  ShowCountry(countrySubComponent: CountrySubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ CountrySubComponent: countrySubComponent });\r\n    this.webCountryService.DoWebCountry(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n  ShowMunicipality(municipalitySubComponent: MunicipalitySubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ MunicipalitySubComponent: municipalitySubComponent });\r\n    this.webMunicipalityService.DoWebMunicipality(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n  ShowMWQMRun(mwqmRunSubComponent: MWQMRunSubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ MWQMRunSubComponent: mwqmRunSubComponent });\r\n    this.webMWQMRunsService.DoWebMWQMRuns(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n  ShowMWQMSite(mwqmSiteSubComponent: MWQMSiteSubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ MWQMSiteSubComponent: mwqmSiteSubComponent });\r\n    this.webMWQMSitesService.DoWebMWQMSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n  ShowMWQMPolSourceSite(polSourceSiteSubComponent: PolSourceSiteSubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ PolSourceSiteSubComponent: polSourceSiteSubComponent });\r\n    this.webPolSourceSitesService.DoWebPolSourceSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n  ShowProvince(provinceSubComponent: ProvinceSubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ ProvinceSubComponent: provinceSubComponent });\r\n    this.webProvinceService.DoWebProvince(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n  ShowRoot(rootSubComponent: RootSubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ RootSubComponent: rootSubComponent });\r\n    this.webRootService.DoWebRoot(true);\r\n  }\r\n\r\n  ShowSector(sectorSubComponent: SectorSubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ SectorSubComponent: sectorSubComponent });\r\n    this.webSectorService.DoWebSector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n  ShowSubsector(subsectorSubComponent: SubsectorSubComponentEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ SubsectorSubComponent: subsectorSubComponent });\r\n    this.webSubsectorService.DoWebSubsector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n  }\r\n\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { WebRoot } from 'src/app/models/generated/web/WebRoot.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { StructureTVFileListService } from 'src/app/services/helpers/structure-tvfile-list.service';\r\nimport { SortTVItemListService } from 'src/app/services/helpers/sort-tvitem-list.service';\r\nimport { MapService } from 'src/app/services/map/map.service';\r\nimport { RootSubComponentEnum } from 'src/app/enums/generated/RootSubComponentEnum';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\nimport { WebAllAddressesService } from 'src/app/services/loaders/web-all-addresses.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebRootService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private sortTVItemListService: SortTVItemListService,\r\n        private structureTVFileListService: StructureTVFileListService,\r\n        private mapService: MapService,\r\n        private webAllAddressesService: WebAllAddressesService,\r\n        private componentDataLoadedService: ComponentDataLoadedService,\r\n        private historyService: HistoryService) {\r\n    }\r\n\r\n    DoWebRoot(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebRoot) {\r\n            this.KeepWebRoot();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebRoot().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebRoot() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebRoot: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebRoot }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebRoot`;\r\n        return this.httpClient.get<WebRoot>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebRoot(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllAddresses();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllAddresses() {\r\n        this.webAllAddressesService.DoWebAllAddresses(this.DoOther);\r\n    }\r\n\r\n    private KeepWebRoot() {\r\n        this.UpdateWebRoot(this.appLoadedService.AppLoaded$?.getValue()?.WebRoot);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebRoot);\r\n        if (this.DoOther) {\r\n            this.DoWebAllAddresses();\r\n        }\r\n    }\r\n\r\n    private UpdateWebRoot(x: WebRoot) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebRoot: x,\r\n        });\r\n\r\n        this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebRoot?.TVItemModel);\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n        }\r\n\r\n        if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\r\n            if (this.appStateService.AppState$.getValue().RootSubComponent == RootSubComponentEnum.Countries) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    ...this.appLoadedService.AppLoaded$.getValue().WebRoot.TVItemModelCountryList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebRoot.TVItemModel]\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().RootSubComponent == RootSubComponentEnum.Files) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    ...this.appLoadedService.AppLoaded$.getValue().WebRoot.TVItemModelCountryList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebRoot.TVItemModel]\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().RootSubComponent == RootSubComponentEnum.ExportArcGIS) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    ...this.appLoadedService.AppLoaded$.getValue().WebRoot.TVItemModelCountryList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebRoot.TVItemModel]\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum TVTypeEnum {\r\n    Root = 1,\r\n    Address = 2,\r\n    Area = 3,\r\n    ClimateSite = 4,\r\n    Contact = 5,\r\n    Country = 6,\r\n    Email = 7,\r\n    File = 8,\r\n    HydrometricSite = 9,\r\n    Infrastructure = 10,\r\n    MikeBoundaryConditionWebTide = 11,\r\n    MikeBoundaryConditionMesh = 12,\r\n    MikeScenario = 13,\r\n    MikeSource = 14,\r\n    Municipality = 15,\r\n    MWQMSite = 16,\r\n    PolSourceSite = 17,\r\n    Province = 18,\r\n    Sector = 19,\r\n    Subsector = 20,\r\n    Tel = 21,\r\n    TideSite = 22,\r\n    MWQMSiteSample = 23,\r\n    WasteWaterTreatmentPlant = 24,\r\n    LiftStation = 25,\r\n    Spill = 26,\r\n    BoxModel = 27,\r\n    VisualPlumesScenario = 28,\r\n    Outfall = 29,\r\n    OtherInfrastructure = 30,\r\n    MWQMRun = 31,\r\n    NoDepuration = 33,\r\n    Failed = 34,\r\n    Passed = 35,\r\n    NoData = 36,\r\n    LessThan10 = 37,\r\n    MeshNode = 38,\r\n    WebTideNode = 39,\r\n    SamplingPlan = 40,\r\n    SeeOtherMunicipality = 41,\r\n    LineOverflow = 42,\r\n    BoxModelInputs = 43,\r\n    BoxModelResults = 44,\r\n    ClimateSiteInfo = 45,\r\n    ClimateSiteData = 46,\r\n    HydrometricSiteInfo = 47,\r\n    HydrometricSiteData = 48,\r\n    InfrastructureInfo = 49,\r\n    LabSheetInfo = 50,\r\n    LabSheetDetailInfo = 51,\r\n    MapInfo = 52,\r\n    MapInfoPoint = 53,\r\n    MikeSourceStartEndInfo = 54,\r\n    MWQMLookupMPNInfo = 55,\r\n    SamplingPlanInfo = 56,\r\n    SamplingPlanSubsectorInfo = 57,\r\n    SamplingPlanSubsectorSiteInfo = 58,\r\n    MWQMSiteStartEndInfo = 59,\r\n    MWQMSubsectorInfo = 60,\r\n    PolSourceSiteInfo = 61,\r\n    PolSourceSiteObsInfo = 62,\r\n    HydrometricRatingCurveInfo = 63,\r\n    HydrometricRatingCurveDataInfo = 64,\r\n    TideLocationInfo = 65,\r\n    TideSiteDataInfo = 66,\r\n    UseOfSite = 67,\r\n    VisualPlumesScenarioInfo = 68,\r\n    VisualPlumesScenarioAmbient = 69,\r\n    VisualPlumesScenarioResults = 70,\r\n    TotalFile = 71,\r\n    MikeSourceIsRiver = 72,\r\n    MikeSourceIncluded = 73,\r\n    MikeSourceNotIncluded = 74,\r\n    RainExceedance = 75,\r\n    EmailDistributionList = 76,\r\n    OpenData = 77,\r\n    ProvinceTools = 78,\r\n    Classification = 79,\r\n    Approved = 80,\r\n    Restricted = 81,\r\n    Prohibited = 82,\r\n    ConditionallyApproved = 83,\r\n    ConditionallyRestricted = 84,\r\n    OpenDataNational = 85,\r\n    PolSourceSiteMikeScenario = 86,\r\n    SubsectorTools = 87,\r\n}\r\n\r\nexport function GetTVTypeEnum(): typeof TVTypeEnum\r\n{\r\n  return TVTypeEnum;\r\n}\r\n\r\nexport function TVTypeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Base' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Adresse' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Région' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Climate Site (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Contact (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Pays' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'Courriel' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'Fichier' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'Poste hydrométrique' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'Infrastructure' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'Mike Boundary Condition Web Tide (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 12, EnumText: 'Mike Boundary Condition Mesh (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 13, EnumText: 'Scénario MIKE' });\r\n        enumTextOrderedList.push({ EnumID: 14, EnumText: 'Source MIKE' });\r\n        enumTextOrderedList.push({ EnumID: 15, EnumText: 'Municipalité' });\r\n        enumTextOrderedList.push({ EnumID: 16, EnumText: 'MWQM Site (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 17, EnumText: 'Site de la source de pollution' });\r\n        enumTextOrderedList.push({ EnumID: 18, EnumText: 'Province ' });\r\n        enumTextOrderedList.push({ EnumID: 19, EnumText: 'Secteur' });\r\n        enumTextOrderedList.push({ EnumID: 20, EnumText: 'Sous-secteur' });\r\n        enumTextOrderedList.push({ EnumID: 21, EnumText: 'Tél' });\r\n        enumTextOrderedList.push({ EnumID: 22, EnumText: 'Poste de marée' });\r\n        enumTextOrderedList.push({ EnumID: 23, EnumText: 'MWQM Site Sample (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 24, EnumText: 'Usine de traitement de eaux usées' });\r\n        enumTextOrderedList.push({ EnumID: 25, EnumText: 'Poste de pompage' });\r\n        enumTextOrderedList.push({ EnumID: 26, EnumText: 'Déversement' });\r\n        enumTextOrderedList.push({ EnumID: 27, EnumText: 'Box Model' });\r\n        enumTextOrderedList.push({ EnumID: 28, EnumText: 'Scénario Visual Plumes' });\r\n        enumTextOrderedList.push({ EnumID: 29, EnumText: 'Émissaire' });\r\n        enumTextOrderedList.push({ EnumID: 30, EnumText: 'Other Infrastructure (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 31, EnumText: 'MWQM Run (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 33, EnumText: 'No Depuration (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 34, EnumText: 'Échec' });\r\n        enumTextOrderedList.push({ EnumID: 35, EnumText: 'Réussi' });\r\n        enumTextOrderedList.push({ EnumID: 36, EnumText: 'Aucune donnée' });\r\n        enumTextOrderedList.push({ EnumID: 37, EnumText: 'Less Than 10 Samples (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 38, EnumText: 'Mesh Node (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 39, EnumText: 'Web Tide Node (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 40, EnumText: 'MWQM Plan (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 41, EnumText: 'Voir autre municipalité' });\r\n        enumTextOrderedList.push({ EnumID: 42, EnumText: 'Line overflow (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 43, EnumText: 'Box Model Inputs (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 44, EnumText: 'Box Model Results (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 45, EnumText: 'Climate Site Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 46, EnumText: 'Climate Site Data (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 47, EnumText: 'Hydrometric Site Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 48, EnumText: 'Hydrometric Site Data (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 49, EnumText: 'Infrastructure Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 50, EnumText: 'Lab Sheet Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 51, EnumText: 'Lab Sheet Detail Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 52, EnumText: 'Map Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 53, EnumText: 'Map Info Point (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 54, EnumText: 'Mike Source Start End Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 55, EnumText: 'MWQM Lookup MPN Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 56, EnumText: 'MWQM Plan Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 57, EnumText: 'MWQM Plan Subsector Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 58, EnumText: 'MWQM Plan Subsector Site Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 59, EnumText: 'MWQM Site Start End Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 60, EnumText: 'MWQM Subsector Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 61, EnumText: 'Pollution Source Site Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 62, EnumText: 'Pollution Source Site Observation Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 63, EnumText: 'Hydrometric Rating Curve Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 64, EnumText: 'Hydrometric Rating Curve Data Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 65, EnumText: 'Tide Location Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 66, EnumText: 'Tide Site Data Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 67, EnumText: 'Use Of Site (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 68, EnumText: 'Visual Plumes Scenario Info (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 69, EnumText: 'Visual Plumes Scenario Ambient (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 70, EnumText: 'Visual Plumes Scenario Results (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 71, EnumText: 'Totale filière' });\r\n        enumTextOrderedList.push({ EnumID: 72, EnumText: 'Source de pollution MIKE rivière' });\r\n        enumTextOrderedList.push({ EnumID: 73, EnumText: 'Source de pollution MIKE inclus' });\r\n        enumTextOrderedList.push({ EnumID: 74, EnumText: 'Source de pollution MIKE non inclus' });\r\n        enumTextOrderedList.push({ EnumID: 75, EnumText: 'Exceedance de pluie' });\r\n        enumTextOrderedList.push({ EnumID: 76, EnumText: 'Liste de distribution des courriels' });\r\n        enumTextOrderedList.push({ EnumID: 77, EnumText: 'Open Data (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 78, EnumText: 'Province Tools' });\r\n        enumTextOrderedList.push({ EnumID: 79, EnumText: 'Classification' });\r\n        enumTextOrderedList.push({ EnumID: 80, EnumText: 'Agréé' });\r\n        enumTextOrderedList.push({ EnumID: 81, EnumText: 'Restreint' });\r\n        enumTextOrderedList.push({ EnumID: 82, EnumText: 'Interdit' });\r\n        enumTextOrderedList.push({ EnumID: 83, EnumText: 'Agréé sous condition' });\r\n        enumTextOrderedList.push({ EnumID: 84, EnumText: 'Restreint sous condition' });\r\n        enumTextOrderedList.push({ EnumID: 85, EnumText: 'Open Data national (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 86, EnumText: 'Pollution source site Mike Scenario (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 87, EnumText: 'Subsector tools (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Root' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Address' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Area' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Climate Site' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Contact' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Country' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'Email' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'File' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'Hydrometric Site' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'Infrastructure' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'Mike Boundary Condition Web Tide' });\r\n        enumTextOrderedList.push({ EnumID: 12, EnumText: 'Mike Boundary Condition Mesh' });\r\n        enumTextOrderedList.push({ EnumID: 13, EnumText: 'Mike Scenario' });\r\n        enumTextOrderedList.push({ EnumID: 14, EnumText: 'Mike Source' });\r\n        enumTextOrderedList.push({ EnumID: 15, EnumText: 'Municipality' });\r\n        enumTextOrderedList.push({ EnumID: 16, EnumText: 'MWQM Site' });\r\n        enumTextOrderedList.push({ EnumID: 17, EnumText: 'Pollution Source Site' });\r\n        enumTextOrderedList.push({ EnumID: 18, EnumText: 'Province' });\r\n        enumTextOrderedList.push({ EnumID: 19, EnumText: 'Sector' });\r\n        enumTextOrderedList.push({ EnumID: 20, EnumText: 'Subsector' });\r\n        enumTextOrderedList.push({ EnumID: 21, EnumText: 'Tel' });\r\n        enumTextOrderedList.push({ EnumID: 22, EnumText: 'Tide Site' });\r\n        enumTextOrderedList.push({ EnumID: 23, EnumText: 'MWQM Site Sample' });\r\n        enumTextOrderedList.push({ EnumID: 24, EnumText: 'Waste Water Treatment Plant' });\r\n        enumTextOrderedList.push({ EnumID: 25, EnumText: 'Lift Station' });\r\n        enumTextOrderedList.push({ EnumID: 26, EnumText: 'Spill' });\r\n        enumTextOrderedList.push({ EnumID: 27, EnumText: 'Box Model' });\r\n        enumTextOrderedList.push({ EnumID: 28, EnumText: 'Visual Plumes Scenario' });\r\n        enumTextOrderedList.push({ EnumID: 29, EnumText: 'Outfall' });\r\n        enumTextOrderedList.push({ EnumID: 30, EnumText: 'Other Infrastructure' });\r\n        enumTextOrderedList.push({ EnumID: 31, EnumText: 'MWQM Run' });\r\n        enumTextOrderedList.push({ EnumID: 33, EnumText: 'No Depuration' });\r\n        enumTextOrderedList.push({ EnumID: 34, EnumText: 'Failed' });\r\n        enumTextOrderedList.push({ EnumID: 35, EnumText: 'Passed' });\r\n        enumTextOrderedList.push({ EnumID: 36, EnumText: 'No Data' });\r\n        enumTextOrderedList.push({ EnumID: 37, EnumText: 'Less Than 10 Samples' });\r\n        enumTextOrderedList.push({ EnumID: 38, EnumText: 'Mesh Node' });\r\n        enumTextOrderedList.push({ EnumID: 39, EnumText: 'Web Tide Node' });\r\n        enumTextOrderedList.push({ EnumID: 40, EnumText: 'MWQM Plan' });\r\n        enumTextOrderedList.push({ EnumID: 41, EnumText: 'See other municipality' });\r\n        enumTextOrderedList.push({ EnumID: 42, EnumText: 'Line overflow' });\r\n        enumTextOrderedList.push({ EnumID: 43, EnumText: 'Box Model Inputs' });\r\n        enumTextOrderedList.push({ EnumID: 44, EnumText: 'Box Model Results' });\r\n        enumTextOrderedList.push({ EnumID: 45, EnumText: 'Climate Site Info' });\r\n        enumTextOrderedList.push({ EnumID: 46, EnumText: 'Climate Site Data' });\r\n        enumTextOrderedList.push({ EnumID: 47, EnumText: 'Hydrometric Site Info' });\r\n        enumTextOrderedList.push({ EnumID: 48, EnumText: 'Hydrometric Site Data' });\r\n        enumTextOrderedList.push({ EnumID: 49, EnumText: 'Infrastructure Info' });\r\n        enumTextOrderedList.push({ EnumID: 50, EnumText: 'Lab Sheet Info' });\r\n        enumTextOrderedList.push({ EnumID: 51, EnumText: 'Lab Sheet Detail Info' });\r\n        enumTextOrderedList.push({ EnumID: 52, EnumText: 'Map Info' });\r\n        enumTextOrderedList.push({ EnumID: 53, EnumText: 'Map Info Point' });\r\n        enumTextOrderedList.push({ EnumID: 54, EnumText: 'Mike Source Start End Info' });\r\n        enumTextOrderedList.push({ EnumID: 55, EnumText: 'MWQM Lookup MPN Info' });\r\n        enumTextOrderedList.push({ EnumID: 56, EnumText: 'MWQM Plan Info' });\r\n        enumTextOrderedList.push({ EnumID: 57, EnumText: 'MWQM Plan Subsector Info' });\r\n        enumTextOrderedList.push({ EnumID: 58, EnumText: 'MWQM Plan Subsector Site Info' });\r\n        enumTextOrderedList.push({ EnumID: 59, EnumText: 'MWQM Site Start End Info' });\r\n        enumTextOrderedList.push({ EnumID: 60, EnumText: 'MWQM Subsector Info' });\r\n        enumTextOrderedList.push({ EnumID: 61, EnumText: 'Pollution Source Site Info' });\r\n        enumTextOrderedList.push({ EnumID: 62, EnumText: 'Pollution Source Site Observation Info' });\r\n        enumTextOrderedList.push({ EnumID: 63, EnumText: 'Hydrometric Rating Curve Info' });\r\n        enumTextOrderedList.push({ EnumID: 64, EnumText: 'Hydrometric Rating Curve Data Info' });\r\n        enumTextOrderedList.push({ EnumID: 65, EnumText: 'Tide Location Info' });\r\n        enumTextOrderedList.push({ EnumID: 66, EnumText: 'Tide Site Data Info' });\r\n        enumTextOrderedList.push({ EnumID: 67, EnumText: 'Use Of Site' });\r\n        enumTextOrderedList.push({ EnumID: 68, EnumText: 'Visual Plumes Scenario Info' });\r\n        enumTextOrderedList.push({ EnumID: 69, EnumText: 'Visual Plumes Scenario Ambient' });\r\n        enumTextOrderedList.push({ EnumID: 70, EnumText: 'Visual Plumes Scenario Results' });\r\n        enumTextOrderedList.push({ EnumID: 71, EnumText: 'Total file' });\r\n        enumTextOrderedList.push({ EnumID: 72, EnumText: 'Mike source is river' });\r\n        enumTextOrderedList.push({ EnumID: 73, EnumText: 'Mike source included' });\r\n        enumTextOrderedList.push({ EnumID: 74, EnumText: 'Mike source not included' });\r\n        enumTextOrderedList.push({ EnumID: 75, EnumText: 'Rain exceedance' });\r\n        enumTextOrderedList.push({ EnumID: 76, EnumText: 'Email distribution list' });\r\n        enumTextOrderedList.push({ EnumID: 77, EnumText: 'Open Data' });\r\n        enumTextOrderedList.push({ EnumID: 78, EnumText: 'Province Tools' });\r\n        enumTextOrderedList.push({ EnumID: 79, EnumText: 'Classification' });\r\n        enumTextOrderedList.push({ EnumID: 80, EnumText: 'Approved' });\r\n        enumTextOrderedList.push({ EnumID: 81, EnumText: 'Restricted' });\r\n        enumTextOrderedList.push({ EnumID: 82, EnumText: 'Prohibited' });\r\n        enumTextOrderedList.push({ EnumID: 83, EnumText: 'Conditionally Approved' });\r\n        enumTextOrderedList.push({ EnumID: 84, EnumText: 'Conditionally Restricted' });\r\n        enumTextOrderedList.push({ EnumID: 85, EnumText: 'Open Data national' });\r\n        enumTextOrderedList.push({ EnumID: 86, EnumText: 'Pollution source site Mike Scenario' });\r\n        enumTextOrderedList.push({ EnumID: 87, EnumText: 'Subsector tools' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function TVTypeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    TVTypeEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ShellSubComponentEnum } from 'src/app/enums/generated/ShellSubComponentEnum';\r\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { TVItem } from 'src/app/models/generated/db/TVItem.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SubPageService {\r\n\r\n  constructor(private appStateService: AppStateService) {\r\n  }\r\n\r\n  SetSubPage(tvItemModel: TVItemModel) {\r\n    this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: this.GetSubPage(tvItemModel.TVItem), CurrentTVItemID: tvItemModel.TVItem.TVItemID });\r\n  }\r\n\r\n  GetSubPage(tvItem: TVItem): ShellSubComponentEnum {\r\n    switch (<TVTypeEnum>tvItem.TVType) {\r\n      case TVTypeEnum.Area:\r\n        {\r\n          return ShellSubComponentEnum.Area;\r\n        }\r\n      case TVTypeEnum.Country:\r\n        {\r\n          return ShellSubComponentEnum.Country;\r\n        }\r\n      case TVTypeEnum.Municipality:\r\n        {\r\n          return ShellSubComponentEnum.Municipality;\r\n        }\r\n      case TVTypeEnum.MWQMRun:\r\n        {\r\n          return ShellSubComponentEnum.MWQMRun;\r\n        }\r\n      case TVTypeEnum.MWQMSite:\r\n        {\r\n          return ShellSubComponentEnum.MWQMSite;\r\n        }\r\n      case TVTypeEnum.PolSourceSite:\r\n        {\r\n          return ShellSubComponentEnum.PolSourceSite;\r\n        }\r\n      case TVTypeEnum.Province:\r\n        {\r\n          return ShellSubComponentEnum.Province;\r\n        }\r\n      case TVTypeEnum.Root:\r\n        {\r\n          return ShellSubComponentEnum.Root;\r\n        }\r\n      case TVTypeEnum.Sector:\r\n        {\r\n          return ShellSubComponentEnum.Sector;\r\n        }\r\n      case TVTypeEnum.Subsector:\r\n        {\r\n          return ShellSubComponentEnum.Subsector;\r\n        }\r\n      default:\r\n        {\r\n          return ShellSubComponentEnum.Root;\r\n        }\r\n    }\r\n  }\r\n}\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { PolSourceSiteEffectTerm } from 'src/app/models/generated/db/PolSourceSiteEffectTerm.model';\r\n\r\nexport class WebAllPolSourceSiteEffectTerms {\r\n    PolSourceSiteEffectTermList: PolSourceSiteEffectTerm[];\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-province-tvitem-list-item',\n  templateUrl: './province-tvitem-list-item.component.html',\n  styleUrls: ['./province-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProvinceTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() IsBreadCrumb: boolean = false;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n                {{ i + 1 }}&nbsp;-&nbsp;\n            </span>\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n                [{{ tvItemStatMapModel?.TVItem?.TVItemID }}]\n            </span>\n            {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n        </span>\n        <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n        <app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\n    </button>\n\n    <app-province-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-province-item-view>\n\n    <app-province-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-province-item-edit>\n\n    <app-province-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"!IsBreadCrumb && AppState?.DetailVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\"></app-province-tvitem-list-detail>\n</mat-list>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllHelpDocsService } from 'src/app/services/loaders/web-all-help-docs.service';\r\nimport { WebAllEmails } from 'src/app/models/generated/web/WebAllEmails.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllEmailsService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllHelpDocsServices: WebAllHelpDocsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllEmails(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllEmails) {\r\n          this.KeepWebAllEmails();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllEmails().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllEmails() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllEmails: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllEmails }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllEmails`;\r\n        return this.httpClient.get<WebAllEmails>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllEmails(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllHelpDocs();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllHelpDocs() {\r\n        this.webAllHelpDocsServices.DoWebAllHelpDocs(this.DoOther);\r\n    }\r\n    \r\n    private KeepWebAllEmails() {\r\n        this.UpdateWebAllEmails(this.appLoadedService.AppLoaded$?.getValue()?.WebAllEmails);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllHelpDocs);\r\n        if (this.DoOther) {\r\n            this.DoWebAllHelpDocs();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllEmails(x: WebAllEmails) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllEmails: x, });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllEmails()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { GetAreaSubComponentEnum } from 'src/app/enums/generated/AreaSubComponentEnum';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { GetAscDescEnum } from 'src/app/enums/generated/AscDescEnum';\nimport { WebAreaService } from 'src/app/services/loaders/web-area.service';\nimport { TVItemSortOrderService } from 'src/app/services/helpers/tvitem-sort-order.service';\nimport { StatCountService } from 'src/app/services/helpers/stat-count.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { ComponentShowService } from 'src/app/services/helpers/component-show.service';\nimport { GetSortOrderAngularEnum } from 'src/app/enums/generated/SortOrderAngularEnum';\n\n@Component({\n  selector: 'app-area-item',\n  templateUrl: './area-item.component.html',\n  styleUrls: ['./area-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaItemComponent implements OnInit, OnDestroy {\n  areaSubComponentEnum = GetAreaSubComponentEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  ascDescEnum = GetAscDescEnum();\n  sortOrderAngular = GetSortOrderAngularEnum();\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public webAreaService: WebAreaService,\n    public tvItemSortOrderService: TVItemSortOrderService,\n    public statCountService: StatCountService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public componentShowService: ComponentShowService) { }\n\n  ngOnInit(): void {\n    this.webAreaService.DoWebArea(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionArea(areaSubComponentEnum.Sectors)\"\n    (click)=\"componentShowService.ShowArea(areaSubComponentEnum.Sectors)\"\n    title=\"{{ appLanguageService.AppLanguage.AreaShowSectors[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.AreaSectors[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebArea?.TVItemModel, tvTypeEnum.Sector) }}&nbsp;&nbsp;\n        </span>\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.AreaSectors, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().AreaSectorsSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.AreaSectors, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().AreaSectorsSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionArea(areaSubComponentEnum.Files)\"\n    (click)=\"componentShowService.ShowArea(areaSubComponentEnum.Files)\"\n    title=\"{{ appLanguageService.AppLanguage.AreaShowFiles[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.AreaFiles[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;({{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebArea?.TVItemModel, tvTypeEnum.File) }}/\n            {{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebArea?.TVItemModel, tvTypeEnum.TotalFile) }})&nbsp;&nbsp;\n        </span>\n    </span>\n</button>\n\n<app-sector-tvitem-list-item *ngIf=\"appStateService.AppState$?.getValue()?.AreaSubComponent == areaSubComponentEnum.Sectors\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebArea?.TVItemModelSectorList\">\n</app-sector-tvitem-list-item>\n\n<app-file-list *ngIf=\"appStateService.AppState$?.getValue()?.AreaSubComponent == areaSubComponentEnum.Files\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVFileModelListList]=\"appLoadedService.AppLoaded$?.getValue()?.WebArea?.TVFileModelList\">\n</app-file-list>\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum MWQMRunSubComponentEnum {\r\n    Information = 1,\r\n    Files = 2,\r\n}\r\n\r\nexport function GetMWQMRunSubComponentEnum(): typeof MWQMRunSubComponentEnum\r\n{\r\n  return MWQMRunSubComponentEnum;\r\n}\r\n\r\nexport function MWQMRunSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Information' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Fichiers' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Information' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function MWQMRunSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    MWQMRunSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { EmailModel } from 'src/app/models/generated/web/EmailModel.model';\r\n\r\nexport class WebAllEmails {\r\n    EmailModelList: EmailModel[];\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is open data component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-open-data-item',\n  templateUrl: './open-data-item.component.html',\n  styleUrls: ['./open-data-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OpenDataItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy, Input, OnDestroy } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Subscription, timer } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { GetShellSubComponentEnum, ShellSubComponentEnum } from 'src/app/enums/generated/ShellSubComponentEnum';\r\nimport { GetMapSizeEnum, MapSizeEnum } from 'src/app/enums/generated/MapSizeEnum';\r\nimport { TopComponentEnum } from 'src/app/enums/generated/TopComponentEnum';\r\nimport { TogglesService } from 'src/app/services/helpers/toggles.service';\r\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\r\nimport { WebRootService } from 'src/app/services/loaders/web-root.service';\r\nimport { WebCountryService } from 'src/app/services/loaders/web-country.service';\r\nimport { WebProvinceService } from 'src/app/services/loaders/web-province.service';\r\nimport { WebAreaService } from 'src/app/services/loaders/web-area.service';\r\nimport { WebSectorService } from 'src/app/services/loaders/web-sector.service';\r\nimport { WebSubsectorService } from 'src/app/services/loaders/web-subsector.service';\r\nimport { WebMunicipalityService } from 'src/app/services/loaders/web-municipalty.service';\r\nimport { WebPolSourceSitesService } from 'src/app/services/loaders/web-pol-source-sites.service';\r\nimport { WebMWQMSitesService } from 'src/app/services/loaders/web-mwqm-sites.service';\r\nimport { WebMWQMRunsService } from 'src/app/services/loaders/web-mwqm-runs.service';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\n@Component({\r\n  selector: 'app-shell-item',\r\n  templateUrl: './shell-item.component.html',\r\n  styleUrls: ['./shell-item.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShellItemComponent implements OnInit, OnDestroy {\r\n  subMapSize: Subscription;\r\n\r\n  languageEnum = GetLanguageEnum();\r\n  shellSubComponentEnum = GetShellSubComponentEnum();\r\n  mapSizeEnum = GetMapSizeEnum();\r\n\r\n  constructor(public appStateService: AppStateService,\r\n    public appLoadedService: AppLoadedService,\r\n    public appLanguageService: AppLanguageService,\r\n    public togglesService: TogglesService,\r\n    private title: Title,\r\n    private webRootService: WebRootService,\r\n    private webCountryService: WebCountryService,\r\n    private webProvinceService: WebProvinceService,\r\n    private webAreaService: WebAreaService,\r\n    private webSectorService: WebSectorService,\r\n    private webSubsectorService: WebSubsectorService,\r\n    private webMunicipalityService: WebMunicipalityService,\r\n    private webMWQMSitesService: WebMWQMSitesService,\r\n    private webMWQMRunsService: WebMWQMRunsService,\r\n    private webPolSourceSitesService: WebPolSourceSitesService,\r\n    ) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.title.setTitle(this.appLanguageService.AppLanguage.ShellApplicationName[this.appStateService.AppState$?.getValue().Language]);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subMapSize ? this.subMapSize.unsubscribe() : null;\r\n  }\r\n\r\n  NavigateTo(tvItemStatMapModel: TVItemModel) {\r\n    if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.Area) {\r\n      this.webAreaService.DoWebArea(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Area, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.Country) {\r\n      this.webCountryService.DoWebCountry(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Country, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.Municipality) {\r\n      this.webMunicipalityService.DoWebMunicipality(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Municipality, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.MWQMRun) {\r\n      this.webMWQMRunsService.DoWebMWQMRuns(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.MWQMRun, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.MWQMSite) {\r\n      this.webMWQMSitesService.DoWebMWQMSites(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.MWQMSite, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.PolSourceSite) {\r\n      this.webPolSourceSitesService.DoWebPolSourceSites(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.PolSourceSite, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.Province) {\r\n      this.webProvinceService.DoWebProvince(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Province, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.Root) {\r\n      this.webRootService.DoWebRoot(true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Root, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.Sector) {\r\n      this.webSectorService.DoWebSector(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Sector, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else if (tvItemStatMapModel.TVItem.TVType == TVTypeEnum.Subsector) {\r\n      this.webSubsectorService.DoWebSubsector(tvItemStatMapModel.TVItem.TVItemID, true);\r\n      this.appStateService.UpdateAppState(<AppState>{ ShellSubComponent: ShellSubComponentEnum.Subsector, CurrentTVItemID: tvItemStatMapModel.TVItem.TVItemID });\r\n    }\r\n    else {\r\n      alert(`${TVTypeEnum[tvItemStatMapModel.TVItem.TVType]} - Not Implemented Yet. See search.component.ts -- NavigateTo Function`);\r\n    }\r\n  }\r\n\r\n  Home() {\r\n    this.appStateService.UpdateAppState(<AppState>{ TopComponent: TopComponentEnum.Home });\r\n  }\r\n\r\n  SetLanguage(language: LanguageEnum) {\r\n    this.appStateService.UpdateAppState(<AppState>{ Language: language });\r\n  }\r\n\r\n  SetMapSize(mapSize: MapSizeEnum) {\r\n    let MenuVisible: boolean = !(this.appStateService.AppState$.getValue().MenuVisible);\r\n    this.appStateService.UpdateAppState(<AppState>{ MapSize: mapSize, MenuVisible: MenuVisible });\r\n    if (!this.subMapSize) {\r\n      this.subMapSize = timer(300, 300).pipe(\r\n        tap(() => this.appStateService.UpdateAppState(<AppState>{ MapSize: mapSize, MenuVisible: !MenuVisible }))\r\n      ).subscribe();\r\n    }\r\n    else {\r\n      this.subMapSize.unsubscribe();\r\n      this.subMapSize = timer(300, 300).pipe(\r\n        tap(() => this.appStateService.UpdateAppState(<AppState>{ MapSize: mapSize, MenuVisible: !MenuVisible }))\r\n      ).subscribe();\r\n    }\r\n  }\r\n\r\n  ColorSelection(mapSize: MapSizeEnum) {\r\n    if (this.appStateService.AppState$.getValue().MapSize == mapSize) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  GetMapSizeClass(): string {\r\n    return MapSizeEnum[this.appStateService.AppState$?.getValue()?.MapSize];\r\n  }\r\n}\r\n","<mat-toolbar class=\"header\">\r\n    <span class=\"toolbar\">\r\n        <button mat-button\r\n            title=\"{{ appLanguageService.AppLanguage.ShellOpenHistoryMenu[appStateService.AppState$?.getValue().Language] }}\"\r\n            [matMenuTriggerFor]=\"historyMenu\">\r\n            <mat-icon>history</mat-icon>\r\n        </button>\r\n        <mat-menu #historyMenu=\"matMenu\">\r\n            <div class=\"menuWidth\">\r\n                <button mat-menu-item *ngFor=\"let history of appStateService.AppState$?.getValue()?.History\"\r\n                    (click)=\"NavigateTo(history)\">\r\n                    {{ history.TVItemLanguageList[appStateService.AppState$?.getValue().Language].TVText }}\r\n                </button>\r\n            </div>\r\n        </mat-menu>\r\n\r\n        <button (click)=\"togglesService.ToggleMenu()\" mat-button\r\n            title=\"{{ appLanguageService.AppLanguage.ShellOpenContextMenu[appStateService.AppState$?.getValue().Language] }}\">\r\n            <mat-icon>menu</mat-icon>\r\n        </button>\r\n        <button mat-button (click)=\"Home()\"\r\n            title=\"{{ appLanguageService.AppLanguage.ShellReturnHome[appStateService.AppState$?.getValue().Language] }}\">\r\n            {{ appLanguageService.AppLanguage.ShellApplicationName[appStateService.AppState$?.getValue().Language] }}\r\n        </button>\r\n        <span>\r\n            <app-search></app-search>\r\n        </span>\r\n    </span>\r\n    <span class=\"right\">\r\n        <ng-container *ngIf=\"!appLoadedService.AppLoaded$?.getValue()?.LoggedInContact?.HasInternetConnection\">\r\n            <button mat-button>\r\n                <mat-icon\r\n                    title=\"{{ appLanguageService.AppLanguage.ShellNoInternet[appStateService.AppState$?.getValue().Language] }}\">\r\n                    mobile_off</mat-icon>\r\n            </button>\r\n        </ng-container>\r\n\r\n        <button mat-button>\r\n            <mat-icon>account_circle</mat-icon>\r\n            <!-- {{ appLoadedService.AppLoaded$?.getValue()?.LoggedInContact?.LoginEmail }} -->\r\n        </button>\r\n        <button mat-button *ngIf=\"(appStateService.AppState$?.getValue()?.Language == languageEnum.fr)\"\r\n            (click)=\"SetLanguage(languageEnum.en)\">English</button>\r\n        <button mat-button *ngIf=\"(appStateService.AppState$?.getValue()?.Language == languageEnum.en)\"\r\n            (click)=\"SetLanguage(languageEnum.fr)\">Français</button>\r\n        <ng-container *ngIf=\"appLoadedService.AppLoaded$?.getValue()?.LoggedInContact?.HasInternetConnection\">\r\n            <button mat-button (click)=\"togglesService.ToggleMap()\"\r\n                title=\"{{ appLanguageService.AppLanguage.ShellShowMap[appStateService.AppState$?.getValue().Language] }}\">\r\n                <mat-icon>map</mat-icon>\r\n            </button>\r\n            <button mat-button\r\n                title=\"{{ appLanguageService.AppLanguage.ShellResizeMap[appStateService.AppState$?.getValue().Language] }}\"\r\n                *ngIf=\"(appStateService.AppState$?.getValue()?.MapVisible)\" [matMenuTriggerFor]=\"mapMenu\">\r\n                <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #mapMenu=\"matMenu\">\r\n                <h3>&nbsp;&nbsp;Map size</h3>\r\n                <button mat-menu-item [ngClass]=\"ColorSelection(mapSizeEnum.Size30)\"\r\n                    (click)=\"SetMapSize(mapSizeEnum.Size30)\">30 %</button>\r\n                <button mat-menu-item [ngClass]=\"ColorSelection(mapSizeEnum.Size40)\"\r\n                    (click)=\"SetMapSize(mapSizeEnum.Size40)\">40 %</button>\r\n                <button mat-menu-item [ngClass]=\"ColorSelection(mapSizeEnum.Size50)\"\r\n                    (click)=\"SetMapSize(mapSizeEnum.Size50)\">50 %</button>\r\n                <button mat-menu-item [ngClass]=\"ColorSelection(mapSizeEnum.Size60)\"\r\n                    (click)=\"SetMapSize(mapSizeEnum.Size60)\">60 %</button>\r\n                <button mat-menu-item [ngClass]=\"ColorSelection(mapSizeEnum.Size70)\"\r\n                    (click)=\"SetMapSize(mapSizeEnum.Size70)\">70 %</button>\r\n            </mat-menu>\r\n        </ng-container>\r\n    </span>\r\n</mat-toolbar>\r\n\r\n<mat-sidenav-container class=\"container\">\r\n    <mat-sidenav class=\"sidenav-left\" #leftSideNav [opened]=\"appStateService.AppState$?.getValue()?.MenuVisible\"\r\n        mode=\"side\">\r\n        <app-sidenav-menu [AppState]=\"appStateService.AppState$?.getValue()\"></app-sidenav-menu>\r\n    </mat-sidenav>\r\n    <mat-sidenav *ngIf=\"appLoadedService.AppLoaded$?.getValue()?.LoggedInContact?.HasInternetConnection\" [ngClass]=\"GetMapSizeClass()\"\r\n        #rightSideNav [opened]=\"appStateService.AppState$?.getValue()?.MapVisible\" mode=\"side\" position=\"end\">\r\n        <app-map-item [AppState]=\"appStateService.AppState$?.getValue()\"></app-map-item>\r\n    </mat-sidenav>\r\n    <span *ngIf=\"(appStateService.AppState$ | async).Working\">\r\n\r\n    </span>\r\n    <app-error [Error]=\"(appStateService.AppState$ | async).Error\"></app-error>\r\n    <app-bread-crumb [AppState]=\"appStateService.AppState$?.getValue()\"></app-bread-crumb>\r\n\r\n    <div class=\"margin10\">\r\n        <app-root-item *ngIf=\"appStateService.AppState$?.getValue().ShellSubComponent == shellSubComponentEnum.Root\">\r\n        </app-root-item>\r\n        <app-country-item\r\n            *ngIf=\"appStateService.AppState$?.getValue().ShellSubComponent == shellSubComponentEnum.Country\">\r\n        </app-country-item>\r\n        <app-province-item\r\n            *ngIf=\"appStateService.AppState$?.getValue().ShellSubComponent == shellSubComponentEnum.Province\">\r\n        </app-province-item>\r\n        <app-area-item *ngIf=\"appStateService.AppState$?.getValue().ShellSubComponent == shellSubComponentEnum.Area\">\r\n        </app-area-item>\r\n        <app-sector-item\r\n            *ngIf=\"appStateService.AppState$?.getValue().ShellSubComponent == shellSubComponentEnum.Sector\">\r\n        </app-sector-item>\r\n        <app-subsector-item\r\n            *ngIf=\"appStateService.AppState$?.getValue().ShellSubComponent == shellSubComponentEnum.Subsector\">\r\n        </app-subsector-item>\r\n        <app-municipality-item\r\n            *ngIf=\"appStateService.AppState$?.getValue().ShellSubComponent == shellSubComponentEnum.Municipality\">\r\n        </app-municipality-item>\r\n    </div>\r\n\r\n\r\n    <mat-toolbar class=\"footer\">\r\n        <app-footer></app-footer>\r\n    </mat-toolbar>\r\n</mat-sidenav-container>","import { Injectable } from '@angular/core';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ShowTVItemService {\r\n    constructor(private appStateService: AppStateService) {\r\n\r\n    }\r\n\r\n    ToggleShowTVItem(tvItemModel: TVItemModel): void {\r\n        if (this.TVItemVisible(tvItemModel)) {\r\n            this.RemoveShowTVItem(tvItemModel);\r\n        }\r\n        else {\r\n            this.AddShowTVItem(tvItemModel);\r\n        }\r\n    }\r\n\r\n    TVItemVisible(tvItemModel: TVItemModel): boolean {\r\n        let tvItemModelExist: TVItemModel[] = this.appStateService.AppState$.getValue().ShowTVItemModelList.filter(c => c == tvItemModel);\r\n        if (tvItemModelExist != undefined && tvItemModelExist.length > 0) {\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private AddShowTVItem(tvItemModel: TVItemModel): void {\r\n        let tvItemModelExist: TVItemModel[] = this.appStateService.AppState$.getValue().ShowTVItemModelList.filter(c => c.TVItem.TVItemID == tvItemModel.TVItem.TVItemID);\r\n        if (!(tvItemModelExist != undefined && tvItemModelExist.length > 0)) {\r\n            this.appStateService.AppState$.getValue().ShowTVItemModelList.push(tvItemModel);\r\n        }\r\n    }\r\n\r\n    private RemoveShowTVItem(tvItemModel: TVItemModel): void {\r\n        let tvItemModelExist: TVItemModel[] = this.appStateService.AppState$.getValue().ShowTVItemModelList.filter(c => c == tvItemModel);\r\n        if ((tvItemModelExist != undefined && tvItemModelExist.length > 0)) {\r\n            let ShowNewTVItemModelList: TVItemModel[] = this.appStateService.AppState$.getValue().ShowTVItemModelList;\r\n            let count: number = ShowNewTVItemModelList.length;\r\n            for (let i = 0; i < count; i++) {\r\n                if (ShowNewTVItemModelList[i] === tvItemModel) {\r\n                    ShowNewTVItemModelList.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.appStateService.UpdateAppState(<AppState>{ ShowTVItemModelList: ShowNewTVItemModelList });\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum TopComponentEnum {\r\n    Home = 1,\r\n    Shell = 2,\r\n}\r\n\r\nexport function GetTopComponentEnum(): typeof TopComponentEnum\r\n{\r\n  return TopComponentEnum;\r\n}\r\n\r\nexport function TopComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Home (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Shell (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Home' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Shell' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function TopComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    TopComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-pol-source-site-tvitem-list-item',\n  templateUrl: './pol-source-site-tvitem-list-item.component.html',\n  styleUrls: ['./pol-source-site-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PolSourceSiteTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() IsBreadCrumb: boolean = false;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n                {{ i + 1 }}&nbsp;-&nbsp;\n            </span>\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n                [{{ tvItemStatMapModel.TVItem.TVItemID }}]\n            </span>\n            {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n        </span>\n        <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n        <app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\n    </button>\n\n    <app-pol-source-site-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-pol-source-site-item-view>\n\n    <app-pol-source-site-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-pol-source-site-item-edit>\n\n    <app-pol-source-site-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"AppState?.DetailVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\">\n    </app-pol-source-site-tvitem-list-detail>\n</mat-list>","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { MWQMRunModel } from 'src/app/models/generated/web/MWQMRunModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebMWQMRuns {\r\n    MWQMRunModelList: MWQMRunModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelParentList: TVItemModel[];\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FooterComponent implements OnInit, OnDestroy {\n  year: number = new Date().getFullYear();\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  ngOnInit(): void {\n }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span>© {{ year }} - {{ appLanguageService.AppLanguage.ShellApplicationName[appStateService.AppState$?.getValue().Language] }}\n    </span>","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: lightcyan;\">This is the mwqm run component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebMWQMRunsService } from 'src/app/services/loaders/web-mwqm-runs.service';\n\n@Component({\n  selector: 'app-mwqm-run-item-edit',\n  templateUrl: './mwqm-run-item-edit.component.html',\n  styleUrls: ['./mwqm-run-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMRunItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webMWQMRunsService: WebMWQMRunsService) { }\n\n  ngOnInit(): void {\n    this.webMWQMRunsService.DoWebMWQMRuns(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { MapInfoDrawTypeEnum } from 'src/app/enums/generated/MapInfoDrawTypeEnum';\r\nimport { SubsectorSubComponentEnum } from 'src/app/enums/generated/SubsectorSubComponentEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { MapInfoModel } from 'src/app/models/generated/web/MapInfoModel.model';\r\nimport { StatMWQMSite } from 'src/app/models/generated/web/StatMWQMSite.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { MapHelperService } from 'src/app/services/map/map-helper.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapMarkersService {\r\n\r\n  tvItemStatMapModelList: TVItemModel[];\r\n\r\n  constructor(private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private mapHelperService: MapHelperService) {\r\n  }\r\n\r\n  DrawMarkers(tvItemStatMapModelList: TVItemModel[]) {\r\n    this.tvItemStatMapModelList = tvItemStatMapModelList;\r\n\r\n    let map: google.maps.Map = this.appLoadedService.AppLoaded$.getValue().Map;\r\n\r\n    let markerList: google.maps.Marker[] = [];\r\n\r\n    let count: number = 0;\r\n    for (let tvItemStatMapModel of tvItemStatMapModelList) {\r\n      for (let mapInfoModel of tvItemStatMapModel.MapInfoModelList) {\r\n        if (mapInfoModel.MapInfo?.MapInfoDrawType == MapInfoDrawTypeEnum.Point) {\r\n          let mark: google.maps.Marker = new google.maps.Marker();\r\n\r\n          count += 1;\r\n\r\n          let position: google.maps.LatLngLiteral = { lat: mapInfoModel.MapInfoPointList[0].Lat, lng: mapInfoModel.MapInfoPointList[0].Lng };\r\n          let label: google.maps.MarkerLabel = { color: '00ff00', fontWeight: 'bold', text: count.toString() };\r\n          let title = tvItemStatMapModel.TVItemLanguageList[this.appStateService.AppState$.getValue().Language].TVText;\r\n          let info = tvItemStatMapModel.TVItemLanguageList[this.appStateService.AppState$.getValue().Language].TVText;\r\n          let path: string = this.appStateService.AppState$.getValue().MapMarkerPathCharacters[3]; // 3 characters\r\n          let strokeColor: string = this.mapHelperService.GetMapMarkerColor(mapInfoModel.MapInfo.TVType);\r\n          let fillColor: string = this.mapHelperService.GetMapMarkerColor(mapInfoModel.MapInfo.TVType);\r\n\r\n          if (label.text) {\r\n            if (label.text.length < 6) {\r\n              path = this.appStateService.AppState$.getValue().MapMarkerPathCharacters[label.text.length];\r\n            }\r\n          }\r\n\r\n          // if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.MWQMSites) {\r\n          //   let statMWQMSiteList: StatMWQMSite[] = this.appLoadedService.AppLoaded$.getValue()?.StatMWQMSiteList?.filter(c => c.TVItemModel.TVItem.TVItemID == tvItemStatMapModel.TVItem.TVItemID);\r\n\r\n          //   if (statMWQMSiteList && statMWQMSiteList.length > 0) {\r\n          //     strokeColor = statMWQMSiteList[0]?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.hexColor;\r\n          //     fillColor = statMWQMSiteList[0]?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.hexColor;\r\n          //     label.text = `${label.text} ${statMWQMSiteList[0]?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.letter}`;\r\n          //   }\r\n          // }\r\n\r\n          let options: google.maps.MarkerOptions = {\r\n            position: position,\r\n            label: label,\r\n            title: title,\r\n            icon: {\r\n              path: path,\r\n              strokeColor: strokeColor,\r\n              strokeOpacity: 1,\r\n              strokeWeight: 1,\r\n              fillColor: fillColor,\r\n              fillOpacity: 0.8,\r\n              rotation: 0,\r\n              scale: 0.8,\r\n              labelOrigin: new google.maps.Point(0, -18),\r\n            },\r\n            map: map,\r\n            draggable: this.appStateService.AppState$.getValue().EditMapVisible,\r\n            zIndex: mapInfoModel.MapInfo.MapInfoID,\r\n          };\r\n\r\n          mark = new google.maps.Marker(options);\r\n\r\n          if (this.appStateService.AppState$.getValue().EditMapVisible) {\r\n            google.maps.event.addListener(mark, \"mousemove\", (evt: google.maps.MouseEvent) => {\r\n              if (!this.appStateService.AppState$.getValue().EditMapChanged) {\r\n                (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (evt.latLng.lat().toString().substring(0, 8) +\r\n                  ' ' + evt.latLng.lng().toString().substring(0, 8));\r\n              }\r\n              else{\r\n                (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (this.appStateService.AppState$.getValue().MarkerDragStartPos.lat().toFixed(6) +\r\n                ' ' + this.appStateService.AppState$.getValue().MarkerDragStartPos.lng().toFixed(6));\r\n              }\r\n            });\r\n\r\n            google.maps.event.addListener(mark, 'dragstart', () => {\r\n              this.appStateService.UpdateAppState(<AppState>{\r\n                MarkerTVItemID: mapInfoModel.MapInfo.TVItemID,\r\n                MarkerMapInfoID: mapInfoModel.MapInfo.MapInfoID,\r\n                MarkerDragStartPos: this.GetMapInfoCoord(mapInfoModel),\r\n                EditMapChanged: true,\r\n                MarkerLabel: mark.getLabel().text,\r\n              });\r\n              (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (this.appStateService.AppState$.getValue().MarkerDragStartPos.lat().toFixed(6) +\r\n                ' ' + this.appStateService.AppState$.getValue().MarkerDragStartPos.lng().toFixed(6));\r\n            });\r\n            google.maps.event.addListener(mark, 'drag', () => {\r\n              (<HTMLInputElement>document.getElementById(\"ChangedLatLng\")).value = (mark.getPosition().lat().toFixed(6) +\r\n                ' ' + mark.getPosition().lng().toFixed(6));\r\n            });\r\n            google.maps.event.addListener(mark, 'dragend', () => {\r\n              this.appStateService.UpdateAppState(<AppState>{ MarkerDragEndPos: mark.getPosition() });\r\n              (<HTMLInputElement>document.getElementById(\"ChangedLatLng\")).value = (mark.getPosition().lat().toFixed(6) +\r\n                ' ' + mark.getPosition().lng().toFixed(6));\r\n            });\r\n          }\r\n          markerList.push(mark);\r\n\r\n        }\r\n      };\r\n    }\r\n\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ GoogleMarkerListMVC: new google.maps.MVCArray<google.maps.Marker>(markerList) });\r\n  }\r\n\r\n  GetMapInfoCoord(mapInfoModel: MapInfoModel): google.maps.LatLng {\r\n    return new google.maps.LatLng(mapInfoModel.MapInfoPointList[0].Lat, mapInfoModel.MapInfoPointList[0].Lng);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MapInfoDrawTypeEnum } from 'src/app/enums/generated/MapInfoDrawTypeEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { MapMarkersService } from 'src/app/services/map/map-markers.service';\r\nimport { MapPolygonsService } from 'src/app/services/map/map-polygons.service';\r\nimport { MapPolylinesService } from 'src/app/services/map/map-polylines.service';\r\nimport { MapHelperService } from './map-helper.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n  map: google.maps.Map;\r\n\r\n  constructor(private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private mapMarkersService: MapMarkersService,\r\n    private mapPolygonsService: MapPolygonsService,\r\n    private mapPolylinesService: MapPolylinesService,\r\n    private mapHelperService: MapHelperService) {\r\n  }\r\n\r\n  MapMarkerSaveChanges()\r\n  {\r\n    let coordText: string = (<HTMLInputElement>document.getElementById('ChangedLatLng')).value;\r\n    let lat: number = parseFloat(coordText.substring(0, coordText.indexOf(' ')));\r\n    let lng: number = parseFloat(coordText.substring(coordText.indexOf(' ')));\r\n    alert(`${ this.appStateService.AppState$.getValue()?.MarkerTVItemID } ||| ${ this.appStateService.AppState$.getValue()?.MarkerMapInfoID } ||| ${ lat } ${ lng }`);\r\n\r\n    this.appStateService.UpdateAppState(<AppState>{ MarkerLabel: '', EditMapChanged: false, MarkerMapInfoID: 0, MarkerDragStartPos: null, MarkerDragEndPos: null });\r\n  }\r\n\r\n  ClearMap() {\r\n    let length: number = this.appLoadedService.AppLoaded$.getValue()?.GoogleCrossPolylineListMVC?.getLength();\r\n    for (let i = 0; i < length; i++) {\r\n      this.appLoadedService.AppLoaded$.getValue().GoogleCrossPolylineListMVC.getAt(i).setMap(null);\r\n    }\r\n\r\n    length = this.appLoadedService.AppLoaded$.getValue()?.GoogleMarkerListMVC?.getLength();\r\n    for (let i = 0; i < length; i++) {\r\n      this.appLoadedService.AppLoaded$.getValue().GoogleMarkerListMVC.getAt(i).setMap(null);\r\n    }\r\n\r\n    length = this.appLoadedService.AppLoaded$.getValue()?.GooglePolygonListMVC?.getLength();\r\n    for (let i = 0; i < length; i++) {\r\n      this.appLoadedService.AppLoaded$.getValue().GooglePolygonListMVC.getAt(i).setMap(null);\r\n    }\r\n\r\n    length = this.appLoadedService.AppLoaded$.getValue()?.GooglePolylineListMVC?.getLength();\r\n    for (let i = 0; i < length; i++) {\r\n      this.appLoadedService.AppLoaded$.getValue().GooglePolylineListMVC.getAt(i).setMap(null);\r\n    }\r\n\r\n    this.appLoadedService.AppLoaded$.getValue()?.GoogleMarkerListMVC?.clear();\r\n    this.appLoadedService.AppLoaded$.getValue()?.GooglePolygonListMVC?.clear();\r\n    this.appLoadedService.AppLoaded$.getValue()?.GooglePolylineListMVC?.clear();\r\n\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      GoogleMarkerListMVC: new google.maps.MVCArray<google.maps.Marker>([]),\r\n      GooglePolygonListMVC: new google.maps.MVCArray<google.maps.Polygon>([]),\r\n      GooglePolylineListMVC: new google.maps.MVCArray<google.maps.Polyline>([]),\r\n    });\r\n  }\r\n\r\n  DrawObjects(tvItemStatMapModelList: TVItemModel[]) {\r\n    this.mapMarkersService.DrawMarkers(tvItemStatMapModelList);\r\n    this.mapPolygonsService.DrawPolygons(tvItemStatMapModelList);\r\n    this.mapPolylinesService.DrawPolylines(tvItemStatMapModelList);\r\n    this.mapHelperService.FitBounds();\r\n  }\r\n\r\n  SetupMap(mapElement: any) {\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      Map: new google.maps.Map(\r\n        mapElement.nativeElement,\r\n        {\r\n          center: new google.maps.LatLng(46.291624, -64.722614),\r\n          zoom: 10,\r\n          mapTypeId: google.maps.MapTypeId.HYBRID,\r\n        }\r\n      ),\r\n      GoogleCrossPolylineListMVC: new google.maps.MVCArray<google.maps.Polyline>([]),\r\n      GoogleMarkerListMVC: new google.maps.MVCArray<google.maps.Marker>([]),\r\n      GooglePolygonListMVC: new google.maps.MVCArray<google.maps.Polygon>([]),\r\n      GooglePolylineListMVC: new google.maps.MVCArray<google.maps.Polyline>([]),\r\n      MarkerOriginal: null,\r\n      MarkerChanged: null,\r\n    });\r\n\r\n    this.appLoadedService.AppLoaded$.getValue().Map.controls[google.maps.ControlPosition.TOP_CENTER].push(document.getElementById(\"MapTopCenterID\"));\r\n\r\n    google.maps.event.addListener(this.appLoadedService.AppLoaded$.getValue().Map, \"mousemove\", (evt: google.maps.MouseEvent) => {\r\n      if (!this.appStateService.AppState$.getValue().EditMapChanged) {\r\n        (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (evt.latLng.lat().toString().substring(0, 8) +\r\n          ' ' + evt.latLng.lng().toString().substring(0, 8));\r\n      }\r\n      else{\r\n        (<HTMLInputElement>document.getElementById(\"CurrentLatLng\")).value = (this.appStateService.AppState$.getValue().MarkerDragStartPos.lat().toFixed(6) +\r\n        ' ' + this.appStateService.AppState$.getValue().MarkerDragStartPos.lng().toFixed(6));\r\n      }\r\n    });\r\n\r\n\r\n\r\n  }\r\n\r\n  ShowItem(tvItemStatMapModel: TVItemModel, event: Event) {\r\n    let length: number = this.appLoadedService.AppLoaded$.getValue().GoogleCrossPolylineListMVC.getLength();\r\n    for (let i = 0; i < length; i++) {\r\n      this.appLoadedService.AppLoaded$.getValue().GoogleCrossPolylineListMVC.getAt(i).setMap(null);\r\n    }\r\n\r\n    let CurrentPoint: google.maps.LatLng;\r\n\r\n    length = tvItemStatMapModel.MapInfoModelList.length;\r\n    for (let i = 0; i < length; i++) {\r\n      if (tvItemStatMapModel.MapInfoModelList[i].MapInfo.MapInfoDrawType == MapInfoDrawTypeEnum.Point) {\r\n        CurrentPoint = new google.maps.LatLng(tvItemStatMapModel.MapInfoModelList[i].MapInfoPointList[0].Lat, tvItemStatMapModel.MapInfoModelList[i].MapInfoPointList[0].Lng);\r\n        break;\r\n      }\r\n    }\r\n\r\n    let CurrentBound: google.maps.LatLngBounds = this.appLoadedService.AppLoaded$.getValue().Map.getBounds()\r\n    let sw = CurrentBound.getSouthWest();\r\n    let ne = CurrentBound.getNorthEast();\r\n\r\n    let CoordList = [];\r\n    CoordList.push(new google.maps.LatLng(sw.lat(), sw.lng()));\r\n    CoordList.push(new google.maps.LatLng(CurrentPoint.lat(), CurrentPoint.lng()));\r\n    CoordList.push(new google.maps.LatLng(sw.lat(), ne.lng()));\r\n    let polyl1: google.maps.Polyline = new google.maps.Polyline({\r\n      path: CoordList,\r\n      strokeColor: '#FCF',\r\n      strokeOpacity: 0.5,\r\n      strokeWeight: 2,\r\n      map: this.appLoadedService.AppLoaded$.getValue().Map,\r\n      zIndex: 200,\r\n    });\r\n\r\n    this.appLoadedService.AppLoaded$.getValue().GoogleCrossPolylineListMVC.push(polyl1);\r\n    let CoordList2 = [];\r\n    CoordList2.push(new google.maps.LatLng(ne.lat(), sw.lng()));\r\n    CoordList2.push(new google.maps.LatLng(CurrentPoint.lat(), CurrentPoint.lng()));\r\n    CoordList2.push(new google.maps.LatLng(ne.lat(), ne.lng()));\r\n    let polyl2: google.maps.Polyline = new google.maps.Polyline({\r\n      path: CoordList2,\r\n      strokeColor: '#FCF',\r\n      strokeOpacity: 0.5,\r\n      strokeWeight: 2,\r\n      map: this.appLoadedService.AppLoaded$.getValue().Map,\r\n      zIndex: 200,\r\n    });\r\n\r\n    this.appLoadedService.AppLoaded$.getValue().GoogleCrossPolylineListMVC.push(polyl2);\r\n  }\r\n\r\n}\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { MWQMAnalysisReportParameter } from 'src/app/models/generated/db/MWQMAnalysisReportParameter.model';\r\nimport { MWQMSubsector } from 'src/app/models/generated/db/MWQMSubsector.model';\r\nimport { MWQMSubsectorLanguage } from 'src/app/models/generated/db/MWQMSubsectorLanguage.model';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { UseOfSite } from 'src/app/models/generated/db/UseOfSite.model';\r\n\r\nexport class WebSubsector {\r\n    MWQMAnalysisReportParameterList: MWQMAnalysisReportParameter[];\r\n    MWQMSubsector: MWQMSubsector;\r\n    MWQMSubsectorLanguageList: MWQMSubsectorLanguage[];\r\n    TVFileModelList: TVFileModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelClassificationList: TVItemModel[];\r\n    TVItemModelParentList: TVItemModel[];\r\n    UseOfSiteList: UseOfSite[];\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ContactNameService } from 'src/app/services/helpers/contact-name.service';\n\n@Component({\n  selector: 'app-last-udpate-tv-file-model',\n  templateUrl: './last-update-tvfilemodel.component.html',\n  styleUrls: ['./last-update-tvfilemodel.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LastUpdateTVFileModelComponent implements OnInit, OnDestroy {\n  @Input() TVFileModel: TVFileModel;\n\n  languageEnum = GetLanguageEnum();\n\n  constructor(public appStateService: AppStateService,\n    public contactNameService: ContactNameService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<span class=\"last-update\">\n    &nbsp;&nbsp;{{ contactNameService.GetContactNameTVFileModel(TVFileModel) }}&nbsp;&nbsp;\n</span>\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVFileService } from 'src/app/services/helpers/show-tvfile.service';\n\n@Component({\n  selector: 'app-tvfile-menu',\n  templateUrl: './tvfile-menu.component.html',\n  styleUrls: ['./tvfile-menu.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TVFileMenuComponent implements OnInit, OnDestroy {\n  @Input() TVFileModel: TVFileModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public showTVFileService: ShowTVFileService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<button mat-button class=\"{{ showTVFileService.TVFileVisible(TVFileModel) ? 'selected' : '' }}\"\n    (click)=\"showTVFileService.ToggleShowTVFile(TVFileModel)\" title=\"show more information for viewing or editing\">\n    <mat-icon>more_vert</mat-icon>\n</button>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { Contact } from 'src/app/models/generated/db/Contact.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\ndeclare var window: any;\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoggedInContactService {\r\n    private sub: Subscription;\r\n    private GoogleJSLoaded;\r\n\r\n    languageEnum = GetLanguageEnum();\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService) {\r\n    }\r\n\r\n    DoLoggedInContact() {\r\n        this.sub ? this.sub.unsubscribe() : null;   \r\n        this.sub = this.GetLoggedInContact().subscribe();\r\n    }\r\n    \r\n    DoGoogleJS() {\r\n        if (this.appStateService.AppState$.getValue()?.GoogleJSLoaded) {\r\n            // just keep the Google JS we already have in memory\r\n        }\r\n        else {\r\n            this.LoadGoogleJS();\r\n        }\r\n    }\r\n\r\n    private LoadGoogleJS() {\r\n        if (!this.GoogleJSLoaded) { // load once\r\n\r\n            if (this.appLoadedService.AppLoaded$?.getValue()?.LoggedInContact) {\r\n                this.GoogleJSLoaded = new Promise((resolve) => {\r\n                    window['__onGapiLoaded'] = (ev) => {\r\n                        console.log('gapi loaded');\r\n                        resolve(window.gapi);\r\n                    }\r\n                    console.log('loading..')\r\n                    const node = document.createElement('script');\r\n                    if (this.appLoadedService.AppLoaded$?.getValue()?.LoggedInContact?.HasInternetConnection) {\r\n                        node.src = `https://maps.googleapis.com/maps/api/js?key=${this.appLoadedService.AppLoaded$?.getValue()?.LoggedInContact?.GoogleMapKeyHash}&callback=__onGapiLoaded`;\r\n                    }\r\n                    else {\r\n                        node.src = `${this.appLoadedService.BaseApiUrl}${this.languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/DownloadOther/GoogleMap.js`;\r\n                    }\r\n                    node.type = 'text/javascript';\r\n                    document.getElementsByTagName('head')[0].appendChild(node);\r\n                    this.appStateService.UpdateAppState(<AppState>{ GoogleJSLoaded: true });\r\n                });\r\n            }\r\n        }\r\n\r\n        return this.GoogleJSLoaded;\r\n    }\r\n\r\n    private GetLoggedInContact() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ LoggedInContact: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{ Working: true });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/LoggedInContact`;\r\n        return this.httpClient.get<Contact>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateLoggedInContact(x);\r\n                console.debug(x);\r\n                if (this.appLoadedService.AppLoaded$?.getValue()?.LoggedInContact?.HasInternetConnection) {\r\n                    this.DoGoogleJS();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private UpdateLoggedInContact(x: Contact) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ LoggedInContact: x, });\r\n        this.appStateService.UpdateAppState(<AppState>{ Working: false });\r\n    }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebPolSourceSites } from 'src/app/models/generated/web/WebPolSourceSites.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\nimport { WebDrogueRunsService } from 'src/app/services/loaders/web-drogue-runs.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebPolSourceSitesService {\r\n    private TVItemID: number;\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n  \r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webDrogueRunsService: WebDrogueRunsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService,\r\n        private historyService: HistoryService) {\r\n    }\r\n\r\n    DoWebPolSourceSites(TVItemID: number, DoOther: boolean) {\r\n        this.TVItemID = TVItemID;\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebPolSourceSites) {\r\n          this.KeepWebPolSourceSites();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebPolSourceSites().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebPolSourceSites() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebPolSourceSites: {},\r\n        });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebPolSourceSites }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebPolSourceSites/${this.TVItemID}`;\r\n        return this.httpClient.get<WebPolSourceSites>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebPolSourceSites(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebDrogueRuns();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebDrogueRuns() {\r\n        this.webDrogueRunsService.DoWebDrogueRuns(this.TVItemID, this.DoOther);\r\n    }\r\n\r\n    private KeepWebPolSourceSites() {\r\n        this.UpdateWebPolSourceSites(this.appLoadedService.AppLoaded$?.getValue()?.WebPolSourceSites);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebPolSourceSites);\r\n        if (this.DoOther) {\r\n            this.DoWebDrogueRuns();\r\n        }\r\n    }\r\n\r\n    private UpdateWebPolSourceSites(x: WebPolSourceSites) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebPolSourceSites: x,\r\n        });\r\n\r\n        this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebPolSourceSites?.TVItemModel);\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebSubsector()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebPolSourceSites()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum SampleTypeEnum {\r\n    DailyDuplicate = 101,\r\n    Infrastructure = 102,\r\n    IntertechDuplicate = 103,\r\n    IntertechRead = 104,\r\n    RainCMP = 105,\r\n    RainRun = 106,\r\n    ReopeningEmergencyRain = 107,\r\n    ReopeningSpill = 108,\r\n    Routine = 109,\r\n    Sanitary = 110,\r\n    Study = 111,\r\n    Sediment = 112,\r\n    Bivalve = 113,\r\n}\r\n\r\nexport function GetSampleTypeEnum(): typeof SampleTypeEnum\r\n{\r\n  return SampleTypeEnum;\r\n}\r\n\r\nexport function SampleTypeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 101, EnumText: 'Daily duplicate (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 102, EnumText: 'Infrastructure (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 103, EnumText: 'Intertech duplicate (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 104, EnumText: 'Intertech read (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 105, EnumText: 'Rain CMP (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 106, EnumText: 'Rain run (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 107, EnumText: 'Reopening emergency rain (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 108, EnumText: 'Reopening spill (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 109, EnumText: 'Routine (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 110, EnumText: 'Sanitary (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 111, EnumText: 'Study (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 112, EnumText: 'Sediment (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 113, EnumText: 'Bivalve (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 101, EnumText: 'Daily duplicate' });\r\n        enumTextOrderedList.push({ EnumID: 102, EnumText: 'Infrastructure' });\r\n        enumTextOrderedList.push({ EnumID: 103, EnumText: 'Intertech duplicate' });\r\n        enumTextOrderedList.push({ EnumID: 104, EnumText: 'Intertech read' });\r\n        enumTextOrderedList.push({ EnumID: 105, EnumText: 'Rain CMP' });\r\n        enumTextOrderedList.push({ EnumID: 106, EnumText: 'Rain run' });\r\n        enumTextOrderedList.push({ EnumID: 107, EnumText: 'Reopening emergency rain' });\r\n        enumTextOrderedList.push({ EnumID: 108, EnumText: 'Reopening spill' });\r\n        enumTextOrderedList.push({ EnumID: 109, EnumText: 'Routine' });\r\n        enumTextOrderedList.push({ EnumID: 110, EnumText: 'Sanitary' });\r\n        enumTextOrderedList.push({ EnumID: 111, EnumText: 'Study' });\r\n        enumTextOrderedList.push({ EnumID: 112, EnumText: 'Sediment' });\r\n        enumTextOrderedList.push({ EnumID: 113, EnumText: 'Bivalve' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function SampleTypeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    SampleTypeEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { SubsectorSubComponentEnum } from 'src/app/enums/generated/SubsectorSubComponentEnum';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { MWQMSample } from 'src/app/models/generated/db/MWQMSample.model';\nimport { MWQMSiteModel } from 'src/app/models/generated/web/MWQMSiteModel.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { DateFormatService } from 'src/app/services/helpers/date-format.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { WebMWQMSamplesService } from 'src/app/services/loaders/web-mwqm-samples.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-mwqm-site-tvitem-list-item',\n  templateUrl: './mwqm-site-tvitem-list-item.component.html',\n  styleUrls: ['./mwqm-site-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMSiteTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() AppState: AppState;\n  @Input() IsBreadCrumb: boolean = false;\n\n  languageEnum = GetLanguageEnum();\n  tvTypeEnum = GetTVTypeEnum();\n\n  MWQMSampleList: MWQMSample[];\n  Year: number = 0;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public dateFormatService: DateFormatService,\n    public webMWQMSamplesService: WebMWQMSamplesService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n  SetStatRunsForDetail(runs: number) {\n    this.appStateService.UpdateAppState(<AppState>{ StatRunsForDetail: runs, Working: false });\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\n\n    let mwqmSiteModel: MWQMSiteModel[] = this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList;\n\n    if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\n      if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.MWQMSites) {\n        this.mapService.ClearMap();\n        this.mapService.DrawObjects([\n          //...this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList,\n          //...[this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.TVItemModel\n        ]);\n      }\n    }\n\n  }\n}\n\n","<mat-list>\n    <span>{{\n        appLanguageService.AppLanguage.StatSampleNumber[this.appStateService.AppState$.getValue().Language]\n        }}:&nbsp;</span>\n\n    <mat-button-toggle-group>\n        <mat-button-toggle (click)=\"SetStatRunsForDetail(10)\"\n            [ngClass]=\"(AppState.StatRunsForDetail == 10) ? 'selected' : ''\">\n            10\n        </mat-button-toggle>\n        <mat-button-toggle (click)=\"SetStatRunsForDetail(15)\"\n            [ngClass]=\"(AppState.StatRunsForDetail == 15) ? 'selected' : ''\">\n            15\n        </mat-button-toggle>\n        <mat-button-toggle (click)=\"SetStatRunsForDetail(20)\"\n            [ngClass]=\"(AppState.StatRunsForDetail == 20) ? 'selected' : ''\">\n            20\n        </mat-button-toggle>\n        <mat-button-toggle (click)=\"SetStatRunsForDetail(25)\"\n            [ngClass]=\"(AppState.StatRunsForDetail == 25) ? 'selected' : ''\">\n            25\n        </mat-button-toggle>\n        <mat-button-toggle (click)=\"SetStatRunsForDetail(30)\"\n            [ngClass]=\"(AppState.StatRunsForDetail == 30) ? 'selected' : ''\">\n            30\n        </mat-button-toggle>\n        <mat-button-toggle (click)=\"SetStatRunsForDetail(35)\"\n            [ngClass]=\"(AppState.StatRunsForDetail == 35) ? 'selected' : ''\">\n            35\n        </mat-button-toggle>\n        <mat-button-toggle (click)=\"SetStatRunsForDetail(40)\"\n            [ngClass]=\"(AppState.StatRunsForDetail == 40) ? 'selected' : ''\">\n            40\n        </mat-button-toggle>\n    </mat-button-toggle-group>\n    <br />\n</mat-list>\n\n<mat-list *ngFor=\"let tvItemModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <app-mwqm-site-tvitem-list-item-special [TVItemModel]=\"tvItemModel\" [Index]=\"i + 1\" [AppState]=\"AppState\"\n        [StatMWQMSite]=\"webMWQMSamplesService.GetMWQMSiteDetail(tvItemModel)\">\n    </app-mwqm-site-tvitem-list-item-special>\n\n    <app-mwqm-site-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemModel)\"\n        [TVItemModel]=\"tvItemModel\" [AppState]=\"AppState\">\n    </app-mwqm-site-item-view>\n\n    <app-mwqm-site-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemModel\" [AppState]=\"AppState\">\n    </app-mwqm-site-item-edit>\n\n    <app-mwqm-site-tvitem-list-detail *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\"\n        [TVItemModel]=\"tvItemModel\" [AppState]=\"AppState\"\n        [StatMWQMSite]=\"webMWQMSamplesService.GetMWQMSiteDetail(tvItemModel)\">\n    </app-mwqm-site-tvitem-list-detail>\n</mat-list>","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum MapSizeEnum {\r\n    Size30 = 1,\r\n    Size40 = 2,\r\n    Size50 = 3,\r\n    Size60 = 4,\r\n    Size70 = 5,\r\n}\r\n\r\nexport function GetMapSizeEnum(): typeof MapSizeEnum\r\n{\r\n  return MapSizeEnum;\r\n}\r\n\r\nexport function MapSizeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Size 30 (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Size 40 (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Size 50 (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Size 60 (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Size 70 (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Size 30' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Size 40' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Size 50' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Size 60' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Size 70' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function MapSizeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    MapSizeEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllPolSourceGroupings } from 'src/app/models/generated/web/WebAllPolSourceGroupings.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllPolSourceSiteEffectTermsService } from 'src/app/services/loaders/web-all-pol-source-site-effect-terms.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllPolSourceGroupingsService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllPolSourceSiteEffectTermsService: WebAllPolSourceSiteEffectTermsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllPolSourceGroupings(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceGroupings) {\r\n            this.KeepWebAllPolSourceGroupings();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebAllPolSourceGroupings().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebAllPolSourceGroupings() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllPolSourceGroupings: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllPolSourceGroupings }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllPolSourceGroupings`;\r\n        return this.httpClient.get<WebAllPolSourceGroupings>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllPolSourceGroupings(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllPolSourceSiteEffectTerms();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllPolSourceSiteEffectTerms() {\r\n        this.webAllPolSourceSiteEffectTermsService.DoWebAllPolSourceSiteEffectTerms(this.DoOther);\r\n    }\r\n\r\n    private KeepWebAllPolSourceGroupings() {\r\n        this.UpdateWebAllPolSourceGroupings(this.appLoadedService.AppLoaded$?.getValue()?.WebAllPolSourceGroupings);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllPolSourceGroupings);\r\n        if (this.DoOther) {\r\n            this.DoWebAllPolSourceSiteEffectTerms();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllPolSourceGroupings(x: WebAllPolSourceGroupings) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllPolSourceGroupings: x });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebPolSourceGroupings()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { PredicateDescByService } from 'src/app/services/helpers/predicate-desc-by.service';\r\nimport { TVItemID_TVText_Sort } from 'src/app/models/TVItemID_TVText_Sort.model';\r\nimport { DateFormatService } from './date-format.service';\r\nimport { MWQMRunModel } from 'src/app/models/generated/web/MWQMRunModel.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SortMWQMRunListService {\r\n    constructor(private predicateDescByService: PredicateDescByService,\r\n        private dateFormatService: DateFormatService) {\r\n    }\r\n\r\n    SortMWQMRunListDescByDate(arr: MWQMRunModel[]): MWQMRunModel[] {\r\n        if (!arr || arr.length == 0) return arr;\r\n\r\n        let mwqmRunSorted: MWQMRunModel[] = [];\r\n        let arr2: TVItemID_TVText_Sort[] = [];\r\n        let sortable: TVItemID_TVText_Sort[] = [];\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            sortable.push(<TVItemID_TVText_Sort>{\r\n                TVItemID: arr[i].MWQMRun.MWQMRunID,\r\n                TVText: `${ this.dateFormatService.GetMWQMRunDateTime_LocalDigit(arr[i].MWQMRun)}`.toLowerCase(),\r\n            });\r\n        }\r\n\r\n        arr2 = sortable.sort(this.predicateDescByService.PredicateDescBy('TVText'));\r\n\r\n        for (let i = 0; i < sortable.length; i++) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                if (arr2[i].TVItemID == arr[j].MWQMRun.MWQMRunID) {\r\n                    mwqmRunSorted.push(arr[j]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return mwqmRunSorted;\r\n    }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { WebProvince } from 'src/app/models/generated/web/WebProvince.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { StructureTVFileListService } from 'src/app/services/helpers/structure-tvfile-list.service';\r\nimport { SortTVItemListService } from 'src/app/services/helpers/sort-tvitem-list.service';\r\nimport { MapService } from 'src/app/services/map/map.service';\r\nimport { ProvinceSubComponentEnum } from 'src/app/enums/generated/ProvinceSubComponentEnum';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebProvinceService {\r\n  private TVItemID: number;\r\n  private DoOther: boolean;\r\n  private sub: Subscription;\r\n  LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private appLanguageService: AppLanguageService,\r\n    private sortTVItemListService: SortTVItemListService,\r\n    private structureTVFileListService: StructureTVFileListService,\r\n    private mapService: MapService,\r\n    private componentDataLoadedService: ComponentDataLoadedService,\r\n    private historyService: HistoryService) {\r\n  }\r\n\r\n  DoWebProvince(TVItemID: number, DoOther: boolean) {\r\n    this.TVItemID = TVItemID;\r\n    this.DoOther = DoOther;\r\n\r\n    this.sub ? this.sub.unsubscribe() : null;\r\n\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebProvince) {\r\n      this.KeepWebProvince();\r\n    }\r\n    else {\r\n      this.sub = this.GetWebProvince().subscribe();\r\n    }\r\n  }\r\n\r\n  private GetWebProvince() {\r\n    let languageEnum = GetLanguageEnum();\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      WebProvince: {},\r\n    });\r\n    this.appStateService.UpdateAppState(<AppState>{\r\n      Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebProvince }`,\r\n      Working: true\r\n    });\r\n    let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebProvince/${this.TVItemID}`;\r\n    return this.httpClient.get<WebProvince>(url).pipe(\r\n      map((x: any) => {\r\n        this.UpdateWebProvince(x);\r\n        console.debug(x);\r\n        if (this.DoOther) {\r\n          //this.DoWebMunicipalities();\r\n        }\r\n      }),\r\n      catchError(e => of(e).pipe(map(e => {\r\n        this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n        console.debug(e);\r\n      })))\r\n    );\r\n  }\r\n\r\n  private KeepWebProvince() {\r\n    this.UpdateWebProvince(this.appLoadedService.AppLoaded$?.getValue()?.WebProvince);\r\n    console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebProvince);\r\n    if (this.DoOther) {\r\n      //this.DoWebMunicipalities();\r\n    }\r\n  }\r\n\r\n  private UpdateWebProvince(x: WebProvince) {\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      WebProvince: x,\r\n    });\r\n\r\n    this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebProvince?.TVItemModel);\r\n\r\n    if (this.DoOther) {\r\n      if (this.componentDataLoadedService.DataLoadedWebProvince()) {\r\n        this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n      }\r\n    }\r\n    else {\r\n      this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n    }\r\n\r\n    if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\r\n      if (this.appStateService.AppState$.getValue().ProvinceSubComponent == ProvinceSubComponentEnum.Areas) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModelAreaList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().ProvinceSubComponent == ProvinceSubComponentEnum.Municipalities) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModelMunicipalityList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().ProvinceSubComponent == ProvinceSubComponentEnum.Files) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModelAreaList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().ProvinceSubComponent == ProvinceSubComponentEnum.OpenData) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModelAreaList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().ProvinceSubComponent == ProvinceSubComponentEnum.SamplingPlan) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModelAreaList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().ProvinceSubComponent == ProvinceSubComponentEnum.ProvinceTools) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModelAreaList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebProvince.TVItemModel]\r\n        ]);\r\n      }\r\n    }\r\n  }\r\n}","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebRoot {\r\n    TVFileModelList: TVFileModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelCountryList: TVItemModel[];\r\n    TVItemModelParentList: TVItemModel[];\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum PolSourceSiteSubComponentEnum {\r\n    Information = 1,\r\n    Files = 2,\r\n}\r\n\r\nexport function GetPolSourceSiteSubComponentEnum(): typeof PolSourceSiteSubComponentEnum\r\n{\r\n  return PolSourceSiteSubComponentEnum;\r\n}\r\n\r\nexport function PolSourceSiteSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Information' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Fichiers' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Information' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function PolSourceSiteSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    PolSourceSiteSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { TideLocation } from 'src/app/models/generated/db/TideLocation.model';\r\n\r\nexport class WebAllTideLocations {\r\n    TideLocationList: TideLocation[];\r\n}\r\n","import { MWQMRunModel } from \"./generated/web/MWQMRunModel.model\";\r\nimport { MWQMSampleModel } from \"./generated/web/MWQMSampleModel.model\";\r\nimport { MWQMSiteModel } from \"./generated/web/MWQMSiteModel.model\";\r\n\r\nexport class MWQMRunModelSiteAndSampleModel {\r\n    MWQMRunModel?: MWQMRunModel;\r\n    MWQMSiteModelAndSampleModelList?: MWQMSiteModelAndSampleModel[];\r\n}\r\n\r\nexport class MWQMSiteModelAndSampleModel {\r\n    MWQMSiteModel?: MWQMSiteModel;\r\n    MWQMSampleModel?: MWQMSampleModel;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { FilePurposeEnum_GetIDText } from 'src/app/enums/generated/FilePurposeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-file-list',\n  templateUrl: './file-list.component.html',\n  styleUrls: ['./file-list.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListComponent implements OnInit, OnDestroy {\n  @Input() TVFileModelListList: TVFileModel[][];\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n  GetFilePurposeEnum_GetIDText(filePurposeEnum: number): string {\n    return FilePurposeEnum_GetIDText(filePurposeEnum, this.appStateService);\n  }\n}\n","<app-file-upload [working]=\"appStateService.AppState$?.getValue()?.Working\"></app-file-upload>\n\n<div *ngFor=\"let TVFileModelList of TVFileModelListList\">\n    <mat-list *ngFor=\"let tvFileModel of TVFileModelList; let i = index\">\n        <h2 class=\"file-purpose\" *ngIf=\"i == 0\">{{ GetFilePurposeEnum_GetIDText(tvFileModel.TVFile.FilePurpose) }}</h2>\n        <app-file-list-item [Index]='(i + 1)' [AppState]=\"AppState\" [TVFileModel]=\"tvFileModel\"></app-file-list-item>\n    </mat-list>\n</div>","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the export arc gis component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-export-arc-gis-item',\n  templateUrl: './export-arc-gis-item.component.html',\n  styleUrls: ['./export-arc-gis-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ExportArcGISItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n}\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum SortOrderAngularEnum {\r\n    AreaSectors = 1,\r\n    CountryProvinces = 2,\r\n    MunicipalityMIKEScenarios = 3,\r\n    ProvinceAreas = 4,\r\n    ProvinceMunicipalities = 5,\r\n    RootCountries = 6,\r\n    SectorSubsectors = 7,\r\n    SectorMikeScenarios = 8,\r\n    SubsectorMWQMRuns = 9,\r\n    SubsectorMWQMSites = 10,\r\n    SubsectorPolSourceSites = 11,\r\n}\r\n\r\nexport function GetSortOrderAngularEnum(): typeof SortOrderAngularEnum\r\n{\r\n  return SortOrderAngularEnum;\r\n}\r\n\r\nexport function SortOrderAngularEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'AreaSectors' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'CountryProvinces' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MunicipalityMIKEScenarios' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'ProvinceAreas' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'ProvinceMunicipalities' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'RootCountries' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'SectorSubsectors' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'SectorMikeScenarios' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'SubsectorMWQMRuns' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'SubsectorMWQMSites' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'SubsectorPolSourceSites' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'AreaSectors' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'CountryProvinces' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MunicipalityMIKEScenarios' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'ProvinceAreas' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'ProvinceMunicipalities' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'RootCountries' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'SectorSubsectors' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'SectorMikeScenarios' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'SubsectorMWQMRuns' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'SubsectorMWQMSites' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'SubsectorPolSourceSites' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function SortOrderAngularEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    SortOrderAngularEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum FileTypeEnum {\r\n    DFS0 = 1,\r\n    DFS1 = 2,\r\n    DFSU = 3,\r\n    KMZ = 4,\r\n    LOG = 5,\r\n    M21FM = 6,\r\n    M3FM = 7,\r\n    MDF = 8,\r\n    MESH = 9,\r\n    XLSX = 10,\r\n    DOCX = 11,\r\n    PDF = 12,\r\n    JPG = 13,\r\n    JPEG = 14,\r\n    GIF = 15,\r\n    PNG = 16,\r\n    HTML = 17,\r\n    TXT = 18,\r\n    XYZ = 19,\r\n    KML = 20,\r\n    CSV = 21,\r\n    WMV = 22,\r\n}\r\n\r\nexport function GetFileTypeEnum(): typeof FileTypeEnum\r\n{\r\n  return FileTypeEnum;\r\n}\r\n\r\nexport function FileTypeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'DFS0 (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'DFS1 (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'DFSU (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'KMZ (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'LOG (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'M21FM (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'M3FM (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'MDF (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'MESH (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'XLSX (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'DOCX (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 12, EnumText: 'PDF (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 13, EnumText: 'JPG (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 14, EnumText: 'JPEG (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 15, EnumText: 'GIF (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 16, EnumText: 'PNG (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 17, EnumText: 'HTML (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 18, EnumText: 'TXT (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 19, EnumText: 'XYZ (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 20, EnumText: 'KML (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 21, EnumText: 'CSV' });\r\n        enumTextOrderedList.push({ EnumID: 22, EnumText: 'WMV' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'DFS0' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'DFS1' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'DFSU' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'KMZ' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'LOG' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'M21FM' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'M3FM' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'MDF' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'MESH' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'XLSX' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'DOCX' });\r\n        enumTextOrderedList.push({ EnumID: 12, EnumText: 'PDF' });\r\n        enumTextOrderedList.push({ EnumID: 13, EnumText: 'JPG' });\r\n        enumTextOrderedList.push({ EnumID: 14, EnumText: 'JPEG' });\r\n        enumTextOrderedList.push({ EnumID: 15, EnumText: 'GIF' });\r\n        enumTextOrderedList.push({ EnumID: 16, EnumText: 'PNG' });\r\n        enumTextOrderedList.push({ EnumID: 17, EnumText: 'HTML' });\r\n        enumTextOrderedList.push({ EnumID: 18, EnumText: 'TXT' });\r\n        enumTextOrderedList.push({ EnumID: 19, EnumText: 'XYZ' });\r\n        enumTextOrderedList.push({ EnumID: 20, EnumText: 'KML' });\r\n        enumTextOrderedList.push({ EnumID: 21, EnumText: 'CSV' });\r\n        enumTextOrderedList.push({ EnumID: 22, EnumText: 'WMV' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function FileTypeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    FileTypeEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-sector-tvitem-list-detail',\n  templateUrl: './sector-tvitem-list-detail.component.html',\n  styleUrls: ['./sector-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SectorTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  get tvTypeEnum(): typeof TVTypeEnum {\n    return TVTypeEnum;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n}\n","<blockquote>\r\n    <span *ngIf=\"tvTypeEnum.Subsector\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSectorSubsector[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Subsector\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSiteSample\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSectorMWQMSample[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSiteSample\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSectorMWQMSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMRun\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSectorMWQMRun[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMRun\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.PolSourceSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSectorPolSourceSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.PolSourceSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <hr />\r\n</blockquote>","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\n\r\nexport enum LanguageEnum {\r\n    en = 1,\r\n    fr = 2,\r\n    enAndfr = 3,\r\n    es = 4,\r\n}\r\n\r\nexport function GetLanguageEnum(): typeof LanguageEnum\r\n{\r\n  return LanguageEnum;\r\n}\r\n\r\nexport function LanguageEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'en' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'fr' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'enAndfr' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'es' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'en' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'fr' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'enAndfr' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'es' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function LanguageEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    LanguageEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","<blockquote *ngIf=\"MWQMRunModelSiteAndSampleModel\">\r\n    <strong>{{\r\n        appLanguageService.AppLanguage.TVItemListDetailMWQMRunDetailPrecipitations[appStateService.AppState$?.getValue()?.Language]\r\n        }} </strong>\r\n    <span> (mm) : {{\r\n        appLanguageService.AppLanguage.TVItemListDetailMWQMRunDetailDay[appStateService.AppState$?.getValue()?.Language]\r\n        }}\r\n    </span>\r\n    <span>\r\n        (0) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay0_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-1) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay1_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-2) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay2_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-3) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay3_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-4) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay4_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-5) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay5_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-6) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay6_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-7) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay7_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-8) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay8_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-9) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay9_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <span>\r\n        (-10) [<strong>{{ MWQMRunModelSiteAndSampleModel?.MWQMRunModel?.MWQMRun?.RainDay10_mm | number:'1.1-1'\r\n            }}</strong>]&nbsp;&nbsp;\r\n    </span>\r\n    <p>\r\n        <span *ngFor=\"let MWQMSiteModelAndSampleModel of MWQMRunModelSiteAndSampleModel?.MWQMSiteModelAndSampleModelList\">\r\n            <span class=\"{{ GetClassFromFCValue(MWQMSiteModelAndSampleModel?.MWQMSampleModel.MWQMSample?.FecCol_MPN_100ml) }}\">\r\n                {{\r\n                    MWQMSiteModelAndSampleModel?.MWQMSiteModel?.TVItemModel?.TVItemLanguageList[appStateService.AppState$?.getValue()?.Language].TVText\r\n                }}&nbsp;({{ MWQMSiteModelAndSampleModel?.MWQMSampleModel.MWQMSample?.FecCol_MPN_100ml }})\r\n            </span>\r\n        </span>\r\n\r\n    </p>\r\n    <hr />\r\n</blockquote>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { MWQMRunModelSiteAndSampleModel } from 'src/app/models/MWQMRunModelSiteAndSample.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-mwqm-run-tvitem-list-detail',\n  templateUrl: './mwqm-run-tvitem-list-detail.component.html',\n  styleUrls: ['./mwqm-run-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMRunTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  @Input() MWQMRunModelSiteAndSampleModel: MWQMRunModelSiteAndSampleModel;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n  GetClassFromFCValue(FC: number)\n  {\n    if (FC >= 260)\n    {\n      return 'Over260';\n    }\n    if (FC >= 43)\n    {\n      return 'Over43';\n    }\n    if (FC < 43)\n    {\n      return 'LessThan43';\n    }\n\n\n  }\n}\n","<button mat-button *ngFor=\"let tvItemStatMapModel of appLoadedService.AppLoaded$?.getValue()?.BreadCrumbTVItemModelList; let i = index\"\n    [ngClass]=\"(appLoadedService.AppLoaded$.getValue().BreadCrumbTVItemModelList.length - 1 == i) ? 'selected' : ''\"\n    (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n    <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n        <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n            [{{ tvItemStatMapModel?.TVItem?.TVItemID }}]\n        </span>\n        {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n    </span>\n    <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n</button>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\n\n@Component({\n  selector: 'app-bread-crumb',\n  templateUrl: './bread-crumb.component.html',\n  styleUrls: ['./bread-crumb.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BreadCrumbComponent implements OnInit, OnDestroy {\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public subPageService: SubPageService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n  IsLast(i: number) {\n    if (this.appLoadedService.AppLoaded$.getValue().BreadCrumbTVItemModelList.length - 1 == i) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the mike scenario component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-mike-scenario-item',\n  templateUrl: './mike-scenario-item.component.html',\n  styleUrls: ['./mike-scenario-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MikeScenarioItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { HttpErrorResponse, HttpEventType } from '@angular/common/http';\nimport { ElementRef, ViewChild } from '@angular/core';\nimport { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { FileUploadService } from 'src/app/services/helpers/file-upload.service';\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileUploadComponent implements OnInit, OnDestroy {\n  @ViewChild(\"fileUpload\", { static: false }) fileUpload: ElementRef; \n  files = [];\n  @Input() working: boolean;\n  \n//  form: FormGroup;\n//  progress: number = 0;\n\n  constructor(public appLoadedService: AppLoadedService,\n    public appStateService: AppStateService,\n    //public fb: FormBuilder,\n    public fileUploadService: FileUploadService\n  ) {\n    // this.form = this.fb.group({\n    //   name: [''],\n    //   avatar: [null]\n    // })\n  }\n\n  ngOnInit() { }\n\n  ngOnDestroy() { }\n\n  // uploadFile(event) {\n  //   const file = (event.target as HTMLInputElement).files[0];\n  //   this.form.patchValue({\n  //     avatar: file\n  //   });\n  //   this.form.get('avatar').updateValueAndValidity()\n  // }\n\n  // submitUpload() {\n  //   this.fileUploadService.Upload(\n  //     this.form.value.name,\n  //     this.form.value.avatar\n  //   ).subscribe((event: HttpEvent<any>) => {\n  //     switch (event.type) {\n  //       case HttpEventType.Sent:\n  //         console.log('Request has been made!');\n  //         break;\n  //       case HttpEventType.ResponseHeader:\n  //         console.log('Response header has been received!');\n  //         break;\n  //       case HttpEventType.UploadProgress:\n  //         this.progress = Math.round(event.loaded / event.total * 100);\n  //         console.log(`Uploaded! ${this.progress}%`);\n  //         break;\n  //       case HttpEventType.Response:\n  //         console.log('User successfully created!', event.body);\n  //         setTimeout(() => {\n  //           this.progress = 0;\n  //         }, 1500);\n\n  //     }\n  //   })\n  // }\n\n  uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file.data);\n    file.inProgress = true;\n    this.fileUploadService.upload(formData).pipe(\n      map(event => {\n        switch (event.type) {\n          case HttpEventType.UploadProgress:\n            file.progress = Math.round(event.loaded * 100 / event.total);\n            break;\n          case HttpEventType.Response:\n            return event;\n        }\n      }),\n      catchError((error: HttpErrorResponse) => {\n        file.inProgress = false;\n        return of(`${file.data.name} upload failed.`);\n      })).subscribe((event: any) => {\n        if (typeof (event) === 'object') {\n          console.log(event.body);\n        }\n      });\n  }\n\n  private uploadFiles() {\n    this.fileUpload.nativeElement.value = '';\n    this.files.forEach(file => {\n      this.appStateService.UpdateAppState(<AppState> { Working: true })\n      this.uploadFile(file);\n    });\n    this.appStateService.UpdateAppState(<AppState> { Working: false })\n  }\n\n  onClick() {\n    const fileUpload = this.fileUpload.nativeElement; fileUpload.onchange = () => {\n      for (let index = 0; index < fileUpload.files.length; index++) {\n        const file = fileUpload.files[index];\n        this.files.push({ data: file, inProgress: false, progress: 0 });\n      }\n      this.uploadFiles();\n      this.appStateService.UpdateAppState(<AppState> { Working: true })\n    };\n    fileUpload.click();\n  }\n\n}\n","<!-- <div class=\"container\">\n    <form [formGroup]=\"form\" (ngSubmit)=\"submitUpload()\">\n\n        <div class=\"progress form-group\" *ngIf=\"progress > 0\">\n            <div class=\"progress-bar progress-bar-striped bg-success\" role=\"progressbar\" [style.width.%]=\"progress\">\n            </div>\n        </div>\n\n        <div class=\"form-group\">\n            <input type=\"file\" (change)=\"uploadFile($event)\">\n        </div>\n\n        <div class=\"form-group input-group-lg\">\n            <input class=\"form-control\" placeholder=\"Name\" formControlName=\"name\">\n        </div>\n\n        <div class=\"form-group\">\n            <button class=\"btn btn-danger btn-block btn-lg\">Create</button>\n        </div>\n    </form>\n</div> -->\n\n<div style=\"text-align:center; margin-top: 100px; \"><mat-card style=\"margin-top:10px; width: 50%;\">  \n    <mat-card-content>  \n        <ul>  \n            <li *ngFor=\"let file of files\">  \n                <mat-progress-bar [value]=\"file.progress\"></mat-progress-bar>  \n                <span id=\"file-label\">  \n                      \n                </span>  \n            </li>  \n        </ul>  \n    </mat-card-content>  \n    <mat-card-actions>  \n        <button mat-button color=\"warn\" (click)=\"onClick()\">  \n            <mat-icon>file_upload</mat-icon>  \n            Upload  \n        </button>  \n    </mat-card-actions>  \n</mat-card><input type=\"file\" #fileUpload id=\"fileUpload\" name=\"fileUpload\" multiple=\"multiple\" accept=\"image/*\" style=\"display:none;\" /></div>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-mike-scenario-tvitem-list-item',\n  templateUrl: './mike-scenario-tvitem-list-item.component.html',\n  styleUrls: ['./mike-scenario-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MikeScenarioTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() IsBreadCrumb: boolean = false;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n                {{ i + 1 }}&nbsp;-&nbsp;\n            </span>\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n                [{{ tvItemStatMapModel?.TVItem?.TVItemID }}]\n            </span>\n            {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n        </span>\n        <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n        <app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\n    </button>\n\n    <app-mike-scenario-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-mike-scenario-item-view>\n\n    <app-mike-scenario-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-mike-scenario-item-edit>\n\n    <app-mike-scenario-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"AppState?.DetailVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\">\n    </app-mike-scenario-tvitem-list-detail>\n</mat-list>","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { TelModel } from 'src/app/models/generated/web/TelModel.model';\r\n\r\nexport class WebAllTels {\r\n    TelModelList: TelModel[];\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: burlywood;\">This is the mwqm site view component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebMWQMSitesService } from 'src/app/services/loaders/web-mwqm-sites.service';\n\n@Component({\n  selector: 'app-mwqm-site-item-view',\n  templateUrl: './mwqm-site-item-view.component.html',\n  styleUrls: ['./mwqm-site-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMSiteItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webMWQMSitesService: WebMWQMSitesService) { }\n\n  ngOnInit(): void {\n    this.webMWQMSitesService.DoWebMWQMSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { TopComponentEnum } from 'src/app/enums/generated/TopComponentEnum';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { WebAllContactsService } from 'src/app/services/loaders/web-all-contacts.service';\nimport { LoggedInContactService } from 'src/app/services/loaders/logged-in-contact.service';\nimport { ContactModel } from 'src/app/models/generated/web/ContactModel.model';\n\n@Component({\n  selector: 'app-home-item',\n  templateUrl: './home-item.component.html',\n  styleUrls: ['./home-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HomeItemComponent implements OnInit, OnDestroy {\n  languageEnum = GetLanguageEnum();\n\n  AdminContactList: ContactModel[] = [];\n\n  constructor(public appLoadedService: AppLoadedService,\n    public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    public webAllContactsService: WebAllContactsService,\n    public loggedInContactService: LoggedInContactService,\n    ) { }\n\n  ngOnInit(): void {\n    this.AdminContactList = this.appLoadedService.AppLoaded$?.getValue()?.WebAllContacts.ContactModelList.filter((c) => { return c.Contact.IsAdmin == true });\n  }\n\n  ngOnDestroy() {\n  }\n\n  English() {\n    this.appStateService.UpdateAppState(<AppState>{ Language: LanguageEnum.en, TopComponent: TopComponentEnum.Shell, Working: false });\n  }\n\n  French() {\n    this.appStateService.UpdateAppState(<AppState>{ Language: LanguageEnum.fr, TopComponent: TopComponentEnum.Shell, Working: false });\n  }\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\r\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n</span>\r\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\r\n    {{ appStateService.AppState$?.getValue()?.Status }}\r\n</p>\r\n\r\n<div *ngIf=\"(appStateService.AppState$ | async).Working\">\r\n    <p>\r\n        <mat-spinner></mat-spinner>\r\n    </p>\r\n</div>\r\n\r\n<div *ngIf=\"!((appStateService.AppState$ | async).Working)\">\r\n    <div class=\"card-container\">\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>\r\n                    <h2 class=\"center\">{{ appLanguageService.AppLanguage.HomeCSSPWebTools[languageEnum.en] }}\r\n                        {{ appLanguageService.AppLanguage.HomeAzureVersion[languageEnum.en] }}</h2>\r\n\r\n                </mat-card-title>\r\n            </mat-card-header>\r\n            <h3> {{ appLanguageService.AppLanguage.HomeTheWebToolWillLetYou[languageEnum.en] }}\r\n            </h3>\r\n            <ol>\r\n                <li>\r\n                    {{ appLanguageService.AppLanguage.HomeViewAndUpdateWWTPInfo[languageEnum.en] }}\r\n                </li>\r\n                <li>\r\n                    {{ appLanguageService.AppLanguage.HomeMakeCalculationUsingBoxModelAndVisualPlumes[languageEnum.en] }}\r\n                </li>\r\n                <li>\r\n                    {{ appLanguageService.AppLanguage.HomeSetupAndRunMIKEScenariosAndStoreInputsAndResults[languageEnum.en] }}\r\n                </li>\r\n                <li>\r\n                    {{ appLanguageService.AppLanguage.HomeManageMWQMInformation[languageEnum.en] }}\r\n                </li>\r\n            </ol>\r\n            <p>{{ appLanguageService.AppLanguage.HomeToHaveAccessWebToolsInformationAndApplication[languageEnum.en] }}\r\n                &nbsp;{{ appLanguageService.AppLanguage.HomePleaseContactASiteAdministratorListedBelow[languageEnum.en] }}\r\n            </p>\r\n            <p>&nbsp;</p>\r\n            <p>\r\n                <span *ngFor=\"let admin of AdminContactList\">\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"mailto:{{ admin?.Contact?.LoginEmail }}\">{{ admin?.Contact?.LoginEmail }}</a>\r\n                </span>\r\n            </p>\r\n            <p>&nbsp;</p>\r\n            <p>\r\n                <button mat-raised-button\r\n                    (click)=\"English()\">{{ appLanguageService.AppLanguage.HomeStartUsingCSSPWebTools[languageEnum.en] }}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;<mat-icon>play_arrow</mat-icon>\r\n                </button>\r\n            </p>\r\n        </mat-card>\r\n        <mat-card>\r\n            <mat-card-header>\r\n                <mat-card-title>\r\n                    <h2 class=\"center\">{{ appLanguageService.AppLanguage.HomeCSSPWebTools[languageEnum.fr] }}\r\n                        {{ appLanguageService.AppLanguage.HomeAzureVersion[languageEnum.fr] }}</h2>\r\n                </mat-card-title>\r\n            </mat-card-header>\r\n            <h3> {{ appLanguageService.AppLanguage.HomeTheWebToolWillLetYou[languageEnum.fr] }}\r\n            </h3>\r\n            <ol>\r\n                <li>\r\n                    {{ appLanguageService.AppLanguage.HomeViewAndUpdateWWTPInfo[languageEnum.fr] }}\r\n                </li>\r\n                <li>\r\n                    {{ appLanguageService.AppLanguage.HomeMakeCalculationUsingBoxModelAndVisualPlumes[languageEnum.fr] }}\r\n                </li>\r\n                <li>\r\n                    {{ appLanguageService.AppLanguage.HomeSetupAndRunMIKEScenariosAndStoreInputsAndResults[languageEnum.fr] }}\r\n                </li>\r\n                <li>\r\n                    {{ appLanguageService.AppLanguage.HomeManageMWQMInformation[languageEnum.fr] }}\r\n                </li>\r\n            </ol>\r\n            <p>{{ appLanguageService.AppLanguage.HomeToHaveAccessWebToolsInformationAndApplication[languageEnum.fr] }}\r\n                &nbsp;{{ appLanguageService.AppLanguage.HomePleaseContactASiteAdministratorListedBelow[languageEnum.fr] }}\r\n            </p>\r\n            <p>&nbsp;</p>\r\n            <p>\r\n                <span *ngFor=\"let admin of AdminContactList\">\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;<a href=\"mailto:{{ admin?.Contact?.LoginEmail }}\">{{ admin?.Contact?.LoginEmail }}</a>\r\n                </span>\r\n            </p>\r\n            <p>&nbsp;</p>\r\n            <p>\r\n                <button mat-raised-button\r\n                    (click)=\"French()\">{{ appLanguageService.AppLanguage.HomeStartUsingCSSPWebTools[languageEnum.fr] }}\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;<mat-icon>play_arrow</mat-icon>\r\n                </button>\r\n            </p>\r\n        </mat-card>\r\n    </div>\r\n</div>\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebMWQMSites } from 'src/app/models/generated/web/WebMWQMSites.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\nimport { WebMWQMRunsService } from 'src/app/services/loaders/web-mwqm-runs.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebMWQMSitesService {\r\n    private TVItemID: number;\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webMWQMRunsService: WebMWQMRunsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService,\r\n        private historyService: HistoryService) {\r\n    }\r\n\r\n    DoWebMWQMSites(TVItemID: number, DoOther: boolean) {\r\n        this.TVItemID = TVItemID;\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebMWQMSites) {\r\n            this.KeepWebMWQMSites();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebMWQMSites().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebMWQMSites() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebMWQMSites: {},\r\n        });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebMWQMSites }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebMWQMSites/${this.TVItemID}`;\r\n        return this.httpClient.get<WebMWQMSites>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebMWQMSites(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebMWQMRuns();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: true, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebMWQMRuns() {\r\n        this.webMWQMRunsService.DoWebMWQMRuns(this.TVItemID, this.DoOther);\r\n    }\r\n\r\n    private KeepWebMWQMSites() {\r\n        this.UpdateWebMWQMSites(this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSites);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSites);\r\n        if (this.DoOther) {\r\n            this.DoWebMWQMRuns();\r\n        }\r\n    }\r\n\r\n    private UpdateWebMWQMSites(x: WebMWQMSites) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebMWQMSites: x,\r\n        });\r\n\r\n        this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebMWQMSites?.TVItemModel);\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebSubsector()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebMWQMSites()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { InfrastructureModel } from 'src/app/models/generated/web/InfrastructureModel.model';\r\nimport { ContactModel } from 'src/app/models/generated/web/ContactModel.model';\r\nimport { TVItemLink } from 'src/app/models/generated/db/TVItemLink.model';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebMunicipality {\r\n    InfrastructureModelList: InfrastructureModel[];\r\n    MunicipalityContactModelList: ContactModel[];\r\n    MunicipalityTVItemLinkList: TVItemLink[];\r\n    TVFileModelList: TVFileModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelParentList: TVItemModel[];\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum MWQMSiteLatestClassificationEnum {\r\n    Approved = 1,\r\n    ConditionallyApproved = 2,\r\n    Restricted = 3,\r\n    ConditionallyRestricted = 4,\r\n    Prohibited = 5,\r\n    Unclassified = 6,\r\n}\r\n\r\nexport function GetMWQMSiteLatestClassificationEnum(): typeof MWQMSiteLatestClassificationEnum\r\n{\r\n  return MWQMSiteLatestClassificationEnum;\r\n}\r\n\r\nexport function MWQMSiteLatestClassificationEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Agréé' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Agréé sous conditions' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Restreint' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Restreint sous conditions' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Interdit' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Non classifié' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Approved' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'ConditionallyApproved' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Restricted' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'ConditionallyRestricted' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Prohibited' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Unclassified' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function MWQMSiteLatestClassificationEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    MWQMSiteLatestClassificationEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { CountryModel } from 'src/app/models/generated/web/CountryModel.model';\r\n\r\nexport class WebAllCountries {\r\n    CountryModelList: CountryModel[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeIconService {\r\n\r\n  constructor(private appStateService: AppStateService) {\r\n  }\r\n\r\n  GetTypeIcon(tvType: number) {\r\n    switch (<TVTypeEnum>tvType) {\r\n      case TVTypeEnum.Address:\r\n        {\r\n          return 'add_alert';\r\n        }\r\n      case TVTypeEnum.Area:\r\n        {\r\n          return 'all_out';\r\n        }\r\n      case TVTypeEnum.BoxModel:\r\n        {\r\n          return 'inbox';\r\n        }\r\n      case TVTypeEnum.ClimateSite:\r\n        {\r\n          return 'book';\r\n        }\r\n      case TVTypeEnum.Contact:\r\n        {\r\n          return 'article';\r\n        }\r\n      case TVTypeEnum.Country:\r\n        {\r\n          return 'build';\r\n        }\r\n      case TVTypeEnum.Email:\r\n        {\r\n          return 'email';\r\n        }\r\n      case TVTypeEnum.File:\r\n        {\r\n          return 'attach_file';\r\n        }\r\n      case TVTypeEnum.HydrometricSite:\r\n        {\r\n          return 'soap';\r\n        }\r\n      case TVTypeEnum.Infrastructure:\r\n        {\r\n          return 'opacity';\r\n        }\r\n      case TVTypeEnum.LabSheetInfo:\r\n        {\r\n          return 'label';\r\n        }\r\n      case TVTypeEnum.MWQMRun:\r\n        {\r\n          return 'directions_run';\r\n        }\r\n      case TVTypeEnum.MWQMSite:\r\n        {\r\n          return 'attach_money';\r\n        }\r\n      case TVTypeEnum.MikeScenario:\r\n        {\r\n          return 'agriculture';\r\n        }\r\n      case TVTypeEnum.MikeSource:\r\n        {\r\n          return 'source';\r\n        }\r\n      case TVTypeEnum.Municipality:\r\n        {\r\n          return 'location_city';\r\n        }\r\n      case TVTypeEnum.PolSourceSite:\r\n        {\r\n          return 'poll';\r\n        }\r\n      case TVTypeEnum.Province:\r\n        {\r\n          return 'public';\r\n        }\r\n      case TVTypeEnum.Root:\r\n        {\r\n          return 'room';\r\n        }\r\n      case TVTypeEnum.SamplingPlan:\r\n        {\r\n          return 'update';\r\n        }\r\n      case TVTypeEnum.Sector:\r\n        {\r\n          return 'security';\r\n        }\r\n      case TVTypeEnum.Subsector:\r\n        {\r\n          return 'directions_subway';\r\n        }\r\n      case TVTypeEnum.Tel:\r\n        {\r\n          return 'settings_cell';\r\n        }\r\n      case TVTypeEnum.TideSite:\r\n        {\r\n          return 'tour';\r\n        }\r\n      case TVTypeEnum.VisualPlumesScenario:\r\n        {\r\n          return 'vpn_key';\r\n        }\r\n      default:\r\n        {\r\n          return 'home';\r\n        }\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n    HttpEvent,\r\n    HttpEventType,\r\n    HttpProgressEvent,\r\n    HttpResponse\r\n  } from \"@angular/common/http\";\r\n  import { Observable } from \"rxjs\";\r\n  import { distinctUntilChanged, scan, map, tap } from \"rxjs/operators\";\r\n  \r\n  function isHttpResponse<T>(event: HttpEvent<T>): event is HttpResponse<T> {\r\n    return event.type === HttpEventType.Response;\r\n  }\r\n  \r\n  function isHttpProgressEvent(\r\n    event: HttpEvent<unknown>\r\n  ): event is HttpProgressEvent {\r\n    return (\r\n      event.type === HttpEventType.DownloadProgress ||\r\n      event.type === HttpEventType.UploadProgress\r\n    );\r\n  }\r\n  \r\n  export interface Download {\r\n    content: Blob | null;\r\n    progress: number;\r\n    state: \"PENDING\" | \"IN_PROGRESS\" | \"DONE\";\r\n  }\r\n  \r\n  export function download(\r\n    saver?: (b: Blob) => void\r\n  ): (source: Observable<HttpEvent<Blob>>) => Observable<Download> {\r\n    return (source: Observable<HttpEvent<Blob>>) =>\r\n      source.pipe(\r\n        scan(\r\n          (download: Download, event): Download => {\r\n            if (isHttpProgressEvent(event)) {\r\n              return {\r\n                progress: event.total\r\n                  ? Math.round((100 * event.loaded) / event.total)\r\n                  : download.progress,\r\n                state: \"IN_PROGRESS\",\r\n                content: null\r\n              };\r\n            }\r\n            if (isHttpResponse(event)) {\r\n              if (saver) {\r\n                saver(event.body);\r\n              }\r\n              return {\r\n                progress: 100,\r\n                state: \"DONE\",\r\n                content: event.body\r\n              };\r\n            }\r\n            return download;\r\n          },\r\n          { state: \"PENDING\", progress: 0, content: null }\r\n        ),\r\n        distinctUntilChanged((a, b) => a.state === b.state\r\n          && a.progress === b.progress\r\n          && a.content === b.content\r\n        )\r\n      );\r\n  }\r\n  ","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { WebSector } from 'src/app/models/generated/web/WebSector.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { StructureTVFileListService } from 'src/app/services/helpers/structure-tvfile-list.service';\r\nimport { SortTVItemListService } from 'src/app/services/helpers/sort-tvitem-list.service';\r\nimport { MapService } from 'src/app/services/map/map.service';\r\nimport { SectorSubComponentEnum } from 'src/app/enums/generated/SectorSubComponentEnum';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebSectorService {\r\n  private TVItemID: number;\r\n  private DoOther: boolean;\r\n  private sub: Subscription;\r\n  LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private appLanguageService: AppLanguageService,\r\n    private sortTVItemListService: SortTVItemListService,\r\n    private structureTVFileListService: StructureTVFileListService,\r\n    private mapService: MapService,\r\n    private componentDataLoadedService: ComponentDataLoadedService,\r\n    private historyService: HistoryService) {\r\n  }\r\n\r\n  DoWebSector(TVItemID: number, DoOther: boolean) {\r\n    this.TVItemID = TVItemID;\r\n    this.DoOther = DoOther;\r\n\r\n    this.sub ? this.sub.unsubscribe() : null;\r\n\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebSector) {\r\n      this.KeepWebSector();\r\n    }\r\n    else {\r\n      this.sub = this.GetWebSector().subscribe();\r\n    }\r\n  }\r\n\r\n  private GetWebSector() {\r\n    let languageEnum = GetLanguageEnum();\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      WebSector: {},\r\n    });\r\n    this.appStateService.UpdateAppState(<AppState>{\r\n      Status: `${this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebSector }`,\r\n      Working: true\r\n    });\r\n    let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebSector/${this.TVItemID}/1`;\r\n    return this.httpClient.get<WebSector>(url).pipe(\r\n      map((x: any) => {\r\n        this.UpdateWebSector(x);\r\n        console.debug(x);\r\n        if (this.DoOther) {\r\n          // nothing more to add in the chain\r\n        }\r\n      }),\r\n      catchError(e => of(e).pipe(map(e => {\r\n        this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n        console.debug(e);\r\n      })))\r\n    );\r\n  }\r\n\r\n  private KeepWebSector() {\r\n    this.UpdateWebSector(this.appLoadedService.AppLoaded$?.getValue()?.WebSector);\r\n    console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebSector);\r\n    if (this.DoOther) {\r\n      // nothing more to add in the chain\r\n    }\r\n  }\r\n\r\n  private UpdateWebSector(x: WebSector) {\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      WebSector: x,\r\n    });\r\n\r\n    this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebSector?.TVItemModel);\r\n\r\n    if (this.DoOther) {\r\n      if (this.componentDataLoadedService.DataLoadedWebSector()) {\r\n        this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n      }\r\n    }\r\n    else {\r\n      this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n    }\r\n\r\n    if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\r\n      if (this.appStateService.AppState$.getValue().SectorSubComponent == SectorSubComponentEnum.Subsectors) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebSector.TVItemModelSubsectorList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebSector.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().SectorSubComponent == SectorSubComponentEnum.MIKEScenarios) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebSector.TVItemModelSubsectorList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebSector.TVItemModel]\r\n        ]);\r\n      }\r\n    }\r\n  }\r\n}","import { Component, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { GetTopComponentEnum } from 'src/app/enums/generated/TopComponentEnum';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { LoggedInContactService } from 'src/app/services/loaders/logged-in-contact.service';\r\nimport { WebAllContactsService } from 'src/app/services/loaders/web-all-contacts.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  topComponentEnum = GetTopComponentEnum();\r\n\r\n  constructor(\r\n    public appLoadedService: AppLoadedService,\r\n    public appStateService: AppStateService,\r\n    public webAllContactsService: WebAllContactsService,\r\n    public loggedInContactService: LoggedInContactService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loggedInContactService.DoLoggedInContact();\r\n    this.webAllContactsService.DoWebAllContacts(false);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n}\r\n\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\r\n</span>\r\n\r\n<app-home-item *ngIf=\"((appStateService.AppState$ | async)?.TopComponent == topComponentEnum.Home)\"></app-home-item>\r\n<app-shell-item *ngIf=\"((appStateService.AppState$ | async)?.TopComponent == topComponentEnum.Shell)\"></app-shell-item>\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { PolSourceGroupingModel } from 'src/app/models/generated/web/PolSourceGroupingModel.model';\r\n\r\nexport class WebAllPolSourceGroupings {\r\n    PolSourceGroupingModelList: PolSourceGroupingModel[];\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: green;\">This is the mwqm site component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebMWQMSitesService } from 'src/app/services/loaders/web-mwqm-sites.service';\n\n@Component({\n  selector: 'app-mwqm-site-item',\n  templateUrl: './mwqm-site-item.component.html',\n  styleUrls: ['./mwqm-site-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMSiteItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webMWQMSitesService: WebMWQMSitesService) { }\n\n  ngOnInit(): void {\n    this.webMWQMSitesService.DoWebMWQMSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { PredicateDescByService } from 'src/app/services/helpers/predicate-desc-by.service';\r\nimport { TVItemID_TVText_Sort } from 'src/app/models/TVItemID_TVText_Sort.model';\r\nimport { DateFormatService } from './date-format.service';\r\nimport { MWQMSampleModel } from 'src/app/models/generated/web/MWQMSampleModel.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SortMWQMSiteSampleModelListService {\r\n    constructor(private predicateDescByService: PredicateDescByService,\r\n        private dateFormatService: DateFormatService) {\r\n    }\r\n\r\n    SortMWQMSiteSampleModelListDescByDate(arr: MWQMSampleModel[]): MWQMSampleModel[] {\r\n        if (!arr || arr.length == 0) return arr;\r\n\r\n        let mwqmSampleModelSorted: MWQMSampleModel[] = [];\r\n        let arr2: TVItemID_TVText_Sort[] = [];\r\n        let sortable: TVItemID_TVText_Sort[] = [];\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            sortable.push(<TVItemID_TVText_Sort>{\r\n                TVItemID: arr[i].MWQMSample.MWQMSampleID,\r\n                TVText:  `${ this.dateFormatService.GetMWQMSampleDateTime_LocalDigit(arr[i].MWQMSample)}`.toLowerCase(),\r\n            });\r\n        }\r\n\r\n        arr2 = sortable.sort(this.predicateDescByService.PredicateDescBy('TVText'));\r\n\r\n        for (let i = 0; i < sortable.length; i++) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                if (arr2[i].TVItemID == arr[j].MWQMSample.MWQMSampleID) {\r\n                    mwqmSampleModelSorted.push(arr[j]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return mwqmSampleModelSorted;\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetAnalysisCalculationTypeEnum } from 'src/app/enums/generated/AnalysisCalculationTypeEnum';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { StatMWQMRun } from 'src/app/models/generated/web/StatMWQMRun.model';\nimport { StatMWQMSite } from 'src/app/models/generated/web/StatMWQMSite.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AnalysisService } from 'src/app/services/helpers/analysis.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { DateFormatService } from 'src/app/services/helpers/date-format.service';\nimport { TogglesService } from 'src/app/services/helpers/toggles.service';\nimport { WebMWQMSamplesService } from 'src/app/services/loaders/web-mwqm-samples.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-analysis-item',\n  templateUrl: './analysis-item.component.html',\n  styleUrls: ['./analysis-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnalysisItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() AppState: AppState;\n  @Input() StatMWQMSiteList: StatMWQMSite[] = [];\n  @Input() StatMWQMRunList: StatMWQMRun[] = [];\n\n  languageEnum = GetLanguageEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  analysisCalculationTypeEnum = GetAnalysisCalculationTypeEnum();\n  language: number;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public togglesService: TogglesService,\n    public appLanguageService: AppLanguageService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public dateFormatService: DateFormatService,\n    public mapService: MapService,\n    private webMWQMSamplesService: WebMWQMSamplesService,\n    public analysisService: AnalysisService) { }\n\n  ngOnInit(): void {\n    this.language = <number>this.appStateService.AppState$.getValue().Language;\n    this.webMWQMSamplesService.FillStatMWQMSiteList();\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n\n<app-analysis-options [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebSubsector.TVItemModel\"\n    [StatMWQMSiteList]=\"appLoadedService.AppLoaded$?.getValue()?.StatMWQMSiteList\"\n    [StatMWQMRunList]=\"appLoadedService.AppLoaded$?.getValue()?.StatMWQMRunList\"></app-analysis-options>\n\n<table class=\"table-fixed noWrapCenter\">\n    <thead>\n        <tr>\n            <td class=\"borderRight\" colspan=\"11\">\n            </td>\n            <th class=\"borderBottom\" *ngFor=\"let StatMWQMRun of StatMWQMRunList; let i = index\">\n                <button (click)=\"analysisService.ToggleRemoveFromStat(StatMWQMRun)\"\n                    [ngClass]=\"StatMWQMRun.RemoveFromStat ? 'removeFromStat' : (StatMWQMRun.UseInStat ? 'selected' : '')\">\n                    <span>{{ StatMWQMRun.RunYear }}</span><br />\n                    <span>{{ dateFormatService.GetMonthName(StatMWQMRun.RunMonth, true) }}</span><br />\n                    <span>{{ StatMWQMRun.RunDay }}</span>\n                </button>\n            </th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisSite[appStateService.AppState$?.getValue()?.Language] }}</td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisSamples[appStateService.AppState$?.getValue()?.Language] }}</td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisPeriod[appStateService.AppState$?.getValue()?.Language] }}</td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisMinFC[appStateService.AppState$?.getValue()?.Language] }}</td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisMaxFC[appStateService.AppState$?.getValue()?.Language] }}</td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisGMean[appStateService.AppState$?.getValue()?.Language] }}</td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisMedian[appStateService.AppState$?.getValue()?.Language] }}</td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisP90[appStateService.AppState$?.getValue()?.Language] }}</td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisPerOver43[appStateService.AppState$?.getValue()?.Language] }}\n            </td>\n            <td class=\"borderBottom borderRight\">{{\n                appLanguageService.AppLanguage.AnalysisPerOver260[appStateService.AppState$?.getValue()?.Language] }}\n            </td>\n            <td class=\"borderBottom borderRight\">&nbsp;</td>\n            <td class=\"textAlignLeft borderBottom\" [attr.colspan]=\"StatMWQMRunList?.length\">\n                <app-analysis-data-visible [AppState]=\"appStateService.AppState$?.getValue()\">\n                </app-analysis-data-visible>\n            </td>\n        </tr>\n\n        <ng-container *ngFor=\"let StatMWQMSite of StatMWQMSiteList; let j = index\">\n            <tr *ngIf=\"StatMWQMSite?.TVItemModel?.TVItem?.IsActive\">\n                <td class=\"borderBottom\">\n                    <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n                        <app-analysis-item-menu [TVItemModel]=\"StatMWQMSite?.TVItemModel\" [AppState]=\"AppState\">\n                        </app-analysis-item-menu>\n                        <span>{{ j + 1 }} -</span>\n                    </span>\n                    <span>\n                        {{ StatMWQMSite?.TVItemModel?.TVItemLanguageList[language]?.TVText }}\n                        ({{ analysisService.GetClassificationAcronym(StatMWQMSite?.MWQMSiteModel?.MWQMSite?.MWQMSiteLatestClassification) }})\n                        <span\n                            class=\"{{ analysisService.GetClassificationColor(StatMWQMSite?.MWQMSiteModel.MWQMSite?.MWQMSiteLatestClassification) }}\">&nbsp;&nbsp;</span>\n                    </span>\n                </td>\n                <td class=\"borderBottom\">{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.SampCount }}</td>\n                <td class=\"borderBottom\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.StatStartYear }}-{{\n                    StatMWQMSite?.StatMWQMSiteSampleList[0]?.StatEndYear }}\n                </td>\n                <td class=\"borderBottom\">{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.MinFC }}</td>\n                <td class=\"borderBottom\">{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.MaxFC }}</td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.GeoMean > 14 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.GeoMean | number:'0.0-0' }}\n                </td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.Median > 14 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.Median | number:'0.0-0' }}\n                </td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.P90 > 43 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.P90 | number:'0.0-0' }}\n                </td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver43 > 10 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver43 | number:'0.0-0' }}\n                </td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver260 > 10 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver260 | number:'0.0-0' }}\n                </td>\n                <td\n                    class=\"borderBottom borderRight {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.color }}\">\n                    &nbsp;{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.letter }}&nbsp;</td>\n                <ng-container *ngFor=\"let StatMWQMRun of StatMWQMRunList; let i = index\">\n                    <td\n                        class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex].UseInStat ? 'borderBottomGreen' : 'borderBottom' }} \n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.FC > 500 ? 'highlightRed' : StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.FC > 43 ? 'highlightYellow': '' }}\">\n                        <span *ngIf=\"i == 0 && j == 0\">FC -</span>\n                        {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.FC }}\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisTempDataVisible\"><br />\n                            <span *ngIf=\"i == 0 && j == 0\">T -</span>\n                            {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.Temp | number:'1.1-1' }}\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisSalDataVisible\"><br />\n                            <span *ngIf=\"i == 0 && j == 0\">S -</span>\n                            <span class=\"{{ analysisService.GetSalinityHighlight(StatMWQMSite, StatMWQMRun.RunIndex) }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.Sal | number:'1.1-1' }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisP90DataVisible\"><br />\n                            <span *ngIf=\"i == 0 && j == 0\">P90 -</span>\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.P90 > 43 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.P90 | number:'1.1-1' }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisGeoMeanDataVisible\"><br />\n                            <span *ngIf=\"i == 0 && j == 0\">GM -</span>\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.GeoMean > 14 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.GeoMean | number:'1.1-1'\n                                }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisMedianDataVisible\"><br />\n                            <span *ngIf=\"i == 0 && j == 0\">Med -</span>\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.Median > 14 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.Median | number:'1.1-1'\n                                }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisPerOver43DataVisible\"><br />\n                            <span *ngIf=\"i == 0 && j == 0\">> 43 -</span>\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.PercOver43 > 10 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.PercOver43 |\n                                number:'1.1-1' }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisPerOver260DataVisible\"><br />\n                            <span *ngIf=\"i == 0 && j == 0\"> 260 -</span>\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.PercOver260 > 10 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.PercOver260 |\n                                number:'1.1-1' }}\n                            </span>\n                        </span>\n                    </td>\n                </ng-container>\n            </tr>\n        </ng-container>\n        <tr>\n            <th colspan=\"11\" class=\"borderRight\">&nbsp;</th>\n            <th colspan=\"3\">{{\n                appLanguageService.AppLanguage.AnalysisPrecipitation[appStateService.AppState$?.getValue()?.Language] }}\n                (mm)</th>\n        </tr>\n        <tr>\n            <th colspan=\"8\" rowspan=\"14\">\n            </th>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>{{\n                    appLanguageService.AppLanguage.AnalysisRunDay[appStateService.AppState$?.getValue()?.Language] }}\n                    (0)</strong>\n            </td>\n            <td class=\"borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay0 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>0-24h (-1)</strong>\n            </td>\n            <td class=\"{{ analysisService.GetRainHighlight(StatMWQMRun) }} borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay1 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>24-48h (-2)</strong>\n            </td>\n            <td class=\"{{ analysisService.GetRainHighlight(StatMWQMRun) }} borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay2 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>48-72h (-3)</strong>\n            </td>\n            <td class=\"{{ analysisService.GetRainHighlight(StatMWQMRun) }} borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay3 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>72-96h (-4)</strong>\n            </td>\n            <td class=\"{{ analysisService.GetRainHighlight(StatMWQMRun) }} borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay4 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>(-5)</strong>\n            </td>\n            <td class=\"borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay5 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>(-6)</strong>\n            </td>\n            <td class=\"borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay6 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>(-7)</strong>\n            </td>\n            <td class=\"borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay7 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>(-8)</strong>\n            </td>\n            <td class=\"borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay8 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>(-9)</strong>\n            </td>\n            <td class=\"borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay9 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>(-10)</strong>\n            </td>\n            <td class=\"borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ StatMWQMRun.RainDay10 | number:'1.1-1' }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>{{\n                    appLanguageService.AppLanguage.AnalysisStartTide[appStateService.AppState$?.getValue()?.Language]\n                    }}</strong>\n            </td>\n            <td class=\"borderTop\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ analysisService.GetTideInitialText(StatMWQMRun.StartTide) }}\n            </td>\n        </tr>\n        <tr>\n            <td class=\"borderRight\" colspan=\"3\">\n                <strong>{{\n                    appLanguageService.AppLanguage.AnalysisEndTide[appStateService.AppState$?.getValue()?.Language]\n                    }}</strong>\n            </td>\n            <td class=\"borderTop borderBottom\" *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                {{ analysisService.GetTideInitialText(StatMWQMRun.EndTide) }}\n            </td>\n        </tr>\n        <tr *ngIf=\"AppState.InactVisible\">\n            <td colspan=\"11\">\n                <h1>{{ appLanguageService.AppLanguage.AnalysisInactive[appStateService.AppState$?.getValue()?.Language]\n                    }}</h1>\n            </td>\n            <td [attr.colspan]=\"StatMWQMRunList.length\">\n            </td>\n        </tr>\n        <ng-container *ngFor=\"let StatMWQMSite of StatMWQMSiteList\">\n            <tr *ngIf=\"!StatMWQMSite?.TVItemModel?.TVItem?.IsActive\">\n                <td class=\"borderBottom\">\n                    <mat-icon *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\"\n                        (click)=\"mapService.ShowItem(StatMWQMSite?.TVItemModel, $event)\">place</mat-icon>\n\n                    {{ StatMWQMSite?.TVItemModel?.TVItemLanguageList[language]?.TVText }}\n                    ({{ analysisService.GetClassificationAcronym(StatMWQMSite?.MWQMSiteModel.MWQMSite?.MWQMSiteLatestClassification) }})\n                    <span\n                        class=\"{{ analysisService.GetClassificationColor(StatMWQMSite?.MWQMSiteModel.MWQMSite?.MWQMSiteLatestClassification) }}\">&nbsp;&nbsp;</span>\n                </td>\n                <td class=\"borderBottom\">{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.SampCount }}</td>\n                <td class=\"borderBottom\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.StartYear }}-{{\n                    StatMWQMSite?.StatMWQMSiteSampleList[0]?.EndYear }}\n                </td>\n                <td class=\"borderBottom\">{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.MinFC }}</td>\n                <td class=\"borderBottom\">{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.MaxFC }}</td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.GeoMean > 14 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.GeoMean | number:'0.0-0' }}\n                </td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.Median > 14 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.Median | number:'0.0-0' }}\n                </td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.P90 > 43 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.P90 | number:'0.0-0' }}\n                </td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver43 > 10 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver43 | number:'0.0-0' }}\n                </td>\n                <td class=\"borderBottom \n                {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver260 > 10 ? 'highlightYellow': '' }}\">\n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver260 | number:'0.0-0' }}\n                </td>\n                <td\n                    class=\"borderBottom borderRight {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.color }}\">\n                    &nbsp;{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.ColorAndLetter?.letter }}&nbsp;</td>\n                <ng-container *ngFor=\"let StatMWQMRun of StatMWQMRunList\">\n                    <td\n                        class=\"borderBottom \n                    {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.FC > 500 ? 'highlightRed' : StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.FC > 43 ? 'highlightYellow': '' }}\">\n                        {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.FC }}\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisTempDataVisible\"><br />\n                            {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.Temp | number:'1.1-1' }}\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisSalDataVisible\"><br />\n                            {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.Sal | number:'1.1-1' }}\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisP90DataVisible\"><br />\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.P90 > 43 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.P90 | number:'1.1-1' }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisGeoMeanDataVisible\"><br />\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.GeoMean > 14 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.GeoMean | number:'1.1-1'\n                                }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisMedianDataVisible\"><br />\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.Median > 14 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.Median | number:'1.1-1'\n                                }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisPerOver43DataVisible\"><br />\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.PercOver43 > 10 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.PercOver43 |\n                                number:'1.1-1' }}\n                            </span>\n                        </span>\n                        <span *ngIf=\"appStateService.AppState$?.getValue()?.AnalysisPerOver260DataVisible\"><br />\n                            <span\n                                class=\"{{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.PercOver260 > 10 ? 'borderBottomRed' : '' }}\">\n                                {{ StatMWQMSite?.StatMWQMSiteSampleList[StatMWQMRun.RunIndex]?.PercOver260 |\n                                number:'1.1-1' }}\n                            </span>\n                        </span>\n                    </td>\n                </ng-container>\n            </tr>\n        </ng-container>\n    </tbody>\n</table>","import { Injectable } from '@angular/core';\r\nimport { AppLanguage } from 'src/app/models/AppLanguage.model';\r\nimport { GetLanguageEnum } from '../enums/generated/LanguageEnum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppLanguageService {\r\n\r\n  languageEnum = GetLanguageEnum();\r\n\r\n  constructor() {\r\n  }\r\n\r\n  get AppLanguage(): AppLanguage {\r\n    return {\r\n      AnalysisSite: ['Site', 'Site'],\r\n      AnalysisSamples: ['Samples', 'Échantillons'],\r\n      AnalysisPeriod: ['Period', 'Période'],\r\n      AnalysisMinFC: ['Min FC', 'CF min'],\r\n      AnalysisMaxFC: ['Max FC', 'CF max'],\r\n      AnalysisGMean: ['Geo. Mean', 'Moyenne Geo.'],\r\n      AnalysisMedian: ['Median', 'Médianne'],\r\n      AnalysisP90: ['P90', 'P90'],\r\n      AnalysisPerOver43: ['% > 43', '% > 43'],\r\n      AnalysisPerOver260: ['% > 260', '% > 260'],\r\n      AnalysisPrecipitation: ['Precipitation', 'Précipitation'],\r\n      AnalysisRunDay: ['Run Day', 'Tournée'],\r\n      AnalysisStartTide: ['Start Tide', 'Marée de début'],\r\n      AnalysisEndTide: ['End Tide', 'Marée de fin'],\r\n      AnalysisInactive: ['Inactive', 'Inactif'],\r\n\r\n      AnalysisDataVisibleFecalColiform: ['Fecal Coliform / 100 mL', 'Coliformes fécaux / 100 mL'],\r\n      AnalysisDataVisibleTemperature: ['Temperature (C)', 'Température (C)'],\r\n      AnalysisDataVisibleSalinity: ['Salinity (ppt)', 'Salinité (ppm)'],\r\n      AnalysisDataVisibleP90: ['P90', 'P90'],\r\n      AnalysisDataVisibleGeometriMean: ['Geometric Mean', 'Moyenne géométrique'],\r\n      AnalysisDataVisibleMedian: ['Median', 'Médiane'],\r\n      AnalysisDataVisiblePerAbove43: ['% > 43', '% > 43'],\r\n      AnalysisDataVisiblePerAbove260: ['% > 260', '% > 260'],\r\n\r\n      AnalysisOptionsAnalysisOptions: ['Analysis Options', 'Options d\\'analyses'],\r\n      AnalysisOptionsStart: ['Start', 'Début'],\r\n      AnalysisOptionsEnd: ['End', 'Fin'],\r\n      AnalysisOptionsRuns: ['Runs', 'Tournées'],\r\n      AnalysisOptionsCalculation: ['Calculation', 'Calcul'],\r\n      AnalysisOptionsStartDate: ['Start Date', 'Date de début'],\r\n      AnalysisOptionsEndDate: ['End Date', 'Date de fin'],\r\n      AnalysisOptionsPPT: ['ppt', 'ppm'],\r\n      AnalysisOptionsHighlightSal: ['Highlight salinity deviation from average', 'Souligner l\\'écart de salinité par rapport à la moyenne'],\r\n      AnalysisOptionsUpperLowerRainLimit: ['Upper and lower rain limit considered dry or wet', 'Limite de pluie supérieure et inférieure considérée comme sèche ou humide'],\r\n      AnalysisOptionsConsideredDry: ['Considered Dry', 'Considéré sec'],\r\n      AnalysisOptionsConsideredWet: ['Considered Wet', 'Considéré pluie'],\r\n      AnalysisOptionsDry: ['Dry', 'Sec'],\r\n      AnalysisOptionsWet: ['Wet', 'Pluie'],\r\n\r\n      AreaShowSectors: ['Show sectors', 'Montrer secteurs'],\r\n      AreaSectors: ['Sectors', 'Secteurs'],\r\n      AreaShowFiles: ['Show files', 'Montrer filières'],\r\n      AreaFiles: ['Files', 'Filières'],\r\n\r\n      ContactNotFound: ['Contact not found', 'Contact non trouvé'],\r\n\r\n      CountryShowProvinces: ['Show provinces', 'Montrer provinces'],\r\n      CountryProvinces: ['Provinces', 'Provinces'],\r\n      CountryShowFiles: ['Show files', 'Montrer filières'],\r\n      CountryFiles: ['Files', 'Filières'],\r\n      CountryShowOpenDataNationalTools: ['Show open data national tools', 'Montrer outils données ouvertes nationales'],\r\n      CountryOpenDataNational: ['Open Data National', 'Données ouvertes nationales'],\r\n      CountryShowEmailDistributionList: ['Show email distribution list', 'Montrer liste de distribution des courriels'],\r\n      CountryEmailDistributionList: ['Email Distribution List', 'Liste de distribution des courriels'],\r\n      CountryShowRainExceedance: ['Show rain exceedance', 'Montrer pluie dépassement'],\r\n      CountryRainExceedance: ['Rain Exceedance', 'Pluie dépassement'],\r\n\r\n      DateJanuary: ['January', 'janvier'],\r\n      DateFebruary: ['February', 'février'],\r\n      DateMarch: ['March', 'mars'],\r\n      DateApril: ['April', 'avril'],\r\n      DateMay: ['May', 'mai'],\r\n      DateJune: ['June', 'juin'],\r\n      DateJuly: ['July', 'juillet'],\r\n      DateAugust: ['August', 'août'],\r\n      DateSeptember: ['September', 'septembre'],\r\n      DateOctober: ['October', 'octobre'],\r\n      DateNovember: ['November', 'novembre'],\r\n      DateDecember: ['December', 'décembre'],\r\n\r\n      DateJanuaryAcronym: ['Jan', 'jan'],\r\n      DateFebruaryAcronym: ['Feb', 'fév'],\r\n      DateMarchAcronym: ['Mar', 'mar'],\r\n      DateAprilAcronym: ['Apr', 'avr'],\r\n      DateMayAcronym: ['May', 'mai'],\r\n      DateJuneAcronym: ['Jun', 'juin'],\r\n      DateJulyAcronym: ['Jul', 'jul'],\r\n      DateAugustAcronym: ['Aug', 'août'],\r\n      DateSeptemberAcronym: ['Sep', 'sep'],\r\n      DateOctoberAcronym: ['Oct', 'oct'],\r\n      DateNovemberAcronym: ['Nov', 'nov'],\r\n      DateDecemberAcronym: ['Dec', 'déc'],\r\n\r\n      HomeCSSPWebTools: ['CSSP Web Tools', 'PCCSM: outils Web'],\r\n      HomeTheWebToolWillLetYou: ['The Web tools will let you:', 'Avec les outils Web, il est possible de:'],\r\n      HomeViewAndUpdateWWTPInfo: ['view and update the waste water treatment plants and the lift stations information,', 'consulter et mettre à jour l\\'information des usines de traitement des eaux usées et des postes de pompage,'],\r\n      HomeMakeCalculationUsingBoxModelAndVisualPlumes: ['make calculation using Box Model and Visual Plumes,', 'exécuter les calculs utilisant Box Model et Visual Plumes,'],\r\n      HomeSetupAndRunMIKEScenariosAndStoreInputsAndResults: ['Setup and run MIKE scenarios and store inputs and results', 'Configurer et exécuter des scénarios MIKE et stocker les entrées et les résultats'],\r\n      HomeManageMWQMInformation: ['Manage Marine Water Quality Monitorng Information', 'Gestion de l\\'informmation de Surveillance de qualité d\\'eau marine'],\r\n      HomeToHaveAccessWebToolsInformationAndApplication: ['To have access to Web Tools information and application, ', 'Pour accéder à l\\'information et aux applications des outils Web,'],\r\n      HomePleaseContactASiteAdministratorListedBelow: ['please contact a site administrator listed below', 'veuillez contacter un administrateur du site suivants:'],\r\n      HomeStartUsingCSSPWebTools: ['Start using CSSP Web Tools', 'Utilisez les outils web PCCSM'],\r\n      HomeAzureVersion: ['(Azure Version)', '(Version Azure)'],\r\n\r\n      KB: ['KB', 'Ko'],\r\n\r\n      Loading: ['Loading', 'Téléchargement'],\r\n\r\n      // LoadingWebAllAddresses: ['Loading WebAllAddresses', 'Téléchargement - WebAllAddresses'],\r\n      // LoadingWebAllContacts: ['Loading WebAllContacts', 'Téléchargement - WebAllContacts'],\r\n      // LoadingWebAllCountries: ['Loading WebAllCountries', 'Téléchargement - WebAllCountries'],\r\n      // LoadingWebAllEmails: ['Loading WebAllEmails', 'Téléchargement - WebAllEmails'],\r\n      // LoadingWebAllHelpDocs: ['Loading WebAllHelpDocs', 'Téléchargement - WebAllHelpDocs'],\r\n      // LoadingWebAllMunicipalities: ['Loading WebAllMunicipalities', 'Téléchargement - WebAllMunicipalities'],\r\n      // LoadingWebAllMWQMLookupMPNs: ['Loading WebAllMWQMLookupMPNs', 'Téléchargement - WebAllMWQMLookupMPNs'],\r\n      // LoadingWebAllPolSourceGroupings: ['Loading WebAllPolSourceGroupings', 'Téléchargement - WebAllPolSourceGroupings'],\r\n      // LoadingWebAllPolSourceSiteEffectTerms: ['Loading WebAllPolSourceSiteEffectTerms', 'Téléchargement - WebAllPolSourceSiteEffectTerms'],\r\n      // LoadingWebAllProvinces: ['Loading WebAllProvinces', 'Téléchargement - WebAllProvinces'],\r\n      // LoadingWebAllReportTypes: ['Loading WebAllReportTypes', 'Téléchargement - WebAllReportTypes'],\r\n      // LoadingWebAllTels: ['Loading WebAllTels', 'Téléchargement - WebAllTels'],\r\n      // LoadingWebAllTideLocations: ['Loading WebAllTideLocations', 'Téléchargement - WebAllTideLocations'],\r\n      // LoadingWebAllTVItemLanguages1980_2020: ['Loading WebAllTVItemLanguages1980_2020', 'Téléchargement - WebAllTVItemLanguages1980_2020'],\r\n      // LoadingWebAllTVItemLanguages2021_2060: ['Loading WebAllTVItemLanguages2021_2060', 'Téléchargement - WebAllTVItemLanguages2021_2060'],\r\n      // LoadingWebAllTVItems1980_2020: ['Loading WebAllTVItems1980_2020', 'Téléchargement - WebAllTVItems1980_2020'],\r\n      // LoadingWebAllTVItems2021_2060: ['Loading WebAllTVItems2021_2060', 'Téléchargement - WebAllTVItems2021_2060'],\r\n      // LoadingWebArea: ['Loading WebArea', 'Téléchargement - WebArea'],\r\n      // LoadingWebClimateSites: ['Loading WebClimateSites', 'Téléchargement - WebClimateSites'],\r\n      // LoadingWebCountry: ['Loading WebCountry', 'Téléchargement - WebCountry'],\r\n      // LoadingWebDrogueRuns: ['Loading WebDrogueRuns', 'Téléchargement - WebDrogueRuns'],\r\n      // LoadingWebHydrometricSites: ['Loading WebHydrometricSites', 'Téléchargement - WebHydrometricSites'],\r\n      // LoadingWebLabSheets: ['Loading WebLabSheets', 'Téléchargement - WebLabSheets'],\r\n      // LoadingWebMikeScenarios: ['Loading WebMikeScenarios', 'Téléchargement - WebMikeScenarios'],\r\n      // LoadingWebMunicipality: ['Loading WebMunicipality', 'Téléchargement - WebMunicipality'],\r\n      // LoadingWebMWQMRuns: ['Loading WebMWQMRuns', 'Téléchargement - WebMWQMRuns'],\r\n      // LoadingWebMWQMSamples1980_2020: ['Loading WebMWQMSamples1980_2020', 'Téléchargement - WebMWQMSamples1980_2020'],\r\n      // LoadingWebMWQMSamples2021_2060: ['Loading WebMWQMSamples2021_2060', 'Téléchargement - WebMWQMSamples2021_2060'],\r\n      // LoadingWebMWQMSites: ['Loading WebMWQMSites', 'Téléchargement - WebMWQMSites'],\r\n      // LoadingWebMWQMPolSourceSites: ['Loading WebMWQMPolSourceSites', 'Téléchargement - WebMWQMPolSourceSites'],\r\n      // LoadingWebProvince: ['Loading WebProvince', 'Téléchargement - WebProvince'],\r\n      // LoadingWebRoot: ['Loading WebRoot', 'Téléchargement - WebRoot'],\r\n      // LoadingWebSector: ['Loading WebSector', 'Téléchargement - WebSector'],\r\n      // LoadingWebSubsector: ['Loading WebSubsector', 'Téléchargement - WebSubsector'],\r\n      // LoadingWebTideSites: ['Loading WebTideSites', 'Téléchargement - WebTideSites'],\r\n\r\n      MunicipalityShowContacts: ['Show contacts', 'Montrer contacts'],\r\n      MunicipalityContacts: ['Contacts', 'Contacts'],\r\n      MunicipalityShowFiles: ['Show files', 'Montrer filières'],\r\n      MunicipalityFiles: ['Files', 'Filières'],\r\n      MunicipalityShowInfrastructures: ['Show infrastructures', 'Montrer infrastructures'],\r\n      MunicipalityInfrastructures: ['Infrastructures', 'Infrastructures'],\r\n      MunicipalityShowMikeScenarios: ['Show MIKE scenaros', 'Montrer les scénarios de MIKE'],\r\n      MunicipalityMikeScenarios: ['MIKE Scenarios', 'Scénarios de MIKE'],\r\n\r\n      ProvinceShowAreas: ['Show areas', 'Montrer areas'],\r\n      ProvinceAreas: ['Areas', 'Régions'],\r\n      ProvinceShowMunicipalities: ['Show municipalities', 'Montrer municipalités'],\r\n      ProvinceMunicipalities: ['Municipalities', 'Municipalités'],\r\n      ProvinceShowFiles: ['Show files', 'Montrer filières'],\r\n      ProvinceFiles: ['Files', 'Filières'],\r\n      ProvinceShowOpenData: ['Show open data', 'Montrer données ouvertes'],\r\n      ProvinceOpenData: ['Open Data', 'Données ouvertes'],\r\n      ProvinceShowSamplingPlan: ['Show sampling plan', 'Montrer plan d\\'échantillonnage'],\r\n      ProvinceSamplingPlan: ['Sampling Plan', 'Plan d\\'échantillonnage'],\r\n      ProvinceShowProvinceTools: ['Show province tools', 'Montrer outils pour province'],\r\n      ProvinceProvinceTools: ['Province Tools', \"Outils pour province\"],\r\n\r\n      RootShowCountries: ['Show countries', 'Montrer pays'],\r\n      RootCountries: ['Countries', 'Pays'],\r\n      RootShowFiles: ['Show Files', 'Montrer filières'],\r\n      RootFiles: ['Files', 'Filières'],\r\n      RootShowExportArcGISTools: ['Show export Arc GIS tools', 'Montrer outils pour exportation Arc GIS'],\r\n      RootExportArcGIS: ['Export Arc GIS', 'Exportation Arc GIS'],\r\n\r\n      Saving: ['Saving', 'Sauvegarde'],\r\n\r\n      SearchSearch: ['Search', 'Rechercher'],\r\n\r\n      ShellApplicationName: ['CSSP Web Tools', 'PCCSM: outils Web'],\r\n      ShellOpenContextMenu: ['Open context menu', 'Ouvrir le menu contextuel'],\r\n      ShellOpenHistoryMenu: ['Open history menu', 'Ouvrir le menu historique'],\r\n      ShellReturnHome: ['Return home', 'Retour à la page d\\'accueil'],\r\n      ShellShowMap: ['Show map', 'Montrer carte'],\r\n      ShellResizeMap: ['Resize map', 'Redimentionnez la carte'],\r\n      ShellNoInternet: ['No Internet', 'Pas d\\'internet'],\r\n\r\n      SideNavMenuContextMenu: ['Context menu', 'Menu contextuel'],\r\n      SideNavMenuShowInactiveItems: ['Show inactive items', 'Montrer items inactifs'],\r\n      SideNavMenuInactive: ['Inactive', 'Inactif'],\r\n      SideNavMenuShowDetails: ['Show details', 'Montrer détails'],\r\n      SideNavMenuDetails: ['Details', 'Détails'],\r\n      SideNavMenuShowStatCount: ['Show stat count', 'Montrer stat nombre'],\r\n      SideNavMenuStatCount: ['Stat Count', 'Stat nombre'],\r\n      SideNavMenuShowLastUpdate: ['Show last update', 'Montrer dernière mise-à-jour'],\r\n      SideNavMenuLastUpdate: ['Last Update', 'Dernière mise-à-jour'],\r\n      SideNavMenuShowEdit: ['Show edit', 'Montrer modifier'],\r\n      SideNavMenuEdit: ['Edit', 'Modifier'],\r\n\r\n      SectorShowSubsectors: ['Show subsectors', 'Montrer sous-secteurs'],\r\n      SectorSubsectors: ['Subsectors', 'Sous-secteurs'],\r\n      SectorShowFiles: ['Show files', 'Montrer filières'],\r\n      SectorFiles: ['Files', 'Filières'],\r\n      SectorShowMIKEScenarios: ['Show MIKE scenarios', 'Montrer scénarios MIKE'],\r\n      SectorMIKEScenarios: ['MIKE Scenarios', 'Scénarios MIKE'],\r\n\r\n      StatSampleNumber: ['Stat sample number', 'Nombre d\\'échantillon pour stat'],\r\n\r\n      SubsectorShowMWQMSites: ['Show MWQM sites', 'Montrer sites PSQEM'],\r\n      SubsectorMWQMSites: ['MWQM Sites', 'Sites PSQEM'],\r\n      SubsectorShowAnalysis: ['Show analysis', 'Montrer analyse'],\r\n      SubsectorAnalysis: ['Analysis', 'Analyse'],\r\n      SubsectorShowMWQMRuns: ['Show MWQM runs', 'Montrer tournées PSQEM'],\r\n      SubsectorMWQMRuns: ['MWQM Runs', 'Tournées PSQEM'],\r\n      SubsectorShowPollutionSourceSites: ['Show pollution source sites', 'Montrer sites des sources de pollution'],\r\n      SubsectorPollutionSourceSites: ['Pollution Source Sites', 'Sites des source de pollution'],\r\n      SubsectorShowFiles: ['Show files', 'Montrer filières'],\r\n      SubsectorFiles: ['Files', 'Filières'],\r\n      SubsectorShowSubsectorTools: ['Show subsector tools', 'Montrer outils de sous-secteurs'],\r\n      SubsectorSubsectorTools: ['Subsector Tools', 'Outils de sous-secteurs'],\r\n      SubsectorShowLogBook: ['Show log book', 'Montrer journal de bord'],\r\n      SubsectorLogBook: ['Log Book', 'Journal de bord'],\r\n\r\n      TVItemListDetailAreaSector: ['Sector', 'Secteur'],\r\n      TVItemListDetailAreaSubsector: ['Subsector', 'Sous-secteur'],\r\n      TVItemListDetailAreaMWQMSample: ['MWQM sample', 'Échantillons'],\r\n      TVItemListDetailAreaMWQMSite: ['MWQM site', 'Site de SQE'],\r\n      TVItemListDetailAreaMWQMRun: ['MWQM run', 'Tournées'],\r\n      TVItemListDetailAreaPolSourceSite: ['Pollution source site', 'Site de source de pollution'],\r\n\r\n      TVItemListDetailCountryProvince: ['Province', 'Province'],\r\n      TVItemListDetailCountryMunicipality: ['Municipality', 'Municipalité'],\r\n      TVItemListDetailCountryLiftStation: ['Lift station', 'Poste de pompage'],\r\n      TVItemListDetailCountryWWTP: ['WWTP', 'UÉEU'],\r\n      TVItemListDetailCountryArea: ['Area', 'Région'],\r\n      TVItemListDetailCountrySector: ['Sector', 'Secteur'],\r\n      TVItemListDetailCountrySubsector: ['Subsector', 'Sous-secteur'],\r\n      TVItemListDetailCountryMWQMSample: ['MWQM sample', 'Échantillons'],\r\n      TVItemListDetailCountryMWQMSite: ['MWQM site', 'Site de SQE'],\r\n      TVItemListDetailCountryMWQMRun: ['MWQM run', 'Tournées'],\r\n      TVItemListDetailCountryPolSourceSite: ['Pollution source site', 'Site de source de pollution'],\r\n      TVItemListDetailCountryMikeScenario: ['MIKE scenario', 'Scénario de MIKE'],\r\n      TVItemListDetailCountryBoxModel: ['Box model scenario', 'Scénario boitiers'],\r\n      TVItemListDetailCountryVPScenario: ['VP scenario', 'Scénario de MIKE'],\r\n\r\n      TVItemListDetailMunicipalityLiftStation: ['Lift station', 'Poste de pompage'],\r\n      TVItemListDetailMunicipalityWWTP: ['WWTP', 'UÉEU'],\r\n      TVItemListDetailMunicipalityMikeScenario: ['MIKE scenario', 'Scénario de MIKE'],\r\n      TVItemListDetailMunicipalityBoxModel: ['Box model scenario', 'Scénario boitiers'],\r\n      TVItemListDetailMunicipalityVPScenario: ['VP scenario', 'Scénario de MIKE'],\r\n\r\n      TVItemListDetailMWQMRunDetailPrecipitations: ['Precipitations', 'Précipitations'],\r\n      TVItemListDetailMWQMRunDetailDay: ['Day', 'Jour'],\r\n\r\n      TVItemListDetailMWQMSiteDetailStatistics: ['Statistics', 'Statistiques'],\r\n      TVItemListDetailMWQMSiteDetailSamples: ['Samples', 'Échantillons'],\r\n      TVItemListDetailMWQMSiteDetailDataset: ['Dataset', 'Ensemble de données'],\r\n      TVItemListDetailMWQMSiteDetailStatisticsPeriod: ['Statistics period', 'Période des statistiques'],\r\n      TVItemListDetailMWQMSiteDetailLastSampleDate: ['Last sample date', 'Date du dernier échantillon'],\r\n      TVItemListDetailMWQMSiteDetailNumberOfSample: ['Number of sample used for statistics', 'Nombre d\\'échantillons utilisés dans les statistiques'],\r\n      TVItemListDetailMWQMSiteDetailMinimumFC: ['Minimum FC', 'CF minimum'],\r\n      TVItemListDetailMWQMSiteDetailMaximumFC: ['Maximum FC', 'CF maximum'],\r\n      TVItemListDetailMWQMSiteDetailGeometricMean: ['Geometric mean', 'Moyenne géométrique'],\r\n      TVItemListDetailMWQMSiteDetailMedian: ['Median', 'Médiane'],\r\n      TVItemListDetailMWQMSiteDetailP90: ['P90', 'P90'],\r\n      TVItemListDetailMWQMSiteDetailPerOfSampleWithFCOver43: ['Percentage of sample with FC > 43', 'Pourcentage des échantillons ayant des CF > 43'],\r\n      TVItemListDetailMWQMSiteDetailPerOfSampleWithFCOver260: ['Percentage of sample with FC > 260', 'Pourcentage des échantillons ayant des CF > 260'],\r\n\r\n\r\n      TVItemListDetailProvinceMunicipality: ['Municipality', 'Municipalité'],\r\n      TVItemListDetailProvinceLiftStation: ['Lift station', 'Poste de pompage'],\r\n      TVItemListDetailProvinceWWTP: ['WWTP', 'UÉEU'],\r\n      TVItemListDetailProvinceArea: ['Area', 'Région'],\r\n      TVItemListDetailProvinceSector: ['Sector', 'Secteur'],\r\n      TVItemListDetailProvinceSubsector: ['Subsector', 'Sous-secteur'],\r\n      TVItemListDetailProvinceMWQMSample: ['MWQM sample', 'Échantillons'],\r\n      TVItemListDetailProvinceMWQMSite: ['MWQM site', 'Site de SQE'],\r\n      TVItemListDetailProvinceMWQMRun: ['MWQM run', 'Tournées'],\r\n      TVItemListDetailProvincePolSourceSite: ['Pollution source site', 'Site de source de pollution'],\r\n      TVItemListDetailProvinceMikeScenario: ['MIKE scenario', 'Scénario de MIKE'],\r\n      TVItemListDetailProvinceBoxModel: ['Box model scenario', 'Scénario boitiers'],\r\n      TVItemListDetailProvinceVPScenario: ['VP scenario', 'Scénario de MIKE'],\r\n\r\n      TVItemListDetailSectorSubsector: ['Subsector', 'Sous-secteur'],\r\n      TVItemListDetailSectorMWQMSample: ['MWQM sample', 'Échantillons'],\r\n      TVItemListDetailSectorMWQMSite: ['MWQM site', 'Site de SQE'],\r\n      TVItemListDetailSectorMWQMRun: ['MWQM run', 'Tournées'],\r\n      TVItemListDetailSectorPolSourceSite: ['Pollution source site', 'Site de source de pollution'],\r\n      TVItemListDetailSectorMikeScenario: ['MIKE scenario', 'Scénario de MIKE'],\r\n\r\n      TVItemListDetailSubsectorMWQMSample: ['MWQM sample', 'Échantillons'],\r\n      TVItemListDetailSubsectorMWQMSite: ['MWQM site', 'Site de SQE'],\r\n      TVItemListDetailSubsectorMWQMRun: ['MWQM run', 'Tournées'],\r\n      TVItemListDetailSubsectorPolSourceSite: ['Pollution source site', 'Site de source de pollution'],\r\n\r\n\r\n    }\r\n  }\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: aqua;\">This is the pol source site edit component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebPolSourceSitesService } from 'src/app/services/loaders/web-pol-source-sites.service';\n\n@Component({\n  selector: 'app-pol-source-site-item-edit',\n  templateUrl: './pol-source-site-item-edit.component.html',\n  styleUrls: ['./pol-source-site-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PolSourceSiteItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webPolSourceSitesService: WebPolSourceSitesService) { }\n\n  ngOnInit(): void {\n    this.webPolSourceSitesService.DoWebPolSourceSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n \n<p style=\"background-color: fuchsia;\">This is the municipality view component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-municipality-item-view',\n  templateUrl: './municipality-item-view.component.html',\n  styleUrls: ['./municipality-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MunicipalityItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void { \n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllHelpDocs } from 'src/app/models/generated/web/WebAllHelpDocs.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllMunicipalitiesService } from 'src/app/services/loaders/web-all-municipalities.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllHelpDocsService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllMunicipalitiesServices: WebAllMunicipalitiesService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllHelpDocs(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllHelpDocs?.HelpDocList?.length > 0) {\r\n          this.KeepWebAllHelpDocs();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllHelpDocs().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllHelpDocs() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllHelpDocs: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllHelpDocs }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllHelpDocs/0/1`;\r\n        return this.httpClient.get<WebAllHelpDocs>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllHelpDocs(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllMunicipalities();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllMunicipalities() {\r\n        this.webAllMunicipalitiesServices.DoWebAllMunicipalities(this.DoOther);\r\n    }\r\n    \r\n    private KeepWebAllHelpDocs() {\r\n        this.UpdateWebAllHelpDocs(this.appLoadedService.AppLoaded$?.getValue()?.WebAllHelpDocs);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllHelpDocs);\r\n        if (this.DoOther) {\r\n            this.DoWebAllMunicipalities();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllHelpDocs(x: WebAllHelpDocs) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllHelpDocs: x, });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllHelpDocs()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-municipality-tvitem-list-detail',\n  templateUrl: './municipality-tvitem-list-detail.component.html',\n  styleUrls: ['./municipality-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MunicipalityTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  get tvTypeEnum(): typeof TVTypeEnum {\n    return TVTypeEnum;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n}\n","<blockquote>\r\n    <span *ngIf=\"tvTypeEnum.LiftStation\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryLiftStation[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.LiftStation\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.WasteWaterTreatmentPlant\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryWWTP[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.WasteWaterTreatmentPlant\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MikeScenario\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryMikeScenario[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MikeScenario\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.BoxModel\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryBoxModel[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.BoxModel\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.VisualPlumesScenario\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailCountryVPScenario[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.VisualPlumesScenario\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <hr />\r\n</blockquote>","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n \n<p style=\"background-color: dodgerblue;\">This is the municipality edit component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-municipality-item-edit',\n  templateUrl: './municipality-item-edit.component.html',\n  styleUrls: ['./municipality-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MunicipalityItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void { \n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { ReportTypeModel } from 'src/app/models/generated/web/ReportTypeModel.model';\r\n\r\nexport class WebAllReportTypes {\r\n    ReportTypeModelList: ReportTypeModel[];\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum FilesSortPropEnum {\r\n    FileName = 1,\r\n    FileSize = 2,\r\n    FileType = 3,\r\n    FilePurpose = 4,\r\n}\r\n\r\nexport function GetFilesSortPropEnum(): typeof FilesSortPropEnum\r\n{\r\n  return FilesSortPropEnum;\r\n}\r\n\r\nexport function FilesSortPropEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Nom de filière' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Grosseur de filière' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Type de filière' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'But de filière' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'File name' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'File size' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'File type' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'File purpose' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function FilesSortPropEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    FilesSortPropEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input, ViewChild } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { TogglesService } from 'src/app/services/helpers/toggles.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-map-menu',\n  templateUrl: './map-menu.component.html',\n  styleUrls: ['./map-menu.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MapMenuComponent implements OnInit, OnDestroy {\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n\n  constructor(public appStateService: AppStateService,\n    public togglesService: TogglesService, \n    public appLoadedService: AppLoadedService, \n    public mapService: MapService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<ng-container>\n    <div id=\"MapTopCenterID\">\n        <button [ngClass]=\"AppState.EditMapVisible ? 'selected' : ''\" mat-raised-button (click)=\"togglesService.ToggleEditMap(AppState)\">\n            <mat-icon>edit</mat-icon>\n            <span>&nbsp;Edit</span>\n        </button>\n        <span>&nbsp;&nbsp;</span>\n        <button mat-raised-button>\n            <input mat-matInput id=\"CurrentLatLng\" type=\"text\" />\n        </button>\n        <br /><br />\n        <button mat-raised-button color=\"warn\" *ngIf=\"AppState.EditMapVisible && AppState.EditMapChanged\" (click)=\"mapService.MapMarkerSaveChanges()\">\n            <mat-icon title=\"Save Changes\">save</mat-icon>\n            <span>&nbsp;Save</span>\n        </button>\n        <span>&nbsp;&nbsp;</span>\n        <button mat-raised-button *ngIf=\"AppState.EditMapVisible && AppState.EditMapChanged\" >\n            <input mat-matInput id=\"ChangedLatLng\" type=\"text\" />\n            <span>&nbsp;&nbsp;Item&nbsp;&nbsp;[{{ AppState.MarkerLabel }}]</span>\n        </button>\n    </div>\n</ng-container>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { WebMWQMSamplesService } from 'src/app/services/loaders/web-mwqm-samples.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-mwqm-run-tvitem-list-item',\n  templateUrl: './mwqm-run-tvitem-list-item.component.html',\n  styleUrls: ['./mwqm-run-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMRunTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() AppState: AppState;\n  @Input() IsBreadCrumb: boolean = false;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public webMWQMSamplesService: WebMWQMSamplesService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n            <span *ngIf=\"AppState.MapVisible\">\n                {{ i + 1 }}&nbsp;-&nbsp;\n            </span>\n            <span *ngIf=\"AppState.DetailVisible\">\n                [{{ tvItemStatMapModel?.TVItem?.TVItemID }}]\n            </span>\n            {{ tvItemStatMapModel?.TVItemLanguageList[AppState.Language]?.TVText }}\n        </span>\n        <app-stat-count *ngIf=\"AppState.StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n        <app-last-udpate-tv-item-model *ngIf=\"AppState.LastUpdateVisible\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\n    </button>\n\n    <app-mwqm-run-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-mwqm-run-item-view>\n\n    <app-mwqm-run-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-mwqm-run-item-edit>\n\n    <app-mwqm-run-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"AppState?.DetailVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\"\n        [MWQMRunModelSiteAndSampleModel]=\"webMWQMSamplesService.GetMWQMRunModelSiteAndSampleDetail(tvItemStatMapModel)\">\n    </app-mwqm-run-tvitem-list-detail>\n</mat-list>","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum ShellSubComponentEnum {\r\n    Area = 1,\r\n    Country = 2,\r\n    MikeScenario = 3,\r\n    Municipality = 4,\r\n    MWQMRun = 5,\r\n    MWQMSite = 6,\r\n    PolSourceSite = 7,\r\n    Province = 8,\r\n    Root = 9,\r\n    Sector = 10,\r\n    Subsector = 11,\r\n}\r\n\r\nexport function GetShellSubComponentEnum(): typeof ShellSubComponentEnum\r\n{\r\n  return ShellSubComponentEnum;\r\n}\r\n\r\nexport function ShellSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Area (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Country (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Scénario MIKE' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Municipality (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'MWQMRun (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'MWQMSite (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'PolSourceSite (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'Province (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'Root (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'Sector (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'Subsector (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Area' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Country' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MIKE Scenario' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Municipality' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'MWQMRun' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'MWQMSite' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'PolSourceSite' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'Province' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'Root' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'Sector' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'Subsector' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function ShellSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    ShellSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: blue;\">This is the area view component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\n\n@Component({\n  selector: 'app-area-item-view',\n  templateUrl: './area-item-view.component.html',\n  styleUrls: ['./area-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<button mat-button class=\"{{ showTVItemService.TVItemVisible(TVItemModel) ? 'selected' : '' }}\"\n    (click)=\"showTVItemService.ToggleShowTVItem(TVItemModel)\" title=\"show more information for viewing or editing\">\n    <mat-icon>more_vert</mat-icon>\n</button>\n<button mat-button (click)=\"mapService.ShowItem(TVItemModel, $event)\"\n    *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\" title=\"show item on map\">\n    <mat-icon>place</mat-icon>\n</button>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-tvitem-menu',\n  templateUrl: './tvitem-menu.component.html',\n  styleUrls: ['./tvitem-menu.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TVItemMenuComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public showTVItemService: ShowTVItemService,\n    public mapService: MapService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { SharedModule } from 'src/app/shared.module';\r\nimport { getSaver, SAVER } from 'src/app/services/helpers/saver.provider';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    SharedModule,\r\n  ],\r\n  exports: [],\r\n  providers: [{provide: SAVER, useFactory: getSaver}],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: cadetblue;\">This is the mike scenario view component</p>","import { Input } from '@angular/core';\nimport { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-mike-scenario-item-view',\n  templateUrl: './mike-scenario-item-view.component.html',\n  styleUrls: ['./mike-scenario-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MikeScenarioItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: burlywood;\">This is the area edit component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\n\n@Component({\n  selector: 'app-area-item-edit',\n  templateUrl: './area-item-edit.component.html',\n  styleUrls: ['./area-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<blockquote *ngIf=\"StatMWQMSite\">\r\n    <strong>{{\r\n        appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailStatistics[appStateService.AppState$?.getValue()?.Language]\r\n        }}:</strong>\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailSamples[appStateService.AppState$?.getValue()?.Language]\r\n    }} (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.Samples }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailDataset[appStateService.AppState$?.getValue()?.Language]\r\n    }} (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.StartYear }} -\r\n        {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.EndYear }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailStatisticsPeriod[appStateService.AppState$?.getValue()?.Language]\r\n    }} (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.StatStartYear }} -\r\n        {{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.StatEndYear }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailLastSampleDate[appStateService.AppState$?.getValue()?.Language]\r\n    }} (<strong>\r\n        {{ dateFormatService.GetStatMWQMSiteSampleSampleLastSampleDate(StatMWQMSite?.StatMWQMSiteSampleList[0]) }}\r\n    </strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailNumberOfSample[appStateService.AppState$?.getValue()?.Language]\r\n    }}\r\n    (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.SampCount }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailMinimumFC[appStateService.AppState$?.getValue()?.Language]\r\n    }} (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.MinFC }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailMaximumFC[appStateService.AppState$?.getValue()?.Language]\r\n    }} (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.MaxFC }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailGeometricMean[appStateService.AppState$?.getValue()?.Language]\r\n    }}\r\n    (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.GeoMean | number:'1.1-1' }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailMedian[appStateService.AppState$?.getValue()?.Language]\r\n    }} (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.Median | number:'1.1-1' }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailP90[appStateService.AppState$?.getValue()?.Language] }}\r\n    (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.P90 | number:'1.1-1' }}</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailPerOfSampleWithFCOver43[appStateService.AppState$?.getValue()?.Language]\r\n    }}\r\n    (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver43 | number:'1.1-1' }}%</strong>)\r\n    &nbsp;&nbsp;&nbsp;{{\r\n    appLanguageService.AppLanguage.TVItemListDetailMWQMSiteDetailPerOfSampleWithFCOver260[appStateService.AppState$?.getValue()?.Language]\r\n    }}\r\n    (<strong>{{ StatMWQMSite?.StatMWQMSiteSampleList[0]?.PercOver260 | number:'1.1-1' }}%</strong>)\r\n    <hr />\r\n</blockquote>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { StatMWQMSite } from 'src/app/models/generated/web/StatMWQMSite.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { DateFormatService } from 'src/app/services/helpers/date-format.service';\n\n@Component({\n  selector: 'app-mwqm-site-tvitem-list-detail',\n  templateUrl: './mwqm-site-tvitem-list-detail.component.html',\n  styleUrls: ['./mwqm-site-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMSiteTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  @Input() StatMWQMSite: StatMWQMSite;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public dateFormatService: DateFormatService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { ContactModel } from 'src/app/models/generated/web/ContactModel.model';\r\n\r\nexport class WebAllContacts {\r\n    ContactModelList: ContactModel[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class HistoryService {\r\n    constructor(private appStateService: AppStateService) {\r\n\r\n    }\r\n\r\n    AddHistory(tvItemModel: TVItemModel): void {\r\n        let tvItemModelExist: TVItemModel[] = this.appStateService.AppState$.getValue().History.filter(c => c.TVItem.TVItemID == tvItemModel.TVItem.TVItemID);\r\n        if (!(tvItemModelExist != undefined && tvItemModelExist.length > 0))\r\n        {\r\n            this.appStateService.AppState$.getValue().History.push(tvItemModel);\r\n        }\r\n    }\r\n\r\n    RemoveHistory(tvItemModel: TVItemModel): void {\r\n        let tvItemModelExist: TVItemModel[] = this.appStateService.AppState$.getValue().History.filter(c => c == tvItemModel);\r\n        if (!(tvItemModelExist != undefined && tvItemModelExist.length > 0))\r\n        {\r\n            let History: TVItemModel[] = this.appStateService.AppState$.getValue().History;\r\n            let count: number = History.length;\r\n            for(let i = 0; i < count; i++)\r\n            {\r\n                if (History[i] === tvItemModel)\r\n                {\r\n                    History.splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            this.appStateService.UpdateAppState(<AppState> { History: History });\r\n        }\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\n@Component({\r\n  selector: 'app-country-item-create',\r\n  templateUrl: './country-item-create.component.html',\r\n  styleUrls: ['./country-item-create.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CountryItemCreateComponent implements OnInit, OnDestroy {\r\n  @Input() TVItemModel: TVItemModel;\r\n  @Input() AppState: AppState;\r\n\r\n  formCountryCreate: FormGroup;\r\n\r\n  get f() { return this.formCountryCreate.controls; }\r\n\r\n  constructor(public appStateService: AppStateService,\r\n    public appLoadedService: AppLoadedService,\r\n    public appLanguageService: AppLanguageService,\r\n    private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formCountryCreate = this.fb.group({\r\n      TVText: ['',\r\n      [\r\n        Validators.required,\r\n        //Validators.email,\r\n      ]],\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  Create()\r\n  {\r\n    console.debug(this.formCountryCreate.value);\r\n    console.debug(this.TVItemModel);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"formCountryCreate\" (ngSubmit)=\"Create()\">\r\n    <mat-form-field>\r\n        <mat-label>New country name</mat-label>\r\n        <input matInput formControlName=\"TVText\" />\r\n        <mat-error *ngIf=\"f.TVText?.errors?.required\">Required</mat-error>\r\n    </mat-form-field>\r\n    <button mat-button type=\"submit\" [disabled]=\"!formCountryCreate.valid\">Create</button>\r\n</form>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllMWQMLookupMPNs } from 'src/app/models/generated/web/WebAllMWQMLookupMPNs.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from '../app-language.service';\r\nimport { ComponentDataLoadedService } from '../helpers/component-data-loaded.service';\r\nimport { WebAllPolSourceGroupingsService } from './web-all-pol-source-groupings.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllMWQMLookupMPNsService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n \r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllPolSourceGroupingsService: WebAllPolSourceGroupingsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllMWQMLookupMPNs(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllMWQMLookupMPNs) {\r\n          this.KeepWebAllMWQMLookupMPNs();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllMWQMLookupMPNs().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllMWQMLookupMPNs() {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllMWQMLookupMPNs: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllMWQMLookupMPNs }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${this.appStateService.AppState$.getValue().Language}-CA/Read/WebAllMWQMLookupMPNs`;\r\n        return this.httpClient.get<WebAllMWQMLookupMPNs>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllMWQMLookupMPNs(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllPolSourceGroupings();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    DoWebAllPolSourceGroupings() {\r\n        this.webAllPolSourceGroupingsService.DoWebAllPolSourceGroupings(this.DoOther);\r\n    }\r\n\r\n    private KeepWebAllMWQMLookupMPNs() {\r\n        this.UpdateWebAllMWQMLookupMPNs(this.appLoadedService.AppLoaded$?.getValue()?.WebAllMWQMLookupMPNs);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllMWQMLookupMPNs);\r\n        if (this.DoOther) {\r\n            this.DoWebAllPolSourceGroupings();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllMWQMLookupMPNs(x: WebAllMWQMLookupMPNs) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllMWQMLookupMPNs: x });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllMWQMLookupMPNs()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { MunicipalitySubComponentEnum } from 'src/app/enums/generated/MunicipalitySubComponentEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebMunicipality } from 'src/app/models/generated/web/WebMunicipality.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { StructureTVFileListService } from 'src/app/services/helpers/structure-tvfile-list.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { MapService } from 'src/app/services/map/map.service';\r\nimport { SortTVItemListService } from 'src/app/services/helpers/sort-tvitem-list.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebMunicipalityService {\r\n    private TVItemID: number;\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private sortTVItemListService: SortTVItemListService,\r\n        private structureTVFileListService: StructureTVFileListService,\r\n        private mapService: MapService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebMunicipality(TVItemID: number, DoOther: boolean) {\r\n        this.TVItemID = TVItemID;\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebMunicipality) {\r\n            this.KeepWebMunicipality();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebMunicipality().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebMunicipality() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebMunicipality: {},\r\n        });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebMunicipality }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebMunicipality/${this.TVItemID}`;\r\n        return this.httpClient.get<WebMunicipality>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebMunicipality(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    // nothing more to add in the chain\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private KeepWebMunicipality() {\r\n        this.UpdateWebMunicipality(this.appLoadedService.AppLoaded$?.getValue()?.WebMunicipality);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebMunicipality);\r\n        if (this.DoOther) {\r\n            // nothing more to add in the chain\r\n        }\r\n    }\r\n\r\n    private UpdateWebMunicipality(x: WebMunicipality) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebMunicipality: x,\r\n        });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebMunicipality()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n        }\r\n\r\n        if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\r\n            if (this.appStateService.AppState$.getValue().MunicipalitySubComponent == MunicipalitySubComponentEnum.Infrastructures) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    // ...this.appLoadedService.AppLoaded$.getValue().WebMunicipality.InfrastructureModelList,\r\n                    // ...[this.appLoadedService.AppLoaded$.getValue().WebMunicipality.TVItemModel]\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().MunicipalitySubComponent == MunicipalitySubComponentEnum.Contacts) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    // ...this.appLoadedService.AppLoaded$.getValue().WebMunicipality.InfrastructureModelList,\r\n                    // ...[this.appLoadedService.AppLoaded$.getValue().WebMunicipality.TVItemModel]\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().MunicipalitySubComponent == MunicipalitySubComponentEnum.MIKEScenarios) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    // ...this.appLoadedService.AppLoaded$.getValue().WebMunicipality.InfrastructureModelList,\r\n                    // ...[this.appLoadedService.AppLoaded$.getValue().WebMunicipality.TVItemModel]\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().MunicipalitySubComponent == MunicipalitySubComponentEnum.Files) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    // ...this.appLoadedService.AppLoaded$.getValue().WebMunicipality.InfrastructureModelList,\r\n                    // ...[this.appLoadedService.AppLoaded$.getValue().WebMunicipality.TVItemModel]\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is log book component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-log-book-item',\n  templateUrl: './log-book-item.component.html',\n  styleUrls: ['./log-book-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LogBookItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { GetAscDescEnum } from 'src/app/enums/generated/AscDescEnum';\nimport { GetSectorSubComponentEnum } from 'src/app/enums/generated/SectorSubComponentEnum';\nimport { GetSortOrderAngularEnum } from 'src/app/enums/generated/SortOrderAngularEnum';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { ComponentShowService } from 'src/app/services/helpers/component-show.service';\nimport { StatCountService } from 'src/app/services/helpers/stat-count.service';\nimport { TVItemSortOrderService } from 'src/app/services/helpers/tvitem-sort-order.service';\nimport { WebSectorService } from 'src/app/services/loaders/web-sector.service';\n\n@Component({\n  selector: 'app-sector-item',\n  templateUrl: './sector-item.component.html',\n  styleUrls: ['./sector-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SectorItemComponent implements OnInit, OnDestroy {\n  sectorSubComponentEnum = GetSectorSubComponentEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  ascDescEnum = GetAscDescEnum();\n  sortOrderAngular = GetSortOrderAngularEnum();\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public webSectorService: WebSectorService,\n    public tvItemSortOrderService: TVItemSortOrderService,\n    public statCountService: StatCountService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public componentShowService: ComponentShowService) { }\n\n  ngOnInit(): void {\n    this.webSectorService.DoWebSector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSector(sectorSubComponentEnum.Subsectors)\"\n    (click)=\"componentShowService.ShowSector(sectorSubComponentEnum.Subsectors)\"\n    title=\"{{ appLanguageService.AppLanguage.SectorShowSubsectors[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.SectorSubsectors[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSector?.TVItemModel, tvTypeEnum.Subsector) }}&nbsp;&nbsp;\n        </span>                                                \n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SectorSubsectors, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SectorSubsectorsSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SectorSubsectors, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SectorSubsectorsSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSector(sectorSubComponentEnum.Files)\" \n(click)=\"componentShowService.ShowSector(sectorSubComponentEnum.Files)\"\n    title=\"{{ appLanguageService.AppLanguage.SectorShowFiles[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.SectorFiles[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSector?.TVItemModel, tvTypeEnum.File) }}/\n            {{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSector?.TVItemModel, tvTypeEnum.TotalFile) }}&nbsp;&nbsp;\n        </span>                                                        \n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionSector(sectorSubComponentEnum.MIKEScenarios)\"\n    (click)=\"componentShowService.ShowSector(sectorSubComponentEnum.MIKEScenarios)\"\n    title=\"{{ appLanguageService.AppLanguage.SectorShowMIKEScenarios[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.SectorMIKEScenarios[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebSector?.TVItemModel, tvTypeEnum.MikeScenario) }}&nbsp;&nbsp;\n        </span>                                                                \n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SectorMikeScenarios, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SectorMikeScenariosSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.SectorMikeScenarios, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().SectorMikeScenariosSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n\n<app-subsector-tvitem-list-item *ngIf=\"appStateService.AppState$?.getValue()?.SectorSubComponent == sectorSubComponentEnum.Subsectors\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebSector.TVItemModelSubsectorList\">\n</app-subsector-tvitem-list-item>\n\n<app-file-list *ngIf=\"appStateService.AppState$?.getValue()?.SectorSubComponent == sectorSubComponentEnum.Files\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVFileModelListList]=\"appLoadedService.AppLoaded$?.getValue()?.WebSector.TVFileModelList\">\n</app-file-list>\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: red;\">This is the mwqm site Edit component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebMWQMSitesService } from 'src/app/services/loaders/web-mwqm-sites.service';\n\n@Component({\n  selector: 'app-mwqm-site-item-edit',\n  templateUrl: './mwqm-site-item-edit.component.html',\n  styleUrls: ['./mwqm-site-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMSiteItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webMWQMSitesService: WebMWQMSitesService) { }\n\n  ngOnInit(): void {\n    this.webMWQMSitesService.DoWebMWQMSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { GoogleMapsModule } from '@angular/google-maps';\r\nimport { MaterialModule } from 'src/app/app-material.module';\r\nimport { FileListItemDetailComponent } from 'src/app/components/files/file-list-item-detail/file-list-item-detail.component';\r\nimport { FileListItemComponent } from 'src/app/components/files/file-list-item/file-list-item.component';\r\nimport { FileListComponent } from 'src/app/components/files/file-list/file-list.component';\r\nimport { FileUploadComponent } from 'src/app/components/files/file-upload/file-upload.component';\r\nimport { BreadCrumbComponent } from 'src/app/components/helpers/bread-crumb/bread-crumb.component';\r\nimport { ErrorComponent } from 'src/app/components/helpers/error/error.component';\r\nimport { FooterComponent } from 'src/app/components/helpers/footer/footer.component';\r\nimport { SearchOptionComponent } from 'src/app/components/helpers/search-option/search-option.component';\r\nimport { SearchComponent } from 'src/app/components/helpers/search/search.component';\r\nimport { StatCountComponent } from 'src/app/components/helpers/stat-count/stat-count.component';\r\nimport { MapItemComponent } from 'src/app/components/map/map-item/map-item.component';\r\nimport { SideNavMenuComponent } from 'src/app/components/sidenavs/sidenav-menu/sidenav-menu.component';\r\nimport { AreaTVItemListDetailComponent } from 'src/app/components/area/area-tvitem-list-detail/area-tvitem-list-detail.component';\r\nimport { AnalysisDataVisibleComponent } from './components/analysis/analysis-data-visible/analysis-data-visible.component';\r\nimport { AnalysisOptionsComponent } from './components/analysis/analysis-options/analysis-options.component';\r\nimport { LastUpdateTVFileModelComponent } from './components/helpers/last-update-tvfilemodel/last-update-tvfilemodel.component';\r\nimport { LastUpdateTVItemModelComponent } from './components/helpers/last-update-tvitemmodel/last-update-tvitemmodel.component';\r\nimport { AreaTVItemListItemComponent } from './components/area/area-tvitem-list-item/area-tvitem-list-item.component';\r\nimport { AnalysisItemComponent } from './components/analysis/analysis-item/analysis-item.component';\r\nimport { AreaItemComponent } from './components/area/area-item/area-item.component';\r\nimport { CountryItemComponent } from './components/country/country-item/country-item.component';\r\nimport { CountryTVItemListDetailComponent } from './components/country/country-tvitem-list-detail/country-tvitem-list-detail.component';\r\nimport { CountryTVItemListItemComponent } from './components/country/country-tvitem-list-item/country-tvitem-list-item.component';\r\nimport { ContactItemComponent } from './components/contact/contact-item/contact-item.component';\r\nimport { EmailDistributionListItemComponent } from './components/email-distribution-list/email-distribution-list-item/email-distribution-list-item.component';\r\nimport { ExportArcGISItemComponent } from './components/export-arc-gis/export-arc-gis-item/export-arc-gis-item.component';\r\nimport { InfrastructureItemComponent } from './components/infrastructure/infrastructure-item/infrastructure-item.component';\r\nimport { LogBookItemComponent } from './components/log-book/log-book-item/log-book-item.component';\r\nimport { MikeScenarioItemComponent } from './components/mike-scenario/mike-scenario-item/mike-scenario-item.component';\r\nimport { MunicipalityItemComponent } from './components/municipality/municipality-item/municipality-item.component';\r\nimport { OpenDataNationalItemComponent } from './components/open-data-national/open-data-national-item/open-data-national-item.component';\r\nimport { ProvincialToolsItemComponent } from './components/provincial-tools/provincial-tools-item/provincial-tools-item.component';\r\nimport { RainExceedanceItemComponent } from './components/rain-exceedance/rain-exceedance-item/rain-exceedance-item.component';\r\nimport { SamplingPlanItemComponent } from './components/sampling-plan/sampling-plan-item/sampling-plan-item.component';\r\nimport { SubsectorToolsItemComponent } from './components/subsector-tools/subsector-tools-item/subsector-tools-item.component';\r\nimport { HomeItemComponent } from './components/home/home-item/home-item.component';\r\nimport { ProvinceItemComponent } from './components/province/province-item/province-item.component';\r\nimport { RootItemComponent } from './components/root/root-item/root-item.component';\r\nimport { SectorItemComponent } from './components/sector/sector-item/sector-item.component';\r\nimport { ShellItemComponent } from './components/shell/shell-item/shell-item.component';\r\nimport { SubsectorItemComponent } from './components/subsector/subsector-item/subsector-item.component';\r\nimport { MapMenuComponent } from './components/map/map-menu/map-menu.component';\r\nimport { MikeScenarioTVItemListDetailComponent } from './components/mike-scenario/mike-scenario-tvitem-list-detail/mike-scenario-tvitem-list-detail.component';\r\nimport { MikeScenarioTVItemListItemComponent } from './components/mike-scenario/mike-scenario-tvitem-list-item/mike-scenario-tvitem-list-item.component';\r\nimport { MunicipalityTVItemListDetailComponent } from './components/municipality/municipality-tvitem-list-detail/municipality-tvitem-list-detail.component';\r\nimport { MunicipalityTVItemListItemComponent } from './components/municipality/municipality-tvitem-list-item/municipality-tvitem-list-item.component';\r\nimport { MWQMRunItemComponent } from './components/mwqm-run/mwqm-run-item/mwqm-run-item.component';\r\nimport { MWQMRunTVItemListDetailComponent } from './components/mwqm-run/mwqm-run-tvitem-list-detail/mwqm-run-tvitem-list-detail.component';\r\nimport { MWQMRunTVItemListItemComponent } from './components/mwqm-run/mwqm-run-tvitem-list-item/mwqm-run-tvitem-list-item.component';\r\nimport { MWQMSiteItemComponent } from './components/mwqm-site/mwqm-site-item/mwqm-site-item.component';\r\nimport { MWQMSiteTVItemListDetailComponent } from './components/mwqm-site/mwqm-site-tvitem-list-detail/mwqm-site-tvitem-list-detail.component';\r\nimport { MWQMSiteTVItemListItemComponent } from './components/mwqm-site/mwqm-site-tvitem-list-item/mwqm-site-tvitem-list-item.component';\r\nimport { OpenDataItemComponent } from './components/open-data/open-data-item/open-data-item.component';\r\nimport { PolSourceSiteItemComponent } from './components/pol-source-site/pol-source-site-item/pol-source-site-item.component';\r\nimport { PolSourceSiteTVItemListDetailComponent } from './components/pol-source-site/pol-source-site-tvitem-list-detail/pol-source-site-tvitem-list-detail.component';\r\nimport { PolSourceSiteTVItemListItemComponent } from './components/pol-source-site/pol-source-site-tvitem-list-item/pol-source-site-tvitem-list-item.component';\r\nimport { ProvinceTVItemListDetailComponent } from './components/province/province-tvitem-list-detail/province-tvitem-list-detail.component';\r\nimport { ProvinceTVItemListItemComponent } from './components/province/province-tvitem-list-item/province-tvitem-list-item.component';\r\nimport { SectorTVItemListDetailComponent } from './components/sector/sector-tvitem-list-detail/sector-tvitem-list-detail.component';\r\nimport { SectorTVItemListItemComponent } from './components/sector/sector-tvitem-list-item/sector-tvitem-list-item.component';\r\nimport { SubsectorTVItemListDetailComponent } from './components/subsector/subsector-tvitem-list-detail/subsector-tvitem-list-detail.component';\r\nimport { SubsectorTVItemListItemComponent } from './components/subsector/subsector-tvitem-list-item/subsector-tvitem-list-item.component';\r\nimport { MWQMSiteTVItemListItemSpecialComponent } from './components/mwqm-site/mwqm-site-tvitem-list-item-special/mwqm-site-tvitem-list-item-special.component';\r\nimport { AnalysisItemMenuComponent } from './components/analysis/analysis-item-menu/analysis-item-menu.component';\r\nimport { MWQMSiteItemEditComponent } from './components/mwqm-site/mwqm-site-item-edit/mwqm-site-item-edit.component';\r\nimport { PolSourceSiteItemEditComponent } from './components/pol-source-site/pol-source-site-item-edit/pol-source-site-item-edit.component';\r\nimport { MWQMRunItemEditComponent } from './components/mwqm-run/mwqm-run-item-edit/mwqm-run-item-edit.component';\r\nimport { AreaItemEditComponent } from './components/area/area-item-edit/area-item-edit.component';\r\nimport { TVItemMenuComponent } from './components/helpers/tvitem-menu/tvitem-menu.component';\r\nimport { CountryItemModifyComponent } from './components/country/country-item-modify/country-item-modify.component';\r\nimport { ProvinceItemEditComponent } from './components/province/province-item-edit/province-item-edit.component';\r\nimport { MunicipalityItemEditComponent } from './components/municipality/municipality-item-edit/municipality-item-edit.component';\r\nimport { TVFileMenuComponent } from './components/helpers/tvfile-menu/tvfile-menu.component';\r\nimport { FileListItemEditComponent } from './components/files/file-list-item-edit/file-list-item-edit.component';\r\nimport { SubsectorItemEditComponent } from './components/subsector/subsector-item-edit/subsector-item-edit.component';\r\nimport { SectorItemEditComponent } from './components/sector/sector-item-edit/sector-item-edit.component';\r\nimport { MikeScenarioItemEditComponent } from './components/mike-scenario/mike-scenario-item-edit/mike-scenario-item-edit.component';\r\nimport { FileListItemViewComponent } from './components/files/file-list-item-view/file-list-item-view.component';\r\nimport { AreaItemViewComponent } from './components/area/area-item-view/area-item-view.component';\r\nimport { CountryItemViewComponent } from './components/country/country-item-view/country-item-view.component';\r\nimport { MikeScenarioItemViewComponent } from './components/mike-scenario/mike-scenario-item-view/mike-scenario-item-view.component';\r\nimport { MunicipalityItemViewComponent } from './components/municipality/municipality-item-view/municipality-item-view.component';\r\nimport { MWQMRunItemViewComponent } from './components/mwqm-run/mwqm-run-item-view/mwqm-run-item-view.component';\r\nimport { MWQMSiteItemViewComponent } from './components/mwqm-site/mwqm-site-item-view/mwqm-site-item-view.component';\r\nimport { PolSourceSiteItemViewComponent } from './components/pol-source-site/pol-source-site-item-view/pol-source-site-item-view.component';\r\nimport { ProvinceItemViewComponent } from './components/province/province-item-view/province-item-view.component';\r\nimport { SectorItemViewComponent } from './components/sector/sector-item-view/sector-item-view.component';\r\nimport { SubsectorItemViewComponent } from './components/subsector/subsector-item-view/subsector-item-view.component';\r\nimport { CountryItemCreateComponent } from './components/country/country-item-create/country-item-create.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AnalysisDataVisibleComponent,\r\n    AnalysisItemComponent,\r\n    AnalysisItemMenuComponent,\r\n    AnalysisOptionsComponent,\r\n    AreaItemComponent,\r\n    AreaItemEditComponent,\r\n    AreaItemViewComponent,\r\n    AreaTVItemListDetailComponent,\r\n    AreaTVItemListItemComponent,\r\n    BreadCrumbComponent,\r\n    ContactItemComponent,\r\n    CountryItemComponent,\r\n    CountryItemCreateComponent,\r\n    CountryItemModifyComponent,\r\n    CountryItemViewComponent,\r\n    CountryTVItemListDetailComponent,\r\n    CountryTVItemListItemComponent,\r\n    EmailDistributionListItemComponent,\r\n    ErrorComponent,\r\n    ExportArcGISItemComponent,\r\n    FileListComponent,\r\n    FileListItemComponent,\r\n    FileListItemDetailComponent,\r\n    FileListItemEditComponent,\r\n    FileListItemViewComponent,\r\n    FileUploadComponent,\r\n    FooterComponent,\r\n    HomeItemComponent,\r\n    InfrastructureItemComponent,\r\n    LastUpdateTVFileModelComponent,\r\n    LastUpdateTVItemModelComponent,\r\n    LogBookItemComponent,\r\n    MapItemComponent,\r\n    MapMenuComponent,\r\n    MikeScenarioItemComponent,\r\n    MikeScenarioItemEditComponent,\r\n    MikeScenarioItemViewComponent,\r\n    MikeScenarioTVItemListDetailComponent,\r\n    MikeScenarioTVItemListItemComponent,\r\n    MunicipalityItemComponent,\r\n    MunicipalityItemEditComponent,\r\n    MunicipalityItemViewComponent,\r\n    MunicipalityTVItemListDetailComponent,\r\n    MunicipalityTVItemListItemComponent,\r\n    MWQMRunItemComponent,\r\n    MWQMRunItemEditComponent,\r\n    MWQMRunItemViewComponent,\r\n    MWQMRunTVItemListDetailComponent,\r\n    MWQMRunTVItemListItemComponent,\r\n    MWQMSiteItemComponent,\r\n    MWQMSiteItemEditComponent,\r\n    MWQMSiteItemViewComponent,\r\n    MWQMSiteTVItemListDetailComponent,\r\n    MWQMSiteTVItemListItemComponent,\r\n    MWQMSiteTVItemListItemSpecialComponent,\r\n    OpenDataItemComponent,\r\n    OpenDataNationalItemComponent,\r\n    PolSourceSiteItemComponent,\r\n    PolSourceSiteItemEditComponent,\r\n    PolSourceSiteItemViewComponent,\r\n    PolSourceSiteTVItemListDetailComponent,\r\n    PolSourceSiteTVItemListItemComponent,\r\n    ProvinceItemComponent,\r\n    ProvinceItemEditComponent,\r\n    ProvinceItemViewComponent,\r\n    ProvinceTVItemListDetailComponent,\r\n    ProvinceTVItemListItemComponent,\r\n    ProvincialToolsItemComponent,\r\n    RainExceedanceItemComponent,\r\n    RootItemComponent,\r\n    SamplingPlanItemComponent,\r\n    SearchComponent,\r\n    SearchOptionComponent,\r\n    SectorItemComponent,\r\n    SectorItemEditComponent,\r\n    SectorItemViewComponent,\r\n    SectorTVItemListDetailComponent,\r\n    SectorTVItemListItemComponent,\r\n    ShellItemComponent,\r\n    SideNavMenuComponent,\r\n    StatCountComponent,\r\n    SubsectorItemComponent,\r\n    SubsectorItemEditComponent,\r\n    SubsectorItemViewComponent,\r\n    SubsectorTVItemListDetailComponent,\r\n    SubsectorTVItemListItemComponent,\r\n    SubsectorToolsItemComponent,\r\n    TVFileMenuComponent,\r\n    TVItemMenuComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    GoogleMapsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    GoogleMapsModule,\r\n    MaterialModule,\r\n    ReactiveFormsModule,\r\n\r\n    AnalysisDataVisibleComponent,\r\n    AnalysisItemComponent,\r\n    AnalysisItemMenuComponent,\r\n    AnalysisOptionsComponent,\r\n    AreaItemComponent,\r\n    AreaItemEditComponent,\r\n    AreaItemViewComponent,\r\n    AreaTVItemListDetailComponent,\r\n    AreaTVItemListItemComponent,\r\n    BreadCrumbComponent,\r\n    ContactItemComponent,\r\n    CountryItemComponent,\r\n    CountryItemCreateComponent,\r\n    CountryItemModifyComponent,\r\n    CountryItemViewComponent,\r\n    CountryTVItemListDetailComponent,\r\n    CountryTVItemListItemComponent,\r\n    EmailDistributionListItemComponent,\r\n    ErrorComponent,\r\n    ExportArcGISItemComponent,\r\n    FileListComponent,\r\n    FileListItemComponent,\r\n    FileListItemDetailComponent,\r\n    FileListItemEditComponent,\r\n    FileListItemViewComponent,\r\n    FileUploadComponent,\r\n    FooterComponent,\r\n    HomeItemComponent,\r\n    InfrastructureItemComponent,\r\n    LastUpdateTVFileModelComponent,\r\n    LastUpdateTVItemModelComponent,\r\n    LogBookItemComponent,\r\n    MapItemComponent,\r\n    MapMenuComponent,\r\n    MikeScenarioItemComponent,\r\n    MikeScenarioItemEditComponent,\r\n    MikeScenarioItemViewComponent,\r\n    MikeScenarioTVItemListDetailComponent,\r\n    MikeScenarioTVItemListItemComponent,\r\n    MunicipalityItemComponent,\r\n    MunicipalityItemEditComponent,\r\n    MunicipalityItemViewComponent,\r\n    MunicipalityTVItemListDetailComponent,\r\n    MunicipalityTVItemListItemComponent,\r\n    MWQMRunItemComponent,\r\n    MWQMRunItemEditComponent,\r\n    MWQMRunItemViewComponent,\r\n    MWQMRunTVItemListDetailComponent,\r\n    MWQMRunTVItemListItemComponent,\r\n    MWQMSiteItemComponent,\r\n    MWQMSiteItemEditComponent,\r\n    MWQMSiteItemViewComponent,\r\n    MWQMSiteTVItemListDetailComponent,\r\n    MWQMSiteTVItemListItemComponent,\r\n    MWQMSiteTVItemListItemSpecialComponent,\r\n    OpenDataItemComponent,\r\n    OpenDataNationalItemComponent,\r\n    PolSourceSiteItemComponent,\r\n    PolSourceSiteItemEditComponent,\r\n    PolSourceSiteItemViewComponent,\r\n    PolSourceSiteTVItemListDetailComponent,\r\n    PolSourceSiteTVItemListItemComponent,\r\n    ProvinceItemComponent,\r\n    ProvinceItemEditComponent,\r\n    ProvinceItemViewComponent,\r\n    ProvinceTVItemListDetailComponent,\r\n    ProvinceTVItemListItemComponent,\r\n    ProvincialToolsItemComponent,\r\n    RainExceedanceItemComponent,\r\n    RootItemComponent,\r\n    SamplingPlanItemComponent,\r\n    SearchComponent,\r\n    SearchOptionComponent,\r\n    SectorItemComponent,\r\n    SectorItemEditComponent,\r\n    SectorItemViewComponent,\r\n    SectorTVItemListDetailComponent,\r\n    SectorTVItemListItemComponent,\r\n    ShellItemComponent,\r\n    SideNavMenuComponent,\r\n    StatCountComponent,\r\n    SubsectorItemComponent,\r\n    SubsectorItemEditComponent,\r\n    SubsectorItemViewComponent,\r\n    SubsectorTVItemListDetailComponent,\r\n    SubsectorTVItemListItemComponent,\r\n    SubsectorToolsItemComponent,\r\n    TVFileMenuComponent,\r\n    TVItemMenuComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n ","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\n@Component({\r\n  selector: 'app-country-item-modify',\r\n  templateUrl: './country-item-modify.component.html',\r\n  styleUrls: ['./country-item-modify.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CountryItemModifyComponent implements OnInit, OnDestroy {\r\n  @Input() TVItemModel: TVItemModel;\r\n  @Input() AppState: AppState;\r\n\r\n  formCountryModify: FormGroup;\r\n\r\n  get f() { return this.formCountryModify.controls; }\r\n\r\n  constructor(public appStateService: AppStateService,\r\n    public appLoadedService: AppLoadedService,\r\n    public appLanguageService: AppLanguageService,\r\n    private fb: FormBuilder) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formCountryModify = this.fb.group({\r\n      TVText: [this.TVItemModel.TVItemLanguageList[<number>this.appStateService.AppState$.getValue().Language].TVText,\r\n      [\r\n        Validators.required,\r\n        //Validators.email,\r\n      ]],\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  Modify() {\r\n    console.debug(this.formCountryModify.value);\r\n    console.debug(this.TVItemModel);\r\n  }\r\n\r\n}\r\n","<form [formGroup]=\"formCountryModify\" (ngSubmit)=\"Modify()\">\r\n    <mat-form-field>\r\n        <mat-label>Country Name</mat-label>\r\n        <input matInput formControlName=\"TVText\" />\r\n        <mat-error *ngIf=\"f.TVText?.errors?.required\">Required</mat-error>\r\n    </mat-form-field>\r\n    <button mat-button type=\"submit\" [disabled]=\"!formCountryModify.valid\">Modify</button>\r\n</form>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllTels } from 'src/app/models/generated/web/WebAllTels.model';\r\nimport { WebAllTideLocationsService } from 'src/app/services/loaders/web-all-tide-locations.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllTelsService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllTideLocationsServices: WebAllTideLocationsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllTels(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllTels) {\r\n          this.KeepWebAllTels();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllTels().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllTels() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllTels: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllTels }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllTels`;\r\n        return this.httpClient.get<WebAllTels>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllTels(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllTideLocations();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllTideLocations() {\r\n        this.webAllTideLocationsServices.DoWebAllTideLocations(this.DoOther);\r\n    }\r\n    \r\n    private KeepWebAllTels() {\r\n        this.UpdateWebAllTels(this.appLoadedService.AppLoaded$?.getValue()?.WebAllTels);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllHelpDocs);\r\n        if (this.DoOther) {\r\n            this.DoWebAllTideLocations();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllTels(x: WebAllTels) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllTels: x, });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllTels()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: lightskyblue;\">This is the subsector view component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-subsector-item-view',\n  templateUrl: './subsector-item-view.component.html',\n  styleUrls: ['./subsector-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SubsectorItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AllMunicipalityModel } from 'src/app/models/generated/web/AllMunicipalityModel.model';\r\n\r\nexport class WebAllMunicipalities {\r\n    AllMunicipalityModelList: AllMunicipalityModel[];\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum MunicipalitySubComponentEnum {\r\n    Infrastructures = 1,\r\n    MIKEScenarios = 2,\r\n    Contacts = 3,\r\n    Files = 4,\r\n}\r\n\r\nexport function GetMunicipalitySubComponentEnum(): typeof MunicipalitySubComponentEnum\r\n{\r\n  return MunicipalitySubComponentEnum;\r\n}\r\n\r\nexport function MunicipalitySubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Infrastructures' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Scénarios MIKE' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Personnes-ressources' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Fichiers' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Infrastructures' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'MIKE Scenarios' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Contacts' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Files' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function MunicipalitySubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    MunicipalitySubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { _isNumberValue } from '@angular/cdk/coercion';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { of } from 'rxjs';\r\nimport { catchError, debounceTime, distinctUntilChanged, map, startWith, tap } from 'rxjs/operators';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { SearchResult } from 'src/app/models/generated/helper/SearchResult.model';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLoadedService } from '../app-loaded.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appLoadedService: AppLoadedService,\r\n        private appStateService: AppStateService) {\r\n    }\r\n\r\n    GetSearch(myControl: FormControl) {\r\n        return myControl.valueChanges.pipe(\r\n            startWith(''),\r\n            debounceTime(500),\r\n            distinctUntilChanged(),\r\n            tap(term => {\r\n                this.GetSearchData(term);\r\n            }));\r\n    }\r\n\r\n    private GetSearchData(term: string) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ SearchResult: [] });\r\n        this.appStateService.UpdateAppState(<AppState>{ SearchWorking: true });\r\n        term = ('' + term).trim();\r\n        if (!term) {\r\n            of([]).pipe(\r\n                tap(() => {\r\n                    this.appStateService.UpdateAppState(<AppState>{ SearchWorking: false });\r\n                    console.debug(\"Clean Search Result\");\r\n                })\r\n            ).subscribe();\r\n        }\r\n        else {           \r\n            this.httpClient.get<SearchResult>(`${this.appLoadedService.BaseApiUrl}${this.appStateService.AppState$.getValue().Language}-CA/search/${term}/1`).pipe(\r\n                map((x: any) => {\r\n                    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ SearchResult: x });\r\n                    this.appStateService.UpdateAppState(<AppState>{ SearchWorking: false });\r\n                    console.debug(x);\r\n                }),\r\n                catchError(e => of(e).pipe(map(e => {\r\n                    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ SearchResult: [] });\r\n                    this.appStateService.UpdateAppState(<AppState>{ SearchWorking: false, Error: <HttpErrorResponse>e });\r\n                    console.debug(e);\r\n                })))\r\n            ).subscribe();\r\n        }\r\n    }\r\n}","<p class=\"error\" *ngIf=\"Error\">\n    {{ Error?.message }}\n    <button mat-button (click)=\"ClearErrorMessage()\">X</button>\n</p>\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AppState } from 'src/app/models/AppState.model';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ErrorComponent implements OnInit, OnDestroy {\n  @Input() Error: HttpErrorResponse;\n\n  constructor(private appStateService: AppStateService) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  ClearErrorMessage() {\n    this.appStateService.UpdateAppState(<AppState>{ Error: null });\n  }\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllAddresses } from 'src/app/models/generated/web/WebAllAddresses.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllContactsService } from 'src/app/services/loaders/web-all-contacts.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllAddressesService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n  \r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllContactsService: WebAllContactsService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllAddresses(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllAddresses) {\r\n          this.KeepWebAllAddresses();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllAddresses().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllAddresses() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllAddresses: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllAddresses }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllAddresses`;\r\n        return this.httpClient.get<WebAllAddresses>(url).pipe(\r\n            map((x: WebAllAddresses) => {\r\n                this.UpdateWebAllAddresses(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllContacts();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllContacts() {\r\n        this.webAllContactsService.DoWebAllContacts(this.DoOther);\r\n    }\r\n\r\n    private KeepWebAllAddresses() {\r\n        this.UpdateWebAllAddresses(this.appLoadedService.AppLoaded$?.getValue()?.WebAllAddresses);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllAddresses);\r\n        if (this.DoOther) {\r\n            this.DoWebAllContacts();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllAddresses(x: WebAllAddresses) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllAddresses: x });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllAddresses()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n\r\n        }\r\n    }\r\n}","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: darkgoldenrod;\">This is the province view component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-province-item-view',\n  templateUrl: './province-item-view.component.html',\n  styleUrls: ['./province-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProvinceItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebDrogueRuns} from 'src/app/models/generated/web/WebDrogueRuns.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebMWQMSamplesService } from './web-mwqm-samples.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebDrogueRunsService {\r\n    private TVItemID: number;\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webMWQMSamplesService: WebMWQMSamplesService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebDrogueRuns(TVItemID: number, DoOther: boolean) {\r\n        this.TVItemID = TVItemID;\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebDrogueRuns) {\r\n            this.KeepWebDrogueRuns();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebDrogueRuns().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebDrogueRuns() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebDrogueRuns: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebDrogueRuns }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebDrogueRuns/${this.TVItemID}`;\r\n        return this.httpClient.get<WebDrogueRuns>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebDrogueRuns(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebMWQMSamples();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebMWQMSamples() {\r\n        this.webMWQMSamplesService.DoWebMWQMSamples(this.TVItemID, true);\r\n    }\r\n\r\n    private KeepWebDrogueRuns() {\r\n        this.UpdateWebDrogueRuns(this.appLoadedService.AppLoaded$?.getValue()?.WebDrogueRuns);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebDrogueRuns);\r\n        if (this.DoOther) {\r\n            this.DoWebMWQMSamples();\r\n        }\r\n    }\r\n\r\n    private UpdateWebDrogueRuns(x: WebDrogueRuns) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebDrogueRuns: x });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebSubsector()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebDrogueRuns()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AddressModel } from 'src/app/models/generated/web/AddressModel.model';\r\n\r\nexport class WebAllAddresses {\r\n    AddressModelList: AddressModel[];\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllProvinces } from 'src/app/models/generated/web/WebAllProvinces.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllReportTypesService } from 'src/app/services/loaders/web-all-report-types.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllProvincesService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllReportTypesService: WebAllReportTypesService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllProvinces(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n    \r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllProvinces) {\r\n          this.KeepWebAllProvinces();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllProvinces().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllProvinces() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllProvinces: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllProvinces }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllProvinces`;\r\n        return this.httpClient.get<WebAllProvinces>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllProvinces(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllReportTypes();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllReportTypes() {\r\n        this.webAllReportTypesService.DoWebAllReportTypes(this.DoOther);\r\n    }\r\n    \r\n    private KeepWebAllProvinces() {\r\n        this.UpdateWebAllProvinces(this.appLoadedService.AppLoaded$?.getValue()?.WebAllProvinces);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllProvinces);\r\n        if (this.DoOther) {\r\n            this.DoWebAllReportTypes();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllProvinces(x: WebAllProvinces) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllProvinces: x, });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllProvinces()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the mwqm run component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebMWQMRunsService } from 'src/app/services/loaders/web-mwqm-runs.service';\n\n@Component({\n  selector: 'app-mwqm-run-item',\n  templateUrl: './mwqm-run-item.component.html',\n  styleUrls: ['./mwqm-run-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MWQMRunItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webMWQMRunsService: WebMWQMRunsService) { }\n\n  ngOnInit(): void {\n    this.webMWQMRunsService.DoWebMWQMRuns(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-subsector-tvitem-list-detail',\n  templateUrl: './subsector-tvitem-list-detail.component.html',\n  styleUrls: ['./subsector-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SubsectorTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  get tvTypeEnum(): typeof TVTypeEnum {\n    return TVTypeEnum;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n}\n","<blockquote>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSiteSample\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSubsectorMWQMSample[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSiteSample\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSubsectorMWQMSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMRun\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSubsectorMWQMRun[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMRun\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.PolSourceSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailSubsectorPolSourceSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.PolSourceSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <hr />\r\n</blockquote>","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum FilePurposeEnum {\r\n    MikeInput = 1,\r\n    MikeInputMDF = 2,\r\n    MikeResultDFSU = 3,\r\n    MikeResultKMZ = 4,\r\n    Information = 5,\r\n    Image = 6,\r\n    Picture = 7,\r\n    ReportGenerated = 8,\r\n    TemplateGenerated = 9,\r\n    GeneratedFCForm = 10,\r\n    Template = 11,\r\n    Map = 12,\r\n    Analysis = 13,\r\n    OpenData = 14,\r\n}\r\n\r\nexport function GetFilePurposeEnum(): typeof FilePurposeEnum\r\n{\r\n  return FilePurposeEnum;\r\n}\r\n\r\nexport function FilePurposeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'MIKE données d\\'entrées' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'MIKE données d\\'entrées MDF' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MIKE résultats DFSU' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'MIKE résultats KMZ' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Information' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Image' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'Photo' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'Rapport généré' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'Générer à partir de modèle' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'Formulaire CF' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'Modèle' });\r\n        enumTextOrderedList.push({ EnumID: 12, EnumText: 'Carte' });\r\n        enumTextOrderedList.push({ EnumID: 13, EnumText: 'Analyses' });\r\n        enumTextOrderedList.push({ EnumID: 14, EnumText: 'Données ouvertes' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'MIKE Input' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'MIKE Input MDF' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'MIKE Result DFSU' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'MIKE Result KMZ' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Information' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Image' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'Picture' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'Report Generated' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'Template Generated' });\r\n        enumTextOrderedList.push({ EnumID: 10, EnumText: 'Generated FC Form' });\r\n        enumTextOrderedList.push({ EnumID: 11, EnumText: 'Template' });\r\n        enumTextOrderedList.push({ EnumID: 12, EnumText: 'Map' });\r\n        enumTextOrderedList.push({ EnumID: 13, EnumText: 'Analysis' });\r\n        enumTextOrderedList.push({ EnumID: 14, EnumText: 'Open Data' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function FilePurposeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    FilePurposeEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the infrastructure component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-infrastructure-item',\n  templateUrl: './infrastructure-item.component.html',\n  styleUrls: ['./infrastructure-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class InfrastructureItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum AnalysisCalculationTypeEnum {\r\n    All = 1,\r\n    Wet = 2,\r\n    Dry = 3,\r\n}\r\n\r\nexport function GetAnalysisCalculationTypeEnum(): typeof AnalysisCalculationTypeEnum\r\n{\r\n  return AnalysisCalculationTypeEnum;\r\n}\r\n\r\nexport function AnalysisCalculationTypeEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'All' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Wet' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Dry' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'All' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Wet' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Dry' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function AnalysisCalculationTypeEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    AnalysisCalculationTypeEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: greenyellow;\">This is the sector edit component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-sector-item-edit',\n  templateUrl: './sector-item-edit.component.html',\n  styleUrls: ['./sector-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SectorItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLoaded } from '../models/AppLoaded.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppLoadedService {\r\n  AppLoaded$: BehaviorSubject<AppLoaded> = new BehaviorSubject<AppLoaded>(<AppLoaded>{});\r\n  BaseApiUrl = 'https://localhost:4447/api/'; \r\n  //BaseApiUrl = 'https://localhost:44346/api/';\r\n\r\n  constructor(public httpClient: HttpClient,\r\n    public appStateService: AppStateService) {\r\n  }\r\n\r\n  UpdateAppLoaded(appLoaded: AppLoaded) {\r\n    this.AppLoaded$.next(<AppLoaded>{ ...this.AppLoaded$.getValue(), ...appLoaded });\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllTideLocations } from 'src/app/models/generated/web/WebAllTideLocations.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllTideLocationsService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllTideLocations(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllTideLocations?.TideLocationList?.length > 0) {\r\n            this.KeepWebAllTideLocations();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebAllTideLocations().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebAllTideLocations() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllTideLocations: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllTideLocations }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllTideLocations`;\r\n        return this.httpClient.get<WebAllTideLocations>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllTideLocations(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    // nothing more to add in the chain\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private KeepWebAllTideLocations() {\r\n        this.UpdateWebAllTideLocations(this.appLoadedService.AppLoaded$?.getValue()?.WebAllTideLocations);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllTideLocations);\r\n        if (this.DoOther) {\r\n            // nothing more to add in the chain\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllTideLocations(x: WebAllTideLocations) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllTideLocations: x });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllTideLocations()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is subsector tools component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-subsector-tools-item',\n  templateUrl: './subsector-tools-item.component.html',\n  styleUrls: ['./subsector-tools-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SubsectorToolsItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StatCountService {\r\n\r\n  constructor() {\r\n  }\r\n\r\n  GetStatCount(tvItemStatMapModel: TVItemModel, tvType?: TVTypeEnum): string {\r\n    let count = 0;\r\n    if (tvItemStatMapModel) {\r\n      if (tvType == null) { \r\n        tvItemStatMapModel.TVItemStatList.filter((c) => { count += c.ChildCount });\r\n      }\r\n      else {\r\n        let tvItemStat = tvItemStatMapModel.TVItemStatList.filter((c) => { return c.TVType == tvType });\r\n        if (tvItemStat.length > 0) {\r\n          count = tvItemStat[0].ChildCount;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return count.toString();\r\n  }\r\n}\r\n","import { DOCUMENT } from '@angular/common';\nimport { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input, Inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { DateFormatService } from 'src/app/services/helpers/date-format.service';\nimport { Download } from 'src/app/services/helpers/file-download';\nimport { DownloadService } from 'src/app/services/helpers/file-download.service';\nimport { FileIconService } from 'src/app/services/helpers/file-icon.service';\nimport { ShowTVFileService } from 'src/app/services/helpers/show-tvfile.service';\nimport { FileService } from 'src/app/services/loaders/file.service';\n\n@Component({\n  selector: 'app-file-list-item',\n  templateUrl: './file-list-item.component.html',\n  styleUrls: ['./file-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListItemComponent implements OnInit, OnDestroy {\n  @Input() TVFileModel: TVFileModel = null;\n  @Input() AppState: AppState;\n  @Input() Index: number;\n\n  languageEnum = GetLanguageEnum();\n  download$: Observable<Download>\n  \n  constructor(public appStateService: AppStateService,\n    public dateFormatService: DateFormatService,\n    public appLanguageService: AppLanguageService,\n    public fileIconService: FileIconService,\n    public fileService: FileService,\n    private downloads: DownloadService,\n    public showTVFileService: ShowTVFileService,\n    @Inject(DOCUMENT) private document: Document) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n  ShowCommands(tvFileModel: TVFileModel) {\n    alert(\"bonjour from ShowCommands\");\n  }\n\n  download(tvFileModel: TVFileModel) {\n    this.download$ = this.downloads.download(tvFileModel)\n  }\n}\n","<mat-list-item>\n    <span mat-line>\n        <app-tvfile-menu [TVFileModel]=\"TVFileModel\" [AppState]=\"AppState\">\n        </app-tvfile-menu>\n\n        <button mat-button (click)=\"download(TVFileModel)\">\n            <img src=\"{{ fileIconService.GetFileIcon(TVFileModel) }}\" />\n            <span>&nbsp;&nbsp;</span>\n            <span>{{ Index }} - {{ TVFileModel.TVFile.ServerFileName }} </span>\n            <span>| {{ TVFileModel.TVFile.FileSize_kb }} </span>\n            <span>{{ appLanguageService.AppLanguage.KB[appStateService.AppState$?.getValue().Language] }} | </span>\n            <span>{{ dateFormatService.GetFileCreateDate(TVFileModel) }}</span>\n            <app-last-udpate-tv-file-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n                [TVFileModel]=\"TVFileModel\"></app-last-udpate-tv-file-model>\n        </button>\n    </span>\n    <span mat-line *ngIf=\"download$ | async as download\">\n        <mat-progress-bar [mode]=\"download.state == 'PENDING' ? 'buffer' : 'determinate'\" [value]=\"download.progress\">\n        </mat-progress-bar>\n    </span>\n\n</mat-list-item>\n\n<ng-container *ngIf=\"showTVFileService.TVFileVisible(TVFileModel)\">\n    <app-file-list-item-view *ngIf=\"!AppState.EditVisible\" [TVFileModel]=\"TVFileModel\"\n        [AppState]=\"AppState\">\n    </app-file-list-item-view>\n\n    <app-file-list-item-edit *ngIf=\"AppState.EditVisible\" [TVFileModel]=\"TVFileModel\" [AppState]=\"AppState\">\n    </app-file-list-item-edit>\n</ng-container>\n\n<app-file-list-item-detail [AppState]=\"AppState\" *ngIf=\"AppState.DetailVisible\" [TVFileModel]=\"TVFileModel\">\n</app-file-list-item-detail>","<blockquote>\n    <span *ngIf=\"(appStateService.AppState$ | async).Working\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </span>\n    <p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n        {{ appStateService.AppState$?.getValue()?.Status }}\n    </p>\n\n    <p style=\"background-color: darkgoldenrod;\">This is the file edit component</p>\n</blockquote>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-file-list-item-edit',\n  templateUrl: './file-list-item-edit.component.html',\n  styleUrls: ['./file-list-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVFileModel: TVFileModel;\n  @Input() AppState: AppState;\n\n  \n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the rain exceedance component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-rain-exceedance-item',\n  templateUrl: './rain-exceedance-item.component.html',\n  styleUrls: ['./rain-exceedance-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RainExceedanceItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebSector {\r\n    TVFileModelList: TVFileModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelParentList: TVItemModel[];\r\n    TVItemModelSubsectorList: TVItemModel[];\r\n}\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { HelpDoc } from 'src/app/models/generated/db/HelpDoc.model';\r\n\r\nexport class WebAllHelpDocs {\r\n    HelpDocList: HelpDoc[];\r\n}\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { MWQMLookupMPN } from 'src/app/models/generated/db/MWQMLookupMPN.model';\r\n\r\nexport class WebAllMWQMLookupMPNs {\r\n    MWQMLookupMPNList: MWQMLookupMPN[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppStateService } from '../app-state.service';\r\nimport { PredicateAscByService } from 'src/app/services/helpers/predicate-asc-by.service';\r\nimport { TVItemID_TVText_Sort } from 'src/app/models/TVItemID_TVText_Sort.model';\r\nimport { MWQMSiteModel } from 'src/app/models/generated/web/MWQMSiteModel.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SortMWQMSiteModelListService {\r\n    constructor(private predicateAscByService: PredicateAscByService,\r\n        private appStateService: AppStateService) {\r\n    }\r\n\r\n    SortMWQMSiteModelListByTVTextAsc(arr: MWQMSiteModel[]): MWQMSiteModel[] {\r\n        let language: number = <number>this.appStateService.AppState$.getValue().Language;\r\n\r\n        if (!arr || arr.length == 0) return arr;\r\n\r\n        let mwqmSiteModelSorted: MWQMSiteModel[] = [];\r\n        let arr2: TVItemID_TVText_Sort[] = [];\r\n        let sortable: TVItemID_TVText_Sort[] = [];\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            sortable.push(<TVItemID_TVText_Sort>{\r\n                TVItemID: arr[i].TVItemModel.TVItem.TVItemID,\r\n                TVText: arr[i].TVItemModel.TVItemLanguageList[language].TVText,\r\n            });\r\n        }\r\n\r\n        arr2 = sortable.sort(this.predicateAscByService.PredicateAscBy('TVText'));\r\n\r\n        for (let i = 0; i < sortable.length; i++) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                if (arr2[i].TVItemID == arr[j].TVItemModel.TVItem.TVItemID) {\r\n                    mwqmSiteModelSorted.push(arr[j]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return mwqmSiteModelSorted;\r\n    }\r\n}\r\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { MWQMSiteModel } from 'src/app/models/generated/web/MWQMSiteModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebMWQMSites {\r\n    MWQMSiteModelList: MWQMSiteModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelParentList: TVItemModel[];\r\n}\r\n","<blockquote>\n    <span *ngIf=\"(appStateService.AppState$ | async).Working\">\n        <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n    </span>\n    <p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n        {{ appStateService.AppState$?.getValue()?.Status }}\n    </p>\n\n    <p style=\"background-color: chartreuse;\">This is the file view component</p>\n</blockquote>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-file-list-item-view',\n  templateUrl: './file-list-item-view.component.html',\n  styleUrls: ['./file-list-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVFileModel: TVFileModel;\n  @Input() AppState: AppState;\n\n  \n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllPolSourceSiteEffectTerms } from 'src/app/models/generated/web/WebAllPolSourceSiteEffectTerms.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllProvincesService } from 'src/app/services/loaders/web-all-provinces.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllPolSourceSiteEffectTermsService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllProvincesService: WebAllProvincesService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllPolSourceSiteEffectTerms(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllPolSourceSiteEffectTerms?.PolSourceSiteEffectTermList?.length > 0) {\r\n            this.KeepWebAllPolSourceSiteEffectTerms();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebAllPolSourceSiteEffectTerms().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebAllPolSourceSiteEffectTerms() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllPolSourceSiteEffectTerms: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllPolSourceSiteEffectTerms }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllPolSourceSiteEffectTerms`;\r\n        return this.httpClient.get<WebAllPolSourceSiteEffectTerms>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebAllPolSourceSiteEffectTerms(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllProvinces();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllProvinces() {\r\n        this.webAllProvincesService.DoWebAllProvinces(this.DoOther);\r\n    }\r\n\r\n    private KeepWebAllPolSourceSiteEffectTerms() {\r\n        this.UpdateWebAllPolSourceSiteEffectTerms(this.appLoadedService.AppLoaded$?.getValue()?.WebAllPolSourceSiteEffectTerms);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllPolSourceSiteEffectTerms);\r\n        if (this.DoOther) {\r\n            this.DoWebAllProvinces();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllPolSourceSiteEffectTerms(x: WebAllPolSourceSiteEffectTerms) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllPolSourceSiteEffectTerms: x });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebPolSourceSiteEffectTerms()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n    }\r\n}","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum CountrySubComponentEnum {\r\n    Provinces = 1,\r\n    Files = 2,\r\n    OpenDataNational = 3,\r\n    EmailDistributionList = 4,\r\n    RainExceedance = 5,\r\n}\r\n\r\nexport function GetCountrySubComponentEnum(): typeof CountrySubComponentEnum\r\n{\r\n  return CountrySubComponentEnum;\r\n}\r\n\r\nexport function CountrySubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Provinces (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Open Data National (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Email Distribution List (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Rain Exceedance (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Provinces' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Open Data National' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Email Distribution List' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Rain Exceedance' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function CountrySubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    CountrySubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum MWQMSiteSubComponentEnum {\r\n    Information = 1,\r\n    Files = 2,\r\n}\r\n\r\nexport function GetMWQMSiteSubComponentEnum(): typeof MWQMSiteSubComponentEnum\r\n{\r\n  return MWQMSiteSubComponentEnum;\r\n}\r\n\r\nexport function MWQMSiteSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Information' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Fichiers' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Information' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function MWQMSiteSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    MWQMSiteSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the email distribution list component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-email-distribution-list-item',\n  templateUrl: './email-distribution-list-item.component.html',\n  styleUrls: ['./email-distribution-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EmailDistributionListItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { WebSubsector } from 'src/app/models/generated/web/WebSubsector.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { StructureTVFileListService } from 'src/app/services/helpers/structure-tvfile-list.service';\r\nimport { SortTVItemListService } from 'src/app/services/helpers/sort-tvitem-list.service';\r\nimport { MapService } from 'src/app/services/map/map.service';\r\nimport { SubsectorSubComponentEnum } from 'src/app/enums/generated/SubsectorSubComponentEnum';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\nimport { WebMWQMSitesService } from 'src/app/services/loaders/web-mwqm-sites.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebSubsectorService {\r\n    private TVItemID: number;\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private sortTVItemListService: SortTVItemListService,\r\n        private structureTVFileListService: StructureTVFileListService,\r\n        private mapService: MapService,\r\n        private componentDataLoadedService: ComponentDataLoadedService,\r\n        private webMWQMSitesService: WebMWQMSitesService,\r\n        private historyService: HistoryService) {\r\n    }\r\n\r\n    DoWebSubsector(TVItemID: number, DoOther: boolean) {\r\n        this.TVItemID = TVItemID;\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebSubsector) {\r\n            this.KeepWebSubsector();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebSubsector().subscribe();\r\n        }\r\n    }\r\n\r\n    private GetWebSubsector() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebSubsector: {},\r\n        });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebSubsector }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebSubsector/${this.TVItemID}`;\r\n        return this.httpClient.get<WebSubsector>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebSubsector(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebMWQMSites();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebMWQMSites() {\r\n        this.webMWQMSitesService.DoWebMWQMSites(this.TVItemID, this.DoOther);\r\n    }\r\n\r\n    private KeepWebSubsector() {\r\n        this.UpdateWebSubsector(this.appLoadedService.AppLoaded$?.getValue()?.WebSubsector);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebSubsector);\r\n        if (this.DoOther) {\r\n            this.DoWebMWQMSites();\r\n        }\r\n    }\r\n\r\n    private UpdateWebSubsector(x: WebSubsector) {\r\n\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebSubsector: x,\r\n        });\r\n\r\n        this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebSubsector?.TVItemModel);\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebSubsector()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n        }\r\n\r\n        if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.MWQMSites) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    //...this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebSubsector.TVItemModel],\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.Analysis) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    //...this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebSubsector.TVItemModel],\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.MWQMRuns) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    //...this.appLoadedService.AppLoaded$.getValue().WebMWQMRuns.MWQMRunModelList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebSubsector.TVItemModel],\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.PollutionSourceSites) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    //...this.appLoadedService.AppLoaded$.getValue().WebPolSourceSites.PolSourceSiteModelList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebSubsector.TVItemModel],\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.Files) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    //...this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebSubsector.TVItemModel],\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.SubsectorTools) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    //...this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebSubsector.TVItemModel],\r\n                ]);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.LogBook) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    //...this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList,\r\n                    ...[this.appLoadedService.AppLoaded$.getValue().WebSubsector.TVItemModel],\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { DrogueRunModel } from 'src/app/models/generated/web/DrogueRunModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebDrogueRuns {\r\n    DrogueRunModelList: DrogueRunModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelParentList: TVItemModel[];\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetFilePurposeEnum } from 'src/app/enums/generated/FilePurposeEnum';\nimport { GetFileTypeEnum } from 'src/app/enums/generated/FileTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\n\n@Component({\n  selector: 'app-file-list-item-detail',\n  templateUrl: './file-list-item-detail.component.html',\n  styleUrls: ['./file-list-item-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FileListItemDetailComponent implements OnInit, OnDestroy {\n  @Input() TVFileModel: TVFileModel = null;\n  @Input() AppState: AppState;\n  fileTypeEnum = GetFileTypeEnum();\n  filePurposeEnum = GetFilePurposeEnum();\n  \n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n\n}\n","<mat-list-item *ngIf=\"TVFileModel\">\r\n   <blockquote>\r\n      <p mat-line>FullName {{ TVFileModel.TVFile.ServerFilePath }}{{ TVFileModel.TVFile.ServerFileName }}</p>\r\n      <p mat-line>Type {{ fileTypeEnum[TVFileModel.TVFile.FileType] }} - Purpose {{ filePurposeEnum[TVFileModel.TVFile.FilePurpose] }}</p>\r\n      <hr />\r\n   </blockquote>\r\n</mat-list-item>","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { WebAllContacts } from 'src/app/models/generated/web/WebAllContacts.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { WebAllCountriesService } from 'src/app/services/loaders/web-all-countries.service';\r\n\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebAllContactsService {\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n  \r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private webAllCountriesService: WebAllCountriesService,\r\n        private componentDataLoadedService: ComponentDataLoadedService) {\r\n    }\r\n\r\n    DoWebAllContacts(DoOther: boolean) {\r\n        this.DoOther = DoOther;\r\n    \r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebAllContacts) {\r\n          this.KeepWebAllContacts();\r\n        }\r\n        else {\r\n          this.sub = this.GetWebAllContacts().subscribe();\r\n        }\r\n      }\r\n    \r\n    private GetWebAllContacts() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllContacts: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllContacts }`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebAllContacts`;\r\n        return this.httpClient.get<WebAllContacts>(url).pipe(\r\n            map((x: WebAllContacts) => {\r\n                this.UpdateWebAllContacts(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.DoWebAllCountries();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private DoWebAllCountries() {\r\n        this.webAllCountriesService.DoWebAllCountries(this.DoOther);\r\n    }\r\n\r\n    private KeepWebAllContacts() {\r\n        this.UpdateWebAllContacts(this.appLoadedService.AppLoaded$?.getValue()?.WebAllContacts);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebAllContacts);\r\n        if (this.DoOther) {\r\n            this.DoWebAllCountries();\r\n        }\r\n    }\r\n\r\n    private UpdateWebAllContacts(x: WebAllContacts) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebAllContacts: x });\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebRoot()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebAllContacts()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n\r\n        }\r\n    }\r\n}","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: dodgerblue;\">This is the province edit component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-province-item-edit',\n  templateUrl: './province-item-edit.component.html',\n  styleUrls: ['./province-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProvinceItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { WebArea } from 'src/app/models/generated/web/WebArea.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { StructureTVFileListService } from 'src/app/services/helpers/structure-tvfile-list.service';\r\nimport { SortTVItemListService } from 'src/app/services/helpers/sort-tvitem-list.service';\r\nimport { MapService } from 'src/app/services/map/map.service';\r\nimport { AreaSubComponentEnum } from 'src/app/enums/generated/AreaSubComponentEnum';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { HistoryService } from 'src/app/services/helpers/history.service';\r\nimport { WebAllTels } from 'src/app/models/generated/web/WebAllTels.model';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WebAreaService {\r\n  private TVItemID: number;\r\n  private DoOther: boolean;\r\n  private sub: Subscription;\r\n  LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private appLanguageService: AppLanguageService,\r\n    private sortTVItemListService: SortTVItemListService,\r\n    private structureTVFileListService: StructureTVFileListService,\r\n    private mapService: MapService,\r\n    private componentDataLoadedService: ComponentDataLoadedService,\r\n    private historyService: HistoryService) {\r\n  }\r\n\r\n  DoWebArea(TVItemID: number, DoOther: boolean) {\r\n    this.TVItemID = TVItemID;\r\n    this.DoOther = DoOther;\r\n\r\n    this.sub ? this.sub.unsubscribe() : null;\r\n\r\n    if (this.appLoadedService.AppLoaded$.getValue()?.WebArea) {\r\n      this.KeepWebArea();\r\n    }\r\n    else {\r\n      this.sub = this.GetWebArea().subscribe();\r\n    }\r\n  }\r\n\r\n  private GetWebArea() {\r\n    let languageEnum = GetLanguageEnum();\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      WebArea: {},\r\n    });\r\n    this.appStateService.UpdateAppState(<AppState>{\r\n      Status: `${ this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${ WebAllTels }`,\r\n      Working: true\r\n    });\r\n    let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebArea/${this.TVItemID}/1`;\r\n    return this.httpClient.get<WebArea>(url).pipe(\r\n      map((x: any) => {\r\n        this.UpdateWebArea(x);\r\n        console.debug(x);\r\n        if (this.DoOther) {\r\n          // nothing else to add in the chain\r\n        }\r\n      }),\r\n      catchError(e => of(e).pipe(map(e => {\r\n        this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n        console.debug(e);\r\n      })))\r\n    );\r\n  }\r\n\r\n  private KeepWebArea() {\r\n    this.UpdateWebArea(this.appLoadedService.AppLoaded$?.getValue()?.WebArea);\r\n    console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebArea);\r\n    if (this.DoOther) {\r\n      // nothing else to add in the chain\r\n    }\r\n  }\r\n\r\n  private UpdateWebArea(x: WebArea) {\r\n\r\n    this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n      WebArea: x,\r\n    });\r\n\r\n    this.historyService.AddHistory(this.appLoadedService.AppLoaded$.getValue()?.WebArea?.TVItemModel);\r\n\r\n    if (this.DoOther) {\r\n      if (this.componentDataLoadedService.DataLoadedWebArea()) {\r\n        this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n      }\r\n    }\r\n    else {\r\n      this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n    }\r\n\r\n    if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\r\n      if (this.appStateService.AppState$.getValue().AreaSubComponent == AreaSubComponentEnum.Sectors) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebArea.TVItemModelSectorList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebArea.TVItemModel]\r\n        ]);\r\n      }\r\n\r\n      if (this.appStateService.AppState$.getValue().AreaSubComponent == AreaSubComponentEnum.Files) {\r\n        this.mapService.ClearMap();\r\n        this.mapService.DrawObjects([\r\n          ...this.appLoadedService.AppLoaded$.getValue().WebArea.TVItemModelSectorList,\r\n          ...[this.appLoadedService.AppLoaded$.getValue().WebArea.TVItemModel]\r\n        ]);\r\n      }\r\n    }\r\n  }\r\n}","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { MWQMSampleModel } from 'src/app/models/generated/web/MWQMSampleModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebMWQMSamples {\r\n    MWQMSampleModelList: MWQMSampleModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelParentList: TVItemModel[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TVTypeEnum_GetIDText } from 'src/app/enums/generated/TVTypeEnum';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TypeTextService {\r\n\r\n  constructor(private appStateService: AppStateService) {\r\n  }\r\n\r\n  GetTypeText(tvType: number) {\r\n    return TVTypeEnum_GetIDText(tvType, this.appStateService);\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-area-tvitem-list-detail',\n  templateUrl: './area-tvitem-list-detail.component.html',\n  styleUrls: ['./area-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AreaTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  get tvTypeEnum(): typeof TVTypeEnum {\n    return TVTypeEnum;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n}\n","<blockquote>\r\n    <span *ngIf=\"tvTypeEnum.Sector\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailAreaSector[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Sector\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.Subsector\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailAreaSubsector[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.Subsector\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSiteSample\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailAreaMWQMSample[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSiteSample\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailAreaMWQMSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.MWQMRun\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailAreaMWQMRun[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.MWQMRun\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <span *ngIf=\"tvTypeEnum.PolSourceSite\">\r\n        <span>{{ appLanguageService.AppLanguage.TVItemListDetailAreaPolSourceSite[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n        <app-stat-count [TVType]=\"tvTypeEnum.PolSourceSite\" [TVItemModel]=\"TVItemModel\">\r\n        </app-stat-count>\r\n    </span>\r\n    <hr />\r\n</blockquote>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AnalysisService } from 'src/app/services/helpers/analysis.service';\nimport { DateFormatService } from 'src/app/services/helpers/date-format.service';\n\n@Component({\n  selector: 'app-analysis-data-visible',\n  templateUrl: './analysis-data-visible.component.html',\n  styleUrls: ['./analysis-data-visible.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnalysisDataVisibleComponent implements OnInit, OnDestroy {\n  @Input() AppState: AppState;\n\n  formDataVisible: FormGroup;\n\n  languageEnum = GetLanguageEnum();\n  language: number;\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public analysisService: AnalysisService,\n    public appLanguageService: AppLanguageService,\n    public dateFormatService: DateFormatService,\n    private fb: FormBuilder) { };\n\n  ngOnInit(): void {\n    this.language = <number>this.appStateService.AppState$.getValue().Language;\n    this.formDataVisible = this.fb.group({\n      AnalysisFCDataVisible: [ { value: this.appStateService.AppState$.getValue().AnalysisFCDataVisible, disabled: true }],\n      AnalysisTempDataVisible: [this.appStateService.AppState$.getValue().AnalysisTempDataVisible],\n      AnalysisSalDataVisible: [this.appStateService.AppState$.getValue().AnalysisSalDataVisible],\n      AnalysisP90DataVisible: [this.appStateService.AppState$.getValue().AnalysisP90DataVisible],\n      AnalysisGeoMeanDataVisible: [this.appStateService.AppState$.getValue().AnalysisGeoMeanDataVisible],\n      AnalysisMedianDataVisible: [this.appStateService.AppState$.getValue().AnalysisMedianDataVisible],\n      AnalysisPerOver43DataVisible: [this.appStateService.AppState$.getValue().AnalysisPerOver43DataVisible],\n      AnalysisPerOver260DataVisible: [this.appStateService.AppState$.getValue().AnalysisPerOver260DataVisible],\n    });\n  }\n\n  ngOnDestroy(): void {\n  }\n\n\n}\n","<form [formGroup]=\"formDataVisible\">\n    <mat-checkbox (click)=\"analysisService.ToggleAnalysisFCDataVisible()\" formControlName=\"AnalysisFCDataVisible\"\n        [value]=\"appStateService?.AppState$?.getValue()?.AnalysisFCDataVisible\">\n        {{ appLanguageService.AppLanguage.AnalysisDataVisibleFecalColiform[appStateService.AppState$?.getValue()?.Language] }}</mat-checkbox>\n    <mat-checkbox (click)=\"analysisService.ToggleAnalysisTempDataVisible()\" formControlName=\"AnalysisTempDataVisible\"\n        [value]=\"appStateService?.AppState$?.getValue()?.AnalysisTempDataVisible\">\n        {{ appLanguageService.AppLanguage.AnalysisDataVisibleTemperature[appStateService.AppState$?.getValue()?.Language] }}</mat-checkbox>\n    <mat-checkbox (click)=\"analysisService.ToggleAnalysisSalDataVisible()\" formControlName=\"AnalysisSalDataVisible\"\n        [value]=\"appStateService?.AppState$?.getValue()?.AnalysisSalDataVisible\">\n        {{ appLanguageService.AppLanguage.AnalysisDataVisibleSalinity[appStateService.AppState$?.getValue()?.Language] }}</mat-checkbox>\n    <mat-checkbox (click)=\"analysisService.ToggleAnalysisP90DataVisible()\" formControlName=\"AnalysisP90DataVisible\"\n        [value]=\"appStateService?.AppState$?.getValue()?.AnalysisP90DataVisible\">\n        {{ appLanguageService.AppLanguage.AnalysisDataVisibleP90[appStateService.AppState$?.getValue()?.Language] }}</mat-checkbox>\n    <mat-checkbox (click)=\"analysisService.ToggleAnalysisGeoMeanDataVisible()\"\n        formControlName=\"AnalysisGeoMeanDataVisible\"\n        [value]=\"appStateService?.AppState$?.getValue()?.AnalysisGeoMeanDataVisible\">\n        {{ appLanguageService.AppLanguage.AnalysisDataVisibleP90[appStateService.AppState$?.getValue()?.Language] }}</mat-checkbox>\n    <mat-checkbox (click)=\"analysisService.ToggleAnalysisMedianDataVisible()\" formControlName=\"AnalysisMedianDataVisible\"\n        [value]=\"appStateService?.AppState$?.getValue()?.AnalysisMedianDataVisible\">\n        {{ appLanguageService.AppLanguage.AnalysisDataVisibleMedian[appStateService.AppState$?.getValue()?.Language] }}</mat-checkbox>\n    <mat-checkbox (click)=\"analysisService.ToggleAnalysisPerOver43DataVisible()\"\n        formControlName=\"AnalysisPerOver43DataVisible\"\n        [value]=\"appStateService?.AppState$?.getValue()?.AnalysisPerOver43DataVisible\">\n        {{ appLanguageService.AppLanguage.AnalysisDataVisiblePerAbove43[appStateService.AppState$?.getValue()?.Language] }}</mat-checkbox>\n    <mat-checkbox (click)=\"analysisService.ToggleAnalysisPerOver260DataVisible()\"\n        formControlName=\"AnalysisPerOver260DataVisible\"\n        [value]=\"appStateService?.AppState$?.getValue()?.AnalysisPerOver260DataVisible\">\n        {{ appLanguageService.AppLanguage.AnalysisDataVisiblePerAbove260[appStateService.AppState$?.getValue()?.Language] }}</mat-checkbox>\n</form>","import { Injectable } from '@angular/core';\r\nimport { AscDescEnum } from 'src/app/enums/generated/AscDescEnum';\r\nimport { SortOrderAngularEnum } from 'src/app/enums/generated/SortOrderAngularEnum';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { WebAreaService } from 'src/app/services/loaders/web-area.service';\r\nimport { WebCountryService } from 'src/app/services/loaders/web-country.service';\r\nimport { WebProvinceService } from 'src/app/services/loaders/web-province.service';\r\nimport { WebRootService } from 'src/app/services/loaders/web-root.service';\r\nimport { WebSectorService } from 'src/app/services/loaders/web-sector.service';\r\nimport { WebSubsectorService } from 'src/app/services/loaders/web-subsector.service';\r\nimport { WebMunicipalityService } from '../loaders/web-municipalty.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TVItemSortOrderService {\r\n  constructor(private appLoadedService: AppLoadedService,\r\n    private appStateService: AppStateService,\r\n    private webAreaService: WebAreaService,\r\n    private webCountryService: WebCountryService,\r\n    private webMunicipalityService: WebMunicipalityService,\r\n    private webProvinceService: WebProvinceService,\r\n    private webRootService: WebRootService,\r\n    private webSectorService: WebSectorService,\r\n    private webSubsectorService: WebSubsectorService,\r\n  ) {\r\n  }\r\n\r\n  ChangeTVItemSortOrder(sortOrderItem: SortOrderAngularEnum, ascDesc: AscDescEnum) {\r\n    switch (sortOrderItem) {\r\n      case SortOrderAngularEnum.AreaSectors:\r\n        this.appStateService.UpdateAppState(<AppState>{ AreaSectorsSortOrder: ascDesc });\r\n        this.webAreaService.DoWebArea(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.CountryProvinces:\r\n        this.appStateService.UpdateAppState(<AppState>{ CountryProvincesSortOrder: ascDesc });\r\n        this.webCountryService.DoWebCountry(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.MunicipalityMIKEScenarios:\r\n        this.appStateService.UpdateAppState(<AppState>{ MunicipalityMIKEScenariosSortOrder: ascDesc });\r\n        this.webMunicipalityService.DoWebMunicipality(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.ProvinceAreas:\r\n        this.appStateService.UpdateAppState(<AppState>{ ProvinceAreasSortOrder: ascDesc });\r\n        this.webProvinceService.DoWebProvince(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.ProvinceMunicipalities:\r\n        this.appStateService.UpdateAppState(<AppState>{ ProvinceMunicipalitiesSortOrder: ascDesc });\r\n        this.webProvinceService.DoWebProvince(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.RootCountries:\r\n        this.appStateService.UpdateAppState(<AppState>{ RootCountriesSortOrder: ascDesc });\r\n        this.webRootService.DoWebRoot(true);\r\n        break;\r\n      case SortOrderAngularEnum.SectorSubsectors:\r\n        this.appStateService.UpdateAppState(<AppState>{ SectorSubsectorsSortOrder: ascDesc });\r\n        this.webSectorService.DoWebSector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.SectorMikeScenarios:\r\n        this.appStateService.UpdateAppState(<AppState>{ SectorMikeScenariosSortOrder: ascDesc });\r\n        this.webSubsectorService.DoWebSubsector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.SubsectorMWQMSites:\r\n        this.appStateService.UpdateAppState(<AppState>{ SubsectorMWQMSitesSortOrder: ascDesc });\r\n        this.webSubsectorService.DoWebSubsector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.SubsectorMWQMRuns:\r\n        this.appStateService.UpdateAppState(<AppState>{ SubsectorMWQMRunsSortOrder: ascDesc });\r\n        this.webSubsectorService.DoWebSubsector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      case SortOrderAngularEnum.SubsectorPolSourceSites:\r\n        this.appStateService.UpdateAppState(<AppState>{ SubsectorPolSourceSitesSortOrder: ascDesc });\r\n        this.webSubsectorService.DoWebSubsector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n        break;\r\n      default:\r\n        alert(`${sortOrderItem} not implemented yet. See app-loaded.service.ts -- ChangeTVItemSortOrder function`);\r\n        break;\r\n    }\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { AppStateService } from '../app-state.service';\r\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\r\nimport { AscDescEnum } from 'src/app/enums/generated/AscDescEnum';\r\nimport { PredicateAscByService } from 'src/app/services/helpers/predicate-asc-by.service';\r\nimport { PredicateDescByService } from 'src/app/services/helpers/predicate-desc-by.service';\r\nimport { TVItemID_TVText_Sort } from 'src/app/models/TVItemID_TVText_Sort.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class SortTVItemListService {\r\n    constructor(private appStateService: AppStateService,\r\n        private predicateAscByService: PredicateAscByService,\r\n        private predicateDescByService: PredicateDescByService) {\r\n    }\r\n\r\n    SortTVItemList(arr: TVItemModel[], breadCrumb: TVItemModel[]): TVItemModel[] {\r\n        if (!arr || arr.length == 0) return arr;\r\n        if (!breadCrumb || breadCrumb.length == 0) return arr;\r\n\r\n        let TVType: TVTypeEnum = breadCrumb[breadCrumb.length - 1].TVItem.TVType;\r\n        let TVTypeOfList: TVTypeEnum = arr[0].TVItem.TVType;\r\n        let AscDesc: AscDescEnum = AscDescEnum.Ascending;\r\n\r\n        switch (TVType) {\r\n            case TVTypeEnum.Area:\r\n                {\r\n                    switch (TVTypeOfList) {\r\n                        case TVTypeEnum.Sector:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().AreaSectorsSortOrder;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            {\r\n                                alert(`${TVTypeEnum[TVTypeOfList]} - Not Implemented Yet. See app-loaded.service.ts -- SortTVItemList function -- case TVTypeEnum.Area`);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n            case TVTypeEnum.Country:\r\n                {\r\n                    switch (TVTypeOfList) {\r\n                        case TVTypeEnum.Province:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().CountryProvincesSortOrder;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            {\r\n                                alert(`${TVTypeEnum[TVTypeOfList]} - Not Implemented Yet. See app-loaded.service.ts -- SortTVItemList function -- case TVTypeEnum.Country`);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n            case TVTypeEnum.Municipality:\r\n                {\r\n                    switch (TVTypeOfList) {\r\n                        case TVTypeEnum.Infrastructure:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().MunicipalityInfrastructuresSortOrder;\r\n                            }\r\n                            break;\r\n                        case TVTypeEnum.MikeScenario:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().MunicipalityMIKEScenariosSortOrder;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            {\r\n                                alert(`${TVTypeEnum[TVTypeOfList]} - Not Implemented Yet. See app-loaded.service.ts -- SortTVItemList function -- case TVTypeEnum.Province`);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n            case TVTypeEnum.Province:\r\n                {\r\n                    switch (TVTypeOfList) {\r\n                        case TVTypeEnum.Area:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().ProvinceAreasSortOrder;\r\n                            }\r\n                            break;\r\n                        case TVTypeEnum.Municipality:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().ProvinceMunicipalitiesSortOrder;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            {\r\n                                alert(`${TVTypeEnum[TVTypeOfList]} - Not Implemented Yet. See app-loaded.service.ts -- SortTVItemList function -- case TVTypeEnum.Province`);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n            case TVTypeEnum.Root:\r\n                {\r\n                    switch (TVTypeOfList) {\r\n                        case TVTypeEnum.Country:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().RootCountriesSortOrder;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            {\r\n                                alert(`${TVTypeEnum[TVTypeOfList]} - Not Implemented Yet. See app-loaded.service.ts -- SortTVItemList function -- case TVTypeEnum.Root`);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n            case TVTypeEnum.Sector:\r\n                {\r\n                    switch (TVTypeOfList) {\r\n                        case TVTypeEnum.Subsector:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().SectorSubsectorsSortOrder;\r\n                            }\r\n                            break;\r\n                        case TVTypeEnum.MikeScenario:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().SectorMikeScenariosSortOrder;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            {\r\n                                alert(`${TVTypeEnum[TVTypeOfList]} - Not Implemented Yet. See app-loaded.service.ts -- SortTVItemList function -- case TVTypeEnum.Sector`);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n            case TVTypeEnum.Subsector:\r\n                {\r\n                    switch (TVTypeOfList) {\r\n                        case TVTypeEnum.MWQMSite:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().SubsectorMWQMSitesSortOrder;\r\n                            }\r\n                            break;\r\n                        case TVTypeEnum.MWQMRun:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().SubsectorMWQMRunsSortOrder;\r\n                            }\r\n                            break;\r\n                        case TVTypeEnum.PolSourceSite:\r\n                            {\r\n                                AscDesc = this.appStateService.AppState$.getValue().SubsectorPolSourceSitesSortOrder;\r\n                            }\r\n                            break;\r\n                        default:\r\n                            {\r\n                                alert(`${TVTypeEnum[TVTypeOfList]} - Not Implemented Yet. See app-loaded.service.ts -- SortTVItemList function -- case TVTypeEnum.Subsector`);\r\n                            }\r\n                            break;\r\n                    }\r\n                }\r\n                break;\r\n            default:\r\n                {\r\n                    alert(`${TVTypeEnum[TVType]} - Not Implemented Yet. See sort-tvitem-list.service.ts -- SortTVItemList function`);\r\n                }\r\n                break;\r\n        }\r\n\r\n        let tvItemStatMapModelSorted: TVItemModel[] = [];\r\n        let arr2: TVItemID_TVText_Sort[] = [];\r\n        let sortable: TVItemID_TVText_Sort[] = [];\r\n\r\n        for (let i = 0; i < arr.length; i++) {\r\n            sortable.push(<TVItemID_TVText_Sort>{\r\n                TVItemID: arr[i].TVItem.TVItemID,\r\n                TVText: arr[i].TVItemLanguageList[this.appStateService.AppState$.getValue().Language].TVText.toLowerCase(),\r\n            });\r\n        }\r\n\r\n        if (AscDesc == AscDescEnum.Ascending) {\r\n            arr2 = sortable.sort(this.predicateAscByService.PredicateAscBy('TVText'));\r\n        }\r\n        else {\r\n            arr2 = sortable.sort(this.predicateDescByService.PredicateDescBy('TVText'));\r\n        }\r\n\r\n        for (let i = 0; i < sortable.length; i++) {\r\n            for (let j = 0; j < arr.length; j++) {\r\n                if (arr2[i].TVItemID == arr[j].TVItem.TVItemID) {\r\n                    tvItemStatMapModelSorted.push(arr[j]);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return tvItemStatMapModelSorted;\r\n    }\r\n}\r\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the contact component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-contact-item',\n  templateUrl: './contact-item.component.html',\n  styleUrls: ['./contact-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum AreaSubComponentEnum {\r\n    Sectors = 1,\r\n    Files = 2,\r\n}\r\n\r\nexport function GetAreaSubComponentEnum(): typeof AreaSubComponentEnum\r\n{\r\n  return AreaSubComponentEnum;\r\n}\r\n\r\nexport function AreaSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Secteurs' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Fichiers' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Sectors' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Files' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function AreaSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    AreaSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum ProvinceSubComponentEnum {\r\n    Areas = 1,\r\n    Municipalities = 2,\r\n    Files = 3,\r\n    SamplingPlan = 4,\r\n    OpenData = 5,\r\n    ProvinceTools = 6,\r\n}\r\n\r\nexport function GetProvinceSubComponentEnum(): typeof ProvinceSubComponentEnum\r\n{\r\n  return ProvinceSubComponentEnum;\r\n}\r\n\r\nexport function ProvinceSubComponentEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Areas (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Municipalities (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Files (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Sampling Plan (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Open Data (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Province Tools (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Areas' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Municipalities' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Files' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Sampling Plan' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Open Data' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Province Tools' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function ProvinceSubComponentEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    ProvinceSubComponentEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { ShellSubComponentEnum } from 'src/app/enums/generated/ShellSubComponentEnum';\r\nimport { WebAreaService } from 'src/app/services/loaders/web-area.service';\r\nimport { WebCountryService } from 'src/app/services/loaders/web-country.service';\r\nimport { WebMunicipalityService } from 'src/app/services/loaders/web-municipalty.service';\r\nimport { WebMWQMRunsService } from 'src/app/services/loaders/web-mwqm-runs.service';\r\nimport { WebMWQMSitesService } from 'src/app/services/loaders/web-mwqm-sites.service';\r\nimport { WebPolSourceSitesService } from 'src/app/services/loaders/web-pol-source-sites.service';\r\nimport { WebProvinceService } from 'src/app/services/loaders/web-province.service';\r\nimport { WebRootService } from 'src/app/services/loaders/web-root.service';\r\nimport { WebSectorService } from 'src/app/services/loaders/web-sector.service';\r\nimport { WebSubsectorService } from 'src/app/services/loaders/web-subsector.service';\r\nimport { AppLoadedService } from '../app-loaded.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class TogglesService {\r\n    constructor(private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private webAreaService: WebAreaService,\r\n        private webCountryService: WebCountryService,\r\n        private webMunicipalityService: WebMunicipalityService,\r\n        private webMWQMSitesService: WebMWQMSitesService,\r\n        private webMWQMRunsService: WebMWQMRunsService,\r\n        private webPolSourceSitesService: WebPolSourceSitesService,\r\n        private webProvinceService: WebProvinceService,\r\n        private webRootService: WebRootService,\r\n        private webSectorService: WebSectorService,\r\n        private webSubsectorService: WebSubsectorService,\r\n    ) {\r\n\r\n    }\r\n\r\n    ToggleDetail(): void {\r\n        this.appStateService.UpdateAppState(<AppState>{ DetailVisible: !this.appStateService.AppState$.getValue().DetailVisible, Working: false });\r\n    }\r\n\r\n    ToggleInactive(appState: AppState): void {\r\n        this.appStateService.UpdateAppState(<AppState>{ InactVisible: !this.appStateService.AppState$.getValue().InactVisible });\r\n        this.ReloadPage(appState);\r\n    }\r\n\r\n    ToggleLastUpdate(): void {\r\n        this.appStateService.UpdateAppState(<AppState>{ LastUpdateVisible: !this.appStateService.AppState$.getValue().LastUpdateVisible, Working: false });\r\n    }\r\n\r\n    ToggleMap(): void {\r\n        this.appStateService.UpdateAppState(<AppState>{ MapVisible: !this.appStateService.AppState$.getValue().MapVisible });\r\n    }\r\n\r\n    ToggleMenu(): void {\r\n        this.appStateService.UpdateAppState(<AppState>{ MenuVisible: !this.appStateService.AppState$.getValue().MenuVisible });\r\n    }\r\n\r\n    ToggleStatCount(): void {\r\n        this.appStateService.UpdateAppState(<AppState>{ StatCountVisible: !this.appStateService.AppState$.getValue().StatCountVisible, Working: false });\r\n    }\r\n\r\n    ToggleEdit(): void {\r\n        this.appStateService.UpdateAppState(<AppState>{ EditVisible: !this.appStateService.AppState$.getValue().EditVisible, Working: false });\r\n    }\r\n\r\n    ToggleEditMap(appState:AppState): void {\r\n        this.appStateService.UpdateAppState(<AppState>{ EditMapVisible: !this.appStateService.AppState$.getValue().EditMapVisible, Working: false });\r\n        this.ReloadPage(appState);\r\n    }\r\n\r\n    private ReloadPage(appState: AppState)\r\n    {\r\n        switch (appState.ShellSubComponent) {\r\n            case ShellSubComponentEnum.Area:\r\n                {\r\n                    this.webAreaService.DoWebArea(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.Country:\r\n                {\r\n                    this.webCountryService.DoWebCountry(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.Municipality:\r\n                {\r\n                    this.webMunicipalityService.DoWebMunicipality(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.MWQMRun:\r\n                {\r\n                    this.webMWQMRunsService.DoWebMWQMRuns(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.MWQMSite:\r\n                {\r\n                    this.webMWQMSitesService.DoWebMWQMSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.PolSourceSite:\r\n                {\r\n                    this.webPolSourceSitesService.DoWebPolSourceSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.Province:\r\n                {\r\n                    this.webProvinceService.DoWebProvince(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.Root:\r\n                {\r\n                    this.webRootService.DoWebRoot(true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.Sector:\r\n                {\r\n                    this.webSectorService.DoWebSector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            case ShellSubComponentEnum.Subsector:\r\n                {\r\n                    this.webSubsectorService.DoWebSubsector(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\r\n                }\r\n                break;\r\n            default:\r\n                {\r\n\r\n                }\r\n                break;\r\n        }\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-municipality-tvitem-list-item',\n  templateUrl: './municipality-tvitem-list-item.component.html',\n  styleUrls: ['./municipality-tvitem-list-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MunicipalityTVItemListItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() IsBreadCrumb: boolean = false;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService,\n    public showTVItemService: ShowTVItemService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n}\n","<mat-list *ngFor=\"let tvItemStatMapModel of TVItemModelList; let i = index\">\n    <app-tvitem-menu [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-tvitem-menu>\n\n    <button mat-button (click)=\"subPageService.SetSubPage(tvItemStatMapModel)\">\n        <span [ngClass]=\"tvItemStatMapModel?.TVItem?.IsActive ? '' : 'inactive'\">\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n                {{ i + 1 }}&nbsp;-&nbsp;\n            </span>\n            <span *ngIf=\"appStateService.AppState$?.getValue()?.DetailVisible\">\n                [{{ tvItemStatMapModel?.TVItem?.TVItemID }}]\n            </span>\n            {{ tvItemStatMapModel?.TVItemLanguageList[this.appStateService.AppState$.getValue().Language]?.TVText }}\n        </span>\n        <app-stat-count *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\" [TVType]=\"null\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-stat-count>\n        <app-last-udpate-tv-item-model *ngIf=\"appStateService.AppState$?.getValue()?.LastUpdateVisible\"\n            [TVItemModel]=\"tvItemStatMapModel\"></app-last-udpate-tv-item-model>\n    </button>\n\n    <app-municipality-item-view *ngIf=\"showTVItemService.TVItemVisible(tvItemStatMapModel)\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-municipality-item-view>\n\n    <app-municipality-item-edit *ngIf=\"AppState.EditVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\" [AppState]=\"AppState\">\n    </app-municipality-item-edit>\n\n    <app-municipality-tvitem-list-detail [AppState]=\"AppState\" *ngIf=\"AppState?.DetailVisible\"\n        [TVItemModel]=\"tvItemStatMapModel\">\n    </app-municipality-tvitem-list-detail>\n</mat-list>","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the pol source site component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { WebPolSourceSitesService } from 'src/app/services/loaders/web-pol-source-sites.service';\n\n@Component({\n  selector: 'app-pol-source-site-item',\n  templateUrl: './pol-source-site-item.component.html',\n  styleUrls: ['./pol-source-site-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PolSourceSiteItemComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService,\n    private webPolSourceSitesService: WebPolSourceSitesService) { }\n\n  ngOnInit(): void {\n    this.webPolSourceSitesService.DoWebPolSourceSites(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { EmailDistributionListModel } from 'src/app/models/generated/web/EmailDistributionListModel.model';\r\nimport { RainExceedanceModel } from 'src/app/models/generated/web/RainExceedanceModel.model';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\n\r\nexport class WebCountry {\r\n    EmailDistributionListModelList: EmailDistributionListModel[];\r\n    RainExceedanceModelList: RainExceedanceModel[];\r\n    TVFileModelList: TVFileModel[];\r\n    TVItemModel: TVItemModel;\r\n    TVItemModelParentList: TVItemModel[];\r\n    TVItemModelProvinceList: TVItemModel[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AreaSubComponentEnum } from 'src/app/enums/generated/AreaSubComponentEnum';\r\nimport { CountrySubComponentEnum } from 'src/app/enums/generated/CountrySubComponentEnum';\r\nimport { MunicipalitySubComponentEnum } from 'src/app/enums/generated/MunicipalitySubComponentEnum';\r\nimport { MWQMRunSubComponentEnum } from 'src/app/enums/generated/MWQMRunSubComponentEnum';\r\nimport { MWQMSiteSubComponentEnum } from 'src/app/enums/generated/MWQMSiteSubComponentEnum';\r\nimport { PolSourceSiteSubComponentEnum } from 'src/app/enums/generated/PolSourceSiteSubComponentEnum';\r\nimport { ProvinceSubComponentEnum } from 'src/app/enums/generated/ProvinceSubComponentEnum';\r\nimport { RootSubComponentEnum } from 'src/app/enums/generated/RootSubComponentEnum';\r\nimport { SectorSubComponentEnum } from 'src/app/enums/generated/SectorSubComponentEnum';\r\nimport { SubsectorSubComponentEnum } from 'src/app/enums/generated/SubsectorSubComponentEnum';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComponentButtonSelectionService {\r\n\r\n  constructor(private appStateService: AppStateService) {\r\n  }\r\n\r\n  ColorSelectionArea(areaSubComponent: AreaSubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().AreaSubComponent == areaSubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionCountry(countrySubComponent: CountrySubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().CountrySubComponent == countrySubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionMunicipality(municipalitySubComponent: MunicipalitySubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().MunicipalitySubComponent == municipalitySubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionMWQMRun(mwqmRunSubComponent: MWQMRunSubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().MWQMRunSubComponent == mwqmRunSubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionMWQMSite(mwqmSiteSubComponent: MWQMSiteSubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().MWQMSiteSubComponent == mwqmSiteSubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionPolSourceSite(polSourceSiteSubComponent: PolSourceSiteSubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().PolSourceSiteSubComponent == polSourceSiteSubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionProvince(provinceSubComponent: ProvinceSubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().ProvinceSubComponent == provinceSubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionRoot(rootSubComponent: RootSubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue()['RootSubComponent'] == rootSubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionSector(sectorSubComponent: SectorSubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().SectorSubComponent == sectorSubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  ColorSelectionSubsector(subsectorSubComponent: SubsectorSubComponentEnum) {\r\n    if (this.appStateService.AppState$.getValue().SubsectorSubComponent == subsectorSubComponent) {\r\n      return 'selected';\r\n    }\r\n    else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { TVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-mike-scenario-tvitem-list-detail',\n  templateUrl: './mike-scenario-tvitem-list-detail.component.html',\n  styleUrls: ['./mike-scenario-tvitem-list-detail.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MikeScenarioTVItemListDetailComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) {\n  }\n\n  get tvTypeEnum(): typeof TVTypeEnum {\n    return TVTypeEnum;\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n\n}\n","<!-- <span *ngIf=\"tvTypeEnum.MWQMSiteSample\">\r\n    <span>{{ appLanguageService.AppLanguage.TVItemListDetailAreaMWQMSample[appStateService.AppState$?.getValue().Language] }}&nbsp;&nbsp;</span>\r\n    <app-stat-count [TVType]=\"tvTypeEnum.MWQMSiteSample\" [TVItemModel]=\"TVItemModel\">\r\n    </app-stat-count>\r\n</span> -->\r\n<blockquote>\r\n    <span>Would add detail related to mike scenairo</span>\r\n    <hr />\r\n</blockquote>\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { of, Subscription } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { GetLanguageEnum, LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\nimport { AppState } from 'src/app/models/AppState.model';\r\nimport { MWQMSample } from 'src/app/models/generated/db/MWQMSample.model';\r\nimport { StatMWQMRun } from 'src/app/models/generated/web/StatMWQMRun.model';\r\nimport { StatMWQMSite } from 'src/app/models/generated/web/StatMWQMSite.model';\r\nimport { StatMWQMSiteSample } from 'src/app/models/generated/web/StatMWQMSiteSample.model';\r\nimport { MWQMSiteModel } from 'src/app/models/generated/web/MWQMSiteModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { WebMWQMSamples } from 'src/app/models/generated/web/WebMWQMSamples.model';\r\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { ComponentDataLoadedService } from 'src/app/services/helpers/component-data-loaded.service';\r\nimport { SortMWQMRunListService } from 'src/app/services/helpers/sort-mwqm-run-list-desc.service';\r\nimport { SampleTypeEnum } from 'src/app/enums/generated/SampleTypeEnum';\r\nimport { SortMWQMSiteSampleModelListService } from 'src/app/services/helpers/sort-mwqm-site-sample-list.service';\r\nimport { ColorAndLetter } from 'src/app/models/generated/web/ColorAndLetter.model';\r\nimport { SubsectorSubComponentEnum } from 'src/app/enums/generated/SubsectorSubComponentEnum';\r\nimport { MapService } from 'src/app/services/map/map.service';\r\nimport { SortMWQMSiteModelListService } from 'src/app/services/helpers/sort-mwqm-site-model-list.service';\r\nimport { AnalysisCalculationTypeEnum } from 'src/app/enums/generated/AnalysisCalculationTypeEnum';\r\nimport { TopComponentEnum } from 'src/app/enums/generated/TopComponentEnum';\r\nimport { MWQMRunModel } from 'src/app/models/generated/web/MWQMRunModel.model';\r\nimport { MWQMRunModelSiteAndSampleModel, MWQMSiteModelAndSampleModel } from 'src/app/models/MWQMRunModelSiteAndSample.model';\r\nimport { AppLoaded } from 'src/app/models/AppLoaded.model';\r\nimport { MWQMSampleModel } from 'src/app/models/generated/web/MWQMSampleModel.model';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class WebMWQMSamplesService {\r\n    private TVItemID: number;\r\n    private DoOther: boolean;\r\n    private sub: Subscription;\r\n    LangID: number = this.appStateService.AppState$?.getValue()?.Language == LanguageEnum.fr ? 1 : 0;\r\n\r\n    constructor(private httpClient: HttpClient,\r\n        private appStateService: AppStateService,\r\n        private appLoadedService: AppLoadedService,\r\n        private appLanguageService: AppLanguageService,\r\n        private sortMWQMRunListService: SortMWQMRunListService,\r\n        private sortMWQMSiteModelService: SortMWQMSiteModelListService,\r\n        private mapService: MapService,\r\n        private componentDataLoadedService: ComponentDataLoadedService,\r\n        private sortMWQMSiteSampleModelListService: SortMWQMSiteSampleModelListService) {\r\n    }\r\n\r\n    DoWebMWQMSamples(TVItemID: number, DoOther: boolean) {\r\n        this.TVItemID = TVItemID;\r\n        this.DoOther = DoOther;\r\n\r\n        this.sub ? this.sub.unsubscribe() : null;\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.WebMWQMSamples) {\r\n            this.KeepWebMWQMSamples();\r\n        }\r\n        else {\r\n            this.sub = this.GetWebMWQMSamples1980_2020().subscribe();\r\n        }\r\n    }\r\n\r\n    FillStatMWQMSiteList() {\r\n        let StatMWQMRunList: StatMWQMRun[] = this.appLoadedService.AppLoaded$?.getValue()?.StatMWQMRunList;\r\n\r\n        if (StatMWQMRunList == undefined || StatMWQMRunList.length == 0) {\r\n            return;\r\n        }\r\n\r\n        let countR: number = StatMWQMRunList.length;\r\n        for (let r = 0; r < countR; r++) {\r\n            StatMWQMRunList[r].UseInStat = false;\r\n        }\r\n\r\n        let StatMWQMSiteList: StatMWQMSite[] = [];\r\n        let MWQMSiteModelActiveList: MWQMSiteModel[] = this.sortMWQMSiteModelService.SortMWQMSiteModelListByTVTextAsc(this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList.filter(c => c.TVItemModel.TVItem.IsActive == true));\r\n        let MWQMSiteModelInactiveList: MWQMSiteModel[] = this.sortMWQMSiteModelService.SortMWQMSiteModelListByTVTextAsc(this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList.filter(c => c.TVItemModel.TVItem.IsActive == false));\r\n        let countSite: number = MWQMSiteModelActiveList.length;\r\n        for (let i = 0; i < countSite; i++) {\r\n            let MWQMSiteModelList: MWQMSiteModel[] = this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList.filter(c => c.MWQMSite.MWQMSiteTVItemID == MWQMSiteModelActiveList[i].TVItemModel.TVItem.TVItemID);\r\n\r\n            let StatMWQMSiteSampleList: StatMWQMSiteSample[] = [];\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.MWQMSites) {\r\n                StatMWQMSiteSampleList = this.FillMWQMSiteSampleStatForMWQMSites(MWQMSiteModelActiveList[i].TVItemModel);\r\n            }\r\n\r\n            if (this.appStateService.AppState$.getValue().TopComponent == TopComponentEnum.Home || this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.Analysis) {\r\n                StatMWQMSiteSampleList = this.FillMWQMSiteSampleStatForAnalysis(MWQMSiteModelActiveList[i].TVItemModel);\r\n            }\r\n\r\n            StatMWQMSiteList.push(<StatMWQMSite>{ SalinityAverage: this.GetSalinityAverage(StatMWQMSiteSampleList), MWQMSiteModel: MWQMSiteModelList[0], StatMWQMSiteSampleList: StatMWQMSiteSampleList, TVItemModel: MWQMSiteModelActiveList[i].TVItemModel });\r\n        }\r\n\r\n        if (this.appStateService.AppState$.getValue().InactVisible) {\r\n            countSite = MWQMSiteModelInactiveList.length;\r\n            for (let i = 0; i < countSite; i++) {\r\n                let MWQMSiteModelList: MWQMSiteModel[] = this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList.filter(c => c.MWQMSite.MWQMSiteTVItemID == MWQMSiteModelInactiveList[i].TVItemModel.TVItem.TVItemID);\r\n\r\n                let StatMWQMSiteSampleList: StatMWQMSiteSample[] = [];\r\n                if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.MWQMSites) {\r\n                    StatMWQMSiteSampleList = this.FillMWQMSiteSampleStatForMWQMSites(MWQMSiteModelActiveList[i].TVItemModel);\r\n                }\r\n\r\n                if (this.appStateService.AppState$.getValue().TopComponent == TopComponentEnum.Home || this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.Analysis) {\r\n                    StatMWQMSiteSampleList = this.FillMWQMSiteSampleStatForAnalysis(MWQMSiteModelActiveList[i].TVItemModel);\r\n                }\r\n\r\n                StatMWQMSiteList.push(<StatMWQMSite>{ SalinityAverage: this.GetSalinityAverage(StatMWQMSiteSampleList), MWQMSiteModel: MWQMSiteModelList[0], StatMWQMSiteSampleList: StatMWQMSiteSampleList, TVItemModel: MWQMSiteModelInactiveList[i].TVItemModel });\r\n            }\r\n        }\r\n\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ StatMWQMSiteList: StatMWQMSiteList });\r\n\r\n        if (this.appLoadedService.AppLoaded$.getValue()?.StatMWQMRunList?.length > 0) {\r\n            if (this.appStateService.AppState$?.getValue()?.AnalysisStartRun == null) {\r\n                this.appStateService.UpdateAppState(<AppState>{\r\n                    AnalysisStartRun: this.appLoadedService.AppLoaded$.getValue().StatMWQMRunList[0],\r\n                    AnalysisEndRun: this.appLoadedService.AppLoaded$.getValue().StatMWQMRunList[this.appLoadedService.AppLoaded$.getValue().StatMWQMRunList.length - 1],\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private GetSalinityAverage(statMWQMSiteSampleList: StatMWQMSiteSample[]): number {\r\n        let SalinityAverage: number = null;\r\n        if (statMWQMSiteSampleList != undefined && statMWQMSiteSampleList.length > 0) {\r\n            let count: number = statMWQMSiteSampleList.length;\r\n            let total: number = 0;\r\n            let valCount: number = 0\r\n            for (let i = 0; i < count; i++) {\r\n                if (statMWQMSiteSampleList[i].Sal != null) {\r\n                    valCount += 1;\r\n                    total += statMWQMSiteSampleList[i].Sal;\r\n                }\r\n            }\r\n\r\n            if (valCount > 0) {\r\n                SalinityAverage = total / valCount;\r\n            }\r\n        }\r\n\r\n        return SalinityAverage;\r\n    }\r\n\r\n    GetMWQMRunModelSiteAndSampleDetail(tvItemModel: TVItemModel): MWQMRunModelSiteAndSampleModel {\r\n        let mwqmRunModelSiteAndSampleModel: MWQMRunModelSiteAndSampleModel = new MWQMRunModelSiteAndSampleModel();\r\n        let mwqmSiteModelAndSampleModelList: MWQMSiteModelAndSampleModel[] = [];\r\n\r\n        let mwqmRunModelList: MWQMRunModel[] = this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMRuns.MWQMRunModelList?.filter(c => c.TVItemModel.TVItem.TVItemID == tvItemModel.TVItem.TVItemID);\r\n\r\n        if (mwqmRunModelList !== undefined && mwqmRunModelList.length > 0) {\r\n            mwqmRunModelSiteAndSampleModel.MWQMRunModel = mwqmRunModelList[0];\r\n\r\n            let mwqmSampleModelList: MWQMSampleModel[] = this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSamples.MWQMSampleModelList?.filter(c => c.MWQMSample.MWQMSiteTVItemID == tvItemModel.TVItem.TVItemID);\r\n\r\n            let MWQMSiteModelActiveList: MWQMSiteModel[] = this.sortMWQMSiteModelService.SortMWQMSiteModelListByTVTextAsc(this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList.filter(c => c.TVItemModel.TVItem.IsActive == true));\r\n\r\n            let count: number = MWQMSiteModelActiveList.length;\r\n            for (let i = 0; i < count; i++) {\r\n                let mwqmSampleModelTempList: MWQMSampleModel[] = mwqmSampleModelList.filter(c => c.MWQMSample.MWQMSiteTVItemID == MWQMSiteModelActiveList[i].TVItemModel.TVItem.TVItemID);\r\n                if (mwqmSampleModelTempList !== undefined && mwqmSampleModelTempList.length > 0) {\r\n                    mwqmSiteModelAndSampleModelList.push(<MWQMSiteModelAndSampleModel>{ MWQMSiteModel: MWQMSiteModelActiveList[i], MWQMSample: mwqmSampleModelTempList[0] });\r\n                }\r\n            }\r\n\r\n            let MWQMSiteModelInactiveList: MWQMSiteModel[] = this.sortMWQMSiteModelService.SortMWQMSiteModelListByTVTextAsc(this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList.filter(c => c.TVItemModel.TVItem.IsActive == false));\r\n\r\n            count = MWQMSiteModelInactiveList.length;\r\n            for (let i = 0; i < count; i++) {\r\n                let mwqmSampleModelTempList: MWQMSampleModel[] = mwqmSampleModelList.filter(c => c.MWQMSample.MWQMSiteTVItemID == MWQMSiteModelInactiveList[i].TVItemModel.TVItem.TVItemID);\r\n                if (mwqmSampleModelTempList !== undefined && mwqmSampleModelTempList.length > 0) {\r\n                    mwqmSiteModelAndSampleModelList.push(<MWQMSiteModelAndSampleModel>{ MWQMSiteModel: MWQMSiteModelInactiveList[i], MWQMSample: mwqmSampleModelTempList[0] });\r\n                }\r\n            }\r\n\r\n            mwqmRunModelSiteAndSampleModel.MWQMSiteModelAndSampleModelList = mwqmSiteModelAndSampleModelList;\r\n        }\r\n\r\n        return mwqmRunModelSiteAndSampleModel;\r\n    }\r\n\r\n    GetMWQMSiteDetail(tvItemModel: TVItemModel): StatMWQMSite {\r\n        let statMWQMSiteList: StatMWQMSite[] = this.appLoadedService.AppLoaded$.getValue().StatMWQMSiteList?.filter(c => c.TVItemModel.TVItem.TVItemID == tvItemModel.TVItem.TVItemID);\r\n        return statMWQMSiteList === undefined ? null : statMWQMSiteList[0];\r\n    }\r\n\r\n    GetMWQMSiteList(tvItemModel: TVItemModel): StatMWQMSite[] {\r\n        let statMWQMSiteList: StatMWQMSite[] = this.appLoadedService.AppLoaded$.getValue().StatMWQMSiteList?.filter(c => c.TVItemModel.TVItem.TVItemID == tvItemModel.TVItem.TVItemID);\r\n        return statMWQMSiteList === undefined ? null : statMWQMSiteList;\r\n    }\r\n\r\n    private FillStatMWQMRunList() {\r\n        let StatMWQMRunList: StatMWQMRun[] = [];\r\n\r\n        let MWQMRunRoutineDescList: MWQMRunModel[] = this.sortMWQMRunListService.SortMWQMRunListDescByDate(this.appLoadedService.AppLoaded$.getValue().WebMWQMRuns.MWQMRunModelList);\r\n\r\n        let countRun: number = MWQMRunRoutineDescList.length;\r\n        for (let i = 0; i < countRun; i++) {\r\n            let DateText: string = MWQMRunRoutineDescList[i].MWQMRun.DateTime_Local.toString();\r\n            let Year: number = parseInt(DateText.substring(0, 4));\r\n            let Month: number = parseInt(DateText.substring(5, 7));\r\n            let Day: number = parseInt(DateText.substring(8, 10));\r\n\r\n            let statMWQMRun: StatMWQMRun = <StatMWQMRun>{\r\n                IsOKRun: true,\r\n                MWQMRunTVItemID: MWQMRunRoutineDescList[i].MWQMRun.MWQMRunTVItemID,\r\n                RainDay0: MWQMRunRoutineDescList[i].MWQMRun.RainDay0_mm,\r\n                RainDay1: MWQMRunRoutineDescList[i].MWQMRun.RainDay1_mm,\r\n                RainDay2: MWQMRunRoutineDescList[i].MWQMRun.RainDay2_mm,\r\n                RainDay3: MWQMRunRoutineDescList[i].MWQMRun.RainDay3_mm,\r\n                RainDay4: MWQMRunRoutineDescList[i].MWQMRun.RainDay4_mm,\r\n                RainDay5: MWQMRunRoutineDescList[i].MWQMRun.RainDay5_mm,\r\n                RainDay6: MWQMRunRoutineDescList[i].MWQMRun.RainDay6_mm,\r\n                RainDay7: MWQMRunRoutineDescList[i].MWQMRun.RainDay7_mm,\r\n                RainDay8: MWQMRunRoutineDescList[i].MWQMRun.RainDay8_mm,\r\n                RainDay9: MWQMRunRoutineDescList[i].MWQMRun.RainDay9_mm,\r\n                RainDay10: MWQMRunRoutineDescList[i].MWQMRun.RainDay10_mm,\r\n                RemoveFromStat: false,\r\n                RunDate: MWQMRunRoutineDescList[i].MWQMRun.DateTime_Local,\r\n                RunIndex: i,\r\n                RunYear: Year,\r\n                RunMonth: Month,\r\n                RunDay: Day,\r\n                StartTide: MWQMRunRoutineDescList[i].MWQMRun.Tide_Start,\r\n                EndTide: MWQMRunRoutineDescList[i].MWQMRun.Tide_End,\r\n                UseInStat: true,\r\n            };\r\n\r\n            StatMWQMRunList.push(statMWQMRun);\r\n        }\r\n\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ StatMWQMRunList: StatMWQMRunList });\r\n        if (StatMWQMRunList.length > 0) {\r\n            this.appStateService.UpdateAppState(<AppState>{ AnalysisStartRun: StatMWQMRunList[0], AnalysisEndRun: StatMWQMRunList[StatMWQMRunList.length - 1] });\r\n        }\r\n    }\r\n\r\n    private GetWebMWQMSamples1980_2020() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{ WebMWQMSamples: {} });\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${WebMWQMSamples}`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebMWQMSamples1980_2020/${this.TVItemID}`;\r\n        return this.httpClient.get<WebMWQMSamples>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebMWQMSamples1980_2020(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    this.GetWebMWQMSamples2021_2060();\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private GetWebMWQMSamples2021_2060() {\r\n        let languageEnum = GetLanguageEnum();\r\n        this.appStateService.UpdateAppState(<AppState>{\r\n            Status: `${this.appLanguageService.AppLanguage.Loading[this.LangID]} - ${WebMWQMSamples}`,\r\n            Working: true\r\n        });\r\n        let url: string = `${this.appLoadedService.BaseApiUrl}${languageEnum[this.appStateService.AppState$.getValue().Language]}-CA/Read/WebMWQMSamples2021_2060/${this.TVItemID}`;\r\n        return this.httpClient.get<WebMWQMSamples>(url).pipe(\r\n            map((x: any) => {\r\n                this.UpdateWebMWQMSamples2021_2060(x);\r\n                console.debug(x);\r\n                if (this.DoOther) {\r\n                    // nothing for now\r\n                }\r\n            }),\r\n            catchError(e => of(e).pipe(map(e => {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false, Error: <HttpErrorResponse>e });\r\n                console.debug(e);\r\n            })))\r\n        );\r\n    }\r\n\r\n    private FillMWQMSiteSampleStatForAnalysis(tvItemModel: TVItemModel): StatMWQMSiteSample[] {\r\n        let SampleTypeText: string = `${SampleTypeEnum.Routine},`;\r\n        let StatMWQMSiteSampleList: StatMWQMSiteSample[] = [];\r\n        let StatMWQMRunList: StatMWQMRun[] = this.appLoadedService.AppLoaded$.getValue()?.StatMWQMRunList;\r\n\r\n        let StatRuns = this.appStateService.AppState$.getValue().AnalysisRuns;\r\n\r\n        let MWQMSiteModelList: MWQMSiteModel[] = this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSites?.MWQMSiteModelList?.filter(\r\n            c => c.MWQMSite.MWQMSiteTVItemID == tvItemModel.TVItem.TVItemID);\r\n\r\n        if (MWQMSiteModelList && MWQMSiteModelList.length > 0) {\r\n            let MWQMSiteSampleModelSortedList: MWQMSampleModel[] = this.sortMWQMSiteSampleModelListService.SortMWQMSiteSampleModelListDescByDate(\r\n                this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSamples?.MWQMSampleModelList.filter(c => c.MWQMSample.MWQMSiteTVItemID == tvItemModel.TVItem.TVItemID)\r\n            );\r\n\r\n            if (MWQMSiteSampleModelSortedList && MWQMSiteSampleModelSortedList.length > 0) {\r\n                let EndYear = parseInt(MWQMSiteSampleModelSortedList[MWQMSiteSampleModelSortedList.length - 1].MWQMSample.SampleDateTime_Local.toString());\r\n                let StartYear = parseInt(MWQMSiteSampleModelSortedList[0].MWQMSample.SampleDateTime_Local.toString());\r\n\r\n                if (MWQMSiteSampleModelSortedList.length > 0) {\r\n\r\n                    let SampleCount: number = 0;\r\n                    let countRun: number = StatMWQMRunList.length;\r\n                    let countSample: number = MWQMSiteSampleModelSortedList.length;\r\n                    let sUsed: number = 0;\r\n                    let useCount: number = 0;\r\n\r\n                    for (let r = 0; r < countRun; r++) // at this point all run should be of SampleTypeEnum.Routine\r\n                    {\r\n                        let RunDateText: string = StatMWQMRunList[r].RunDate.toString();\r\n                        let RunYear: number = parseInt(RunDateText.substring(0, 4));\r\n                        let RunMonth: number = parseInt(RunDateText.substring(5, 7));\r\n                        let RunDate: number = parseInt(RunDateText.substring(8, 10));\r\n\r\n                        let found: boolean = false;\r\n                        for (let s = sUsed; s < countSample; s++) {\r\n                            let SampleDateText: string = MWQMSiteSampleModelSortedList[s].MWQMSample.SampleDateTime_Local.toString();\r\n                            let SampleYear: number = parseInt(SampleDateText.substring(0, 4));\r\n                            let SampleMonth: number = parseInt(SampleDateText.substring(5, 7));\r\n                            let SampleDay: number = parseInt(SampleDateText.substring(8, 10));\r\n                            let IsRouting: boolean = MWQMSiteSampleModelSortedList.filter(c => c.MWQMSample.SampleTypesText.indexOf(SampleTypeText) > -1) ? true : false;\r\n                            if (RunYear == SampleYear && RunMonth == SampleMonth && RunDate == SampleDay && IsRouting) {\r\n                                SampleCount += 1;\r\n                                StatMWQMSiteSampleList.push(<StatMWQMSiteSample>{\r\n                                    Depth: MWQMSiteSampleModelSortedList[s].MWQMSample.Depth_m,\r\n                                    FC: MWQMSiteSampleModelSortedList[s].MWQMSample.FecCol_MPN_100ml,\r\n                                    IsActive: tvItemModel.TVItem.IsActive,\r\n                                    MWQMRunTVItemID: StatMWQMRunList[r].MWQMRunTVItemID,\r\n                                    MWQMSiteTVItemID: tvItemModel.TVItem.TVItemID,\r\n                                    PH: MWQMSiteSampleModelSortedList[s].MWQMSample.PH,\r\n                                    RunIndex: r,\r\n                                    Sal: MWQMSiteSampleModelSortedList[s].MWQMSample.Salinity_PPT,\r\n                                    SampleDate: MWQMSiteSampleModelSortedList[s].MWQMSample.SampleDateTime_Local,\r\n                                    Temp: MWQMSiteSampleModelSortedList[s].MWQMSample.WaterTemp_C,\r\n                                    UseInStat: StatMWQMRunList[r].UseInStat,\r\n                                    Samples: countSample,\r\n                                    SampleYear: SampleYear,\r\n                                    SampleMonth: SampleMonth,\r\n                                    SampleDay: SampleDay,\r\n                                });\r\n                                //StatMWQMRunList[r].UseInStat = true;\r\n                                sUsed = s + 1;\r\n                                found = true;\r\n\r\n                                StatMWQMSiteSampleList[StatMWQMSiteSampleList.length - 1].UseInStat = false;\r\n\r\n                                let skipVal: boolean = false;\r\n\r\n                                // let SampleDate: Date = new Date(SampleYear, SampleMonth, SampleDay);\r\n                                // let AnalysisStartDate: Date = this.appStateService.AppState$.getValue().AnalysisStartRun.RunDate;\r\n\r\n                                // Check Start Run Date\r\n                                if (MWQMSiteSampleModelSortedList[s].MWQMSample.SampleDateTime_Local.toString().substring(0, 10) > this.appStateService.AppState$.getValue().AnalysisStartRun.RunDate.toString().substring(0, 10)) {\r\n                                    skipVal = true;\r\n                                }\r\n\r\n                                // Check End Run Date\r\n                                if (MWQMSiteSampleModelSortedList[s].MWQMSample.SampleDateTime_Local.toString().substring(0, 10) < this.appStateService.AppState$.getValue().AnalysisEndRun.RunDate.toString().substring(0, 10)) {\r\n                                    skipVal = true;\r\n                                }\r\n\r\n                                // Check Runs\r\n                                if (useCount >= this.appStateService.AppState$.getValue().AnalysisRuns) {\r\n                                    skipVal = true;\r\n                                }\r\n\r\n                                if (this.appStateService.AppState$.getValue().AnalysisCalculationType == AnalysisCalculationTypeEnum.All) {\r\n                                    // everything is ok, nothing to do\r\n                                }\r\n\r\n                                if (this.appStateService.AppState$.getValue().AnalysisCalculationType == AnalysisCalculationTypeEnum.Dry) {\r\n                                    if (StatMWQMRunList[r].RainDay1 >= this.appStateService.AppState$.getValue().AnalysisDry24h\r\n                                        && (StatMWQMRunList[r].RainDay1 + StatMWQMRunList[r].RainDay2) >= this.appStateService.AppState$.getValue().AnalysisDry48h\r\n                                        && (StatMWQMRunList[r].RainDay1 + StatMWQMRunList[r].RainDay2 + StatMWQMRunList[r].RainDay3) >= this.appStateService.AppState$.getValue().AnalysisDry72h\r\n                                        && (StatMWQMRunList[r].RainDay1 + StatMWQMRunList[r].RainDay2 + StatMWQMRunList[r].RainDay3 + StatMWQMRunList[r].RainDay4) >= this.appStateService.AppState$.getValue().AnalysisDry96h) {\r\n                                        skipVal = true;\r\n                                    }\r\n                                }\r\n\r\n                                if (this.appStateService.AppState$.getValue().AnalysisCalculationType == AnalysisCalculationTypeEnum.Wet) {\r\n                                    if (StatMWQMRunList[r].RainDay1 <= this.appStateService.AppState$.getValue().AnalysisWet24h\r\n                                        && (StatMWQMRunList[r].RainDay1 + StatMWQMRunList[r].RainDay2) <= this.appStateService.AppState$.getValue().AnalysisWet48h\r\n                                        && (StatMWQMRunList[r].RainDay1 + StatMWQMRunList[r].RainDay2 + StatMWQMRunList[r].RainDay3) <= this.appStateService.AppState$.getValue().AnalysisWet72h\r\n                                        && (StatMWQMRunList[r].RainDay1 + StatMWQMRunList[r].RainDay2 + StatMWQMRunList[r].RainDay3 + StatMWQMRunList[r].RainDay4) <= this.appStateService.AppState$.getValue().AnalysisWet96h) {\r\n                                        skipVal = true;\r\n                                    }\r\n                                }\r\n\r\n                                if (StatMWQMRunList[r].RemoveFromStat) {\r\n                                    skipVal = true;\r\n                                }\r\n\r\n                                if (!skipVal) {\r\n                                    useCount += 1;\r\n                                    StatMWQMRunList[r].UseInStat = true;\r\n                                    StatMWQMSiteSampleList[StatMWQMSiteSampleList.length - 1].UseInStat = true;\r\n                                }\r\n\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (!found) {\r\n                            StatMWQMSiteSampleList.push(<StatMWQMSiteSample>{\r\n                                SampleDate: StatMWQMRunList[r].RunDate,\r\n                                RunIndex: r,\r\n                                UseInStat: false,\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    let FCList: number[] = [];\r\n                    let YearList: number[] = [];\r\n\r\n                    let countRuns: number = StatMWQMSiteSampleList.length;\r\n                    let LastSampleDate: Date;\r\n                    for (let r = countRuns - 1; r >= 0; r--) {\r\n                        if (StatMWQMSiteSampleList[r].FC && StatMWQMSiteSampleList[r].UseInStat) {\r\n                            LastSampleDate = StatMWQMSiteSampleList[r].SampleDate;\r\n                            let SampleDateText: string = StatMWQMSiteSampleList[r].SampleDate.toString();\r\n                            let SampleYear: number = parseInt(SampleDateText.substring(0, 4));\r\n\r\n                            // for analysis, more condition will be required\r\n                            FCList.push(StatMWQMSiteSampleList[r].FC);\r\n                            YearList.push(SampleYear);\r\n                        }\r\n\r\n                        if (FCList.length > StatRuns) {\r\n                            FCList.shift();\r\n                            YearList.shift();\r\n                        }\r\n\r\n                        if (FCList.length > 3) {\r\n                            StatMWQMSiteSampleList[r].DataText = FCList.join('|');\r\n                            StatMWQMSiteSampleList[r].LastSampleDate = LastSampleDate;\r\n                            StatMWQMSiteSampleList[r].SampCount = FCList.length;\r\n                            StatMWQMSiteSampleList[r].PercOver43 = this.PercOver43(FCList);\r\n                            StatMWQMSiteSampleList[r].PercOver260 = this.PercOver260(FCList);\r\n                            StatMWQMSiteSampleList[r].MinFC = this.MinFC(FCList);\r\n                            StatMWQMSiteSampleList[r].MaxFC = this.MaxFC(FCList);\r\n                            StatMWQMSiteSampleList[r].Median = this.GetMedian(FCList);\r\n                            StatMWQMSiteSampleList[r].P90 = this.GetP90(FCList);\r\n                            StatMWQMSiteSampleList[r].GeoMean = this.GetGeometricMean(FCList);\r\n                            StatMWQMSiteSampleList[r].ColorAndLetter = this.GetColorAndLetter(\r\n                                StatMWQMSiteSampleList[r].P90,\r\n                                StatMWQMSiteSampleList[r].GeoMean,\r\n                                StatMWQMSiteSampleList[r].Median,\r\n                                StatMWQMSiteSampleList[r].PercOver43,\r\n                                StatMWQMSiteSampleList[r].PercOver260);\r\n                            StatMWQMSiteSampleList[r].StatEndYear = this.MinYear(YearList);\r\n                            StatMWQMSiteSampleList[r].StatStartYear = this.MaxYear(YearList);\r\n                            StatMWQMSiteSampleList[r].EndYear = EndYear;\r\n                            StatMWQMSiteSampleList[r].StartYear = StartYear;\r\n                        }\r\n                    }\r\n\r\n                    let countStat: number = StatMWQMSiteSampleList.length;\r\n                    for (let i = 0; i < countStat; i++) {\r\n                        StatMWQMSiteSampleList[i].Samples = SampleCount;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return StatMWQMSiteSampleList;\r\n        }\r\n    }\r\n\r\n    private FillMWQMSiteSampleStatForMWQMSites(tvItemModel: TVItemModel): StatMWQMSiteSample[] {\r\n        let SampleTypeText: string = `${SampleTypeEnum.Routine},`;\r\n        let StatMWQMSiteSampleList: StatMWQMSiteSample[] = [];\r\n        let StatMWQMRunList: StatMWQMRun[] = this.appLoadedService.AppLoaded$.getValue()?.StatMWQMRunList;\r\n\r\n        let StatRuns: number = this.appStateService.AppState$.getValue().StatRunsForDetail;\r\n\r\n        let MWQMSiteModelList: MWQMSiteModel[] = this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSites?.MWQMSiteModelList?.filter(\r\n            c => c.MWQMSite.MWQMSiteTVItemID == tvItemModel.TVItem.TVItemID);\r\n\r\n        if (MWQMSiteModelList && MWQMSiteModelList.length > 0) {\r\n            let MWQMSiteSampleModelSortedList: MWQMSampleModel[] = this.sortMWQMSiteSampleModelListService.SortMWQMSiteSampleModelListDescByDate(\r\n                this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSamples?.MWQMSampleModelList.filter(c => c.MWQMSample.MWQMSiteTVItemID == tvItemModel.TVItem.TVItemID)\r\n            );\r\n\r\n            if (MWQMSiteSampleModelSortedList && MWQMSiteSampleModelSortedList.length > 0) {\r\n                let EndYear = parseInt(MWQMSiteSampleModelSortedList[MWQMSiteSampleModelSortedList.length - 1].MWQMSample.SampleDateTime_Local.toString());\r\n                let StartYear = parseInt(MWQMSiteSampleModelSortedList[0].MWQMSample.SampleDateTime_Local.toString());\r\n\r\n                if (MWQMSiteSampleModelSortedList.length > 0) {\r\n\r\n                    let SampleCount: number = 0;\r\n                    let countRun: number = StatMWQMRunList.length;\r\n                    let countSample: number = MWQMSiteSampleModelSortedList.length;\r\n                    let sUsed: number = 0;\r\n\r\n                    for (let r = 0; r < countRun; r++) // at this point all run should be of SampleTypeEnum.Routine\r\n                    {\r\n                        let RunDateText: string = StatMWQMRunList[r].RunDate.toString();\r\n                        let RunYear: number = parseInt(RunDateText.substring(0, 4));\r\n                        let RunMonth: number = parseInt(RunDateText.substring(5, 7));\r\n                        let RunDate: number = parseInt(RunDateText.substring(8, 10));\r\n\r\n                        let found: boolean = false;\r\n                        for (let s = sUsed; s < countSample; s++) {\r\n                            let SampleDateText: string = MWQMSiteSampleModelSortedList[s].MWQMSample.SampleDateTime_Local.toString();\r\n                            let SampleYear: number = parseInt(SampleDateText.substring(0, 4));\r\n                            let SampleMonth: number = parseInt(SampleDateText.substring(5, 7));\r\n                            let SampleDate: number = parseInt(SampleDateText.substring(8, 10));\r\n                            let IsRouting: boolean = MWQMSiteSampleModelSortedList.filter(c => c.MWQMSample.SampleTypesText.indexOf(SampleTypeText) > -1) ? true : false;\r\n                            if (RunYear == SampleYear && RunMonth == SampleMonth && RunDate == SampleDate && IsRouting) {\r\n                                SampleCount += 1;\r\n                                StatMWQMSiteSampleList.push(<StatMWQMSiteSample>{\r\n                                    Depth: MWQMSiteSampleModelSortedList[s].MWQMSample.Depth_m,\r\n                                    FC: MWQMSiteSampleModelSortedList[s].MWQMSample.FecCol_MPN_100ml,\r\n                                    IsActive: tvItemModel.TVItem.IsActive,\r\n                                    MWQMRunTVItemID: StatMWQMRunList[r].MWQMRunTVItemID,\r\n                                    MWQMSiteTVItemID: tvItemModel.TVItem.TVItemID,\r\n                                    PH: MWQMSiteSampleModelSortedList[s].MWQMSample.PH,\r\n                                    RunIndex: r,\r\n                                    Sal: MWQMSiteSampleModelSortedList[s].MWQMSample.Salinity_PPT,\r\n                                    SampleDate: MWQMSiteSampleModelSortedList[s].MWQMSample.SampleDateTime_Local,\r\n                                    Temp: MWQMSiteSampleModelSortedList[s].MWQMSample.WaterTemp_C,\r\n                                    UseInStat: StatMWQMRunList[r].UseInStat,\r\n                                    Samples: countSample,\r\n                                    SampleYear: SampleYear,\r\n                                    SampleMonth: SampleMonth,\r\n                                    SampleDay: SampleDate,\r\n                                });\r\n                                //StatMWQMRunList[r].UseInStat = true;\r\n                                sUsed = s + 1;\r\n                                found = true;\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                        if (!found) {\r\n                            StatMWQMSiteSampleList.push(<StatMWQMSiteSample>{\r\n                                SampleDate: StatMWQMRunList[r].RunDate,\r\n                                RunIndex: r,\r\n                                UseInStat: false,\r\n                            });\r\n                        }\r\n                    }\r\n\r\n                    let FCList: number[] = [];\r\n                    let YearList: number[] = [];\r\n\r\n                    let countRuns: number = StatMWQMSiteSampleList.length;\r\n                    let LastSampleDate: Date;\r\n                    for (let r = countRuns - 1; r >= 0; r--) {\r\n                        if (StatMWQMSiteSampleList[r].FC) {\r\n                            LastSampleDate = StatMWQMSiteSampleList[r].SampleDate;\r\n                            let SampleDateText: string = StatMWQMSiteSampleList[r].SampleDate.toString();\r\n                            let SampleYear: number = parseInt(SampleDateText.substring(0, 4));\r\n\r\n                            // for analysis, more condition will be required\r\n                            FCList.push(StatMWQMSiteSampleList[r].FC);\r\n                            YearList.push(SampleYear);\r\n                        }\r\n\r\n                        if (FCList.length > StatRuns) {\r\n                            FCList.shift();\r\n                            YearList.shift();\r\n                        }\r\n\r\n                        if (FCList.length > 3) {\r\n                            StatMWQMSiteSampleList[r].DataText = FCList.join('|');\r\n                            StatMWQMSiteSampleList[r].LastSampleDate = LastSampleDate;\r\n                            StatMWQMSiteSampleList[r].SampCount = FCList.length;\r\n                            StatMWQMSiteSampleList[r].PercOver43 = this.PercOver43(FCList);\r\n                            StatMWQMSiteSampleList[r].PercOver260 = this.PercOver260(FCList);\r\n                            StatMWQMSiteSampleList[r].MinFC = this.MinFC(FCList);\r\n                            StatMWQMSiteSampleList[r].MaxFC = this.MaxFC(FCList);\r\n                            StatMWQMSiteSampleList[r].Median = this.GetMedian(FCList);\r\n                            StatMWQMSiteSampleList[r].P90 = this.GetP90(FCList);\r\n                            StatMWQMSiteSampleList[r].GeoMean = this.GetGeometricMean(FCList);\r\n                            StatMWQMSiteSampleList[r].ColorAndLetter = this.GetColorAndLetter(\r\n                                StatMWQMSiteSampleList[r].P90,\r\n                                StatMWQMSiteSampleList[r].GeoMean,\r\n                                StatMWQMSiteSampleList[r].Median,\r\n                                StatMWQMSiteSampleList[r].PercOver43,\r\n                                StatMWQMSiteSampleList[r].PercOver260);\r\n                            StatMWQMSiteSampleList[r].StatEndYear = this.MinYear(YearList);\r\n                            StatMWQMSiteSampleList[r].StatStartYear = this.MaxYear(YearList);\r\n                            StatMWQMSiteSampleList[r].EndYear = EndYear;\r\n                            StatMWQMSiteSampleList[r].StartYear = StartYear;\r\n                        }\r\n                    }\r\n\r\n                    let countStat: number = StatMWQMSiteSampleList.length;\r\n                    for (let i = 0; i < countStat; i++) {\r\n                        StatMWQMSiteSampleList[i].Samples = SampleCount;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return StatMWQMSiteSampleList;\r\n        }\r\n    }\r\n\r\n    private PercOver43(FCList: number[]): number {\r\n        let dataOver43: number[] = [];\r\n        for (let FC of FCList) {\r\n            if (FC > 43) {\r\n                dataOver43.push(FC);\r\n            }\r\n        }\r\n\r\n        return (dataOver43.length / FCList.length) * 100;\r\n    }\r\n\r\n    private PercOver260(FCList: number[]): number {\r\n        let dataOver260: number[] = [];\r\n        for (let FC of FCList) {\r\n            if (FC > 260) {\r\n                dataOver260.push(FC);\r\n            }\r\n        }\r\n\r\n        return (dataOver260.length / FCList.length) * 100;\r\n    }\r\n    private MinYear(YearList: number[]): number {\r\n        let MinYear: number = 10000;\r\n\r\n        for (let Year of YearList) {\r\n            if (MinYear > Year) {\r\n                MinYear = Year;\r\n            }\r\n        }\r\n\r\n        return MinYear;\r\n    }\r\n    private MaxYear(YearList: number[]): number {\r\n        let MaxYear: number = 0;\r\n\r\n        for (let Year of YearList) {\r\n            if (MaxYear < Year) {\r\n                MaxYear = Year;\r\n            }\r\n        }\r\n\r\n        return MaxYear;\r\n    }\r\n    private MaxFC(FCList: number[]): number {\r\n        let MaxFC: number = 0;\r\n\r\n        for (let FC of FCList) {\r\n            if (MaxFC < FC) {\r\n                MaxFC = FC;\r\n            }\r\n        }\r\n\r\n        return MaxFC;\r\n    }\r\n    private MinFC(FCList: number[]): number {\r\n        let MinFC: number = 10000000;\r\n\r\n        for (let FC of FCList) {\r\n            if (MinFC > FC) {\r\n                MinFC = FC;\r\n            }\r\n        }\r\n\r\n        return MinFC;\r\n    }\r\n    private GetGeometricMean(FCList: number[]): number {\r\n        let prod: number = 0;\r\n\r\n        prod = 1.0;\r\n\r\n        for (let FC of FCList) {\r\n            prod *= FC;\r\n        }\r\n\r\n        return Math.pow(prod, (1.0 / FCList.length));\r\n    }\r\n    private GetColorAndLetter(P90: number, GeoMean: number, Median: number, PercOver43: number, PercOver260: number): ColorAndLetter {\r\n        let colorAndLetter: ColorAndLetter = <ColorAndLetter>{ color: '', letter: '' };\r\n        if (!Median) {\r\n            return colorAndLetter;\r\n        }\r\n        if ((GeoMean > 88) || (Median > 88) || (P90 > 260) || (PercOver260 > 10)) {\r\n            if ((GeoMean > 181) || (Median > 181) || (P90 > 460) || (PercOver260 > 18)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#8888ff', color: 'bgbluef', letter: 'F' };\r\n            }\r\n            else if ((GeoMean > 163) || (Median > 163) || (P90 > 420) || (PercOver260 > 17)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#9999ff', color: 'bgbluee', letter: 'E' };\r\n            }\r\n            else if ((GeoMean > 144) || (Median > 144) || (P90 > 380) || (PercOver260 > 15)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#aaaaff', color: 'bgblued', letter: 'D' };\r\n            }\r\n            else if ((GeoMean > 125) || (Median > 125) || (P90 > 340) || (PercOver260 > 13)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#bbbbff', color: 'bgbluec', letter: 'C' };\r\n            }\r\n            else if ((GeoMean > 107) || (Median > 107) || (P90 > 300) || (PercOver260 > 12)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#ccccff', color: 'bgblueb', letter: 'B' };\r\n            }\r\n            else {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#ddddff', color: 'bgbluea', letter: 'A' };\r\n            }\r\n        }\r\n        else if ((GeoMean > 14) || (Median > 14) || (P90 > 43) || (PercOver43 > 10)) {\r\n            if ((GeoMean > 76) || (Median > 76) || (P90 > 224) || (PercOver43 > 27)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#aa0000', color: 'bgredf', letter: 'F' };\r\n            }\r\n            else if ((GeoMean > 63) || (Median > 63) || (P90 > 188) || (PercOver43 > 23)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#cc0000', color: 'bgrede', letter: 'E' };\r\n            }\r\n            else if ((GeoMean > 51) || (Median > 51) || (P90 > 152) || (PercOver43 > 20)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#ff1111', color: 'bgredd', letter: 'D' };\r\n            }\r\n            else if ((GeoMean > 39) || (Median > 39) || (P90 > 115) || (PercOver43 > 17)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#ff4444', color: 'bgredc', letter: 'C' };\r\n            }\r\n            else if ((GeoMean > 26) || (Median > 26) || (P90 > 79) || (PercOver43 > 13)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#ff9999', color: 'bgredb', letter: 'B' };\r\n            }\r\n            else {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#ffcccc', color: 'bgreda', letter: 'A' };\r\n            }\r\n        }\r\n        else {\r\n            if ((GeoMean > 12) || (Median > 12) || (P90 > 36) || (PercOver43 > 8)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#ccffcc', color: 'bggreenf', letter: 'F' };\r\n            }\r\n            else if ((GeoMean > 9) || (Median > 9) || (P90 > 29) || (PercOver43 > 7)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#99ff99', color: 'bggreene', letter: 'E' };\r\n            }\r\n            else if ((GeoMean > 7) || (Median > 7) || (P90 > 22) || (PercOver43 > 5)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#44ff44', color: 'bggreend', letter: 'D' };\r\n            }\r\n            else if ((GeoMean > 5) || (Median > 5) || (P90 > 14) || (PercOver43 > 3)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#11ff11', color: 'bggreenc', letter: 'C' };\r\n            }\r\n            else if ((GeoMean > 2) || (Median > 2) || (P90 > 7) || (PercOver43 > 2)) {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#00bb00', color: 'bggreenb', letter: 'B' };\r\n            }\r\n            else {\r\n                colorAndLetter = <ColorAndLetter>{ hexColor: '#009900', color: 'bggreena', letter: 'A' };\r\n            }\r\n        }\r\n\r\n        return colorAndLetter;\r\n    }\r\n    private GetMedian(FCList: number[]): number {\r\n        let sortedData: number[] = [];\r\n\r\n        let countFC: number = FCList.length;\r\n        for (let i = 0; i < countFC; i++) {\r\n            sortedData.push(FCList[i]);\r\n        }\r\n\r\n        sortedData.sort((n1, n2) => n1 - n2);\r\n        let size: number = sortedData.length;\r\n        let mid = parseInt((size / 2).toString());\r\n        return (size % 2 != 0) ? sortedData[mid] : (sortedData[mid] + sortedData[mid - 1]) / 2;\r\n\r\n    }\r\n    private GetP90(FCList: number[]): number {\r\n        let fcLogList: number[] = [];\r\n        for (let FC of FCList) {\r\n            fcLogList.push(Math.log(FC) / Math.LN10);\r\n        }\r\n\r\n        let Average = 0.0;\r\n        let Sum = 0.0;\r\n        for (let d of fcLogList) {\r\n            Sum += d\r\n        }\r\n        Average = Sum / FCList.length;\r\n        let SD: number = this.GetStandardDeviation(fcLogList);\r\n        let P90Log = (SD * 1.28) + Average;\r\n        return Math.pow(10, P90Log);\r\n    }\r\n    private GetStandardDeviation(FCList: number[]): number {\r\n        let avg: number = 0;\r\n        let total: number = 0;\r\n        for (let FC of FCList) {\r\n            total = total + FC;\r\n        }\r\n        avg = total / FCList.length;\r\n\r\n        let sum: number = 0;\r\n        for (let FC of FCList) {\r\n            sum += (FC - avg) * (FC - avg);\r\n        }\r\n\r\n        return Math.sqrt((sum) / (FCList.length - 1));\r\n    }\r\n\r\n    private KeepWebMWQMSamples() {\r\n        this.UpdateWebMWQMSamples1980_2020(this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSamples);\r\n        console.debug(this.appLoadedService.AppLoaded$?.getValue()?.WebMWQMSamples);\r\n        if (this.DoOther) {\r\n            // nothing else to add in the chain\r\n        }\r\n    }\r\n\r\n    private UpdateWebMWQMSamples1980_2020(x: WebMWQMSamples) {\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebMWQMSamples: x\r\n        });\r\n    }\r\n    private UpdateWebMWQMSamples2021_2060(x: WebMWQMSamples) {\r\n        this.appLoadedService.AppLoaded$.getValue().WebMWQMSamples.MWQMSampleModelList.concat(x.MWQMSampleModelList);\r\n        this.appLoadedService.UpdateAppLoaded(<AppLoaded>{\r\n            WebMWQMSamples: this.appLoadedService.AppLoaded$.getValue().WebMWQMSamples\r\n        });\r\n\r\n        this.FillStatMWQMRunList();\r\n\r\n        this.FillStatMWQMSiteList();\r\n\r\n        if (this.DoOther) {\r\n            if (this.componentDataLoadedService.DataLoadedWebSubsector()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n        else {\r\n            if (this.componentDataLoadedService.DataLoadedWebMWQMSamples()) {\r\n                this.appStateService.UpdateAppState(<AppState>{ Status: '', Working: false });\r\n            }\r\n        }\r\n\r\n        if (this.appStateService.AppState$.getValue().GoogleJSLoaded) {\r\n            if (this.appStateService.AppState$.getValue().SubsectorSubComponent == SubsectorSubComponentEnum.MWQMSites) {\r\n                this.mapService.ClearMap();\r\n                this.mapService.DrawObjects([\r\n                    //...this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.MWQMSiteModelList.,\r\n                    //...[this.appLoadedService.AppLoaded$.getValue().WebMWQMSites.TVItemModel],\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class PredicateAscByService {\r\n    constructor() {\r\n    }\r\n\r\n    PredicateAscBy(prop) {\r\n        return function (a, b) {\r\n            if (a[prop] > b[prop]) {\r\n                return 1;\r\n            } else if (a[prop] < b[prop]) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        }\r\n    }\r\n}","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p>This is the sampling plan component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\n\n@Component({\n  selector: 'app-sampling-plan-item',\n  templateUrl: './sampling-plan-item.component.html',\n  styleUrls: ['./sampling-plan-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SamplingPlanItemComponent implements OnInit, OnDestroy {\n\n  constructor(public appStateService: AppStateService,\n    public appLanguageService: AppLanguageService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import {InjectionToken} from '@angular/core'\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport type Saver = (blob: Blob, filename?: string) => void\r\n\r\nexport const SAVER = new InjectionToken<Saver>('saver')\r\n\r\nexport function getSaver(): Saver {\r\n  return saveAs;\r\n}","/*\r\n * Auto generated C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularEnums.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\nimport { LanguageEnum } from 'src/app/enums/generated/LanguageEnum';\r\n\r\nexport enum TideTextEnum {\r\n    LowTide = 1,\r\n    LowTideFalling = 2,\r\n    LowTideRising = 3,\r\n    MidTide = 4,\r\n    MidTideFalling = 5,\r\n    MidTideRising = 6,\r\n    HighTide = 7,\r\n    HighTideFalling = 8,\r\n    HighTideRising = 9,\r\n}\r\n\r\nexport function GetTideTextEnum(): typeof TideTextEnum\r\n{\r\n  return TideTextEnum;\r\n}\r\n\r\nexport function TideTextEnum_GetOrderedText(appStateService: AppStateService): EnumIDAndText[] {\r\n    let enumTextOrderedList: EnumIDAndText[] = [];\r\n    if (appStateService.AppState$?.getValue().Language == LanguageEnum.fr) {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Low Tide (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Low Tide Falling (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Low Tide Rising (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Mid Tide (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Mid Tide Falling (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Mid Tide Rising (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'High Tide (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'High Tide Falling (fr)' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'High Tide Rising (fr)' });\r\n    }\r\n    else {\r\n        enumTextOrderedList.push({ EnumID: 1, EnumText: 'Low Tide' });\r\n        enumTextOrderedList.push({ EnumID: 2, EnumText: 'Low Tide Falling' });\r\n        enumTextOrderedList.push({ EnumID: 3, EnumText: 'Low Tide Rising' });\r\n        enumTextOrderedList.push({ EnumID: 4, EnumText: 'Mid Tide' });\r\n        enumTextOrderedList.push({ EnumID: 5, EnumText: 'Mid Tide Falling' });\r\n        enumTextOrderedList.push({ EnumID: 6, EnumText: 'Mid Tide Rising' });\r\n        enumTextOrderedList.push({ EnumID: 7, EnumText: 'High Tide' });\r\n        enumTextOrderedList.push({ EnumID: 8, EnumText: 'High Tide Falling' });\r\n        enumTextOrderedList.push({ EnumID: 9, EnumText: 'High Tide Rising' });\r\n    }\r\n\r\n    return enumTextOrderedList.sort((a, b) => a.EnumText.localeCompare(b.EnumText));\r\n}\r\n\r\nexport function TideTextEnum_GetIDText(enumID: number, appStateService: AppStateService): string {\r\n    let addressTypeEnunText: string;\r\n    TideTextEnum_GetOrderedText(appStateService).forEach(e => {\r\n        if (e.EnumID == enumID) {\r\n            addressTypeEnunText = e.EnumText;\r\n            return false;\r\n        }\r\n    });\r\n\r\n    return addressTypeEnunText;\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { GetAnalysisCalculationTypeEnum } from 'src/app/enums/generated/AnalysisCalculationTypeEnum';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\nimport { StatMWQMRun } from 'src/app/models/generated/web/StatMWQMRun.model';\nimport { StatMWQMSite } from 'src/app/models/generated/web/StatMWQMSite.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { AnalysisService } from 'src/app/services/helpers/analysis.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { DateFormatService } from 'src/app/services/helpers/date-format.service';\nimport { TogglesService } from 'src/app/services/helpers/toggles.service';\nimport { WebMWQMSamplesService } from 'src/app/services/loaders/web-mwqm-samples.service';\n\n@Component({\n  selector: 'app-analysis-options',\n  templateUrl: './analysis-options.component.html',\n  styleUrls: ['./analysis-options.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnalysisOptionsComponent implements OnInit, OnDestroy {\n  @Input() TVItemModelList: TVItemModel[] = [];\n  @Input() AppState: AppState;\n  @Input() StatMWQMSiteList: StatMWQMSite[] = [];\n  @Input() StatMWQMRunList: StatMWQMRun[] = [];\n\n  formStat: FormGroup;\n\n  languageEnum = GetLanguageEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  analysisCalculationTypeEnum = GetAnalysisCalculationTypeEnum();\n  language: number;\n  enumIDAndTextList: EnumIDAndText[] = [];\n  dryRain_mm_List: number[] = [];\n  wetRain_mm_List: number[] = [];\n  rangeVal: number[] = [1, 2, 3, 4, 5];\n  salDevVal: number[] = [3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public togglesService: TogglesService,\n    public appLanguageService: AppLanguageService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public dateFormatService: DateFormatService,\n    private fb: FormBuilder,\n    public analysisService: AnalysisService,\n    private webMWQMSamplesService: WebMWQMSamplesService) { }\n\n  ngOnInit(): void {\n    this.language = <number>this.appStateService.AppState$.getValue().Language;\n    this.formStat = this.fb.group({\n      AnalysisStartRun: [this.appStateService.AppState$.getValue().AnalysisStartRun],\n      AnalysisEndRun: [this.appStateService.AppState$.getValue().AnalysisEndRun],\n      AnalysisRuns: [this.appStateService.AppState$.getValue().AnalysisRuns],\n      AnalysisFullYear: [this.appStateService.AppState$.getValue().AnalysisFullYear],\n      AnalysisShowOnlyUsed: [this.appStateService.AppState$.getValue().AnalysisShowOnlyUsed],\n      AnalysisCalculationType: [this.appStateService.AppState$.getValue().AnalysisCalculationType],\n      AnalysisHighlightSalFromAverage: [this.appStateService.AppState$.getValue().AnalysisHighlightSalFromAverage],\n      AnalysisShortRange: [this.appStateService.AppState$.getValue().AnalysisShortRange],\n      AnalysisMidRange: [this.appStateService.AppState$.getValue().AnalysisMidRange],\n      AnalysisDry24h: [this.appStateService.AppState$.getValue().AnalysisDry24h],\n      AnalysisDry48h: [this.appStateService.AppState$.getValue().AnalysisDry48h],\n      AnalysisDry72h: [this.appStateService.AppState$.getValue().AnalysisDry72h],\n      AnalysisDry96h: [this.appStateService.AppState$.getValue().AnalysisDry96h],\n      AnalysisWet24h: [this.appStateService.AppState$.getValue().AnalysisWet24h],\n      AnalysisWet48h: [this.appStateService.AppState$.getValue().AnalysisWet48h],\n      AnalysisWet72h: [this.appStateService.AppState$.getValue().AnalysisWet72h],\n      AnalysisWet96h: [this.appStateService.AppState$.getValue().AnalysisWet96h],\n    });\n    this.enumIDAndTextList = this.analysisService.GetAnalysisCalculationTypeEnum_GetOrderedText();\n    this.dryRain_mm_List = this.analysisService.GetDryRain();\n    this.wetRain_mm_List = this.analysisService.GetWetRain();\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n","<div class=\"margin10\">\n    <mat-accordion>\n        <mat-expansion-panel>\n            <mat-expansion-panel-header>\n                <mat-panel-title>\n                    {{\n                    appLanguageService.AppLanguage.AnalysisOptionsAnalysisOptions[appStateService.AppState$?.getValue()?.Language]\n                    }}\n                </mat-panel-title>\n                <mat-panel-description>\n                    <strong>{{\n                        appLanguageService.AppLanguage.AnalysisOptionsStart[appStateService.AppState$?.getValue()?.Language]\n                        }}:</strong>&nbsp;\n                    {{ appStateService.AppState$.getValue()?.AnalysisStartRun?.RunDate | date:'yyyy-MMM-dd' }}&nbsp;\n                    <strong>{{\n                        appLanguageService.AppLanguage.AnalysisOptionsEnd[appStateService.AppState$?.getValue()?.Language]\n                        }}:</strong>&nbsp;\n                    {{ appStateService.AppState$.getValue()?.AnalysisEndRun?.RunDate | date:'yyyy-MMM-dd' }}&nbsp;\n                    <strong>{{\n                        appLanguageService.AppLanguage.AnalysisOptionsRuns[appStateService.AppState$?.getValue()?.Language]\n                        }}:</strong>&nbsp;\n                    {{ appStateService.AppState$.getValue()?.AnalysisRuns }}&nbsp;\n                    <strong>{{\n                        appLanguageService.AppLanguage.AnalysisOptionsCalculation[appStateService.AppState$?.getValue()?.Language]\n                        }}:</strong>&nbsp;\n                    {{\n                    analysisService.GetAnalysisCalculationTypeEnum_GetIDText(appStateService.AppState$?.getValue()?.AnalysisCalculationType)\n                    }}&nbsp;\n                    <!-- <strong>{{ appStateService.AppState$.getValue()?.AnalysisShowOnlyUsed ? 'Show only used' : 'Show All' }}</strong>&nbsp; -->\n\n                </mat-panel-description>\n            </mat-expansion-panel-header>\n            <mat-card>\n                <mat-card-content>\n                    <form [formGroup]=\"formStat\">\n                        <mat-form-field>\n                            <mat-select #SR formControlName=\"AnalysisStartRun\"\n                                (selectionChange)=\"analysisService.SetStartRun(SR.value)\">\n                                <mat-option\n                                    *ngFor=\"let StatStartMWQMRun of (appLoadedService.AppLoaded$ | async).StatMWQMRunList\"\n                                    [value]=\"StatStartMWQMRun\">\n                                    {{ StatStartMWQMRun?.RunDate | date:'yyyy-MMM-dd' }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsStartDate[appStateService.AppState$?.getValue()?.Language]\n                                }}</mat-label>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-select #ER formControlName=\"AnalysisEndRun\"\n                                (selectionChange)=\"analysisService.SetEndRun(ER.value)\">\n                                <mat-option\n                                    *ngFor=\"let StatEndMWQMRun of (appLoadedService.AppLoaded$ | async).StatMWQMRunList\"\n                                    [value]=\"StatEndMWQMRun\">\n                                    {{ StatEndMWQMRun?.RunDate | date:'yyyy-MMM-dd' }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsEndDate[appStateService.AppState$?.getValue()?.Language]\n                                }}</mat-label>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-select #R formControlName=\"AnalysisRuns\"\n                                (selectionChange)=\"analysisService.SetRuns(R.value)\">\n                                <mat-option *ngFor=\"let r of StatMWQMRunList; let i = index\" [value]=\"i\">\n                                    {{ i }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsRuns[appStateService.AppState$?.getValue()?.Language]\n                                }}</mat-label>\n                        </mat-form-field>\n                        <!-- <mat-checkbox (click)=\"togglesService.ToggleAnalysisFullYear()\"\n                            formControlName=\"AnalysisFullYear\"\n                            [value]=\"appStateService?.AppState$?.getValue()?.AnalysisFullYear\">\n                            Full Year</mat-checkbox>\n                        <mat-checkbox (click)=\"togglesService.ToggleAnalysisShowOnlyUsed()\"\n                            formControlName=\"AnalysisShowOnlyUsed\"\n                            [value]=\"appStateService?.AppState$?.getValue()?.AnalysisShowOnlyUsed\">Show only used\n                        </mat-checkbox> -->\n                        <br />\n                        <mat-form-field>\n                            <mat-select #Cal formControlName=\"AnalysisCalculationType\"\n                                (selectionChange)=\"analysisService.SetCalculationType(Cal.value)\">\n                                <mat-option *ngFor=\"let CalType of enumIDAndTextList\" [value]=\"CalType.EnumID\">\n                                    {{ CalType.EnumText }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsCalculation[appStateService.AppState$?.getValue()?.Language]\n                                }}</mat-label>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-select #Sal formControlName=\"AnalysisHighlightSalFromAverage\"\n                                (selectionChange)=\"analysisService.SetHighlightSalFromAverage(Sal.value)\">\n                                <mat-option *ngFor=\"let val of salDevVal\" [value]=\"val\">\n                                    {{ val }} {{\n                                    appLanguageService.AppLanguage.AnalysisOptionsPPT[appStateService.AppState$?.getValue()?.Language]\n                                    }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsHighlightSal[appStateService.AppState$?.getValue()?.Language]\n                                }}</mat-label>\n                        </mat-form-field>\n                        <!-- <mat-form-field>\n                            <mat-select #ShortRange formControlName=\"AnalysisShortRange\"\n                                (selectionChange)=\"SetShortRange(ShortRange.value)\">\n                                <mat-option *ngFor=\"let val of rangeVal\" [value]=\"val\">\n                                    Last {{ val }} days\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>Short Range</mat-label>\n                        </mat-form-field>\n                        <mat-form-field>\n                            <mat-select #MidRange formControlName=\"AnalysisMidRange\"\n                                (selectionChange)=\"SetMidRange(MidRange.value)\">\n                                <mat-option *ngFor=\"let val of rangeVal\" [value]=\"val\">\n                                    Extra {{ val }} days from short range\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>Mid Range (will add short range on top)</mat-label>\n                        </mat-form-field> -->\n                        <h2>{{\n                            appLanguageService.AppLanguage.AnalysisOptionsUpperLowerRainLimit[appStateService.AppState$?.getValue()?.Language]\n                            }}</h2>\n                        <span>{{\n                            appLanguageService.AppLanguage.AnalysisOptionsConsideredDry[appStateService.AppState$?.getValue()?.Language]\n                            }}:&nbsp;</span>\n                        <mat-form-field class=\"narrow\">\n                            <mat-select #Dry24h formControlName=\"AnalysisDry24h\"\n                                (selectionChange)=\"analysisService.SetDry24h(Dry24h.value)\">\n                                <mat-option *ngFor=\"let val of dryRain_mm_List\" [value]=\"val\">\n                                    {{ val }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsDry[appStateService.AppState$?.getValue()?.Language]\n                                }} 24 h (mm)</mat-label>\n                        </mat-form-field>\n                        <mat-form-field class=\"narrow\">\n                            <mat-select #Dry48h formControlName=\"AnalysisDry48h\"\n                                (selectionChange)=\"analysisService.SetDry48h(Dry48h.value)\">\n                                <mat-option *ngFor=\"let val of dryRain_mm_List\" [value]=\"val\">\n                                    {{ val }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsDry[appStateService.AppState$?.getValue()?.Language]\n                                }} 48 h (mm)</mat-label>\n                        </mat-form-field>\n                        <mat-form-field class=\"narrow\">\n                            <mat-select #Dry72h formControlName=\"AnalysisDry72h\"\n                                (selectionChange)=\"analysisService.SetDry72h(Dry72h.value)\">\n                                <mat-option *ngFor=\"let val of dryRain_mm_List\" [value]=\"val\">\n                                    {{ val }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsDry[appStateService.AppState$?.getValue()?.Language]\n                                }} 72 h (mm)</mat-label>\n                        </mat-form-field>\n                        <mat-form-field class=\"narrow\">\n                            <mat-select #Dry96h formControlName=\"AnalysisDry96h\"\n                                (selectionChange)=\"analysisService.SetDry96h(Dry96h.value)\">\n                                <mat-option *ngFor=\"let val of dryRain_mm_List\" [value]=\"val\">\n                                    {{ val }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsDry[appStateService.AppState$?.getValue()?.Language]\n                                }} 96 h (mm)</mat-label>\n                        </mat-form-field>\n                        <br />\n                        <span>{{\n                            appLanguageService.AppLanguage.AnalysisOptionsConsideredWet[appStateService.AppState$?.getValue()?.Language]\n                            }}:&nbsp;</span>\n                        <mat-form-field class=\"narrow\">\n                            <mat-select #Wet24h formControlName=\"AnalysisWet24h\"\n                                (selectionChange)=\"analysisService.SetWet24h(Wet24h.value)\">\n                                <mat-option *ngFor=\"let val of wetRain_mm_List\" [value]=\"val\">\n                                    {{ val }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsWet[appStateService.AppState$?.getValue()?.Language]\n                                }} 24 h (mm)</mat-label>\n                        </mat-form-field>\n                        <mat-form-field class=\"narrow\">\n                            <mat-select #Wet48h formControlName=\"AnalysisWet48h\"\n                                (selectionChange)=\"analysisService.SetWet48h(Wet48h.value)\">\n                                <mat-option *ngFor=\"let val of wetRain_mm_List\" [value]=\"val\">\n                                    {{ val }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsWet[appStateService.AppState$?.getValue()?.Language]\n                                }} 48 h (mm)</mat-label>\n                        </mat-form-field>\n                        <mat-form-field class=\"narrow\">\n                            <mat-select #Wet72h formControlName=\"AnalysisWet72h\"\n                                (selectionChange)=\"analysisService.SetWet72h(Wet72h.value)\">\n                                <mat-option *ngFor=\"let val of wetRain_mm_List\" [value]=\"val\">\n                                    {{ val }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsWet[appStateService.AppState$?.getValue()?.Language]\n                                }} 72 h (mm)</mat-label>\n                        </mat-form-field>\n                        <mat-form-field class=\"narrow\">\n                            <mat-select #Wet96h formControlName=\"AnalysisWet96h\"\n                                (selectionChange)=\"analysisService.SetWet96h(Wet96h.value)\">\n                                <mat-option *ngFor=\"let val of wetRain_mm_List\" [value]=\"val\">\n                                    {{ val }}\n                                </mat-option>\n                            </mat-select>\n                            <mat-label>{{\n                                appLanguageService.AppLanguage.AnalysisOptionsWet[appStateService.AppState$?.getValue()?.Language]\n                                }} 96 h (mm)</mat-label>\n                        </mat-form-field>\n                    </form>\n                </mat-card-content>\n            </mat-card>\n        </mat-expansion-panel>\n    </mat-accordion>\n</div>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { SubPageService } from 'src/app/services/helpers/sub-page.service';\nimport { MapService } from 'src/app/services/map/map.service';\n\n@Component({\n  selector: 'app-analysis-item-menu',\n  templateUrl: './analysis-item-menu.component.html',\n  styleUrls: ['./analysis-item-menu.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnalysisItemMenuComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n\n  languageEnum = GetLanguageEnum();\n  \n  constructor(public appStateService: AppStateService,\n    public subPageService: SubPageService,\n    public mapService: MapService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy()\n  {\n  }\n\n  ShowEdit(tvItemStatMapModel: TVItemModel) {\n    alert(\"This is ShowEdit\");\n  }\n\n  ShowData(tvItemStatMapModel: TVItemModel) {\n    alert(\"This is ShowData\");\n  }\n\n}\n","<ng-container>\n    <button mat-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n        <ng-container *ngIf=\"appStateService.AppState$?.getValue()?.EditVisible\">\n            <button class=\"selected\" mat-menu-item (click)=\"ShowEdit(TVItemModel)\">\n                <mat-icon>edit</mat-icon>\n                <span>Edit</span>\n            </button>\n        </ng-container>\n        <button mat-menu-item (click)=\"ShowData(TVItemModel)\">\n            <mat-icon>more_horiz</mat-icon>\n            <span>More information</span>\n        </button>\n        <ng-container *ngIf=\"appStateService.AppState$?.getValue()?.MapVisible\">\n            <button mat-menu-item class=\"true ? 'selected' : ''\" (click)=\"mapService.ShowItem(TVItemModel, $event)\">\n                <mat-icon>place</mat-icon>\n                <span>Show item on map</span>\n            </button>\n        </ng-container>\n    </mat-menu>\n</ng-container>","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: plum;\">This is the subsector edit component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-subsector-item-edit',\n  templateUrl: './subsector-item-edit.component.html',\n  styleUrls: ['./subsector-item-edit.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SubsectorItemEditComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { TogglesService } from 'src/app/services/helpers/toggles.service';\n\n@Component({\n  selector: 'app-sidenav-menu',\n  templateUrl: './sidenav-menu.component.html',\n  styleUrls: ['./sidenav-menu.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SideNavMenuComponent implements OnInit, OnDestroy {\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService, \n    public appLanguageService: AppLanguageService,\n    public togglesService: TogglesService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<h2 class=\"center\">\n    {{ appLanguageService.AppLanguage.SideNavMenuContextMenu[appStateService.AppState$?.getValue().Language] }}</h2>\n<mat-list>\n    <mat-list-item>\n        <button mat-button [ngClass]=\"appStateService.AppState$?.getValue()?.InactVisible ? 'selected' : ''\"\n            (click)=\"togglesService.ToggleInactive(appStateService.AppState$?.getValue())\"\n            title=\"{{ appLanguageService.AppLanguage.SideNavMenuShowInactiveItems[appStateService.AppState$?.getValue().Language] }}\">\n            {{ appLanguageService.AppLanguage.SideNavMenuInactive[appStateService.AppState$?.getValue().Language] }}\n        </button>\n    </mat-list-item>\n    <mat-list-item>\n        <button mat-button [ngClass]=\"appStateService.AppState$?.getValue()?.DetailVisible ? 'selected' : ''\"\n            (click)=\"togglesService.ToggleDetail()\"\n            title=\"{{ appLanguageService.AppLanguage.SideNavMenuShowDetails[appStateService.AppState$?.getValue().Language] }}\">\n            {{ appLanguageService.AppLanguage.SideNavMenuDetails[appStateService.AppState$?.getValue().Language] }}\n        </button>\n    </mat-list-item>\n    <mat-list-item>\n        <button mat-button [ngClass]=\"appStateService.AppState$?.getValue()?.StatCountVisible ? 'selected' : ''\"\n            (click)=\"togglesService.ToggleStatCount()\"\n            title=\"{{ appLanguageService.AppLanguage.SideNavMenuShowStatCount[appStateService.AppState$?.getValue().Language] }}\">\n            {{ appLanguageService.AppLanguage.SideNavMenuStatCount[appStateService.AppState$?.getValue().Language] }}\n        </button>\n    </mat-list-item>\n    <mat-list-item>\n        <button mat-button [ngClass]=\"appStateService.AppState$?.getValue()?.LastUpdateVisible ? 'selected' : ''\"\n            (click)=\"togglesService.ToggleLastUpdate()\"\n            title=\"{{ appLanguageService.AppLanguage.SideNavMenuShowLastUpdate[appStateService.AppState$?.getValue().Language] }}\">\n            {{ appLanguageService.AppLanguage.SideNavMenuLastUpdate[appStateService.AppState$?.getValue().Language] }}\n        </button>\n    </mat-list-item>\n    <mat-list-item>\n        <button mat-button [ngClass]=\"appStateService.AppState$?.getValue()?.EditVisible ? 'selected' : ''\"\n            (click)=\"togglesService.ToggleEdit()\"\n            title=\"{{ appLanguageService.AppLanguage.SideNavMenuShowEdit[appStateService.AppState$?.getValue().Language] }}\">\n            {{ appLanguageService.AppLanguage.SideNavMenuEdit[appStateService.AppState$?.getValue().Language] }}\n        </button>\n    </mat-list-item>\n</mat-list>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { GetLanguageEnum } from 'src/app/enums/generated/LanguageEnum';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ContactNameService } from 'src/app/services/helpers/contact-name.service';\nimport { DateFormatService } from 'src/app/services/helpers/date-format.service';\n\n@Component({\n  selector: 'app-last-udpate-tv-item-model',\n  templateUrl: './last-update-tvitemmodel.component.html',\n  styleUrls: ['./last-update-tvitemmodel.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LastUpdateTVItemModelComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n\n  languageEnum = GetLanguageEnum();\n\n  constructor(public appStateService: AppStateService,\n    public dateFormatService: DateFormatService,\n    public contactNameService: ContactNameService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnDestroy() {\n  }\n\n}\n","<span class=\"last-update\">\n    &nbsp;&nbsp;{{ dateFormatService.GetLastUpdateDateTVItemModel(TVItemModel) }}&nbsp;&nbsp;\n    &nbsp;&nbsp;{{ contactNameService.GetContactNameTVItemModel(TVItemModel) }}&nbsp;&nbsp;\n</span>\n","import { Injectable } from '@angular/core';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { PredicateAscByService } from 'src/app/services/helpers/predicate-asc-by.service';\r\nimport { TVFileID_ServerFileName_Sort } from 'src/app/models/TVFileID_ServerFileName_Sort.model';\r\nimport { FilePurposeEnum_GetOrderedText } from 'src/app/enums/generated/FilePurposeEnum';\r\nimport { EnumIDAndText } from 'src/app/models/generated/helper/EnumIDAndText.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StructureTVFileListService {\r\n  constructor(private appStateService: AppStateService,\r\n    private predicateAscByService: PredicateAscByService) {\r\n  }\r\n\r\n  StructureTVFileList(TVFileModelList: TVFileModel[]): TVFileModel[][] {\r\n    if (!TVFileModelList) return [[]];\r\n\r\n    let tvFileModelListList: TVFileModel[][] = [[]];\r\n\r\n    let arrFile2: TVFileID_ServerFileName_Sort[] = [];\r\n    let sortable: TVFileID_ServerFileName_Sort[] = [];\r\n\r\n    let enumIDAndTextList: EnumIDAndText[] = FilePurposeEnum_GetOrderedText(this.appStateService);\r\n\r\n    for (let i = 0; i < enumIDAndTextList.length; i++) {\r\n      let tvFileModelList: TVFileModel[] = [];\r\n      let tvFileModelSortedList: TVFileModel[] = [];\r\n      for (let j = 0; j < TVFileModelList.length; j++) {\r\n        if (enumIDAndTextList[i].EnumID == TVFileModelList[j].TVFile.FilePurpose) {\r\n          tvFileModelList.push(TVFileModelList[j]);\r\n        }\r\n      }\r\n      if (tvFileModelList.length > 0) {\r\n\r\n        for (let k = 0; k < tvFileModelList.length; k++) {\r\n          sortable.push(<TVFileID_ServerFileName_Sort>{\r\n            TVFileID: tvFileModelList[k].TVFile.TVFileID,\r\n            ServerFileName: tvFileModelList[k].TVFile.ServerFileName.toLowerCase(),\r\n          });\r\n        }\r\n\r\n        arrFile2 = sortable.sort(this.predicateAscByService.PredicateAscBy('ServerFileName'));\r\n\r\n        for (let k = 0; k < sortable.length; k++) {\r\n          for (let l = 0; l < tvFileModelList.length; l++) {\r\n            if (arrFile2[k].TVFileID == tvFileModelList[l].TVFile.TVFileID) {\r\n              tvFileModelSortedList.push(tvFileModelList[l]);\r\n              break;\r\n            }\r\n          }\r\n        }\r\n    \r\n        tvFileModelListList.push(tvFileModelSortedList);\r\n      }\r\n    }\r\n\r\n    return tvFileModelListList;\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { GetAscDescEnum } from 'src/app/enums/generated/AscDescEnum';\nimport { GetProvinceSubComponentEnum } from 'src/app/enums/generated/ProvinceSubComponentEnum';\nimport { GetSortOrderAngularEnum } from 'src/app/enums/generated/SortOrderAngularEnum';\nimport { GetTVTypeEnum } from 'src/app/enums/generated/TVTypeEnum';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ComponentButtonSelectionService } from 'src/app/services/helpers/component-button-selection.service';\nimport { ComponentShowService } from 'src/app/services/helpers/component-show.service';\nimport { StatCountService } from 'src/app/services/helpers/stat-count.service';\nimport { TVItemSortOrderService } from 'src/app/services/helpers/tvitem-sort-order.service';\nimport { WebProvinceService } from 'src/app/services/loaders/web-province.service';\n\n@Component({\n  selector: 'app-province-item',\n  templateUrl: './province-item.component.html',\n  styleUrls: ['./province-item.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProvinceItemComponent implements OnInit, OnDestroy {\n  provinceSubComponentEnum = GetProvinceSubComponentEnum();\n  tvTypeEnum = GetTVTypeEnum();\n  ascDescEnum = GetAscDescEnum();\n  sortOrderAngular = GetSortOrderAngularEnum();\n\n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public webProvinceService: WebProvinceService,\n    public tvItemSortOrderService: TVItemSortOrderService,\n    public statCountService: StatCountService,\n    public componentButtonSelectionService: ComponentButtonSelectionService,\n    public componentShowService: ComponentShowService) { }\n\n  ngOnInit(): void {\n    this.webProvinceService.DoWebProvince(this.appStateService.AppState$.getValue().CurrentTVItemID, true);\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionProvince(provinceSubComponentEnum.Areas)\"\n    (click)=\"componentShowService.ShowProvince(provinceSubComponentEnum.Areas)\"\n    title=\"{{ appLanguageService.AppLanguage.ProvinceShowAreas[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.ProvinceAreas[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebProvince?.TVItemModel, tvTypeEnum.Area) }}&nbsp;&nbsp;\n        </span>                                                                        \n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.ProvinceAreas, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().ProvinceAreasSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.ProvinceAreas, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().ProvinceAreasSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionProvince(provinceSubComponentEnum.Municipalities)\"\n    (click)=\"componentShowService.ShowProvince(provinceSubComponentEnum.Municipalities)\"\n    title=\"{{ appLanguageService.AppLanguage.ProvinceShowMunicipalities[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.ProvinceMunicipalities[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebProvince?.TVItemModel, tvTypeEnum.Municipality) }}&nbsp;&nbsp;\n        </span>                                                                                \n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.ProvinceMunicipalities, ascDescEnum.Ascending)\"\n        *ngIf=\"appStateService.AppState$.getValue().ProvinceMunicipalitiesSortOrder == ascDescEnum.Descending\">\n        &nbsp;&nbsp;&uarr;\n    </span>\n    <span class=\"biggerArrow\"\n        (click)=\"tvItemSortOrderService.ChangeTVItemSortOrder(sortOrderAngular.ProvinceMunicipalities, ascDescEnum.Descending)\"\n        *ngIf=\"appStateService.AppState$.getValue().ProvinceMunicipalitiesSortOrder == ascDescEnum.Ascending\">\n        &nbsp;&nbsp;&darr;\n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionProvince(provinceSubComponentEnum.Files)\"\n    (click)=\"componentShowService.ShowProvince(provinceSubComponentEnum.Files)\"\n    title=\"{{ appLanguageService.AppLanguage.ProvinceShowFiles[appStateService.AppState$?.getValue().Language] }}\">\n    <span>\n        {{ appLanguageService.AppLanguage.ProvinceFiles[appStateService.AppState$?.getValue().Language] }}\n        <span class=\"badge-stat\" *ngIf=\"appStateService.AppState$.getValue().StatCountVisible\">\n            &nbsp;&nbsp;{{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebProvince?.TVItemModel, tvTypeEnum.File) }}/\n            {{ statCountService.GetStatCount(appLoadedService.AppLoaded$.getValue().WebProvince?.TVItemModel, tvTypeEnum.TotalFile) }}&nbsp;&nbsp;\n        </span>                                                                                        \n    </span>\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionProvince(provinceSubComponentEnum.OpenData)\"\n    (click)=\"componentShowService.ShowProvince(provinceSubComponentEnum.OpenData)\"\n    title=\"{{ appLanguageService.AppLanguage.ProvinceShowOpenData[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.ProvinceOpenData[appStateService.AppState$?.getValue().Language] }}\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionProvince(provinceSubComponentEnum.SamplingPlan)\"\n    (click)=\"componentShowService.ShowProvince(provinceSubComponentEnum.SamplingPlan)\"\n    title=\"{{ appLanguageService.AppLanguage.ProvinceShowSamplingPlan[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.ProvinceSamplingPlan[appStateService.AppState$?.getValue().Language] }}\n</button>\n<button mat-button [ngClass]=\"componentButtonSelectionService.ColorSelectionProvince(provinceSubComponentEnum.ProvinceTools)\"\n    (click)=\"componentShowService.ShowProvince(provinceSubComponentEnum.ProvinceTools)\"\n    title=\"{{ appLanguageService.AppLanguage.ProvinceShowProvinceTools[appStateService.AppState$?.getValue().Language] }}\">\n    {{ appLanguageService.AppLanguage.ProvinceProvinceTools[appStateService.AppState$?.getValue().Language] }}\n</button>\n\n<app-area-tvitem-list-item *ngIf=\"appStateService.AppState$?.getValue()?.ProvinceSubComponent == provinceSubComponentEnum.Areas\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebProvince.TVItemModelAreaList\">\n</app-area-tvitem-list-item>\n\n<app-municipality-tvitem-list-item\n    *ngIf=\"appStateService.AppState$?.getValue()?.ProvinceSubComponent == provinceSubComponentEnum.Municipalities\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVItemModelList]=\"appLoadedService.AppLoaded$?.getValue()?.WebProvince.TVItemModelMunicipalityList\">\n</app-municipality-tvitem-list-item>\n\n<app-file-list *ngIf=\"appStateService.AppState$?.getValue()?.ProvinceSubComponent == provinceSubComponentEnum.Files\"\n    [AppState]=\"appStateService.AppState$?.getValue()\"\n    [TVFileModelListList]=\"appLoadedService.AppLoaded$?.getValue()?.WebProvince.TVFileModelList\">\n</app-file-list>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.ProvinceSubComponent == provinceSubComponentEnum.OpenData\">\n    <app-open-data-item></app-open-data-item>\n</div>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.ProvinceSubComponent == provinceSubComponentEnum.SamplingPlan\">\n    <app-sampling-plan-item></app-sampling-plan-item>\n</div>\n\n<div *ngIf=\"appStateService.AppState$?.getValue()?.ProvinceSubComponent == provinceSubComponentEnum.ProvinceTools\">\n    <app-provincial-tools-item></app-provincial-tools-item>\n</div>","/*\r\n * Auto generated from C:\\CSSPTools\\src\\codegen\\_package\\net5.0\\GenerateAngularCSSPWebModels.exe\r\n *\r\n * Do not edit this file.\r\n *\r\n */\r\n\r\nimport { ProvinceModel } from 'src/app/models/generated/web/ProvinceModel.model';\r\n\r\nexport class WebAllProvinces {\r\n    ProvinceModelList: ProvinceModel[];\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ContactModel } from 'src/app/models/generated/web/ContactModel.model';\r\nimport { TVFileModel } from 'src/app/models/generated/web/TVFileModel.model';\r\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\r\nimport { AppLanguageService } from 'src/app/services/app-language.service';\r\nimport { AppStateService } from 'src/app/services/app-state.service';\r\nimport { AppLoadedService } from '../app-loaded.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactNameService {\r\n\r\n  constructor(private appStateService: AppStateService,\r\n    private appLoadedService: AppLoadedService,\r\n    private appLanguageService: AppLanguageService) {\r\n  }\r\n\r\n  GetContactNameTVItemModel(tvItemModel: TVItemModel) {\r\n    return this.GetContactName(tvItemModel.TVItem.LastUpdateContactTVItemID);\r\n  }\r\n\r\n  GetContactNameTVFileModel(tvFileModel: TVFileModel) {\r\n    return this.GetContactName(tvFileModel.TVFile.LastUpdateContactTVItemID);\r\n  }\r\n\r\n  private GetContactName(LastUpdateContactTVItemID: number)\r\n  {\r\n    if (this.appLoadedService.AppLoaded$?.getValue()?.WebAllContacts) {\r\n      const contactModelList: ContactModel[] = this.appLoadedService.AppLoaded$?.getValue()?.WebAllContacts.ContactModelList.filter((c) => { return c.Contact.ContactTVItemID == LastUpdateContactTVItemID });\r\n      if (contactModelList && contactModelList.length > 0) {\r\n        return `${contactModelList[0].Contact.FirstName} ${contactModelList[0].Contact.LastName}`;\r\n      }\r\n      else {\r\n        return this.appLanguageService.AppLanguage?.ContactNotFound[this.appStateService.AppState$?.getValue().Language];\r\n      }\r\n    }\r\n    else {\r\n      return this.appLanguageService.AppLanguage?.ContactNotFound[this.appStateService.AppState$?.getValue().Language];\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { SearchResult } from 'src/app/models/generated/helper/SearchResult.model';\nimport { TypeIconService } from 'src/app/services/helpers/type-icon.service';\nimport { TypeTextService } from 'src/app/services/helpers/type-text.service';\n\n@Component({\n  selector: 'app-search-option',\n  templateUrl: './search-option.component.html',\n  styleUrls: ['./search-option.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchOptionComponent implements OnInit {\n  @Input() searchResult: SearchResult;\n\n  constructor(public typeTextService: TypeTextService,\n    public typeIconService: TypeIconService) {\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","<span>\n    <mat-icon title=\"{{ typeTextService.GetTypeText(searchResult.TVItem.TVType) }}\">{{ typeIconService.GetTypeIcon(searchResult.TVItem.TVType) }}</mat-icon>\n    ({{ typeTextService.GetTypeText(searchResult.TVItem.TVType) }}) - {{searchResult.TVItemLanguage.TVText}}\n</span>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","<span *ngIf=\"(appStateService.AppState$ | async).Working\">\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\n</span>\n<p class=\"loading-status\" *ngIf=\"(appStateService.AppState$ | async).Status\">\n    {{ appStateService.AppState$?.getValue()?.Status }}\n</p>\n\n<p style=\"background-color: lightgrey;\">This is the sector edit component</p>","import { Component, OnInit, ChangeDetectionStrategy, OnDestroy, Input } from '@angular/core';\nimport { AppState } from 'src/app/models/AppState.model';\nimport { TVItemModel } from 'src/app/models/generated/web/TVItemModel.model';\nimport { AppLanguageService } from 'src/app/services/app-language.service';\nimport { AppLoadedService } from 'src/app/services/app-loaded.service';\nimport { AppStateService } from 'src/app/services/app-state.service';\nimport { ShowTVItemService } from 'src/app/services/helpers/show-tvitem.service';\n\n@Component({\n  selector: 'app-sector-item-view',\n  templateUrl: './sector-item-view.component.html',\n  styleUrls: ['./sector-item-view.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SectorItemViewComponent implements OnInit, OnDestroy {\n  @Input() TVItemModel: TVItemModel;\n  @Input() AppState: AppState;\n  \n  constructor(public appStateService: AppStateService,\n    public appLoadedService: AppLoadedService,\n    public appLanguageService: AppLanguageService,\n    public showTVItemService: ShowTVItemService) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n}\n"]}